{
	"id": "952690db404bf61211ee2b2c835b5d01",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"extensions/erc721a/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\n        if (_startTokenId() <= tokenId) {\n            packed = _packedOwnerships[tokenId];\n            // If not burned.\n            if (packed & _BITMASK_BURNED == 0) {\n                // If the data at the starting slot does not exist, start the scan.\n                if (packed == 0) {\n                    if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\n                    // Invariant:\n                    // There will always be an initialized ownership slot\n                    // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                    // before an unintialized ownership slot\n                    // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                    // Hence, `tokenId` will not underflow.\n                    //\n                    // We can directly compare the packed value.\n                    // If the address is zero, packed will be zero.\n                    for (;;) {\n                        unchecked {\n                            packed = _packedOwnerships[--tokenId];\n                        }\n                        if (packed == 0) continue;\n                        return packed;\n                    }\n                }\n                // Otherwise, the data exists and is not burned. We can skip the scan.\n                // This is possible because we have already achieved the target condition.\n                // This saves 2143 gas on transfers of initialized tokens.\n                return packed;\n            }\n        }\n        _revert(OwnerQueryForNonexistentToken.selector);\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        _approve(to, tokenId, true);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\n\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n        assembly {\n            // Emit the `Transfer` event.\n            log4(\n                0, // Start of data (0, since no data).\n                0, // End of data (0, since no data).\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\n                from, // `from`.\n                toMasked, // `to`.\n                tokenId // `tokenId`.\n            )\n        }\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\n\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n            assembly {\n                revert(add(32, reason), mload(reason))\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            uint256 end = startTokenId + quantity;\n            uint256 tokenId = startTokenId;\n\n            do {\n                assembly {\n                    // Emit the `Transfer` event.\n                    log4(\n                        0, // Start of data (0, since no data).\n                        0, // End of data (0, since no data).\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\n                        0, // `address(0)`.\n                        toMasked, // `to`.\n                        tokenId // `tokenId`.\n                    )\n                }\n                // The `!=` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n            } while (++tokenId != end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) _revert(bytes4(0));\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                       APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _approve(to, tokenId, false);\n    }\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        bool approvalCheck\n    ) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        if (approvalCheck && _msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n\n    /**\n     * @dev For more efficient reverts.\n     */\n    function _revert(bytes4 errorSelector) internal pure {\n        assembly {\n            mstore(0x00, errorSelector)\n            revert(0x00, 0x04)\n        }\n    }\n}"
			},
			"extensions/erc721a/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"extensions/erc721a/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"extensions/erc721a/ERC721A.sol\":895:42853  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"extensions/erc721a/ERC721A.sol\":4946:5100  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"extensions/erc721a/ERC721A.sol\":5020:5025  name_ */\n  dup2\n    /* \"extensions/erc721a/ERC721A.sol\":5012:5017  _name */\n  0x02\n    /* \"extensions/erc721a/ERC721A.sol\":5012:5025  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"extensions/erc721a/ERC721A.sol\":5045:5052  symbol_ */\n  dup1\n    /* \"extensions/erc721a/ERC721A.sol\":5035:5042  _symbol */\n  0x03\n    /* \"extensions/erc721a/ERC721A.sol\":5035:5052  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"extensions/erc721a/ERC721A.sol\":5078:5093  _startTokenId() */\n  tag_9\n    /* \"extensions/erc721a/ERC721A.sol\":5078:5091  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"extensions/erc721a/ERC721A.sol\":5078:5093  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"extensions/erc721a/ERC721A.sol\":5062:5075  _currentIndex */\n  0x00\n    /* \"extensions/erc721a/ERC721A.sol\":5062:5093  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"extensions/erc721a/ERC721A.sol\":4946:5100  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"extensions/erc721a/ERC721A.sol\":895:42853  contract ERC721A is IERC721A {... */\n  jump(tag_11)\n    /* \"extensions/erc721a/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"extensions/erc721a/ERC721A.sol\":5482:5489  uint256 */\n  0x00\n    /* \"extensions/erc721a/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"extensions/erc721a/ERC721A.sol\":895:42853  contract ERC721A is IERC721A {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_16\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_25:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_27\n    /* \"#utility.yul\":137:186   */\n  tag_28\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":121:187   */\n  tag_30\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_32\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":262:374   */\ntag_31:\n    /* \"#utility.yul\":383:422   */\n  tag_34\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_36:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_39\n  tag_40\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":531:653   */\ntag_38:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_41\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_25\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1662   */\ntag_3:\n    /* \"#utility.yul\":908:914   */\n  0x00\n    /* \"#utility.yul\":916:922   */\n  dup1\n    /* \"#utility.yul\":965:967   */\n  0x40\n    /* \"#utility.yul\":953:962   */\n  dup4\n    /* \"#utility.yul\":944:951   */\n  dup6\n    /* \"#utility.yul\":940:963   */\n  sub\n    /* \"#utility.yul\":936:968   */\n  slt\n    /* \"#utility.yul\":933:1052   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":971:1050   */\n  tag_44\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":933:1052   */\ntag_43:\n    /* \"#utility.yul\":1112:1113   */\n  0x00\n    /* \"#utility.yul\":1101:1110   */\n  dup4\n    /* \"#utility.yul\":1097:1114   */\n  add\n    /* \"#utility.yul\":1091:1115   */\n  mload\n    /* \"#utility.yul\":1142:1160   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1134:1140   */\n  dup2\n    /* \"#utility.yul\":1131:1161   */\n  gt\n    /* \"#utility.yul\":1128:1245   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1164:1243   */\n  tag_47\n  tag_48\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1128:1245   */\ntag_46:\n    /* \"#utility.yul\":1269:1343   */\n  tag_49\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1269:1343   */\n  tag_36\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1259:1343   */\n  swap3\n  pop\n    /* \"#utility.yul\":1062:1353   */\n  pop\n    /* \"#utility.yul\":1413:1415   */\n  0x20\n    /* \"#utility.yul\":1402:1411   */\n  dup4\n    /* \"#utility.yul\":1398:1416   */\n  add\n    /* \"#utility.yul\":1392:1417   */\n  mload\n    /* \"#utility.yul\":1444:1462   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1436:1442   */\n  dup2\n    /* \"#utility.yul\":1433:1463   */\n  gt\n    /* \"#utility.yul\":1430:1547   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1466:1545   */\n  tag_51\n  tag_48\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1430:1547   */\ntag_50:\n    /* \"#utility.yul\":1571:1645   */\n  tag_52\n    /* \"#utility.yul\":1637:1644   */\n  dup6\n    /* \"#utility.yul\":1628:1634   */\n  dup3\n    /* \"#utility.yul\":1617:1626   */\n  dup7\n    /* \"#utility.yul\":1613:1635   */\n  add\n    /* \"#utility.yul\":1571:1645   */\n  tag_36\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1561:1645   */\n  swap2\n  pop\n    /* \"#utility.yul\":1363:1655   */\n  pop\n    /* \"#utility.yul\":809:1662   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1668:1797   */\ntag_30:\n    /* \"#utility.yul\":1702:1708   */\n  0x00\n    /* \"#utility.yul\":1729:1749   */\n  tag_54\n  tag_55\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1719:1749   */\n  swap1\n  pop\n    /* \"#utility.yul\":1758:1791   */\n  tag_56\n    /* \"#utility.yul\":1786:1790   */\n  dup3\n    /* \"#utility.yul\":1778:1784   */\n  dup3\n    /* \"#utility.yul\":1758:1791   */\n  tag_57\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1668:1797   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1803:1878   */\ntag_55:\n    /* \"#utility.yul\":1836:1842   */\n  0x00\n    /* \"#utility.yul\":1869:1871   */\n  0x40\n    /* \"#utility.yul\":1863:1872   */\n  mload\n    /* \"#utility.yul\":1853:1872   */\n  swap1\n  pop\n    /* \"#utility.yul\":1803:1878   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1884:2192   */\ntag_29:\n    /* \"#utility.yul\":1946:1950   */\n  0x00\n    /* \"#utility.yul\":2036:2054   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2028:2034   */\n  dup3\n    /* \"#utility.yul\":2025:2055   */\n  gt\n    /* \"#utility.yul\":2022:2078   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2058:2076   */\n  tag_61\n  tag_62\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2022:2078   */\ntag_60:\n    /* \"#utility.yul\":2096:2125   */\n  tag_63\n    /* \"#utility.yul\":2118:2124   */\n  dup3\n    /* \"#utility.yul\":2096:2125   */\n  tag_64\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2088:2125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2180:2184   */\n  0x20\n    /* \"#utility.yul\":2174:2178   */\n  dup2\n    /* \"#utility.yul\":2170:2185   */\n  add\n    /* \"#utility.yul\":2162:2185   */\n  swap1\n  pop\n    /* \"#utility.yul\":1884:2192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2505   */\ntag_35:\n    /* \"#utility.yul\":2266:2267   */\n  0x00\n    /* \"#utility.yul\":2276:2389   */\ntag_66:\n    /* \"#utility.yul\":2290:2296   */\n  dup4\n    /* \"#utility.yul\":2287:2288   */\n  dup2\n    /* \"#utility.yul\":2284:2297   */\n  lt\n    /* \"#utility.yul\":2276:2389   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2375:2376   */\n  dup1\n    /* \"#utility.yul\":2370:2373   */\n  dup3\n    /* \"#utility.yul\":2366:2377   */\n  add\n    /* \"#utility.yul\":2360:2378   */\n  mload\n    /* \"#utility.yul\":2356:2357   */\n  dup2\n    /* \"#utility.yul\":2351:2354   */\n  dup5\n    /* \"#utility.yul\":2347:2358   */\n  add\n    /* \"#utility.yul\":2340:2379   */\n  mstore\n    /* \"#utility.yul\":2312:2314   */\n  0x20\n    /* \"#utility.yul\":2309:2310   */\n  dup2\n    /* \"#utility.yul\":2305:2315   */\n  add\n    /* \"#utility.yul\":2300:2315   */\n  swap1\n  pop\n    /* \"#utility.yul\":2276:2389   */\n  jump(tag_66)\ntag_68:\n    /* \"#utility.yul\":2407:2413   */\n  dup4\n    /* \"#utility.yul\":2404:2405   */\n  dup2\n    /* \"#utility.yul\":2401:2414   */\n  gt\n    /* \"#utility.yul\":2398:2499   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2487:2488   */\n  0x00\n    /* \"#utility.yul\":2478:2484   */\n  dup5\n    /* \"#utility.yul\":2473:2476   */\n  dup5\n    /* \"#utility.yul\":2469:2485   */\n  add\n    /* \"#utility.yul\":2462:2489   */\n  mstore\n    /* \"#utility.yul\":2398:2499   */\ntag_69:\n    /* \"#utility.yul\":2247:2505   */\n  pop\n    /* \"#utility.yul\":2198:2505   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2511:2831   */\ntag_14:\n    /* \"#utility.yul\":2555:2561   */\n  0x00\n    /* \"#utility.yul\":2592:2593   */\n  0x02\n    /* \"#utility.yul\":2586:2590   */\n  dup3\n    /* \"#utility.yul\":2582:2594   */\n  div\n    /* \"#utility.yul\":2572:2594   */\n  swap1\n  pop\n    /* \"#utility.yul\":2639:2640   */\n  0x01\n    /* \"#utility.yul\":2633:2637   */\n  dup3\n    /* \"#utility.yul\":2629:2641   */\n  and\n    /* \"#utility.yul\":2660:2678   */\n  dup1\n    /* \"#utility.yul\":2650:2731   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2716:2720   */\n  0x7f\n    /* \"#utility.yul\":2708:2714   */\n  dup3\n    /* \"#utility.yul\":2704:2721   */\n  and\n    /* \"#utility.yul\":2694:2721   */\n  swap2\n  pop\n    /* \"#utility.yul\":2650:2731   */\ntag_71:\n    /* \"#utility.yul\":2778:2780   */\n  0x20\n    /* \"#utility.yul\":2770:2776   */\n  dup3\n    /* \"#utility.yul\":2767:2781   */\n  lt\n    /* \"#utility.yul\":2747:2765   */\n  dup2\n    /* \"#utility.yul\":2744:2782   */\n  eq\n    /* \"#utility.yul\":2741:2825   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2797:2815   */\n  tag_73\n  tag_74\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2741:2825   */\ntag_72:\n    /* \"#utility.yul\":2562:2831   */\n  pop\n    /* \"#utility.yul\":2511:2831   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2837:3118   */\ntag_57:\n    /* \"#utility.yul\":2920:2947   */\n  tag_76\n    /* \"#utility.yul\":2942:2946   */\n  dup3\n    /* \"#utility.yul\":2920:2947   */\n  tag_64\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2912:2918   */\n  dup2\n    /* \"#utility.yul\":2908:2948   */\n  add\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3038:3048   */\n  dup2\n    /* \"#utility.yul\":3035:3057   */\n  lt\n    /* \"#utility.yul\":3014:3032   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3012   */\n  dup3\n    /* \"#utility.yul\":2999:3033   */\n  gt\n    /* \"#utility.yul\":2996:3058   */\n  or\n    /* \"#utility.yul\":2993:3081   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":3061:3079   */\n  tag_78\n  tag_62\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2993:3081   */\ntag_77:\n    /* \"#utility.yul\":3101:3111   */\n  dup1\n    /* \"#utility.yul\":3097:3099   */\n  0x40\n    /* \"#utility.yul\":3090:3112   */\n  mstore\n    /* \"#utility.yul\":2880:3118   */\n  pop\n    /* \"#utility.yul\":2837:3118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3124:3304   */\ntag_74:\n    /* \"#utility.yul\":3172:3249   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3169:3170   */\n  0x00\n    /* \"#utility.yul\":3162:3250   */\n  mstore\n    /* \"#utility.yul\":3269:3273   */\n  0x22\n    /* \"#utility.yul\":3266:3267   */\n  0x04\n    /* \"#utility.yul\":3259:3274   */\n  mstore\n    /* \"#utility.yul\":3293:3297   */\n  0x24\n    /* \"#utility.yul\":3290:3291   */\n  0x00\n    /* \"#utility.yul\":3283:3298   */\n  revert\n    /* \"#utility.yul\":3310:3490   */\ntag_62:\n    /* \"#utility.yul\":3358:3435   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3355:3356   */\n  0x00\n    /* \"#utility.yul\":3348:3436   */\n  mstore\n    /* \"#utility.yul\":3455:3459   */\n  0x41\n    /* \"#utility.yul\":3452:3453   */\n  0x04\n    /* \"#utility.yul\":3445:3460   */\n  mstore\n    /* \"#utility.yul\":3479:3483   */\n  0x24\n    /* \"#utility.yul\":3476:3477   */\n  0x00\n    /* \"#utility.yul\":3469:3484   */\n  revert\n    /* \"#utility.yul\":3496:3613   */\ntag_40:\n    /* \"#utility.yul\":3605:3606   */\n  0x00\n    /* \"#utility.yul\":3602:3603   */\n  dup1\n    /* \"#utility.yul\":3595:3607   */\n  revert\n    /* \"#utility.yul\":3619:3736   */\ntag_33:\n    /* \"#utility.yul\":3728:3729   */\n  0x00\n    /* \"#utility.yul\":3725:3726   */\n  dup1\n    /* \"#utility.yul\":3718:3730   */\n  revert\n    /* \"#utility.yul\":3742:3859   */\ntag_48:\n    /* \"#utility.yul\":3851:3852   */\n  0x00\n    /* \"#utility.yul\":3848:3849   */\n  dup1\n    /* \"#utility.yul\":3841:3853   */\n  revert\n    /* \"#utility.yul\":3865:3982   */\ntag_45:\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3971:3972   */\n  dup1\n    /* \"#utility.yul\":3964:3976   */\n  revert\n    /* \"#utility.yul\":3988:4090   */\ntag_64:\n    /* \"#utility.yul\":4029:4035   */\n  0x00\n    /* \"#utility.yul\":4080:4082   */\n  0x1f\n    /* \"#utility.yul\":4076:4083   */\n  not\n    /* \"#utility.yul\":4071:4073   */\n  0x1f\n    /* \"#utility.yul\":4064:4069   */\n  dup4\n    /* \"#utility.yul\":4060:4074   */\n  add\n    /* \"#utility.yul\":4056:4084   */\n  and\n    /* \"#utility.yul\":4046:4084   */\n  swap1\n  pop\n    /* \"#utility.yul\":3988:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"extensions/erc721a/ERC721A.sol\":895:42853  contract ERC721A is IERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"extensions/erc721a/ERC721A.sol\":895:42853  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"extensions/erc721a/ERC721A.sol\":9164:9794  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"extensions/erc721a/ERC721A.sol\":10048:10146  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"extensions/erc721a/ERC721A.sol\":16314:16537  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"extensions/erc721a/ERC721A.sol\":16042:16164  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"extensions/erc721a/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"extensions/erc721a/ERC721A.sol\":19866:23313  function transferFrom(... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"extensions/erc721a/ERC721A.sol\":23404:23591  function safeTransferFrom(... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"extensions/erc721a/ERC721A.sol\":11409:11559  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"extensions/erc721a/ERC721A.sol\":7045:7284  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"extensions/erc721a/ERC721A.sol\":10217:10319  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"extensions/erc721a/ERC721A.sol\":16864:17095  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"extensions/erc721a/ERC721A.sol\":24172:24577  function safeTransferFrom(... */\n    tag_13:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"extensions/erc721a/ERC721A.sol\":10420:10742  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"extensions/erc721a/ERC721A.sol\":17245:17407  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"extensions/erc721a/ERC721A.sol\":9164:9794  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"extensions/erc721a/ERC721A.sol\":9249:9253  bool */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":9582:9592  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"extensions/erc721a/ERC721A.sol\":9567:9592  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"extensions/erc721a/ERC721A.sol\":9567:9578  interfaceId */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":9567:9592  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":9567:9668  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":9658:9668  0x80ac58cd */\n      0x80ac58cd\n        /* \"extensions/erc721a/ERC721A.sol\":9643:9668  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"extensions/erc721a/ERC721A.sol\":9643:9654  interfaceId */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":9643:9668  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":9567:9668  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"extensions/erc721a/ERC721A.sol\":9567:9744  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":9734:9744  0x5b5e139f */\n      0x5b5e139f\n        /* \"extensions/erc721a/ERC721A.sol\":9719:9744  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"extensions/erc721a/ERC721A.sol\":9719:9730  interfaceId */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":9719:9744  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":9567:9744  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"extensions/erc721a/ERC721A.sol\":9548:9744  return... */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":9164:9794  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":10048:10146  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"extensions/erc721a/ERC721A.sol\":10102:10115  string memory */\n      0x60\n        /* \"extensions/erc721a/ERC721A.sol\":10134:10139  _name */\n      0x02\n        /* \"extensions/erc721a/ERC721A.sol\":10127:10139  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":10048:10146  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":16314:16537  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"extensions/erc721a/ERC721A.sol\":16390:16397  address */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":16414:16430  _exists(tokenId) */\n      tag_100\n        /* \"extensions/erc721a/ERC721A.sol\":16422:16429  tokenId */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":16414:16421  _exists */\n      tag_101\n        /* \"extensions/erc721a/ERC721A.sol\":16414:16430  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"extensions/erc721a/ERC721A.sol\":16409:16482  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_102\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":16432:16482  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_103\n        /* \"extensions/erc721a/ERC721A.sol\":16440:16481  ApprovalQueryForNonexistentToken.selector */\n      shl(0xe0, 0xcf4700e4)\n        /* \"extensions/erc721a/ERC721A.sol\":16432:16439  _revert */\n      tag_104\n        /* \"extensions/erc721a/ERC721A.sol\":16432:16482  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_103:\n        /* \"extensions/erc721a/ERC721A.sol\":16409:16482  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n    tag_102:\n        /* \"extensions/erc721a/ERC721A.sol\":16500:16515  _tokenApprovals */\n      0x06\n        /* \"extensions/erc721a/ERC721A.sol\":16500:16524  _tokenApprovals[tokenId] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":16516:16523  tokenId */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":16500:16524  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"extensions/erc721a/ERC721A.sol\":16500:16530  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":16493:16530  return _tokenApprovals[tokenId].value */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":16314:16537  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":16042:16164  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"extensions/erc721a/ERC721A.sol\":16130:16157  _approve(to, tokenId, true) */\n      tag_106\n        /* \"extensions/erc721a/ERC721A.sol\":16139:16141  to */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":16143:16150  tokenId */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":16152:16156  true */\n      0x01\n        /* \"extensions/erc721a/ERC721A.sol\":16130:16138  _approve */\n      tag_107\n        /* \"extensions/erc721a/ERC721A.sol\":16130:16157  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_106:\n        /* \"extensions/erc721a/ERC721A.sol\":16042:16164  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_44:\n        /* \"extensions/erc721a/ERC721A.sol\":5955:5962  uint256 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":6179:6194  _startTokenId() */\n      tag_109\n        /* \"extensions/erc721a/ERC721A.sol\":6179:6192  _startTokenId */\n      tag_110\n        /* \"extensions/erc721a/ERC721A.sol\":6179:6194  _startTokenId() */\n      jump\t// in\n    tag_109:\n        /* \"extensions/erc721a/ERC721A.sol\":6164:6176  _burnCounter */\n      sload(0x01)\n        /* \"extensions/erc721a/ERC721A.sol\":6148:6161  _currentIndex */\n      sload(0x00)\n        /* \"extensions/erc721a/ERC721A.sol\":6148:6176  _currentIndex - _burnCounter */\n      sub\n        /* \"extensions/erc721a/ERC721A.sol\":6148:6194  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"extensions/erc721a/ERC721A.sol\":6141:6194  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":19866:23313  function transferFrom(... */\n    tag_50:\n        /* \"extensions/erc721a/ERC721A.sol\":20003:20030  uint256 prevOwnershipPacked */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":20033:20060  _packedOwnershipOf(tokenId) */\n      tag_112\n        /* \"extensions/erc721a/ERC721A.sol\":20052:20059  tokenId */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":20033:20051  _packedOwnershipOf */\n      tag_113\n        /* \"extensions/erc721a/ERC721A.sol\":20033:20060  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"extensions/erc721a/ERC721A.sol\":20003:20060  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":2785:2799  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"extensions/erc721a/ERC721A.sol\":20201:20205  from */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":20185:20207  uint256(uint160(from)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":20185:20226  uint256(uint160(from)) & _BITMASK_ADDRESS */\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":20162:20228  from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS)) */\n      swap4\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":20284:20288  from */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":20243:20288  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":20259:20278  prevOwnershipPacked */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":20243:20288  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":20239:20334  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_114\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":20290:20334  _revert(TransferFromIncorrectOwner.selector) */\n      tag_115\n        /* \"extensions/erc721a/ERC721A.sol\":20298:20333  TransferFromIncorrectOwner.selector */\n      shl(0xe0, 0xa1148100)\n        /* \"extensions/erc721a/ERC721A.sol\":20290:20297  _revert */\n      tag_104\n        /* \"extensions/erc721a/ERC721A.sol\":20290:20334  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_115:\n        /* \"extensions/erc721a/ERC721A.sol\":20239:20334  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n    tag_114:\n        /* \"extensions/erc721a/ERC721A.sol\":20346:20373  uint256 approvedAddressSlot */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":20375:20398  address approvedAddress */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":20402:20437  _getApprovedSlotAndAddress(tokenId) */\n      tag_116\n        /* \"extensions/erc721a/ERC721A.sol\":20429:20436  tokenId */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":20402:20428  _getApprovedSlotAndAddress */\n      tag_117\n        /* \"extensions/erc721a/ERC721A.sol\":20402:20437  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_116:\n        /* \"extensions/erc721a/ERC721A.sol\":20345:20437  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":20534:20602  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_118\n        /* \"extensions/erc721a/ERC721A.sol\":20559:20574  approvedAddress */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":20576:20580  from */\n      dup8\n        /* \"extensions/erc721a/ERC721A.sol\":20582:20601  _msgSenderERC721A() */\n      tag_119\n        /* \"extensions/erc721a/ERC721A.sol\":20582:20599  _msgSenderERC721A */\n      tag_120\n        /* \"extensions/erc721a/ERC721A.sol\":20582:20601  _msgSenderERC721A() */\n      jump\t// in\n    tag_119:\n        /* \"extensions/erc721a/ERC721A.sol\":20534:20558  _isSenderApprovedOrOwner */\n      tag_121\n        /* \"extensions/erc721a/ERC721A.sol\":20534:20602  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_118:\n        /* \"extensions/erc721a/ERC721A.sol\":20529:20717  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_122\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":20621:20664  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_123\n        /* \"extensions/erc721a/ERC721A.sol\":20638:20642  from */\n      dup7\n        /* \"extensions/erc721a/ERC721A.sol\":20644:20663  _msgSenderERC721A() */\n      tag_124\n        /* \"extensions/erc721a/ERC721A.sol\":20644:20661  _msgSenderERC721A */\n      tag_120\n        /* \"extensions/erc721a/ERC721A.sol\":20644:20663  _msgSenderERC721A() */\n      jump\t// in\n    tag_124:\n        /* \"extensions/erc721a/ERC721A.sol\":20621:20637  isApprovedForAll */\n      tag_87\n        /* \"extensions/erc721a/ERC721A.sol\":20621:20664  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_123:\n        /* \"extensions/erc721a/ERC721A.sol\":20616:20717  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_125\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":20666:20717  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_126\n        /* \"extensions/erc721a/ERC721A.sol\":20674:20716  TransferCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0x59c896be)\n        /* \"extensions/erc721a/ERC721A.sol\":20666:20673  _revert */\n      tag_104\n        /* \"extensions/erc721a/ERC721A.sol\":20666:20717  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_126:\n        /* \"extensions/erc721a/ERC721A.sol\":20616:20717  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n    tag_125:\n        /* \"extensions/erc721a/ERC721A.sol\":20529:20717  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_122:\n        /* \"extensions/erc721a/ERC721A.sol\":20728:20771  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_127\n        /* \"extensions/erc721a/ERC721A.sol\":20750:20754  from */\n      dup7\n        /* \"extensions/erc721a/ERC721A.sol\":20756:20758  to */\n      dup7\n        /* \"extensions/erc721a/ERC721A.sol\":20760:20767  tokenId */\n      dup7\n        /* \"extensions/erc721a/ERC721A.sol\":20769:20770  1 */\n      0x01\n        /* \"extensions/erc721a/ERC721A.sol\":20728:20749  _beforeTokenTransfers */\n      tag_128\n        /* \"extensions/erc721a/ERC721A.sol\":20728:20771  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_127:\n        /* \"extensions/erc721a/ERC721A.sol\":20860:20875  approvedAddress */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":20857:21014  if approvedAddress {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":20998:20999  0 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":20977:20996  approvedAddressSlot */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":20970:21000  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"extensions/erc721a/ERC721A.sol\":20857:21014  if approvedAddress {... */\n    tag_129:\n        /* \"extensions/erc721a/ERC721A.sol\":21386:21404  _packedAddressData */\n      0x05\n        /* \"extensions/erc721a/ERC721A.sol\":21386:21410  _packedAddressData[from] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":21405:21409  from */\n      dup8\n        /* \"extensions/erc721a/ERC721A.sol\":21386:21410  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":21384:21410  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":21454:21472  _packedAddressData */\n      0x05\n        /* \"extensions/erc721a/ERC721A.sol\":21454:21476  _packedAddressData[to] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":21473:21475  to */\n      dup7\n        /* \"extensions/erc721a/ERC721A.sol\":21454:21476  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":21452:21476  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":21769:21912  _packOwnershipData(... */\n      tag_130\n        /* \"extensions/erc721a/ERC721A.sol\":21805:21807  to */\n      dup6\n        /* \"extensions/erc721a/ERC721A.sol\":21853:21898  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_131\n        /* \"extensions/erc721a/ERC721A.sol\":21868:21872  from */\n      dup9\n        /* \"extensions/erc721a/ERC721A.sol\":21874:21876  to */\n      dup9\n        /* \"extensions/erc721a/ERC721A.sol\":21878:21897  prevOwnershipPacked */\n      dup8\n        /* \"extensions/erc721a/ERC721A.sol\":21853:21867  _nextExtraData */\n      tag_132\n        /* \"extensions/erc721a/ERC721A.sol\":21853:21898  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_131:\n        /* \"extensions/erc721a/ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"extensions/erc721a/ERC721A.sol\":21825:21898  _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"extensions/erc721a/ERC721A.sol\":21769:21787  _packOwnershipData */\n      tag_133\n        /* \"extensions/erc721a/ERC721A.sol\":21769:21912  _packOwnershipData(... */\n      jump\t// in\n    tag_130:\n        /* \"extensions/erc721a/ERC721A.sol\":21740:21757  _packedOwnerships */\n      0x04\n        /* \"extensions/erc721a/ERC721A.sol\":21740:21766  _packedOwnerships[tokenId] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":21758:21765  tokenId */\n      dup7\n        /* \"extensions/erc721a/ERC721A.sol\":21740:21766  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"extensions/erc721a/ERC721A.sol\":21740:21912  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":22080:22081  0 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":2392:2400  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"extensions/erc721a/ERC721A.sol\":22029:22048  prevOwnershipPacked */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":22029:22076  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":22029:22081  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":22025:22642  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":22101:22120  uint256 nextTokenId */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":22133:22134  1 */\n      0x01\n        /* \"extensions/erc721a/ERC721A.sol\":22123:22130  tokenId */\n      dup6\n        /* \"extensions/erc721a/ERC721A.sol\":22123:22134  tokenId + 1 */\n      add\n        /* \"extensions/erc721a/ERC721A.sol\":22101:22134  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":22288:22289  0 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":22254:22271  _packedOwnerships */\n      0x04\n        /* \"extensions/erc721a/ERC721A.sol\":22254:22284  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":22272:22283  nextTokenId */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":22254:22284  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"extensions/erc721a/ERC721A.sol\":22254:22289  _packedOwnerships[nextTokenId] == 0 */\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":22250:22628  if (_packedOwnerships[nextTokenId] == 0) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":22390:22403  _currentIndex */\n      sload(0x00)\n        /* \"extensions/erc721a/ERC721A.sol\":22375:22386  nextTokenId */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":22375:22403  nextTokenId != _currentIndex */\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":22371:22610  if (nextTokenId != _currentIndex) {... */\n      tag_136\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":22568:22587  prevOwnershipPacked */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":22535:22552  _packedOwnerships */\n      0x04\n        /* \"extensions/erc721a/ERC721A.sol\":22535:22565  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":22553:22564  nextTokenId */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":22535:22565  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"extensions/erc721a/ERC721A.sol\":22535:22587  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":22371:22610  if (nextTokenId != _currentIndex) {... */\n    tag_136:\n        /* \"extensions/erc721a/ERC721A.sol\":22250:22628  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_135:\n        /* \"extensions/erc721a/ERC721A.sol\":22083:22642  {... */\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":22025:22642  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_134:\n        /* \"extensions/erc721a/ERC721A.sol\":22751:22767  uint256 toMasked */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":2785:2799  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"extensions/erc721a/ERC721A.sol\":22786:22788  to */\n      dup7\n        /* \"extensions/erc721a/ERC721A.sol\":22770:22790  uint256(uint160(to)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":22770:22809  uint256(uint160(to)) & _BITMASK_ADDRESS */\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":22751:22809  uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":23141:23148  tokenId */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":23106:23114  toMasked */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":23073:23077  from */\n      dup9\n        /* \"extensions/erc721a/ERC721A.sol\":23016:23041  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"extensions/erc721a/ERC721A.sol\":22962:22963  0 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":22906:22907  0 */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":22884:23176  log4(... */\n      log4\n        /* \"extensions/erc721a/ERC721A.sol\":23211:23212  0 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":23199:23207  toMasked */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":23199:23212  toMasked == 0 */\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":23195:23253  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      iszero\n      tag_137\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":23214:23253  _revert(TransferToZeroAddress.selector) */\n      tag_138\n        /* \"extensions/erc721a/ERC721A.sol\":23222:23252  TransferToZeroAddress.selector */\n      shl(0xe0, 0xea553b34)\n        /* \"extensions/erc721a/ERC721A.sol\":23214:23221  _revert */\n      tag_104\n        /* \"extensions/erc721a/ERC721A.sol\":23214:23253  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_138:\n        /* \"extensions/erc721a/ERC721A.sol\":23195:23253  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n    tag_137:\n        /* \"extensions/erc721a/ERC721A.sol\":23264:23306  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_139\n        /* \"extensions/erc721a/ERC721A.sol\":23285:23289  from */\n      dup8\n        /* \"extensions/erc721a/ERC721A.sol\":23291:23293  to */\n      dup8\n        /* \"extensions/erc721a/ERC721A.sol\":23295:23302  tokenId */\n      dup8\n        /* \"extensions/erc721a/ERC721A.sol\":23304:23305  1 */\n      0x01\n        /* \"extensions/erc721a/ERC721A.sol\":23264:23284  _afterTokenTransfers */\n      tag_140\n        /* \"extensions/erc721a/ERC721A.sol\":23264:23306  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_139:\n        /* \"extensions/erc721a/ERC721A.sol\":19993:23313  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":19866:23313  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":23404:23591  function safeTransferFrom(... */\n    tag_53:\n        /* \"extensions/erc721a/ERC721A.sol\":23545:23584  safeTransferFrom(from, to, tokenId, '') */\n      tag_142\n        /* \"extensions/erc721a/ERC721A.sol\":23562:23566  from */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":23568:23570  to */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":23572:23579  tokenId */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":23545:23584  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":23545:23561  safeTransferFrom */\n      tag_77\n        /* \"extensions/erc721a/ERC721A.sol\":23545:23584  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_142:\n        /* \"extensions/erc721a/ERC721A.sol\":23404:23591  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":11409:11559  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"extensions/erc721a/ERC721A.sol\":11481:11488  address */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":11523:11550  _packedOwnershipOf(tokenId) */\n      tag_144\n        /* \"extensions/erc721a/ERC721A.sol\":11542:11549  tokenId */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":11523:11541  _packedOwnershipOf */\n      tag_113\n        /* \"extensions/erc721a/ERC721A.sol\":11523:11550  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"extensions/erc721a/ERC721A.sol\":11500:11552  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":11409:11559  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":7045:7284  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"extensions/erc721a/ERC721A.sol\":7117:7124  uint256 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":7157:7158  0 */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":7140:7159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":7140:7145  owner */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":7140:7159  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":7136:7205  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      iszero\n      tag_146\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":7161:7205  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_147\n        /* \"extensions/erc721a/ERC721A.sol\":7169:7204  BalanceQueryForZeroAddress.selector */\n      shl(0xe0, 0x8f4eb604)\n        /* \"extensions/erc721a/ERC721A.sol\":7161:7168  _revert */\n      tag_104\n        /* \"extensions/erc721a/ERC721A.sol\":7161:7205  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_147:\n        /* \"extensions/erc721a/ERC721A.sol\":7136:7205  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n    tag_146:\n        /* \"extensions/erc721a/ERC721A.sol\":1360:1373  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"extensions/erc721a/ERC721A.sol\":7222:7240  _packedAddressData */\n      0x05\n        /* \"extensions/erc721a/ERC721A.sol\":7222:7247  _packedAddressData[owner] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":7241:7246  owner */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":7222:7247  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"extensions/erc721a/ERC721A.sol\":7222:7277  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":7215:7277  return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":7045:7284  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":10217:10319  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"extensions/erc721a/ERC721A.sol\":10273:10286  string memory */\n      0x60\n        /* \"extensions/erc721a/ERC721A.sol\":10305:10312  _symbol */\n      0x03\n        /* \"extensions/erc721a/ERC721A.sol\":10298:10312  return _symbol */\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_94\n      jump\t// in\n    tag_149:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_94\n      jump\t// in\n    tag_150:\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":10217:10319  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":16864:17095  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"extensions/erc721a/ERC721A.sol\":17010:17018  approved */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":16958:16976  _operatorApprovals */\n      0x07\n        /* \"extensions/erc721a/ERC721A.sol\":16958:16997  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":16977:16996  _msgSenderERC721A() */\n      tag_155\n        /* \"extensions/erc721a/ERC721A.sol\":16977:16994  _msgSenderERC721A */\n      tag_120\n        /* \"extensions/erc721a/ERC721A.sol\":16977:16996  _msgSenderERC721A() */\n      jump\t// in\n    tag_155:\n        /* \"extensions/erc721a/ERC721A.sol\":16958:16997  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"extensions/erc721a/ERC721A.sol\":16958:17007  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":16998:17006  operator */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":16958:17007  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":16958:17018  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":17069:17077  operator */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":17033:17088  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":17048:17067  _msgSenderERC721A() */\n      tag_156\n        /* \"extensions/erc721a/ERC721A.sol\":17048:17065  _msgSenderERC721A */\n      tag_120\n        /* \"extensions/erc721a/ERC721A.sol\":17048:17067  _msgSenderERC721A() */\n      jump\t// in\n    tag_156:\n        /* \"extensions/erc721a/ERC721A.sol\":17033:17088  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"extensions/erc721a/ERC721A.sol\":17079:17087  approved */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":17033:17088  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"extensions/erc721a/ERC721A.sol\":16864:17095  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":24172:24577  function safeTransferFrom(... */\n    tag_77:\n        /* \"extensions/erc721a/ERC721A.sol\":24341:24372  transferFrom(from, to, tokenId) */\n      tag_159\n        /* \"extensions/erc721a/ERC721A.sol\":24354:24358  from */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":24360:24362  to */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":24364:24371  tokenId */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":24341:24353  transferFrom */\n      tag_50\n        /* \"extensions/erc721a/ERC721A.sol\":24341:24372  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_159:\n        /* \"extensions/erc721a/ERC721A.sol\":24404:24405  0 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":24386:24388  to */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":24386:24400  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"extensions/erc721a/ERC721A.sol\":24386:24405  to.code.length != 0 */\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":24382:24571  if (to.code.length != 0)... */\n      tag_160\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":24424:24480  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_161\n        /* \"extensions/erc721a/ERC721A.sol\":24455:24459  from */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":24461:24463  to */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":24465:24472  tokenId */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":24474:24479  _data */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":24424:24454  _checkContractOnERC721Received */\n      tag_162\n        /* \"extensions/erc721a/ERC721A.sol\":24424:24480  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_161:\n        /* \"extensions/erc721a/ERC721A.sol\":24419:24571  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_163\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":24500:24556  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_164\n        /* \"extensions/erc721a/ERC721A.sol\":24508:24555  TransferToNonERC721ReceiverImplementer.selector */\n      shl(0xe0, 0xd1a57ed6)\n        /* \"extensions/erc721a/ERC721A.sol\":24500:24507  _revert */\n      tag_104\n        /* \"extensions/erc721a/ERC721A.sol\":24500:24556  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_164:\n        /* \"extensions/erc721a/ERC721A.sol\":24419:24571  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_163:\n        /* \"extensions/erc721a/ERC721A.sol\":24382:24571  if (to.code.length != 0)... */\n    tag_160:\n        /* \"extensions/erc721a/ERC721A.sol\":24172:24577  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":10420:10742  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"extensions/erc721a/ERC721A.sol\":10493:10506  string memory */\n      0x60\n        /* \"extensions/erc721a/ERC721A.sol\":10523:10539  _exists(tokenId) */\n      tag_166\n        /* \"extensions/erc721a/ERC721A.sol\":10531:10538  tokenId */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":10523:10530  _exists */\n      tag_101\n        /* \"extensions/erc721a/ERC721A.sol\":10523:10539  _exists(tokenId) */\n      jump\t// in\n    tag_166:\n        /* \"extensions/erc721a/ERC721A.sol\":10518:10586  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_167\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":10541:10586  _revert(URIQueryForNonexistentToken.selector) */\n      tag_168\n        /* \"extensions/erc721a/ERC721A.sol\":10549:10585  URIQueryForNonexistentToken.selector */\n      shl(0xe0, 0xa14c4b50)\n        /* \"extensions/erc721a/ERC721A.sol\":10541:10548  _revert */\n      tag_104\n        /* \"extensions/erc721a/ERC721A.sol\":10541:10586  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_168:\n        /* \"extensions/erc721a/ERC721A.sol\":10518:10586  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n    tag_167:\n        /* \"extensions/erc721a/ERC721A.sol\":10597:10618  string memory baseURI */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":10621:10631  _baseURI() */\n      tag_169\n        /* \"extensions/erc721a/ERC721A.sol\":10621:10629  _baseURI */\n      tag_170\n        /* \"extensions/erc721a/ERC721A.sol\":10621:10631  _baseURI() */\n      jump\t// in\n    tag_169:\n        /* \"extensions/erc721a/ERC721A.sol\":10597:10631  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":10673:10674  0 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":10654:10661  baseURI */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":10648:10669  bytes(baseURI).length */\n      mload\n        /* \"extensions/erc721a/ERC721A.sol\":10648:10674  bytes(baseURI).length != 0 */\n      eq\n      iszero\n        /* \"extensions/erc721a/ERC721A.sol\":10648:10735  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_171\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_172)\n    tag_171:\n        /* \"extensions/erc721a/ERC721A.sol\":10701:10708  baseURI */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":10710:10728  _toString(tokenId) */\n      tag_173\n        /* \"extensions/erc721a/ERC721A.sol\":10720:10727  tokenId */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":10710:10719  _toString */\n      tag_174\n        /* \"extensions/erc721a/ERC721A.sol\":10710:10728  _toString(tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"extensions/erc721a/ERC721A.sol\":10684:10729  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_175\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"extensions/erc721a/ERC721A.sol\":10648:10735  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_172:\n        /* \"extensions/erc721a/ERC721A.sol\":10641:10735  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":10420:10742  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":17245:17407  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_87:\n        /* \"extensions/erc721a/ERC721A.sol\":17342:17346  bool */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":17365:17383  _operatorApprovals */\n      0x07\n        /* \"extensions/erc721a/ERC721A.sol\":17365:17390  _operatorApprovals[owner] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":17384:17389  owner */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":17365:17390  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"extensions/erc721a/ERC721A.sol\":17365:17400  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":17391:17399  operator */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":17365:17400  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":17358:17400  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":17245:17407  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":17656:17933  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_101:\n        /* \"extensions/erc721a/ERC721A.sol\":17721:17725  bool */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":17775:17782  tokenId */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":17756:17771  _startTokenId() */\n      tag_179\n        /* \"extensions/erc721a/ERC721A.sol\":17756:17769  _startTokenId */\n      tag_110\n        /* \"extensions/erc721a/ERC721A.sol\":17756:17771  _startTokenId() */\n      jump\t// in\n    tag_179:\n        /* \"extensions/erc721a/ERC721A.sol\":17756:17782  _startTokenId() <= tokenId */\n      gt\n      iszero\n        /* \"extensions/erc721a/ERC721A.sol\":17756:17821  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_180\n      jumpi\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":17808:17821  _currentIndex */\n      sload(0x00)\n        /* \"extensions/erc721a/ERC721A.sol\":17798:17805  tokenId */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":17798:17821  tokenId < _currentIndex */\n      lt\n        /* \"extensions/erc721a/ERC721A.sol\":17756:17821  _startTokenId() <= tokenId &&... */\n    tag_180:\n        /* \"extensions/erc721a/ERC721A.sol\":17756:17907  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_181\n      jumpi\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":17906:17907  0 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"extensions/erc721a/ERC721A.sol\":17858:17875  _packedOwnerships */\n      0x04\n        /* \"extensions/erc721a/ERC721A.sol\":17858:17884  _packedOwnerships[tokenId] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":17876:17883  tokenId */\n      dup6\n        /* \"extensions/erc721a/ERC721A.sol\":17858:17884  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"extensions/erc721a/ERC721A.sol\":17858:17902  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":17858:17907  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":17756:17907  _startTokenId() <= tokenId &&... */\n    tag_181:\n        /* \"extensions/erc721a/ERC721A.sol\":17737:17907  return... */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":17656:17933  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":42691:42851  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_104:\n        /* \"extensions/erc721a/ERC721A.sol\":42790:42803  errorSelector */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":42784:42788  0x00 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":42777:42804  mstore(0x00, errorSelector) */\n      mstore\n        /* \"extensions/erc721a/ERC721A.sol\":42830:42834  0x04 */\n      0x04\n        /* \"extensions/erc721a/ERC721A.sol\":42824:42828  0x00 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":42817:42835  revert(0x00, 0x04) */\n      revert\n        /* \"extensions/erc721a/ERC721A.sol\":34339:34799  function _approve(... */\n    tag_107:\n        /* \"extensions/erc721a/ERC721A.sol\":34463:34476  address owner */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":34479:34495  ownerOf(tokenId) */\n      tag_184\n        /* \"extensions/erc721a/ERC721A.sol\":34487:34494  tokenId */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":34479:34486  ownerOf */\n      tag_57\n        /* \"extensions/erc721a/ERC721A.sol\":34479:34495  ownerOf(tokenId) */\n      jump\t// in\n    tag_184:\n        /* \"extensions/erc721a/ERC721A.sol\":34463:34495  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":34510:34523  approvalCheck */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":34510:34555  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_185\n      jumpi\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":34550:34555  owner */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":34527:34555  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":34527:34546  _msgSenderERC721A() */\n      tag_186\n        /* \"extensions/erc721a/ERC721A.sol\":34527:34544  _msgSenderERC721A */\n      tag_120\n        /* \"extensions/erc721a/ERC721A.sol\":34527:34546  _msgSenderERC721A() */\n      jump\t// in\n    tag_186:\n        /* \"extensions/erc721a/ERC721A.sol\":34527:34555  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"extensions/erc721a/ERC721A.sol\":34510:34555  approvalCheck && _msgSenderERC721A() != owner */\n    tag_185:\n        /* \"extensions/erc721a/ERC721A.sol\":34506:34704  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_187\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":34574:34618  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_188\n        /* \"extensions/erc721a/ERC721A.sol\":34591:34596  owner */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":34598:34617  _msgSenderERC721A() */\n      tag_189\n        /* \"extensions/erc721a/ERC721A.sol\":34598:34615  _msgSenderERC721A */\n      tag_120\n        /* \"extensions/erc721a/ERC721A.sol\":34598:34617  _msgSenderERC721A() */\n      jump\t// in\n    tag_189:\n        /* \"extensions/erc721a/ERC721A.sol\":34574:34590  isApprovedForAll */\n      tag_87\n        /* \"extensions/erc721a/ERC721A.sol\":34574:34618  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_188:\n        /* \"extensions/erc721a/ERC721A.sol\":34569:34704  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_190\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":34638:34689  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_191\n        /* \"extensions/erc721a/ERC721A.sol\":34646:34688  ApprovalCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0xcfb3b942)\n        /* \"extensions/erc721a/ERC721A.sol\":34638:34645  _revert */\n      tag_104\n        /* \"extensions/erc721a/ERC721A.sol\":34638:34689  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_191:\n        /* \"extensions/erc721a/ERC721A.sol\":34569:34704  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_190:\n        /* \"extensions/erc721a/ERC721A.sol\":34506:34704  if (approvalCheck && _msgSenderERC721A() != owner)... */\n    tag_187:\n        /* \"extensions/erc721a/ERC721A.sol\":34747:34749  to */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":34714:34729  _tokenApprovals */\n      0x06\n        /* \"extensions/erc721a/ERC721A.sol\":34714:34738  _tokenApprovals[tokenId] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":34730:34737  tokenId */\n      dup6\n        /* \"extensions/erc721a/ERC721A.sol\":34714:34738  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"extensions/erc721a/ERC721A.sol\":34714:34744  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":34714:34749  _tokenApprovals[tokenId].value = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":34784:34791  tokenId */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":34780:34782  to */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":34764:34792  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":34773:34778  owner */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":34764:34792  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"extensions/erc721a/ERC721A.sol\":34453:34799  {... */\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":34339:34799  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_110:\n        /* \"extensions/erc721a/ERC721A.sol\":5482:5489  uint256 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":5426:5516  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":12533:14231  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_113:\n        /* \"extensions/erc721a/ERC721A.sol\":12600:12614  uint256 packed */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":12649:12656  tokenId */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":12630:12645  _startTokenId() */\n      tag_194\n        /* \"extensions/erc721a/ERC721A.sol\":12630:12643  _startTokenId */\n      tag_110\n        /* \"extensions/erc721a/ERC721A.sol\":12630:12645  _startTokenId() */\n      jump\t// in\n    tag_194:\n        /* \"extensions/erc721a/ERC721A.sol\":12630:12656  _startTokenId() <= tokenId */\n      gt\n        /* \"extensions/erc721a/ERC721A.sol\":12626:14168  if (_startTokenId() <= tokenId) {... */\n      tag_195\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":12681:12698  _packedOwnerships */\n      0x04\n        /* \"extensions/erc721a/ERC721A.sol\":12681:12707  _packedOwnerships[tokenId] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":12699:12706  tokenId */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":12681:12707  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"extensions/erc721a/ERC721A.sol\":12672:12707  packed = _packedOwnerships[tokenId] */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":12783:12784  0 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":2118:2126  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"extensions/erc721a/ERC721A.sol\":12755:12761  packed */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":12755:12779  packed & _BITMASK_BURNED */\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":12755:12784  packed & _BITMASK_BURNED == 0 */\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":12751:14158  if (packed & _BITMASK_BURNED == 0) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":12902:12903  0 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":12892:12898  packed */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":12892:12903  packed == 0 */\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":12888:13860  if (packed == 0) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":12942:12955  _currentIndex */\n      sload(0x00)\n        /* \"extensions/erc721a/ERC721A.sol\":12931:12938  tokenId */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":12931:12955  tokenId >= _currentIndex */\n      lt\n        /* \"extensions/erc721a/ERC721A.sol\":12927:13004  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_198\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":12957:13004  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_199\n        /* \"extensions/erc721a/ERC721A.sol\":12965:13003  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"extensions/erc721a/ERC721A.sol\":12957:12964  _revert */\n      tag_104\n        /* \"extensions/erc721a/ERC721A.sol\":12957:13004  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_199:\n        /* \"extensions/erc721a/ERC721A.sol\":12927:13004  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n    tag_198:\n        /* \"extensions/erc721a/ERC721A.sol\":13591:13842  for (;;) {... */\n    tag_200:\n        /* \"extensions/erc721a/ERC721A.sol\":13675:13692  _packedOwnerships */\n      0x04\n        /* \"extensions/erc721a/ERC721A.sol\":13675:13703  _packedOwnerships[--tokenId] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":13693:13702  --tokenId */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":13675:13703  _packedOwnerships[--tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"extensions/erc721a/ERC721A.sol\":13666:13703  packed = _packedOwnerships[--tokenId] */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":13769:13770  0 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":13759:13765  packed */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":13759:13770  packed == 0 */\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":13755:13780  if (packed == 0) continue */\n      iszero\n      tag_203\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":13772:13780  continue */\n      jump(tag_202)\n        /* \"extensions/erc721a/ERC721A.sol\":13755:13780  if (packed == 0) continue */\n    tag_203:\n        /* \"extensions/erc721a/ERC721A.sol\":13806:13819  return packed */\n      jump(tag_193)\n        /* \"extensions/erc721a/ERC721A.sol\":13591:13842  for (;;) {... */\n    tag_202:\n      jump(tag_200)\n        /* \"extensions/erc721a/ERC721A.sol\":12888:13860  if (packed == 0) {... */\n    tag_197:\n        /* \"extensions/erc721a/ERC721A.sol\":14130:14143  return packed */\n      jump(tag_193)\n        /* \"extensions/erc721a/ERC721A.sol\":12751:14158  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_196:\n        /* \"extensions/erc721a/ERC721A.sol\":12626:14168  if (_startTokenId() <= tokenId) {... */\n    tag_195:\n        /* \"extensions/erc721a/ERC721A.sol\":14177:14224  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_204\n        /* \"extensions/erc721a/ERC721A.sol\":14185:14223  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"extensions/erc721a/ERC721A.sol\":14177:14184  _revert */\n      tag_104\n        /* \"extensions/erc721a/ERC721A.sol\":14177:14224  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_204:\n        /* \"extensions/erc721a/ERC721A.sol\":12533:14231  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_193:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":18791:19265  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n    tag_117:\n        /* \"extensions/erc721a/ERC721A.sol\":18890:18917  uint256 approvedAddressSlot */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":18919:18942  address approvedAddress */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":18958:18996  TokenApprovalRef storage tokenApproval */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":18999:19014  _tokenApprovals */\n      0x06\n        /* \"extensions/erc721a/ERC721A.sol\":18999:19023  _tokenApprovals[tokenId] */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":19015:19022  tokenId */\n      dup6\n        /* \"extensions/erc721a/ERC721A.sol\":18999:19023  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"extensions/erc721a/ERC721A.sol\":18958:19023  TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":19173:19191  tokenApproval.slot */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":19150:19191  approvedAddressSlot := tokenApproval.slot */\n      swap3\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":19229:19248  approvedAddressSlot */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":19223:19249  sload(approvedAddressSlot) */\n      sload\n        /* \"extensions/erc721a/ERC721A.sol\":19204:19249  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":19136:19259  {... */\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":18791:19265  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":40721:40824  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_120:\n        /* \"extensions/erc721a/ERC721A.sol\":40781:40788  address */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":40807:40817  msg.sender */\n      caller\n        /* \"extensions/erc721a/ERC721A.sol\":40800:40817  return msg.sender */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":40721:40824  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":18037:18683  function _isSenderApprovedOrOwner(... */\n    tag_121:\n        /* \"extensions/erc721a/ERC721A.sol\":18182:18193  bool result */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":18344:18360  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"extensions/erc721a/ERC721A.sol\":18337:18342  owner */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":18333:18361  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":18324:18361  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":18502:18518  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"extensions/erc721a/ERC721A.sol\":18491:18500  msgSender */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":18487:18519  and(msgSender, _BITMASK_ADDRESS) */\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":18474:18519  msgSender := and(msgSender, _BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":18650:18665  approvedAddress */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":18639:18648  msgSender */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":18636:18666  eq(msgSender, approvedAddress) */\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":18628:18633  owner */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":18617:18626  msgSender */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":18614:18634  eq(msgSender, owner) */\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":18611:18667  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"extensions/erc721a/ERC721A.sol\":18601:18667  result := or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":18037:18683  function _isSenderApprovedOrOwner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":25221:25375  function _beforeTokenTransfers(... */\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":40048:40352  function _nextExtraData(... */\n    tag_132:\n        /* \"extensions/erc721a/ERC721A.sol\":40179:40186  uint256 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":40198:40214  uint24 extraData */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":2513:2516  232 */\n      0xe8\n        /* \"extensions/erc721a/ERC721A.sol\":40224:40243  prevOwnershipPacked */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":40224:40265  prevOwnershipPacked >> _BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"extensions/erc721a/ERC721A.sol\":40198:40266  uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":2513:2516  232 */\n      0xe8\n        /* \"extensions/erc721a/ERC721A.sol\":40291:40322  _extraData(from, to, extraData) */\n      tag_210\n        /* \"extensions/erc721a/ERC721A.sol\":40302:40306  from */\n      dup7\n        /* \"extensions/erc721a/ERC721A.sol\":40308:40310  to */\n      dup7\n        /* \"extensions/erc721a/ERC721A.sol\":40312:40321  extraData */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":40291:40301  _extraData */\n      tag_211\n        /* \"extensions/erc721a/ERC721A.sol\":40291:40322  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_210:\n        /* \"extensions/erc721a/ERC721A.sol\":40283:40323  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":40283:40345  uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"extensions/erc721a/ERC721A.sol\":40276:40345  return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":40048:40352  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":14764:15207  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_133:\n        /* \"extensions/erc721a/ERC721A.sol\":14844:14858  uint256 result */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":15009:15025  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"extensions/erc721a/ERC721A.sol\":15002:15007  owner */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":14998:15026  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":14989:15026  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":15184:15189  flags */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":15170:15181  timestamp() */\n      timestamp\n        /* \"extensions/erc721a/ERC721A.sol\":15145:15168  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"extensions/erc721a/ERC721A.sol\":15141:15182  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"extensions/erc721a/ERC721A.sol\":15138:15190  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"extensions/erc721a/ERC721A.sol\":15131:15136  owner */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":15128:15191  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"extensions/erc721a/ERC721A.sol\":15118:15191  result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":14764:15207  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":26022:26175  function _afterTokenTransfers(... */\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":26603:27276  function _checkContractOnERC721Received(... */\n    tag_162:\n        /* \"extensions/erc721a/ERC721A.sol\":26761:26765  bool */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":26806:26808  to */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":26781:26826  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"extensions/erc721a/ERC721A.sol\":26827:26846  _msgSenderERC721A() */\n      tag_215\n        /* \"extensions/erc721a/ERC721A.sol\":26827:26844  _msgSenderERC721A */\n      tag_120\n        /* \"extensions/erc721a/ERC721A.sol\":26827:26846  _msgSenderERC721A() */\n      jump\t// in\n    tag_215:\n        /* \"extensions/erc721a/ERC721A.sol\":26848:26852  from */\n      dup8\n        /* \"extensions/erc721a/ERC721A.sol\":26854:26861  tokenId */\n      dup7\n        /* \"extensions/erc721a/ERC721A.sol\":26863:26868  _data */\n      dup7\n        /* \"extensions/erc721a/ERC721A.sol\":26781:26869  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_219\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      0x01\n    tag_219:\n        /* \"extensions/erc721a/ERC721A.sol\":26777:27270  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_222\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_227\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_226)\n    tag_227:\n      0x60\n      swap2\n      pop\n    tag_226:\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":27076:27077  0 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":27059:27065  reason */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":27059:27072  reason.length */\n      mload\n        /* \"extensions/erc721a/ERC721A.sol\":27059:27077  reason.length == 0 */\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":27055:27168  if (reason.length == 0) {... */\n      iszero\n      tag_228\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":27097:27153  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_229\n        /* \"extensions/erc721a/ERC721A.sol\":27105:27152  TransferToNonERC721ReceiverImplementer.selector */\n      shl(0xe0, 0xd1a57ed6)\n        /* \"extensions/erc721a/ERC721A.sol\":27097:27104  _revert */\n      tag_104\n        /* \"extensions/erc721a/ERC721A.sol\":27097:27153  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_229:\n        /* \"extensions/erc721a/ERC721A.sol\":27055:27168  if (reason.length == 0) {... */\n    tag_228:\n        /* \"extensions/erc721a/ERC721A.sol\":27238:27244  reason */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":27232:27245  mload(reason) */\n      mload\n        /* \"extensions/erc721a/ERC721A.sol\":27223:27229  reason */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":27219:27221  32 */\n      0x20\n        /* \"extensions/erc721a/ERC721A.sol\":27215:27230  add(32, reason) */\n      add\n        /* \"extensions/erc721a/ERC721A.sol\":27208:27246  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"extensions/erc721a/ERC721A.sol\":26777:27270  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_222:\n        /* \"extensions/erc721a/ERC721A.sol\":26947:27001  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"extensions/erc721a/ERC721A.sol\":26937:27001  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"extensions/erc721a/ERC721A.sol\":26937:26943  retval */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":26937:27001  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"extensions/erc721a/ERC721A.sol\":26930:27001  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":26603:27276  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":10987:11079  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_170:\n        /* \"extensions/erc721a/ERC721A.sol\":11038:11051  string memory */\n      0x60\n        /* \"extensions/erc721a/ERC721A.sol\":11063:11072  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":10987:11079  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":40921:42629  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_174:\n        /* \"extensions/erc721a/ERC721A.sol\":40986:41003  string memory str */\n      0x60\n        /* \"extensions/erc721a/ERC721A.sol\":41414:41418  0xa0 */\n      0xa0\n        /* \"extensions/erc721a/ERC721A.sol\":41407:41411  0x40 */\n      0x40\n        /* \"extensions/erc721a/ERC721A.sol\":41401:41412  mload(0x40) */\n      mload\n        /* \"extensions/erc721a/ERC721A.sol\":41397:41419  add(mload(0x40), 0xa0) */\n      add\n        /* \"extensions/erc721a/ERC721A.sol\":41504:41505  m */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":41498:41502  0x40 */\n      0x40\n        /* \"extensions/erc721a/ERC721A.sol\":41491:41506  mstore(0x40, m) */\n      mstore\n        /* \"extensions/erc721a/ERC721A.sol\":41577:41581  0x20 */\n      0x20\n        /* \"extensions/erc721a/ERC721A.sol\":41574:41575  m */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":41570:41582  sub(m, 0x20) */\n      sub\n        /* \"extensions/erc721a/ERC721A.sol\":41563:41582  str := sub(m, 0x20) */\n      swap2\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":41657:41658  0 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":41652:41655  str */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":41645:41659  mstore(str, 0) */\n      mstore\n        /* \"extensions/erc721a/ERC721A.sol\":41758:41761  str */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":41992:41997  value */\n      dup4\n        /* \"extensions/erc721a/ERC721A.sol\":41974:42393  for { let temp := value } 1 {} {... */\n    tag_233:\n        /* \"extensions/erc721a/ERC721A.sol\":42000:42001  1 */\n      0x01\n        /* \"extensions/erc721a/ERC721A.sol\":41974:42393  for { let temp := value } 1 {} {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":42039:42040  1 */\n      0x01\n        /* \"extensions/erc721a/ERC721A.sol\":42034:42037  str */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":42030:42041  sub(str, 1) */\n      sub\n        /* \"extensions/erc721a/ERC721A.sol\":42023:42041  str := sub(str, 1) */\n      swap4\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":42207:42209  10 */\n      0x0a\n        /* \"extensions/erc721a/ERC721A.sol\":42201:42205  temp */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":42197:42210  mod(temp, 10) */\n      mod\n        /* \"extensions/erc721a/ERC721A.sol\":42193:42195  48 */\n      0x30\n        /* \"extensions/erc721a/ERC721A.sol\":42189:42211  add(48, mod(temp, 10)) */\n      add\n        /* \"extensions/erc721a/ERC721A.sol\":42184:42187  str */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":42176:42212  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"extensions/erc721a/ERC721A.sol\":42299:42301  10 */\n      0x0a\n        /* \"extensions/erc721a/ERC721A.sol\":42293:42297  temp */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":42289:42302  div(temp, 10) */\n      div\n        /* \"extensions/erc721a/ERC721A.sol\":42281:42302  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":42364:42368  temp */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":42354:42379  if iszero(temp) { break } */\n      tag_236\n      jumpi\n        /* \"extensions/erc721a/ERC721A.sol\":42372:42377  break */\n      jump(tag_235)\n        /* \"extensions/erc721a/ERC721A.sol\":42354:42379  if iszero(temp) { break } */\n    tag_236:\n        /* \"extensions/erc721a/ERC721A.sol\":41974:42393  for { let temp := value } 1 {} {... */\n      jump(tag_233)\n    tag_235:\n        /* \"extensions/erc721a/ERC721A.sol\":41978:41999  { let temp := value } */\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":42430:42433  str */\n      dup3\n        /* \"extensions/erc721a/ERC721A.sol\":42425:42428  end */\n      dup2\n        /* \"extensions/erc721a/ERC721A.sol\":42421:42434  sub(end, str) */\n      sub\n        /* \"extensions/erc721a/ERC721A.sol\":42543:42547  0x20 */\n      0x20\n        /* \"extensions/erc721a/ERC721A.sol\":42538:42541  str */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":42534:42548  sub(str, 0x20) */\n      sub\n        /* \"extensions/erc721a/ERC721A.sol\":42527:42548  str := sub(str, 0x20) */\n      swap4\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":42606:42612  length */\n      dup1\n        /* \"extensions/erc721a/ERC721A.sol\":42601:42604  str */\n      dup5\n        /* \"extensions/erc721a/ERC721A.sol\":42594:42613  mstore(str, length) */\n      mstore\n        /* \"extensions/erc721a/ERC721A.sol\":41024:42623  {... */\n      pop\n      pop\n      pop\n        /* \"extensions/erc721a/ERC721A.sol\":40921:42629  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"extensions/erc721a/ERC721A.sol\":39759:39902  function _extraData(... */\n    tag_211:\n        /* \"extensions/erc721a/ERC721A.sol\":39892:39898  uint24 */\n      0x00\n        /* \"extensions/erc721a/ERC721A.sol\":39759:39902  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_239:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_241\n        /* \"#utility.yul\":125:173   */\n      tag_242\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":109:174   */\n      tag_244\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_246\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":249:361   */\n    tag_245:\n        /* \"#utility.yul\":370:411   */\n      tag_248\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_250:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_252\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:701   */\n    tag_254:\n        /* \"#utility.yul\":611:616   */\n      0x00\n        /* \"#utility.yul\":649:655   */\n      dup2\n        /* \"#utility.yul\":636:656   */\n      calldataload\n        /* \"#utility.yul\":627:656   */\n      swap1\n      pop\n        /* \"#utility.yul\":665:695   */\n      tag_256\n        /* \"#utility.yul\":689:694   */\n      dup2\n        /* \"#utility.yul\":665:695   */\n      tag_257\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":568:701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":707:844   */\n    tag_258:\n        /* \"#utility.yul\":752:757   */\n      0x00\n        /* \"#utility.yul\":790:796   */\n      dup2\n        /* \"#utility.yul\":777:797   */\n      calldataload\n        /* \"#utility.yul\":768:797   */\n      swap1\n      pop\n        /* \"#utility.yul\":806:838   */\n      tag_260\n        /* \"#utility.yul\":832:837   */\n      dup2\n        /* \"#utility.yul\":806:838   */\n      tag_261\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":707:844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":850:991   */\n    tag_262:\n        /* \"#utility.yul\":906:911   */\n      0x00\n        /* \"#utility.yul\":937:943   */\n      dup2\n        /* \"#utility.yul\":931:944   */\n      mload\n        /* \"#utility.yul\":922:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":953:985   */\n      tag_264\n        /* \"#utility.yul\":979:984   */\n      dup2\n        /* \"#utility.yul\":953:985   */\n      tag_261\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":850:991   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1010:1348   */\n    tag_265:\n        /* \"#utility.yul\":1065:1070   */\n      0x00\n        /* \"#utility.yul\":1114:1117   */\n      dup3\n        /* \"#utility.yul\":1107:1111   */\n      0x1f\n        /* \"#utility.yul\":1099:1105   */\n      dup4\n        /* \"#utility.yul\":1095:1112   */\n      add\n        /* \"#utility.yul\":1091:1118   */\n      slt\n        /* \"#utility.yul\":1081:1203   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":1122:1201   */\n      tag_268\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1081:1203   */\n    tag_267:\n        /* \"#utility.yul\":1239:1245   */\n      dup2\n        /* \"#utility.yul\":1226:1246   */\n      calldataload\n        /* \"#utility.yul\":1264:1342   */\n      tag_270\n        /* \"#utility.yul\":1338:1341   */\n      dup5\n        /* \"#utility.yul\":1330:1336   */\n      dup3\n        /* \"#utility.yul\":1323:1327   */\n      0x20\n        /* \"#utility.yul\":1315:1321   */\n      dup7\n        /* \"#utility.yul\":1311:1328   */\n      add\n        /* \"#utility.yul\":1264:1342   */\n      tag_239\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1255:1342   */\n      swap2\n      pop\n        /* \"#utility.yul\":1071:1348   */\n      pop\n        /* \"#utility.yul\":1010:1348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1354:1493   */\n    tag_271:\n        /* \"#utility.yul\":1400:1405   */\n      0x00\n        /* \"#utility.yul\":1438:1444   */\n      dup2\n        /* \"#utility.yul\":1425:1445   */\n      calldataload\n        /* \"#utility.yul\":1416:1445   */\n      swap1\n      pop\n        /* \"#utility.yul\":1454:1487   */\n      tag_273\n        /* \"#utility.yul\":1481:1486   */\n      dup2\n        /* \"#utility.yul\":1454:1487   */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1354:1493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1499:1828   */\n    tag_62:\n        /* \"#utility.yul\":1558:1564   */\n      0x00\n        /* \"#utility.yul\":1607:1609   */\n      0x20\n        /* \"#utility.yul\":1595:1604   */\n      dup3\n        /* \"#utility.yul\":1586:1593   */\n      dup5\n        /* \"#utility.yul\":1582:1605   */\n      sub\n        /* \"#utility.yul\":1578:1610   */\n      slt\n        /* \"#utility.yul\":1575:1694   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":1613:1692   */\n      tag_277\n      tag_278\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":1575:1694   */\n    tag_276:\n        /* \"#utility.yul\":1733:1734   */\n      0x00\n        /* \"#utility.yul\":1758:1811   */\n      tag_279\n        /* \"#utility.yul\":1803:1810   */\n      dup5\n        /* \"#utility.yul\":1794:1800   */\n      dup3\n        /* \"#utility.yul\":1783:1792   */\n      dup6\n        /* \"#utility.yul\":1779:1801   */\n      add\n        /* \"#utility.yul\":1758:1811   */\n      tag_250\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1748:1811   */\n      swap2\n      pop\n        /* \"#utility.yul\":1704:1821   */\n      pop\n        /* \"#utility.yul\":1499:1828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1834:2308   */\n    tag_86:\n        /* \"#utility.yul\":1902:1908   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup1\n        /* \"#utility.yul\":1959:1961   */\n      0x40\n        /* \"#utility.yul\":1947:1956   */\n      dup4\n        /* \"#utility.yul\":1938:1945   */\n      dup6\n        /* \"#utility.yul\":1934:1957   */\n      sub\n        /* \"#utility.yul\":1930:1962   */\n      slt\n        /* \"#utility.yul\":1927:2046   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":1965:2044   */\n      tag_282\n      tag_278\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1927:2046   */\n    tag_281:\n        /* \"#utility.yul\":2085:2086   */\n      0x00\n        /* \"#utility.yul\":2110:2163   */\n      tag_283\n        /* \"#utility.yul\":2155:2162   */\n      dup6\n        /* \"#utility.yul\":2146:2152   */\n      dup3\n        /* \"#utility.yul\":2135:2144   */\n      dup7\n        /* \"#utility.yul\":2131:2153   */\n      add\n        /* \"#utility.yul\":2110:2163   */\n      tag_250\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2100:2163   */\n      swap3\n      pop\n        /* \"#utility.yul\":2056:2173   */\n      pop\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2238:2291   */\n      tag_284\n        /* \"#utility.yul\":2283:2290   */\n      dup6\n        /* \"#utility.yul\":2274:2280   */\n      dup3\n        /* \"#utility.yul\":2263:2272   */\n      dup7\n        /* \"#utility.yul\":2259:2281   */\n      add\n        /* \"#utility.yul\":2238:2291   */\n      tag_250\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2228:2291   */\n      swap2\n      pop\n        /* \"#utility.yul\":2183:2301   */\n      pop\n        /* \"#utility.yul\":1834:2308   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2933   */\n    tag_49:\n        /* \"#utility.yul\":2391:2397   */\n      0x00\n        /* \"#utility.yul\":2399:2405   */\n      dup1\n        /* \"#utility.yul\":2407:2413   */\n      0x00\n        /* \"#utility.yul\":2456:2458   */\n      0x60\n        /* \"#utility.yul\":2444:2453   */\n      dup5\n        /* \"#utility.yul\":2435:2442   */\n      dup7\n        /* \"#utility.yul\":2431:2454   */\n      sub\n        /* \"#utility.yul\":2427:2459   */\n      slt\n        /* \"#utility.yul\":2424:2543   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2462:2541   */\n      tag_287\n      tag_278\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2424:2543   */\n    tag_286:\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2607:2660   */\n      tag_288\n        /* \"#utility.yul\":2652:2659   */\n      dup7\n        /* \"#utility.yul\":2643:2649   */\n      dup3\n        /* \"#utility.yul\":2632:2641   */\n      dup8\n        /* \"#utility.yul\":2628:2650   */\n      add\n        /* \"#utility.yul\":2607:2660   */\n      tag_250\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2597:2660   */\n      swap4\n      pop\n        /* \"#utility.yul\":2553:2670   */\n      pop\n        /* \"#utility.yul\":2709:2711   */\n      0x20\n        /* \"#utility.yul\":2735:2788   */\n      tag_289\n        /* \"#utility.yul\":2780:2787   */\n      dup7\n        /* \"#utility.yul\":2771:2777   */\n      dup3\n        /* \"#utility.yul\":2760:2769   */\n      dup8\n        /* \"#utility.yul\":2756:2778   */\n      add\n        /* \"#utility.yul\":2735:2788   */\n      tag_250\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2725:2788   */\n      swap3\n      pop\n        /* \"#utility.yul\":2680:2798   */\n      pop\n        /* \"#utility.yul\":2837:2839   */\n      0x40\n        /* \"#utility.yul\":2863:2916   */\n      tag_290\n        /* \"#utility.yul\":2908:2915   */\n      dup7\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup8\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_271\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2853:2916   */\n      swap2\n      pop\n        /* \"#utility.yul\":2808:2926   */\n      pop\n        /* \"#utility.yul\":2314:2933   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2939:3882   */\n    tag_76:\n        /* \"#utility.yul\":3034:3040   */\n      0x00\n        /* \"#utility.yul\":3042:3048   */\n      dup1\n        /* \"#utility.yul\":3050:3056   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup1\n        /* \"#utility.yul\":3107:3110   */\n      0x80\n        /* \"#utility.yul\":3095:3104   */\n      dup6\n        /* \"#utility.yul\":3086:3093   */\n      dup8\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3111   */\n      slt\n        /* \"#utility.yul\":3075:3195   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":3114:3193   */\n      tag_293\n      tag_278\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3075:3195   */\n    tag_292:\n        /* \"#utility.yul\":3234:3235   */\n      0x00\n        /* \"#utility.yul\":3259:3312   */\n      tag_294\n        /* \"#utility.yul\":3304:3311   */\n      dup8\n        /* \"#utility.yul\":3295:3301   */\n      dup3\n        /* \"#utility.yul\":3284:3293   */\n      dup9\n        /* \"#utility.yul\":3280:3302   */\n      add\n        /* \"#utility.yul\":3259:3312   */\n      tag_250\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3249:3312   */\n      swap5\n      pop\n        /* \"#utility.yul\":3205:3322   */\n      pop\n        /* \"#utility.yul\":3361:3363   */\n      0x20\n        /* \"#utility.yul\":3387:3440   */\n      tag_295\n        /* \"#utility.yul\":3432:3439   */\n      dup8\n        /* \"#utility.yul\":3423:3429   */\n      dup3\n        /* \"#utility.yul\":3412:3421   */\n      dup9\n        /* \"#utility.yul\":3408:3430   */\n      add\n        /* \"#utility.yul\":3387:3440   */\n      tag_250\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3377:3440   */\n      swap4\n      pop\n        /* \"#utility.yul\":3332:3450   */\n      pop\n        /* \"#utility.yul\":3489:3491   */\n      0x40\n        /* \"#utility.yul\":3515:3568   */\n      tag_296\n        /* \"#utility.yul\":3560:3567   */\n      dup8\n        /* \"#utility.yul\":3551:3557   */\n      dup3\n        /* \"#utility.yul\":3540:3549   */\n      dup9\n        /* \"#utility.yul\":3536:3558   */\n      add\n        /* \"#utility.yul\":3515:3568   */\n      tag_271\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3505:3568   */\n      swap3\n      pop\n        /* \"#utility.yul\":3460:3578   */\n      pop\n        /* \"#utility.yul\":3645:3647   */\n      0x60\n        /* \"#utility.yul\":3634:3643   */\n      dup6\n        /* \"#utility.yul\":3630:3648   */\n      add\n        /* \"#utility.yul\":3617:3649   */\n      calldataload\n        /* \"#utility.yul\":3676:3694   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3668:3674   */\n      dup2\n        /* \"#utility.yul\":3665:3695   */\n      gt\n        /* \"#utility.yul\":3662:3779   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3698:3777   */\n      tag_298\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3662:3779   */\n    tag_297:\n        /* \"#utility.yul\":3803:3865   */\n      tag_300\n        /* \"#utility.yul\":3857:3864   */\n      dup8\n        /* \"#utility.yul\":3848:3854   */\n      dup3\n        /* \"#utility.yul\":3837:3846   */\n      dup9\n        /* \"#utility.yul\":3833:3855   */\n      add\n        /* \"#utility.yul\":3803:3865   */\n      tag_265\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3793:3865   */\n      swap2\n      pop\n        /* \"#utility.yul\":3588:3875   */\n      pop\n        /* \"#utility.yul\":2939:3882   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3888:4356   */\n    tag_72:\n        /* \"#utility.yul\":3953:3959   */\n      0x00\n        /* \"#utility.yul\":3961:3967   */\n      dup1\n        /* \"#utility.yul\":4010:4012   */\n      0x40\n        /* \"#utility.yul\":3998:4007   */\n      dup4\n        /* \"#utility.yul\":3989:3996   */\n      dup6\n        /* \"#utility.yul\":3985:4008   */\n      sub\n        /* \"#utility.yul\":3981:4013   */\n      slt\n        /* \"#utility.yul\":3978:4097   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":4016:4095   */\n      tag_303\n      tag_278\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":3978:4097   */\n    tag_302:\n        /* \"#utility.yul\":4136:4137   */\n      0x00\n        /* \"#utility.yul\":4161:4214   */\n      tag_304\n        /* \"#utility.yul\":4206:4213   */\n      dup6\n        /* \"#utility.yul\":4197:4203   */\n      dup3\n        /* \"#utility.yul\":4186:4195   */\n      dup7\n        /* \"#utility.yul\":4182:4204   */\n      add\n        /* \"#utility.yul\":4161:4214   */\n      tag_250\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4151:4214   */\n      swap3\n      pop\n        /* \"#utility.yul\":4107:4224   */\n      pop\n        /* \"#utility.yul\":4263:4265   */\n      0x20\n        /* \"#utility.yul\":4289:4339   */\n      tag_305\n        /* \"#utility.yul\":4331:4338   */\n      dup6\n        /* \"#utility.yul\":4322:4328   */\n      dup3\n        /* \"#utility.yul\":4311:4320   */\n      dup7\n        /* \"#utility.yul\":4307:4329   */\n      add\n        /* \"#utility.yul\":4289:4339   */\n      tag_254\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4279:4339   */\n      swap2\n      pop\n        /* \"#utility.yul\":4234:4349   */\n      pop\n        /* \"#utility.yul\":3888:4356   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4362:4836   */\n    tag_40:\n        /* \"#utility.yul\":4430:4436   */\n      0x00\n        /* \"#utility.yul\":4438:4444   */\n      dup1\n        /* \"#utility.yul\":4487:4489   */\n      0x40\n        /* \"#utility.yul\":4475:4484   */\n      dup4\n        /* \"#utility.yul\":4466:4473   */\n      dup6\n        /* \"#utility.yul\":4462:4485   */\n      sub\n        /* \"#utility.yul\":4458:4490   */\n      slt\n        /* \"#utility.yul\":4455:4574   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":4493:4572   */\n      tag_308\n      tag_278\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4455:4574   */\n    tag_307:\n        /* \"#utility.yul\":4613:4614   */\n      0x00\n        /* \"#utility.yul\":4638:4691   */\n      tag_309\n        /* \"#utility.yul\":4683:4690   */\n      dup6\n        /* \"#utility.yul\":4674:4680   */\n      dup3\n        /* \"#utility.yul\":4663:4672   */\n      dup7\n        /* \"#utility.yul\":4659:4681   */\n      add\n        /* \"#utility.yul\":4638:4691   */\n      tag_250\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4628:4691   */\n      swap3\n      pop\n        /* \"#utility.yul\":4584:4701   */\n      pop\n        /* \"#utility.yul\":4740:4742   */\n      0x20\n        /* \"#utility.yul\":4766:4819   */\n      tag_310\n        /* \"#utility.yul\":4811:4818   */\n      dup6\n        /* \"#utility.yul\":4802:4808   */\n      dup3\n        /* \"#utility.yul\":4791:4800   */\n      dup7\n        /* \"#utility.yul\":4787:4809   */\n      add\n        /* \"#utility.yul\":4766:4819   */\n      tag_271\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4756:4819   */\n      swap2\n      pop\n        /* \"#utility.yul\":4711:4829   */\n      pop\n        /* \"#utility.yul\":4362:4836   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4842:5169   */\n    tag_22:\n        /* \"#utility.yul\":4900:4906   */\n      0x00\n        /* \"#utility.yul\":4949:4951   */\n      0x20\n        /* \"#utility.yul\":4937:4946   */\n      dup3\n        /* \"#utility.yul\":4928:4935   */\n      dup5\n        /* \"#utility.yul\":4924:4947   */\n      sub\n        /* \"#utility.yul\":4920:4952   */\n      slt\n        /* \"#utility.yul\":4917:5036   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":4955:5034   */\n      tag_313\n      tag_278\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4917:5036   */\n    tag_312:\n        /* \"#utility.yul\":5075:5076   */\n      0x00\n        /* \"#utility.yul\":5100:5152   */\n      tag_314\n        /* \"#utility.yul\":5144:5151   */\n      dup5\n        /* \"#utility.yul\":5135:5141   */\n      dup3\n        /* \"#utility.yul\":5124:5133   */\n      dup6\n        /* \"#utility.yul\":5120:5142   */\n      add\n        /* \"#utility.yul\":5100:5152   */\n      tag_258\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5090:5152   */\n      swap2\n      pop\n        /* \"#utility.yul\":5046:5162   */\n      pop\n        /* \"#utility.yul\":4842:5169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5175:5524   */\n    tag_221:\n        /* \"#utility.yul\":5244:5250   */\n      0x00\n        /* \"#utility.yul\":5293:5295   */\n      0x20\n        /* \"#utility.yul\":5281:5290   */\n      dup3\n        /* \"#utility.yul\":5272:5279   */\n      dup5\n        /* \"#utility.yul\":5268:5291   */\n      sub\n        /* \"#utility.yul\":5264:5296   */\n      slt\n        /* \"#utility.yul\":5261:5380   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":5299:5378   */\n      tag_317\n      tag_278\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5261:5380   */\n    tag_316:\n        /* \"#utility.yul\":5419:5420   */\n      0x00\n        /* \"#utility.yul\":5444:5507   */\n      tag_318\n        /* \"#utility.yul\":5499:5506   */\n      dup5\n        /* \"#utility.yul\":5490:5496   */\n      dup3\n        /* \"#utility.yul\":5479:5488   */\n      dup6\n        /* \"#utility.yul\":5475:5497   */\n      add\n        /* \"#utility.yul\":5444:5507   */\n      tag_262\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5434:5507   */\n      swap2\n      pop\n        /* \"#utility.yul\":5390:5517   */\n      pop\n        /* \"#utility.yul\":5175:5524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5530:5859   */\n    tag_34:\n        /* \"#utility.yul\":5589:5595   */\n      0x00\n        /* \"#utility.yul\":5638:5640   */\n      0x20\n        /* \"#utility.yul\":5626:5635   */\n      dup3\n        /* \"#utility.yul\":5617:5624   */\n      dup5\n        /* \"#utility.yul\":5613:5636   */\n      sub\n        /* \"#utility.yul\":5609:5641   */\n      slt\n        /* \"#utility.yul\":5606:5725   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":5644:5723   */\n      tag_321\n      tag_278\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5606:5725   */\n    tag_320:\n        /* \"#utility.yul\":5764:5765   */\n      0x00\n        /* \"#utility.yul\":5789:5842   */\n      tag_322\n        /* \"#utility.yul\":5834:5841   */\n      dup5\n        /* \"#utility.yul\":5825:5831   */\n      dup3\n        /* \"#utility.yul\":5814:5823   */\n      dup6\n        /* \"#utility.yul\":5810:5832   */\n      add\n        /* \"#utility.yul\":5789:5842   */\n      tag_271\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5779:5842   */\n      swap2\n      pop\n        /* \"#utility.yul\":5735:5852   */\n      pop\n        /* \"#utility.yul\":5530:5859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5865:5983   */\n    tag_323:\n        /* \"#utility.yul\":5952:5976   */\n      tag_325\n        /* \"#utility.yul\":5970:5975   */\n      dup2\n        /* \"#utility.yul\":5952:5976   */\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5947:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5977   */\n      mstore\n        /* \"#utility.yul\":5865:5983   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5989:6098   */\n    tag_327:\n        /* \"#utility.yul\":6070:6091   */\n      tag_329\n        /* \"#utility.yul\":6085:6090   */\n      dup2\n        /* \"#utility.yul\":6070:6091   */\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6065:6068   */\n      dup3\n        /* \"#utility.yul\":6058:6092   */\n      mstore\n        /* \"#utility.yul\":5989:6098   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6104:6464   */\n    tag_331:\n        /* \"#utility.yul\":6190:6193   */\n      0x00\n        /* \"#utility.yul\":6218:6256   */\n      tag_333\n        /* \"#utility.yul\":6250:6255   */\n      dup3\n        /* \"#utility.yul\":6218:6256   */\n      tag_334\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6272:6342   */\n      tag_335\n        /* \"#utility.yul\":6335:6341   */\n      dup2\n        /* \"#utility.yul\":6330:6333   */\n      dup6\n        /* \"#utility.yul\":6272:6342   */\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6265:6342   */\n      swap4\n      pop\n        /* \"#utility.yul\":6351:6403   */\n      tag_337\n        /* \"#utility.yul\":6396:6402   */\n      dup2\n        /* \"#utility.yul\":6391:6394   */\n      dup6\n        /* \"#utility.yul\":6384:6388   */\n      0x20\n        /* \"#utility.yul\":6377:6382   */\n      dup7\n        /* \"#utility.yul\":6373:6389   */\n      add\n        /* \"#utility.yul\":6351:6403   */\n      tag_338\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6428:6457   */\n      tag_339\n        /* \"#utility.yul\":6450:6456   */\n      dup2\n        /* \"#utility.yul\":6428:6457   */\n      tag_340\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6423:6426   */\n      dup5\n        /* \"#utility.yul\":6419:6458   */\n      add\n        /* \"#utility.yul\":6412:6458   */\n      swap2\n      pop\n        /* \"#utility.yul\":6194:6464   */\n      pop\n        /* \"#utility.yul\":6104:6464   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6470:6834   */\n    tag_341:\n        /* \"#utility.yul\":6558:6561   */\n      0x00\n        /* \"#utility.yul\":6586:6625   */\n      tag_343\n        /* \"#utility.yul\":6619:6624   */\n      dup3\n        /* \"#utility.yul\":6586:6625   */\n      tag_344\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":6641:6712   */\n      tag_345\n        /* \"#utility.yul\":6705:6711   */\n      dup2\n        /* \"#utility.yul\":6700:6703   */\n      dup6\n        /* \"#utility.yul\":6641:6712   */\n      tag_346\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":6634:6712   */\n      swap4\n      pop\n        /* \"#utility.yul\":6721:6773   */\n      tag_347\n        /* \"#utility.yul\":6766:6772   */\n      dup2\n        /* \"#utility.yul\":6761:6764   */\n      dup6\n        /* \"#utility.yul\":6754:6758   */\n      0x20\n        /* \"#utility.yul\":6747:6752   */\n      dup7\n        /* \"#utility.yul\":6743:6759   */\n      add\n        /* \"#utility.yul\":6721:6773   */\n      tag_338\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":6798:6827   */\n      tag_348\n        /* \"#utility.yul\":6820:6826   */\n      dup2\n        /* \"#utility.yul\":6798:6827   */\n      tag_340\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6793:6796   */\n      dup5\n        /* \"#utility.yul\":6789:6828   */\n      add\n        /* \"#utility.yul\":6782:6828   */\n      swap2\n      pop\n        /* \"#utility.yul\":6562:6834   */\n      pop\n        /* \"#utility.yul\":6470:6834   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6840:7217   */\n    tag_349:\n        /* \"#utility.yul\":6946:6949   */\n      0x00\n        /* \"#utility.yul\":6974:7013   */\n      tag_351\n        /* \"#utility.yul\":7007:7012   */\n      dup3\n        /* \"#utility.yul\":6974:7013   */\n      tag_344\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7029:7118   */\n      tag_352\n        /* \"#utility.yul\":7111:7117   */\n      dup2\n        /* \"#utility.yul\":7106:7109   */\n      dup6\n        /* \"#utility.yul\":7029:7118   */\n      tag_353\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":7022:7118   */\n      swap4\n      pop\n        /* \"#utility.yul\":7127:7179   */\n      tag_354\n        /* \"#utility.yul\":7172:7178   */\n      dup2\n        /* \"#utility.yul\":7167:7170   */\n      dup6\n        /* \"#utility.yul\":7160:7164   */\n      0x20\n        /* \"#utility.yul\":7153:7158   */\n      dup7\n        /* \"#utility.yul\":7149:7165   */\n      add\n        /* \"#utility.yul\":7127:7179   */\n      tag_338\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7204:7210   */\n      dup1\n        /* \"#utility.yul\":7199:7202   */\n      dup5\n        /* \"#utility.yul\":7195:7211   */\n      add\n        /* \"#utility.yul\":7188:7211   */\n      swap2\n      pop\n        /* \"#utility.yul\":6950:7217   */\n      pop\n        /* \"#utility.yul\":6840:7217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7223:7341   */\n    tag_355:\n        /* \"#utility.yul\":7310:7334   */\n      tag_357\n        /* \"#utility.yul\":7328:7333   */\n      dup2\n        /* \"#utility.yul\":7310:7334   */\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7305:7308   */\n      dup3\n        /* \"#utility.yul\":7298:7335   */\n      mstore\n        /* \"#utility.yul\":7223:7341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7347:7782   */\n    tag_176:\n        /* \"#utility.yul\":7527:7530   */\n      0x00\n        /* \"#utility.yul\":7549:7644   */\n      tag_360\n        /* \"#utility.yul\":7640:7643   */\n      dup3\n        /* \"#utility.yul\":7631:7637   */\n      dup6\n        /* \"#utility.yul\":7549:7644   */\n      tag_349\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":7542:7644   */\n      swap2\n      pop\n        /* \"#utility.yul\":7661:7756   */\n      tag_361\n        /* \"#utility.yul\":7752:7755   */\n      dup3\n        /* \"#utility.yul\":7743:7749   */\n      dup5\n        /* \"#utility.yul\":7661:7756   */\n      tag_349\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":7654:7756   */\n      swap2\n      pop\n        /* \"#utility.yul\":7773:7776   */\n      dup2\n        /* \"#utility.yul\":7766:7776   */\n      swap1\n      pop\n        /* \"#utility.yul\":7347:7782   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7788:8010   */\n    tag_37:\n        /* \"#utility.yul\":7881:7885   */\n      0x00\n        /* \"#utility.yul\":7919:7921   */\n      0x20\n        /* \"#utility.yul\":7908:7917   */\n      dup3\n        /* \"#utility.yul\":7904:7922   */\n      add\n        /* \"#utility.yul\":7896:7922   */\n      swap1\n      pop\n        /* \"#utility.yul\":7932:8003   */\n      tag_363\n        /* \"#utility.yul\":8000:8001   */\n      0x00\n        /* \"#utility.yul\":7989:7998   */\n      dup4\n        /* \"#utility.yul\":7985:8002   */\n      add\n        /* \"#utility.yul\":7976:7982   */\n      dup5\n        /* \"#utility.yul\":7932:8003   */\n      tag_323\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7788:8010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8016:8656   */\n    tag_217:\n        /* \"#utility.yul\":8211:8215   */\n      0x00\n        /* \"#utility.yul\":8249:8252   */\n      0x80\n        /* \"#utility.yul\":8238:8247   */\n      dup3\n        /* \"#utility.yul\":8234:8253   */\n      add\n        /* \"#utility.yul\":8226:8253   */\n      swap1\n      pop\n        /* \"#utility.yul\":8263:8334   */\n      tag_365\n        /* \"#utility.yul\":8331:8332   */\n      0x00\n        /* \"#utility.yul\":8320:8329   */\n      dup4\n        /* \"#utility.yul\":8316:8333   */\n      add\n        /* \"#utility.yul\":8307:8313   */\n      dup8\n        /* \"#utility.yul\":8263:8334   */\n      tag_323\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":8344:8416   */\n      tag_366\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8401:8410   */\n      dup4\n        /* \"#utility.yul\":8397:8415   */\n      add\n        /* \"#utility.yul\":8388:8394   */\n      dup7\n        /* \"#utility.yul\":8344:8416   */\n      tag_323\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8426:8498   */\n      tag_367\n        /* \"#utility.yul\":8494:8496   */\n      0x40\n        /* \"#utility.yul\":8483:8492   */\n      dup4\n        /* \"#utility.yul\":8479:8497   */\n      add\n        /* \"#utility.yul\":8470:8476   */\n      dup6\n        /* \"#utility.yul\":8426:8498   */\n      tag_355\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":8545:8554   */\n      dup2\n        /* \"#utility.yul\":8539:8543   */\n      dup2\n        /* \"#utility.yul\":8535:8555   */\n      sub\n        /* \"#utility.yul\":8530:8532   */\n      0x60\n        /* \"#utility.yul\":8519:8528   */\n      dup4\n        /* \"#utility.yul\":8515:8533   */\n      add\n        /* \"#utility.yul\":8508:8556   */\n      mstore\n        /* \"#utility.yul\":8573:8649   */\n      tag_368\n        /* \"#utility.yul\":8644:8648   */\n      dup2\n        /* \"#utility.yul\":8635:8641   */\n      dup5\n        /* \"#utility.yul\":8573:8649   */\n      tag_331\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":8565:8649   */\n      swap1\n      pop\n        /* \"#utility.yul\":8016:8656   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8662:8872   */\n    tag_25:\n        /* \"#utility.yul\":8749:8753   */\n      0x00\n        /* \"#utility.yul\":8787:8789   */\n      0x20\n        /* \"#utility.yul\":8776:8785   */\n      dup3\n        /* \"#utility.yul\":8772:8790   */\n      add\n        /* \"#utility.yul\":8764:8790   */\n      swap1\n      pop\n        /* \"#utility.yul\":8800:8865   */\n      tag_370\n        /* \"#utility.yul\":8862:8863   */\n      0x00\n        /* \"#utility.yul\":8851:8860   */\n      dup4\n        /* \"#utility.yul\":8847:8864   */\n      add\n        /* \"#utility.yul\":8838:8844   */\n      dup5\n        /* \"#utility.yul\":8800:8865   */\n      tag_327\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":8662:8872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:9191   */\n    tag_30:\n        /* \"#utility.yul\":8991:8995   */\n      0x00\n        /* \"#utility.yul\":9029:9031   */\n      0x20\n        /* \"#utility.yul\":9018:9027   */\n      dup3\n        /* \"#utility.yul\":9014:9032   */\n      add\n        /* \"#utility.yul\":9006:9032   */\n      swap1\n      pop\n        /* \"#utility.yul\":9078:9087   */\n      dup2\n        /* \"#utility.yul\":9072:9076   */\n      dup2\n        /* \"#utility.yul\":9068:9088   */\n      sub\n        /* \"#utility.yul\":9064:9065   */\n      0x00\n        /* \"#utility.yul\":9053:9062   */\n      dup4\n        /* \"#utility.yul\":9049:9066   */\n      add\n        /* \"#utility.yul\":9042:9089   */\n      mstore\n        /* \"#utility.yul\":9106:9184   */\n      tag_372\n        /* \"#utility.yul\":9179:9183   */\n      dup2\n        /* \"#utility.yul\":9170:9176   */\n      dup5\n        /* \"#utility.yul\":9106:9184   */\n      tag_341\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":9098:9184   */\n      swap1\n      pop\n        /* \"#utility.yul\":8878:9191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9197:9419   */\n    tag_46:\n        /* \"#utility.yul\":9290:9294   */\n      0x00\n        /* \"#utility.yul\":9328:9330   */\n      0x20\n        /* \"#utility.yul\":9317:9326   */\n      dup3\n        /* \"#utility.yul\":9313:9331   */\n      add\n        /* \"#utility.yul\":9305:9331   */\n      swap1\n      pop\n        /* \"#utility.yul\":9341:9412   */\n      tag_374\n        /* \"#utility.yul\":9409:9410   */\n      0x00\n        /* \"#utility.yul\":9398:9407   */\n      dup4\n        /* \"#utility.yul\":9394:9411   */\n      add\n        /* \"#utility.yul\":9385:9391   */\n      dup5\n        /* \"#utility.yul\":9341:9412   */\n      tag_355\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":9197:9419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9425:9554   */\n    tag_244:\n        /* \"#utility.yul\":9459:9465   */\n      0x00\n        /* \"#utility.yul\":9486:9506   */\n      tag_376\n      tag_377\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":9476:9506   */\n      swap1\n      pop\n        /* \"#utility.yul\":9515:9548   */\n      tag_378\n        /* \"#utility.yul\":9543:9547   */\n      dup3\n        /* \"#utility.yul\":9535:9541   */\n      dup3\n        /* \"#utility.yul\":9515:9548   */\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":9425:9554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9560:9635   */\n    tag_377:\n        /* \"#utility.yul\":9593:9599   */\n      0x00\n        /* \"#utility.yul\":9626:9628   */\n      0x40\n        /* \"#utility.yul\":9620:9629   */\n      mload\n        /* \"#utility.yul\":9610:9629   */\n      swap1\n      pop\n        /* \"#utility.yul\":9560:9635   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9641:9948   */\n    tag_243:\n        /* \"#utility.yul\":9702:9706   */\n      0x00\n        /* \"#utility.yul\":9792:9810   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9784:9790   */\n      dup3\n        /* \"#utility.yul\":9781:9811   */\n      gt\n        /* \"#utility.yul\":9778:9834   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":9814:9832   */\n      tag_383\n      tag_384\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":9778:9834   */\n    tag_382:\n        /* \"#utility.yul\":9852:9881   */\n      tag_385\n        /* \"#utility.yul\":9874:9880   */\n      dup3\n        /* \"#utility.yul\":9852:9881   */\n      tag_340\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":9844:9881   */\n      swap1\n      pop\n        /* \"#utility.yul\":9936:9940   */\n      0x20\n        /* \"#utility.yul\":9930:9934   */\n      dup2\n        /* \"#utility.yul\":9926:9941   */\n      add\n        /* \"#utility.yul\":9918:9941   */\n      swap1\n      pop\n        /* \"#utility.yul\":9641:9948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9954:10052   */\n    tag_334:\n        /* \"#utility.yul\":10005:10011   */\n      0x00\n        /* \"#utility.yul\":10039:10044   */\n      dup2\n        /* \"#utility.yul\":10033:10045   */\n      mload\n        /* \"#utility.yul\":10023:10045   */\n      swap1\n      pop\n        /* \"#utility.yul\":9954:10052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10058:10157   */\n    tag_344:\n        /* \"#utility.yul\":10110:10116   */\n      0x00\n        /* \"#utility.yul\":10144:10149   */\n      dup2\n        /* \"#utility.yul\":10138:10150   */\n      mload\n        /* \"#utility.yul\":10128:10150   */\n      swap1\n      pop\n        /* \"#utility.yul\":10058:10157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10163:10331   */\n    tag_336:\n        /* \"#utility.yul\":10246:10257   */\n      0x00\n        /* \"#utility.yul\":10280:10286   */\n      dup3\n        /* \"#utility.yul\":10275:10278   */\n      dup3\n        /* \"#utility.yul\":10268:10287   */\n      mstore\n        /* \"#utility.yul\":10320:10324   */\n      0x20\n        /* \"#utility.yul\":10315:10318   */\n      dup3\n        /* \"#utility.yul\":10311:10325   */\n      add\n        /* \"#utility.yul\":10296:10325   */\n      swap1\n      pop\n        /* \"#utility.yul\":10163:10331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10337:10506   */\n    tag_346:\n        /* \"#utility.yul\":10421:10432   */\n      0x00\n        /* \"#utility.yul\":10455:10461   */\n      dup3\n        /* \"#utility.yul\":10450:10453   */\n      dup3\n        /* \"#utility.yul\":10443:10462   */\n      mstore\n        /* \"#utility.yul\":10495:10499   */\n      0x20\n        /* \"#utility.yul\":10490:10493   */\n      dup3\n        /* \"#utility.yul\":10486:10500   */\n      add\n        /* \"#utility.yul\":10471:10500   */\n      swap1\n      pop\n        /* \"#utility.yul\":10337:10506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10512:10660   */\n    tag_353:\n        /* \"#utility.yul\":10614:10625   */\n      0x00\n        /* \"#utility.yul\":10651:10654   */\n      dup2\n        /* \"#utility.yul\":10636:10654   */\n      swap1\n      pop\n        /* \"#utility.yul\":10512:10660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10666:10762   */\n    tag_326:\n        /* \"#utility.yul\":10703:10710   */\n      0x00\n        /* \"#utility.yul\":10732:10756   */\n      tag_392\n        /* \"#utility.yul\":10750:10755   */\n      dup3\n        /* \"#utility.yul\":10732:10756   */\n      tag_393\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":10721:10756   */\n      swap1\n      pop\n        /* \"#utility.yul\":10666:10762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10768:10858   */\n    tag_330:\n        /* \"#utility.yul\":10802:10809   */\n      0x00\n        /* \"#utility.yul\":10845:10850   */\n      dup2\n        /* \"#utility.yul\":10838:10851   */\n      iszero\n        /* \"#utility.yul\":10831:10852   */\n      iszero\n        /* \"#utility.yul\":10820:10852   */\n      swap1\n      pop\n        /* \"#utility.yul\":10768:10858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10864:11013   */\n    tag_395:\n        /* \"#utility.yul\":10900:10907   */\n      0x00\n        /* \"#utility.yul\":10940:11006   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10933:10938   */\n      dup3\n        /* \"#utility.yul\":10929:11007   */\n      and\n        /* \"#utility.yul\":10918:11007   */\n      swap1\n      pop\n        /* \"#utility.yul\":10864:11013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11019:11145   */\n    tag_393:\n        /* \"#utility.yul\":11056:11063   */\n      0x00\n        /* \"#utility.yul\":11096:11138   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11089:11094   */\n      dup3\n        /* \"#utility.yul\":11085:11139   */\n      and\n        /* \"#utility.yul\":11074:11139   */\n      swap1\n      pop\n        /* \"#utility.yul\":11019:11145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11151:11228   */\n    tag_358:\n        /* \"#utility.yul\":11188:11195   */\n      0x00\n        /* \"#utility.yul\":11217:11222   */\n      dup2\n        /* \"#utility.yul\":11206:11222   */\n      swap1\n      pop\n        /* \"#utility.yul\":11151:11228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11234:11388   */\n    tag_249:\n        /* \"#utility.yul\":11318:11324   */\n      dup3\n        /* \"#utility.yul\":11313:11316   */\n      dup2\n        /* \"#utility.yul\":11308:11311   */\n      dup4\n        /* \"#utility.yul\":11295:11325   */\n      calldatacopy\n        /* \"#utility.yul\":11380:11381   */\n      0x00\n        /* \"#utility.yul\":11371:11377   */\n      dup4\n        /* \"#utility.yul\":11366:11369   */\n      dup4\n        /* \"#utility.yul\":11362:11378   */\n      add\n        /* \"#utility.yul\":11355:11382   */\n      mstore\n        /* \"#utility.yul\":11234:11388   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11394:11701   */\n    tag_338:\n        /* \"#utility.yul\":11462:11463   */\n      0x00\n        /* \"#utility.yul\":11472:11585   */\n    tag_401:\n        /* \"#utility.yul\":11486:11492   */\n      dup4\n        /* \"#utility.yul\":11483:11484   */\n      dup2\n        /* \"#utility.yul\":11480:11493   */\n      lt\n        /* \"#utility.yul\":11472:11585   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":11571:11572   */\n      dup1\n        /* \"#utility.yul\":11566:11569   */\n      dup3\n        /* \"#utility.yul\":11562:11573   */\n      add\n        /* \"#utility.yul\":11556:11574   */\n      mload\n        /* \"#utility.yul\":11552:11553   */\n      dup2\n        /* \"#utility.yul\":11547:11550   */\n      dup5\n        /* \"#utility.yul\":11543:11554   */\n      add\n        /* \"#utility.yul\":11536:11575   */\n      mstore\n        /* \"#utility.yul\":11508:11510   */\n      0x20\n        /* \"#utility.yul\":11505:11506   */\n      dup2\n        /* \"#utility.yul\":11501:11511   */\n      add\n        /* \"#utility.yul\":11496:11511   */\n      swap1\n      pop\n        /* \"#utility.yul\":11472:11585   */\n      jump(tag_401)\n    tag_403:\n        /* \"#utility.yul\":11603:11609   */\n      dup4\n        /* \"#utility.yul\":11600:11601   */\n      dup2\n        /* \"#utility.yul\":11597:11610   */\n      gt\n        /* \"#utility.yul\":11594:11695   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":11683:11684   */\n      0x00\n        /* \"#utility.yul\":11674:11680   */\n      dup5\n        /* \"#utility.yul\":11669:11672   */\n      dup5\n        /* \"#utility.yul\":11665:11681   */\n      add\n        /* \"#utility.yul\":11658:11685   */\n      mstore\n        /* \"#utility.yul\":11594:11695   */\n    tag_404:\n        /* \"#utility.yul\":11443:11701   */\n      pop\n        /* \"#utility.yul\":11394:11701   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11707:12027   */\n    tag_94:\n        /* \"#utility.yul\":11751:11757   */\n      0x00\n        /* \"#utility.yul\":11788:11789   */\n      0x02\n        /* \"#utility.yul\":11782:11786   */\n      dup3\n        /* \"#utility.yul\":11778:11790   */\n      div\n        /* \"#utility.yul\":11768:11790   */\n      swap1\n      pop\n        /* \"#utility.yul\":11835:11836   */\n      0x01\n        /* \"#utility.yul\":11829:11833   */\n      dup3\n        /* \"#utility.yul\":11825:11837   */\n      and\n        /* \"#utility.yul\":11856:11874   */\n      dup1\n        /* \"#utility.yul\":11846:11927   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":11912:11916   */\n      0x7f\n        /* \"#utility.yul\":11904:11910   */\n      dup3\n        /* \"#utility.yul\":11900:11917   */\n      and\n        /* \"#utility.yul\":11890:11917   */\n      swap2\n      pop\n        /* \"#utility.yul\":11846:11927   */\n    tag_406:\n        /* \"#utility.yul\":11974:11976   */\n      0x20\n        /* \"#utility.yul\":11966:11972   */\n      dup3\n        /* \"#utility.yul\":11963:11977   */\n      lt\n        /* \"#utility.yul\":11943:11961   */\n      dup2\n        /* \"#utility.yul\":11940:11978   */\n      eq\n        /* \"#utility.yul\":11937:12021   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":11993:12011   */\n      tag_408\n      tag_409\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":11937:12021   */\n    tag_407:\n        /* \"#utility.yul\":11758:12027   */\n      pop\n        /* \"#utility.yul\":11707:12027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12033:12314   */\n    tag_379:\n        /* \"#utility.yul\":12116:12143   */\n      tag_411\n        /* \"#utility.yul\":12138:12142   */\n      dup3\n        /* \"#utility.yul\":12116:12143   */\n      tag_340\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":12108:12114   */\n      dup2\n        /* \"#utility.yul\":12104:12144   */\n      add\n        /* \"#utility.yul\":12246:12252   */\n      dup2\n        /* \"#utility.yul\":12234:12244   */\n      dup2\n        /* \"#utility.yul\":12231:12253   */\n      lt\n        /* \"#utility.yul\":12210:12228   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12198:12208   */\n      dup3\n        /* \"#utility.yul\":12195:12229   */\n      gt\n        /* \"#utility.yul\":12192:12254   */\n      or\n        /* \"#utility.yul\":12189:12277   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":12257:12275   */\n      tag_413\n      tag_384\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":12189:12277   */\n    tag_412:\n        /* \"#utility.yul\":12297:12307   */\n      dup1\n        /* \"#utility.yul\":12293:12295   */\n      0x40\n        /* \"#utility.yul\":12286:12308   */\n      mstore\n        /* \"#utility.yul\":12076:12314   */\n      pop\n        /* \"#utility.yul\":12033:12314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12320:12500   */\n    tag_409:\n        /* \"#utility.yul\":12368:12445   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12365:12366   */\n      0x00\n        /* \"#utility.yul\":12358:12446   */\n      mstore\n        /* \"#utility.yul\":12465:12469   */\n      0x22\n        /* \"#utility.yul\":12462:12463   */\n      0x04\n        /* \"#utility.yul\":12455:12470   */\n      mstore\n        /* \"#utility.yul\":12489:12493   */\n      0x24\n        /* \"#utility.yul\":12486:12487   */\n      0x00\n        /* \"#utility.yul\":12479:12494   */\n      revert\n        /* \"#utility.yul\":12506:12686   */\n    tag_384:\n        /* \"#utility.yul\":12554:12631   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12551:12552   */\n      0x00\n        /* \"#utility.yul\":12544:12632   */\n      mstore\n        /* \"#utility.yul\":12651:12655   */\n      0x41\n        /* \"#utility.yul\":12648:12649   */\n      0x04\n        /* \"#utility.yul\":12641:12656   */\n      mstore\n        /* \"#utility.yul\":12675:12679   */\n      0x24\n        /* \"#utility.yul\":12672:12673   */\n      0x00\n        /* \"#utility.yul\":12665:12680   */\n      revert\n        /* \"#utility.yul\":12692:12809   */\n    tag_269:\n        /* \"#utility.yul\":12801:12802   */\n      0x00\n        /* \"#utility.yul\":12798:12799   */\n      dup1\n        /* \"#utility.yul\":12791:12803   */\n      revert\n        /* \"#utility.yul\":12815:12932   */\n    tag_247:\n        /* \"#utility.yul\":12924:12925   */\n      0x00\n        /* \"#utility.yul\":12921:12922   */\n      dup1\n        /* \"#utility.yul\":12914:12926   */\n      revert\n        /* \"#utility.yul\":12938:13055   */\n    tag_299:\n        /* \"#utility.yul\":13047:13048   */\n      0x00\n        /* \"#utility.yul\":13044:13045   */\n      dup1\n        /* \"#utility.yul\":13037:13049   */\n      revert\n        /* \"#utility.yul\":13061:13178   */\n    tag_278:\n        /* \"#utility.yul\":13170:13171   */\n      0x00\n        /* \"#utility.yul\":13167:13168   */\n      dup1\n        /* \"#utility.yul\":13160:13172   */\n      revert\n        /* \"#utility.yul\":13184:13286   */\n    tag_340:\n        /* \"#utility.yul\":13225:13231   */\n      0x00\n        /* \"#utility.yul\":13276:13278   */\n      0x1f\n        /* \"#utility.yul\":13272:13279   */\n      not\n        /* \"#utility.yul\":13267:13269   */\n      0x1f\n        /* \"#utility.yul\":13260:13265   */\n      dup4\n        /* \"#utility.yul\":13256:13270   */\n      add\n        /* \"#utility.yul\":13252:13280   */\n      and\n        /* \"#utility.yul\":13242:13280   */\n      swap1\n      pop\n        /* \"#utility.yul\":13184:13286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13292:13414   */\n    tag_253:\n        /* \"#utility.yul\":13365:13389   */\n      tag_422\n        /* \"#utility.yul\":13383:13388   */\n      dup2\n        /* \"#utility.yul\":13365:13389   */\n      tag_326\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":13358:13363   */\n      dup2\n        /* \"#utility.yul\":13355:13390   */\n      eq\n        /* \"#utility.yul\":13345:13408   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":13404:13405   */\n      0x00\n        /* \"#utility.yul\":13401:13402   */\n      dup1\n        /* \"#utility.yul\":13394:13406   */\n      revert\n        /* \"#utility.yul\":13345:13408   */\n    tag_423:\n        /* \"#utility.yul\":13292:13414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13420:13536   */\n    tag_257:\n        /* \"#utility.yul\":13490:13511   */\n      tag_425\n        /* \"#utility.yul\":13505:13510   */\n      dup2\n        /* \"#utility.yul\":13490:13511   */\n      tag_330\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13483:13488   */\n      dup2\n        /* \"#utility.yul\":13480:13512   */\n      eq\n        /* \"#utility.yul\":13470:13530   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":13526:13527   */\n      0x00\n        /* \"#utility.yul\":13523:13524   */\n      dup1\n        /* \"#utility.yul\":13516:13528   */\n      revert\n        /* \"#utility.yul\":13470:13530   */\n    tag_426:\n        /* \"#utility.yul\":13420:13536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13542:13662   */\n    tag_261:\n        /* \"#utility.yul\":13614:13637   */\n      tag_428\n        /* \"#utility.yul\":13631:13636   */\n      dup2\n        /* \"#utility.yul\":13614:13637   */\n      tag_395\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13607:13612   */\n      dup2\n        /* \"#utility.yul\":13604:13638   */\n      eq\n        /* \"#utility.yul\":13594:13656   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":13652:13653   */\n      0x00\n        /* \"#utility.yul\":13649:13650   */\n      dup1\n        /* \"#utility.yul\":13642:13654   */\n      revert\n        /* \"#utility.yul\":13594:13656   */\n    tag_429:\n        /* \"#utility.yul\":13542:13662   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13668:13790   */\n    tag_274:\n        /* \"#utility.yul\":13741:13765   */\n      tag_431\n        /* \"#utility.yul\":13759:13764   */\n      dup2\n        /* \"#utility.yul\":13741:13765   */\n      tag_358\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":13734:13739   */\n      dup2\n        /* \"#utility.yul\":13731:13766   */\n      eq\n        /* \"#utility.yul\":13721:13784   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":13780:13781   */\n      0x00\n        /* \"#utility.yul\":13777:13778   */\n      dup1\n        /* \"#utility.yul\":13770:13782   */\n      revert\n        /* \"#utility.yul\":13721:13784   */\n    tag_432:\n        /* \"#utility.yul\":13668:13790   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c8135ae9d8738cbc2d06ba416373c21a9f673265b7f8b3dd4a8ecb998c0dc7a264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_137": {
									"entryPoint": null,
									"id": 137,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_146": {
									"entryPoint": 135,
									"id": 146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 316,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 879,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:2"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:2"
															},
															"nodeType": "YulIf",
															"src": "262:112:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:2"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:2",
														"type": ""
													}
												],
												"src": "7:421:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:2"
															},
															"nodeType": "YulIf",
															"src": "531:122:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:2",
														"type": ""
													}
												],
												"src": "448:355:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "923:739:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "969:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "971:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "971:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "944:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "953:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "940:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "965:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:32:2"
															},
															"nodeType": "YulIf",
															"src": "933:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1062:291:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1077:38:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1101:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1112:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1097:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1097:17:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1091:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:24:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1081:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1162:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1164:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1164:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1134:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1131:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "1128:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1259:84:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1315:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1326:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1311:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1269:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:74:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1259:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1363:292:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1378:39:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1402:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1413:2:2",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1398:18:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1392:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:25:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1382:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1464:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1466:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1466:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1466:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1436:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1433:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "1430:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1561:84:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1617:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1628:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1613:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1637:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1571:41:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:74:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1561:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "885:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "896:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "908:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "916:6:2",
														"type": ""
													}
												],
												"src": "809:853:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1719:30:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:20:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:2"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:2"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1693:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1702:6:2",
														"type": ""
													}
												],
												"src": "1668:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1843:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1853:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1869:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1863:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1836:6:2",
														"type": ""
													}
												],
												"src": "1803:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:241:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2056:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2058:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2058:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2058:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2025:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:30:2"
															},
															"nodeType": "YulIf",
															"src": "2022:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2088:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:2"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2096:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:29:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2088:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2174:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2162:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1946:4:2",
														"type": ""
													}
												],
												"src": "1884:308:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2257:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2266:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2261:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2326:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2351:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2356:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2347:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2347:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2370:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2375:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2366:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2366:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2360:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2360:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2287:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2284:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2298:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2300:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2309:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2312:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2305:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2305:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2300:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2280:3:2",
																"statements": []
															},
															"src": "2276:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2473:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2478:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2469:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2469:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2487:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2404:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2407:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2401:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:13:2"
															},
															"nodeType": "YulIf",
															"src": "2398:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2229:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2234:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2239:6:2",
														"type": ""
													}
												],
												"src": "2198:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2586:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2603:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2633:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2607:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2680:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2694:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2708:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2716:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2704:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2704:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2660:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:26:2"
															},
															"nodeType": "YulIf",
															"src": "2650:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2783:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2797:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2797:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2797:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2747:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2767:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:38:2"
															},
															"nodeType": "YulIf",
															"src": "2741:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2546:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2555:6:2",
														"type": ""
													}
												],
												"src": "2511:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2880:238:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2890:58:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2942:4:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2920:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:27:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2908:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:40:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2894:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3059:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3061:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3061:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3002:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3038:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3035:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3035:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2996:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:62:2"
															},
															"nodeType": "YulIf",
															"src": "2993:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3097:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3101:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:22:2"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2866:6:2",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2874:4:2",
														"type": ""
													}
												],
												"src": "2837:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3152:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3172:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3162:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3259:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3124:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3338:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3455:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3445:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3476:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3479:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3469:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3310:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3585:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3605:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3496:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3708:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3725:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3728:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3718:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3718:12:2"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3619:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3742:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3971:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3964:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3865:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4064:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4019:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4029:6:2",
														"type": ""
													}
												],
												"src": "3988:102:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001bfc38038062001bfc8339818101604052810190620000379190620001ba565b81600290805190602001906200004f9291906200008c565b508060039080519060200190620000689291906200008c565b50620000796200008760201b60201c565b6000819055505050620003c3565b600090565b8280546200009a90620002d4565b90600052602060002090601f016020900481019282620000be57600085556200010a565b82601f10620000d957805160ff19168380011785556200010a565b828001600101855582156200010a579182015b8281111562000109578251825591602001919060010190620000ec565b5b5090506200011991906200011d565b5090565b5b80821115620001385760008160009055506001016200011e565b5090565b6000620001536200014d8462000268565b6200023f565b905082815260208101848484011115620001725762000171620003a3565b5b6200017f8482856200029e565b509392505050565b600082601f8301126200019f576200019e6200039e565b5b8151620001b18482602086016200013c565b91505092915050565b60008060408385031215620001d457620001d3620003ad565b5b600083015167ffffffffffffffff811115620001f557620001f4620003a8565b5b620002038582860162000187565b925050602083015167ffffffffffffffff811115620002275762000226620003a8565b5b620002358582860162000187565b9150509250929050565b60006200024b6200025e565b90506200025982826200030a565b919050565b6000604051905090565b600067ffffffffffffffff8211156200028657620002856200036f565b5b6200029182620003b2565b9050602081019050919050565b60005b83811015620002be578082015181840152602081019050620002a1565b83811115620002ce576000848401525b50505050565b60006002820490506001821680620002ed57607f821691505b6020821081141562000304576200030362000340565b5b50919050565b6200031582620003b2565b810181811067ffffffffffffffff821117156200033757620003366200036f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61182980620003d36000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611328565b61036a565b604051610116919061150a565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b6040516101419190611525565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c9190611382565b61048e565b60405161017e91906114a3565b60405180910390f35b6101a1600480360381019061019c91906112e8565b6104ec565b005b3480156101af57600080fd5b506101b86104fc565b6040516101c59190611547565b60405180910390f35b6101e860048036038101906101e391906111d2565b610513565b005b61020460048036038101906101ff91906111d2565b6107d7565b005b34801561021257600080fd5b5061022d60048036038101906102289190611382565b6107f7565b60405161023a91906114a3565b60405180910390f35b34801561024f57600080fd5b5061026a60048036038101906102659190611165565b610809565b6040516102779190611547565b60405180910390f35b34801561028c57600080fd5b506102956108a1565b6040516102a29190611525565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd91906112a8565b610933565b005b6102ee60048036038101906102e99190611225565b610a3e565b005b3480156102fc57600080fd5b5061031760048036038101906103129190611382565b610a90565b6040516103249190611525565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f9190611192565b610b0e565b604051610361919061150a565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461040b906116b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610437906116b1565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610ba2565b6104ae576104ad63cf4700e460e01b610c01565b5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6104f882826001610c0b565b5050565b6000610506610d3a565b6001546000540303905090565b600061051e82610d3f565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105935761059263a114810060e01b610c01565b5b60008061059f84610e02565b915091506105b581876105b0610e29565b610e31565b6105e0576105ca866105c5610e29565b610b0e565b6105df576105de6359c896be60e01b610c01565b5b5b6105ed8686866001610e75565b80156105f857600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506106c6856106a2888887610e7b565b7c020000000000000000000000000000000000000000000000000000000017610ea3565b600460008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416141561074e57600060018501905060006004600083815260200190815260200160002054141561074c57600054811461074b578360046000838152602001908152602001600020819055505b5b505b600073ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a460008114156107c1576107c063ea553b3460e01b610c01565b5b6107ce8787876001610ece565b50505050505050565b6107f283838360405180602001604052806000815250610a3e565b505050565b600061080282610d3f565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108505761084f638f4eb60460e01b610c01565b5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b6060600380546108b0906116b1565b80601f01602080910402602001604051908101604052809291908181526020018280546108dc906116b1565b80156109295780601f106108fe57610100808354040283529160200191610929565b820191906000526020600020905b81548152906001019060200180831161090c57829003601f168201915b5050505050905090565b8060076000610940610e29565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166109ed610e29565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a32919061150a565b60405180910390a35050565b610a49848484610513565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610a8a57610a7484848484610ed4565b610a8957610a8863d1a57ed660e01b610c01565b5b5b50505050565b6060610a9b82610ba2565b610ab057610aaf63a14c4b5060e01b610c01565b5b6000610aba611013565b9050600081511415610adb5760405180602001604052806000815250610b06565b80610ae58461102a565b604051602001610af692919061147f565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610bad610d3a565b11158015610bbc575060005482105b8015610bfa575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b8060005260046000fd5b6000610c16836107f7565b9050818015610c5857508073ffffffffffffffffffffffffffffffffffffffff16610c3f610e29565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610c8457610c6e81610c69610e29565b610b0e565b610c8357610c8263cfb3b94260e01b610c01565b5b5b836006600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b600090565b600081610d4a610d3a565b11610dec576004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610deb576000811415610de6576000548210610db057610daf63df2d9b4260e01b610c01565b5b5b60046000836001900393508381526020019081526020016000205490506000811415610ddc57610de1565b610dfd565b610db1565b610dfd565b5b610dfc63df2d9b4260e01b610c01565b5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610e92868684611083565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610efa610e29565b8786866040518563ffffffff1660e01b8152600401610f1c94939291906114be565b602060405180830381600087803b158015610f3657600080fd5b505af1925050508015610f6757506040513d601f19601f82011682018060405250810190610f649190611355565b60015b610fc0573d8060008114610f97576040519150601f19603f3d011682016040523d82523d6000602084013e610f9c565b606091505b50600081511415610fb857610fb763d1a57ed660e01b610c01565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561106e57600184039350600a81066030018453600a81049050806110695761106e565b611043565b50828103602084039350808452505050919050565b60009392505050565b600061109f61109a84611587565b611562565b9050828152602081018484840111156110bb576110ba611777565b5b6110c684828561166f565b509392505050565b6000813590506110dd81611797565b92915050565b6000813590506110f2816117ae565b92915050565b600081359050611107816117c5565b92915050565b60008151905061111c816117c5565b92915050565b600082601f83011261113757611136611772565b5b813561114784826020860161108c565b91505092915050565b60008135905061115f816117dc565b92915050565b60006020828403121561117b5761117a611781565b5b6000611189848285016110ce565b91505092915050565b600080604083850312156111a9576111a8611781565b5b60006111b7858286016110ce565b92505060206111c8858286016110ce565b9150509250929050565b6000806000606084860312156111eb576111ea611781565b5b60006111f9868287016110ce565b935050602061120a868287016110ce565b925050604061121b86828701611150565b9150509250925092565b6000806000806080858703121561123f5761123e611781565b5b600061124d878288016110ce565b945050602061125e878288016110ce565b935050604061126f87828801611150565b925050606085013567ffffffffffffffff8111156112905761128f61177c565b5b61129c87828801611122565b91505092959194509250565b600080604083850312156112bf576112be611781565b5b60006112cd858286016110ce565b92505060206112de858286016110e3565b9150509250929050565b600080604083850312156112ff576112fe611781565b5b600061130d858286016110ce565b925050602061131e85828601611150565b9150509250929050565b60006020828403121561133e5761133d611781565b5b600061134c848285016110f8565b91505092915050565b60006020828403121561136b5761136a611781565b5b60006113798482850161110d565b91505092915050565b60006020828403121561139857611397611781565b5b60006113a684828501611150565b91505092915050565b6113b8816115fb565b82525050565b6113c78161160d565b82525050565b60006113d8826115b8565b6113e281856115ce565b93506113f281856020860161167e565b6113fb81611786565b840191505092915050565b6000611411826115c3565b61141b81856115df565b935061142b81856020860161167e565b61143481611786565b840191505092915050565b600061144a826115c3565b61145481856115f0565b935061146481856020860161167e565b80840191505092915050565b61147981611665565b82525050565b600061148b828561143f565b9150611497828461143f565b91508190509392505050565b60006020820190506114b860008301846113af565b92915050565b60006080820190506114d360008301876113af565b6114e060208301866113af565b6114ed6040830185611470565b81810360608301526114ff81846113cd565b905095945050505050565b600060208201905061151f60008301846113be565b92915050565b6000602082019050818103600083015261153f8184611406565b905092915050565b600060208201905061155c6000830184611470565b92915050565b600061156c61157d565b905061157882826116e3565b919050565b6000604051905090565b600067ffffffffffffffff8211156115a2576115a1611743565b5b6115ab82611786565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061160682611645565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561169c578082015181840152602081019050611681565b838111156116ab576000848401525b50505050565b600060028204905060018216806116c957607f821691505b602082108114156116dd576116dc611714565b5b50919050565b6116ec82611786565b810181811067ffffffffffffffff8211171561170b5761170a611743565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6117a0816115fb565b81146117ab57600080fd5b50565b6117b78161160d565b81146117c257600080fd5b50565b6117ce81611619565b81146117d957600080fd5b50565b6117e581611665565b81146117f057600080fd5b5056fea2646970667358221220c8135ae9d8738cbc2d06ba416373c21a9f673265b7f8b3dd4a8ecb998c0dc7a264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BFC CODESIZE SUB DUP1 PUSH3 0x1BFC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1BA JUMP JUMPDEST DUP2 PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x8C JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x8C JUMP JUMPDEST POP PUSH3 0x79 PUSH3 0x87 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x3C3 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x9A SWAP1 PUSH3 0x2D4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xBE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x10A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xD9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x10A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x10A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x109 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x119 SWAP2 SWAP1 PUSH3 0x11D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x138 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x11E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x153 PUSH3 0x14D DUP5 PUSH3 0x268 JUMP JUMPDEST PUSH3 0x23F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x172 JUMPI PUSH3 0x171 PUSH3 0x3A3 JUMP JUMPDEST JUMPDEST PUSH3 0x17F DUP5 DUP3 DUP6 PUSH3 0x29E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x19F JUMPI PUSH3 0x19E PUSH3 0x39E JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1B1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x13C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D4 JUMPI PUSH3 0x1D3 PUSH3 0x3AD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1F5 JUMPI PUSH3 0x1F4 PUSH3 0x3A8 JUMP JUMPDEST JUMPDEST PUSH3 0x203 DUP6 DUP3 DUP7 ADD PUSH3 0x187 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x227 JUMPI PUSH3 0x226 PUSH3 0x3A8 JUMP JUMPDEST JUMPDEST PUSH3 0x235 DUP6 DUP3 DUP7 ADD PUSH3 0x187 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x24B PUSH3 0x25E JUMP JUMPDEST SWAP1 POP PUSH3 0x259 DUP3 DUP3 PUSH3 0x30A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x286 JUMPI PUSH3 0x285 PUSH3 0x36F JUMP JUMPDEST JUMPDEST PUSH3 0x291 DUP3 PUSH3 0x3B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2BE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2A1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2CE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2ED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x304 JUMPI PUSH3 0x303 PUSH3 0x340 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x315 DUP3 PUSH3 0x3B2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x337 JUMPI PUSH3 0x336 PUSH3 0x36F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1829 DUP1 PUSH3 0x3D3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32D JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x11D2 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x11D2 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x16B1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x4AE JUMPI PUSH2 0x4AD PUSH4 0xCF4700E4 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F8 DUP3 DUP3 PUSH1 0x1 PUSH2 0xC0B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP3 PUSH2 0xD3F JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x593 JUMPI PUSH2 0x592 PUSH4 0xA1148100 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x59F DUP5 PUSH2 0xE02 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP2 DUP8 PUSH2 0x5B0 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST PUSH2 0x5E0 JUMPI PUSH2 0x5CA DUP7 PUSH2 0x5C5 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x5DF JUMPI PUSH2 0x5DE PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5ED DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xE75 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x6C6 DUP6 PUSH2 0x6A2 DUP9 DUP9 DUP8 PUSH2 0xE7B JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xEA3 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x74E JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x74B JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x7C1 JUMPI PUSH2 0x7C0 PUSH4 0xEA553B34 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST PUSH2 0x7CE DUP8 DUP8 DUP8 PUSH1 0x1 PUSH2 0xECE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7F2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA3E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x802 DUP3 PUSH2 0xD3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x850 JUMPI PUSH2 0x84F PUSH4 0x8F4EB604 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8DC SWAP1 PUSH2 0x16B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x929 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x929 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x940 PUSH2 0xE29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9ED PUSH2 0xE29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA32 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA49 DUP5 DUP5 DUP5 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xA8A JUMPI PUSH2 0xA74 DUP5 DUP5 DUP5 DUP5 PUSH2 0xED4 JUMP JUMPDEST PUSH2 0xA89 JUMPI PUSH2 0xA88 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA9B DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0xAB0 JUMPI PUSH2 0xAAF PUSH4 0xA14C4B50 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xABA PUSH2 0x1013 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB06 JUMP JUMPDEST DUP1 PUSH2 0xAE5 DUP5 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAF6 SWAP3 SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xBAD PUSH2 0xD3A JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xBBC JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xBFA JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC16 DUP4 PUSH2 0x7F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xC58 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC3F PUSH2 0xE29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC84 JUMPI PUSH2 0xC6E DUP2 PUSH2 0xC69 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0xC83 JUMPI PUSH2 0xC82 PUSH4 0xCFB3B942 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xD4A PUSH2 0xD3A JUMP JUMPDEST GT PUSH2 0xDEC JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xDEB JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xDB0 JUMPI PUSH2 0xDAF PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xDDC JUMPI PUSH2 0xDE1 JUMP JUMPDEST PUSH2 0xDFD JUMP JUMPDEST PUSH2 0xDB1 JUMP JUMPDEST PUSH2 0xDFD JUMP JUMPDEST JUMPDEST PUSH2 0xDFC PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xE92 DUP7 DUP7 DUP5 PUSH2 0x1083 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xEFA PUSH2 0xE29 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF67 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF64 SWAP2 SWAP1 PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFC0 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xFB8 JUMPI PUSH2 0xFB7 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x106E JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1069 JUMPI PUSH2 0x106E JUMP JUMPDEST PUSH2 0x1043 JUMP JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH2 0x109A DUP5 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x1562 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x10BB JUMPI PUSH2 0x10BA PUSH2 0x1777 JUMP JUMPDEST JUMPDEST PUSH2 0x10C6 DUP5 DUP3 DUP6 PUSH2 0x166F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10DD DUP2 PUSH2 0x1797 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10F2 DUP2 PUSH2 0x17AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1107 DUP2 PUSH2 0x17C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x111C DUP2 PUSH2 0x17C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1137 JUMPI PUSH2 0x1136 PUSH2 0x1772 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1147 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x108C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x115F DUP2 PUSH2 0x17DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117B JUMPI PUSH2 0x117A PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1189 DUP5 DUP3 DUP6 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH2 0x11A8 PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11B7 DUP6 DUP3 DUP7 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11C8 DUP6 DUP3 DUP7 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11EB JUMPI PUSH2 0x11EA PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11F9 DUP7 DUP3 DUP8 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x120A DUP7 DUP3 DUP8 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x121B DUP7 DUP3 DUP8 ADD PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x123F JUMPI PUSH2 0x123E PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x124D DUP8 DUP3 DUP9 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x125E DUP8 DUP3 DUP9 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x126F DUP8 DUP3 DUP9 ADD PUSH2 0x1150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1290 JUMPI PUSH2 0x128F PUSH2 0x177C JUMP JUMPDEST JUMPDEST PUSH2 0x129C DUP8 DUP3 DUP9 ADD PUSH2 0x1122 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12BF JUMPI PUSH2 0x12BE PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12CD DUP6 DUP3 DUP7 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12DE DUP6 DUP3 DUP7 ADD PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12FF JUMPI PUSH2 0x12FE PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x130D DUP6 DUP3 DUP7 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x131E DUP6 DUP3 DUP7 ADD PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x133E JUMPI PUSH2 0x133D PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x134C DUP5 DUP3 DUP6 ADD PUSH2 0x10F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x136B JUMPI PUSH2 0x136A PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1379 DUP5 DUP3 DUP6 ADD PUSH2 0x110D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1398 JUMPI PUSH2 0x1397 PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13A6 DUP5 DUP3 DUP6 ADD PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13B8 DUP2 PUSH2 0x15FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x13C7 DUP2 PUSH2 0x160D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D8 DUP3 PUSH2 0x15B8 JUMP JUMPDEST PUSH2 0x13E2 DUP2 DUP6 PUSH2 0x15CE JUMP JUMPDEST SWAP4 POP PUSH2 0x13F2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x167E JUMP JUMPDEST PUSH2 0x13FB DUP2 PUSH2 0x1786 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1411 DUP3 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x141B DUP2 DUP6 PUSH2 0x15DF JUMP JUMPDEST SWAP4 POP PUSH2 0x142B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x167E JUMP JUMPDEST PUSH2 0x1434 DUP2 PUSH2 0x1786 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144A DUP3 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x1454 DUP2 DUP6 PUSH2 0x15F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1464 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x167E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1479 DUP2 PUSH2 0x1665 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148B DUP3 DUP6 PUSH2 0x143F JUMP JUMPDEST SWAP2 POP PUSH2 0x1497 DUP3 DUP5 PUSH2 0x143F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x14D3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x14E0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x14ED PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1470 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x14FF DUP2 DUP5 PUSH2 0x13CD JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x151F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x153F DUP2 DUP5 PUSH2 0x1406 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1470 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156C PUSH2 0x157D JUMP JUMPDEST SWAP1 POP PUSH2 0x1578 DUP3 DUP3 PUSH2 0x16E3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x1743 JUMP JUMPDEST JUMPDEST PUSH2 0x15AB DUP3 PUSH2 0x1786 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1606 DUP3 PUSH2 0x1645 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x169C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1681 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16AB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16C9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x16DD JUMPI PUSH2 0x16DC PUSH2 0x1714 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EC DUP3 PUSH2 0x1786 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x1743 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A0 DUP2 PUSH2 0x15FB JUMP JUMPDEST DUP2 EQ PUSH2 0x17AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17B7 DUP2 PUSH2 0x160D JUMP JUMPDEST DUP2 EQ PUSH2 0x17C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17CE DUP2 PUSH2 0x1619 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17E5 DUP2 PUSH2 0x1665 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 SGT GAS 0xE9 0xD8 PUSH20 0x8CBC2D06BA416373C21A9F673265B7F8B3DD4A8E 0xCB SWAP10 DUP13 0xD 0xC7 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "895:41958:0:-:0;;;4946:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5020:5;5012;:13;;;;;;;;;;;;:::i;:::-;;5045:7;5035;:17;;;;;;;;;;;;:::i;:::-;;5078:15;:13;;;:15;;:::i;:::-;5062:13;:31;;;;4946:154;;895:41958;;5426:90;5482:7;5426:90;:::o;895:41958::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:2:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;895:41958:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1026": {
									"entryPoint": 3790,
									"id": 1026,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1467": {
									"entryPoint": 3083,
									"id": 1467,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_408": {
									"entryPoint": 4115,
									"id": 408,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1013": {
									"entryPoint": 3701,
									"id": 1013,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1082": {
									"entryPoint": 3796,
									"id": 1082,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_735": {
									"entryPoint": 2978,
									"id": 735,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1692": {
									"entryPoint": 4227,
									"id": 1692,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_768": {
									"entryPoint": 3586,
									"id": 768,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_749": {
									"entryPoint": 3633,
									"id": 749,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1735": {
									"entryPoint": 3625,
									"id": 1735,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1725": {
									"entryPoint": 3707,
									"id": 1725,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_614": {
									"entryPoint": 3747,
									"id": 614,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_548": {
									"entryPoint": 3391,
									"id": 548,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_1753": {
									"entryPoint": 3073,
									"id": 1753,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_startTokenId_146": {
									"entryPoint": 3386,
									"id": 146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1745": {
									"entryPoint": 4138,
									"id": 1745,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_640": {
									"entryPoint": 1260,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_221": {
									"entryPoint": 2057,
									"id": 221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_665": {
									"entryPoint": 1166,
									"id": 665,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_709": {
									"entryPoint": 2830,
									"id": 709,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_344": {
									"entryPoint": 1020,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_428": {
									"entryPoint": 2039,
									"id": 428,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1000": {
									"entryPoint": 2622,
									"id": 1000,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransferFrom_960": {
									"entryPoint": 2007,
									"id": 960,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_691": {
									"entryPoint": 2355,
									"id": 691,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_334": {
									"entryPoint": 874,
									"id": 334,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_354": {
									"entryPoint": 2209,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_399": {
									"entryPoint": 2704,
									"id": 399,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_171": {
									"entryPoint": 1276,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_941": {
									"entryPoint": 1299,
									"id": 941,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 4236,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 4323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 4365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 4386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5247,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5310,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5501,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5743,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 5758,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6002,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6012,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6017,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13793:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:2"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:2"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:2"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:2"
															},
															"nodeType": "YulIf",
															"src": "249:112:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:2"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:2"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:2",
														"type": ""
													}
												],
												"src": "7:410:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:2",
														"type": ""
													}
												],
												"src": "423:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "617:84:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "627:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "649:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "636:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "665:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "603:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:2",
														"type": ""
													}
												],
												"src": "568:133:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "758:86:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "768:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "790:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "777:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "768:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "832:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "806:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:32:2"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "736:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "744:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "752:5:2",
														"type": ""
													}
												],
												"src": "707:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "912:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "922:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "937:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "922:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "979:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "953:25:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "953:32:2"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "890:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "898:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "906:5:2",
														"type": ""
													}
												],
												"src": "850:141:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1071:277:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1120:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1122:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1122:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1122:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1099:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1107:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1095:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1095:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1114:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1091:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1084:35:2"
															},
															"nodeType": "YulIf",
															"src": "1081:122:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1212:34:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1239:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1226:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:20:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1216:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1255:87:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1315:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1323:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:17:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1330:6:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1338:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1264:46:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:78:2"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1255:5:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1049:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1057:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1065:5:2",
														"type": ""
													}
												],
												"src": "1010:338:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1406:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1416:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1425:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1416:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1481:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1454:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1384:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1392:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1400:5:2",
														"type": ""
													}
												],
												"src": "1354:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1565:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1611:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1613:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1613:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1613:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1586:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1595:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1582:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1582:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1578:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:32:2"
															},
															"nodeType": "YulIf",
															"src": "1575:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1704:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1719:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1723:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1748:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1783:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1794:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1779:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1779:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1803:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1758:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1758:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1748:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1535:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1546:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1558:6:2",
														"type": ""
													}
												],
												"src": "1499:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1917:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1963:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1965:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1938:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1947:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1934:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1930:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:32:2"
															},
															"nodeType": "YulIf",
															"src": "1927:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2056:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2071:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2085:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2075:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2100:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2135:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2146:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2131:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2131:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2155:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2110:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2110:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2100:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2183:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2198:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2202:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2228:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2263:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2274:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2259:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2259:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2283:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2238:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2228:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1879:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1890:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1902:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1910:6:2",
														"type": ""
													}
												],
												"src": "1834:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2414:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2460:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2462:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2435:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2431:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2431:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2456:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2427:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:32:2"
															},
															"nodeType": "YulIf",
															"src": "2424:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2553:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2568:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2582:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2572:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2597:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2632:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2643:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2628:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2628:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2652:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2607:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2597:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2680:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2695:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2699:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2725:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2760:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2771:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2756:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2756:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2780:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2735:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2735:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2725:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2808:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2823:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2837:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2827:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2368:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2379:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2391:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2399:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2407:6:2",
														"type": ""
													}
												],
												"src": "2314:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:817:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3112:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3114:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3114:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3114:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:33:2"
															},
															"nodeType": "YulIf",
															"src": "3075:120:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "3205:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3220:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3234:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3224:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3249:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3284:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3295:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3280:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3280:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3304:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3259:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3259:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3249:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3332:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3347:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3361:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3351:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3377:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3412:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3423:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3408:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3408:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3432:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3387:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3387:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3377:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3460:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3475:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3479:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3505:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3540:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3551:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3536:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3536:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3560:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3515:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3505:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3588:287:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3603:46:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3634:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3645:2:2",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3630:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3630:18:2"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3617:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3617:32:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3607:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3696:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3698:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3698:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3698:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3668:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3676:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3665:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "3662:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3793:72:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3837:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3848:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3833:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3833:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3857:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3803:29:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3803:62:2"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3793:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3011:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3022:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3034:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3042:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3050:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3058:6:2",
														"type": ""
													}
												],
												"src": "2939:943:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3968:388:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4014:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4016:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4016:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4016:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3989:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3998:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3985:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3985:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4010:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3981:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:32:2"
															},
															"nodeType": "YulIf",
															"src": "3978:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4107:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4122:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4136:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4126:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4151:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4186:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4197:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4182:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4182:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4206:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4161:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4161:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4151:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4234:115:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4249:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4263:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4253:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4279:60:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4311:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4322:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4307:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4307:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4289:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4289:50:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4279:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3941:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3953:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3961:6:2",
														"type": ""
													}
												],
												"src": "3888:468:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4445:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4491:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4493:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4493:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4493:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4466:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4475:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4462:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4462:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4487:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:32:2"
															},
															"nodeType": "YulIf",
															"src": "4455:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4584:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4599:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4613:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4603:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4628:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4663:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4674:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4659:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4659:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4683:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4638:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4628:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4711:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4726:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4730:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4756:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4791:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4802:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4787:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4787:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4811:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4766:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4766:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4756:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4407:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4418:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4430:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4438:6:2",
														"type": ""
													}
												],
												"src": "4362:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4907:262:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4953:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4955:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4955:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4955:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4928:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4937:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4924:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4924:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4949:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4920:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:32:2"
															},
															"nodeType": "YulIf",
															"src": "4917:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5046:116:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5061:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5075:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5065:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5090:62:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5124:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5135:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5120:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5120:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5144:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "5100:19:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5100:52:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5090:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4877:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4888:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4900:6:2",
														"type": ""
													}
												],
												"src": "4842:327:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5251:273:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5297:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5299:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5299:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5299:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5272:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5268:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5268:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5293:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5264:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5264:32:2"
															},
															"nodeType": "YulIf",
															"src": "5261:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5390:127:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5405:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5419:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5409:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5434:73:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5479:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5490:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5475:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5475:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5499:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5444:30:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5444:63:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5434:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5221:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5232:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5244:6:2",
														"type": ""
													}
												],
												"src": "5175:349:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5596:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5642:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5644:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5644:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5644:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5617:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5626:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5613:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5613:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5638:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5609:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5609:32:2"
															},
															"nodeType": "YulIf",
															"src": "5606:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5735:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5750:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5754:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5779:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5814:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5825:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5810:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5810:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5834:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5789:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5789:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5779:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5566:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5577:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5589:6:2",
														"type": ""
													}
												],
												"src": "5530:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5930:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5947:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5970:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5952:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5940:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5940:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5940:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5918:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5925:3:2",
														"type": ""
													}
												],
												"src": "5865:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6048:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6065:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6085:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6070:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6070:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6058:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6058:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6036:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6043:3:2",
														"type": ""
													}
												],
												"src": "5989:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6194:270:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6204:52:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6250:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6218:31:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:38:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6208:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6265:77:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6330:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6335:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6272:57:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:70:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6265:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6377:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6384:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6373:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6373:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6391:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6351:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6351:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6351:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6412:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6423:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6450:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6428:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6428:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6419:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6419:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6412:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6175:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6182:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6190:3:2",
														"type": ""
													}
												],
												"src": "6104:360:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6562:272:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6572:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6619:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6586:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6586:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6576:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6634:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6700:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6705:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6641:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6641:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6634:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6747:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6754:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6743:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6761:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6766:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6721:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6721:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6721:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6782:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6793:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6820:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6798:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6789:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6782:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6543:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6550:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6558:3:2",
														"type": ""
													}
												],
												"src": "6470:364:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6950:267:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6960:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7007:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6974:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6974:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6964:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7022:96:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7106:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7111:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7029:76:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7029:89:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7022:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7153:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7160:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7149:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7149:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7167:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7172:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7127:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7127:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7127:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7188:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7199:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7204:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7195:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:16:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6931:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6938:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6946:3:2",
														"type": ""
													}
												],
												"src": "6840:377:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7288:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7305:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7328:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7310:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7298:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7298:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7298:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7276:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7283:3:2",
														"type": ""
													}
												],
												"src": "7223:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7531:251:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7542:102:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7631:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7640:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7549:81:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7549:95:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7542:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7654:102:2",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7743:6:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7752:3:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7661:81:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7661:95:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7766:10:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7773:3:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7766:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7502:3:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7508:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7516:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7527:3:2",
														"type": ""
													}
												],
												"src": "7347:435:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7886:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7896:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7908:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7919:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7904:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7904:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7896:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7976:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7989:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8000:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7985:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7932:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7932:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7932:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7858:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7870:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7881:4:2",
														"type": ""
													}
												],
												"src": "7788:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8216:440:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8226:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8238:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8249:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8234:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8226:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8307:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8331:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8263:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8263:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8263:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8388:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8401:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8412:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8397:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8397:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8344:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8344:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8470:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8483:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8494:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8479:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8479:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8426:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8426:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8426:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8519:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8530:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8515:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8515:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8539:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8545:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8535:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8535:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8508:48:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8508:48:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8565:84:2",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8635:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8644:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8573:61:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8573:76:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8565:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8164:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8176:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8184:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8192:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8200:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8211:4:2",
														"type": ""
													}
												],
												"src": "8016:640:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8754:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8764:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8776:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8787:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8772:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8764:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8838:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8851:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8862:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8847:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8847:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8800:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8800:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8800:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8726:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8738:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8749:4:2",
														"type": ""
													}
												],
												"src": "8662:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8996:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9006:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9018:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9029:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9014:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9006:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9053:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9064:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9049:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9049:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9072:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9078:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9068:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9068:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9042:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9042:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9042:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9098:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9170:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9179:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9106:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9098:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8968:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8980:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8991:4:2",
														"type": ""
													}
												],
												"src": "8878:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9295:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9305:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9317:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9328:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9313:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9305:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9385:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9398:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9409:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9394:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9394:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9341:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9341:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9341:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9267:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9279:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9290:4:2",
														"type": ""
													}
												],
												"src": "9197:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9466:88:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9476:30:2",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "9486:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:20:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9476:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9535:6:2"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9543:4:2"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "9515:19:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9515:33:2"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9450:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9459:6:2",
														"type": ""
													}
												],
												"src": "9425:129:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9600:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9610:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9626:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9620:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9620:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9610:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9593:6:2",
														"type": ""
													}
												],
												"src": "9560:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9707:241:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9812:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9814:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9814:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9814:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9784:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9792:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9781:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9781:30:2"
															},
															"nodeType": "YulIf",
															"src": "9778:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9844:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9874:6:2"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "9852:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9852:29:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9844:4:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9918:23:2",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9930:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9936:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9926:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9926:15:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9918:4:2"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9691:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9702:4:2",
														"type": ""
													}
												],
												"src": "9641:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10012:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10023:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10039:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10033:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10033:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10023:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9995:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10005:6:2",
														"type": ""
													}
												],
												"src": "9954:98:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10128:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10144:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10138:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10138:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10128:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10100:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10110:6:2",
														"type": ""
													}
												],
												"src": "10058:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10258:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10275:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10280:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10268:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10268:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10268:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10296:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10315:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10320:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10311:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10311:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10296:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10230:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10235:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10246:11:2",
														"type": ""
													}
												],
												"src": "10163:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10433:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10450:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10455:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10443:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10443:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10443:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10471:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10490:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10495:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10486:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10486:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10471:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10405:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10410:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10421:11:2",
														"type": ""
													}
												],
												"src": "10337:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10626:34:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10636:18:2",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10651:3:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10636:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10598:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10603:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10614:11:2",
														"type": ""
													}
												],
												"src": "10512:148:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10711:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10721:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10750:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10732:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10732:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10721:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10693:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10703:7:2",
														"type": ""
													}
												],
												"src": "10666:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10810:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10820:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10845:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10838:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10838:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10831:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10831:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10820:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10792:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10802:7:2",
														"type": ""
													}
												],
												"src": "10768:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10908:105:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10918:89:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10933:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10940:66:2",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10929:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10929:78:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10918:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10890:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10900:7:2",
														"type": ""
													}
												],
												"src": "10864:149:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11064:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11074:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11089:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11096:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11085:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11085:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11074:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11046:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11056:7:2",
														"type": ""
													}
												],
												"src": "11019:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11196:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11206:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11217:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11206:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11178:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11188:7:2",
														"type": ""
													}
												],
												"src": "11151:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11285:103:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "11308:3:2"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "11313:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11318:6:2"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "11295:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11295:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11295:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11366:3:2"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11371:6:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11362:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11362:16:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11380:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11355:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11355:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11355:27:2"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11267:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11272:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11277:6:2",
														"type": ""
													}
												],
												"src": "11234:154:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11443:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11453:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11462:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11457:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11522:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11547:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11552:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11543:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11543:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11566:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11571:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11562:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11562:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11556:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11556:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11536:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11536:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11536:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11483:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11486:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11480:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11480:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11494:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11496:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11505:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11508:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11501:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11501:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11496:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11476:3:2",
																"statements": []
															},
															"src": "11472:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11619:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11669:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11674:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11665:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11665:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11683:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11658:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11658:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11658:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11600:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11603:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11597:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11597:13:2"
															},
															"nodeType": "YulIf",
															"src": "11594:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11425:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11430:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11435:6:2",
														"type": ""
													}
												],
												"src": "11394:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11758:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11768:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11782:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11788:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11778:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11778:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11768:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11799:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11829:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11835:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11825:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11825:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11803:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11876:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11890:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11904:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11912:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11900:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11900:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11890:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11856:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11849:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11849:26:2"
															},
															"nodeType": "YulIf",
															"src": "11846:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11979:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11993:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11993:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11993:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11943:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11966:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11974:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11963:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11963:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11940:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11940:38:2"
															},
															"nodeType": "YulIf",
															"src": "11937:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11742:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11751:6:2",
														"type": ""
													}
												],
												"src": "11707:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12076:238:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12086:58:2",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12108:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "12138:4:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12116:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12116:27:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12104:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12104:40:2"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "12090:10:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12255:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12257:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12257:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12257:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12198:10:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12210:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12195:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12195:34:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12234:10:2"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12246:6:2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12231:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12231:22:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12192:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12192:62:2"
															},
															"nodeType": "YulIf",
															"src": "12189:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12293:2:2",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "12297:10:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12286:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12286:22:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12286:22:2"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12062:6:2",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12070:4:2",
														"type": ""
													}
												],
												"src": "12033:281:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12348:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12365:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12368:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12358:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12358:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12358:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12462:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12465:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12455:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12455:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12455:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12486:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12489:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12479:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12479:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12479:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12320:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12534:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12551:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12554:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12544:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12544:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12544:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12648:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12651:4:2",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12641:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12641:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12641:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12672:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12675:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12665:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12665:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12665:15:2"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12506:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12781:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12798:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12801:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12791:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12791:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12791:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "12692:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12904:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12921:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12924:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12914:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12914:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12914:12:2"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "12815:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13027:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13044:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13047:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13037:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13037:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13037:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "12938:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13150:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13167:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13170:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13160:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13160:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13160:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13061:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13232:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13242:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13260:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13267:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13256:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13256:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13276:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13272:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13272:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13252:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13252:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13242:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13215:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13225:6:2",
														"type": ""
													}
												],
												"src": "13184:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13335:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13392:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13401:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13404:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13394:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13394:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13394:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13358:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13383:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13365:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13365:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13355:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13355:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13348:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13348:43:2"
															},
															"nodeType": "YulIf",
															"src": "13345:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13328:5:2",
														"type": ""
													}
												],
												"src": "13292:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13460:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13514:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13523:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13526:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13516:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13516:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13516:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13505:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13490:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13490:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13480:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13473:40:2"
															},
															"nodeType": "YulIf",
															"src": "13470:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13453:5:2",
														"type": ""
													}
												],
												"src": "13420:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13584:78:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13640:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13649:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13652:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13642:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13642:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13642:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13607:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13631:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "13614:16:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13614:23:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13604:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13604:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13597:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13597:42:2"
															},
															"nodeType": "YulIf",
															"src": "13594:62:2"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13577:5:2",
														"type": ""
													}
												],
												"src": "13542:120:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13711:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13768:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13777:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13780:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13770:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13770:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13770:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13734:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13759:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13741:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13741:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13731:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13731:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13724:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13724:43:2"
															},
															"nodeType": "YulIf",
															"src": "13721:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13704:5:2",
														"type": ""
													}
												],
												"src": "13668:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb465146102ab578063b88d4fde146102d4578063c87b56dd146102f0578063e985e9c51461032d576100dd565b80636352211e1461020657806370a082311461024357806395d89b4114610280576100dd565b8063095ea7b3116100bb578063095ea7b31461018757806318160ddd146101a357806323b872dd146101ce57806342842e0e146101ea576100dd565b806301ffc9a7146100e257806306fdde031461011f578063081812fc1461014a575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611328565b61036a565b604051610116919061150a565b60405180910390f35b34801561012b57600080fd5b506101346103fc565b6040516101419190611525565b60405180910390f35b34801561015657600080fd5b50610171600480360381019061016c9190611382565b61048e565b60405161017e91906114a3565b60405180910390f35b6101a1600480360381019061019c91906112e8565b6104ec565b005b3480156101af57600080fd5b506101b86104fc565b6040516101c59190611547565b60405180910390f35b6101e860048036038101906101e391906111d2565b610513565b005b61020460048036038101906101ff91906111d2565b6107d7565b005b34801561021257600080fd5b5061022d60048036038101906102289190611382565b6107f7565b60405161023a91906114a3565b60405180910390f35b34801561024f57600080fd5b5061026a60048036038101906102659190611165565b610809565b6040516102779190611547565b60405180910390f35b34801561028c57600080fd5b506102956108a1565b6040516102a29190611525565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd91906112a8565b610933565b005b6102ee60048036038101906102e99190611225565b610a3e565b005b3480156102fc57600080fd5b5061031760048036038101906103129190611382565b610a90565b6040516103249190611525565b60405180910390f35b34801561033957600080fd5b50610354600480360381019061034f9190611192565b610b0e565b604051610361919061150a565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c557506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f55750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461040b906116b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610437906116b1565b80156104845780601f1061045957610100808354040283529160200191610484565b820191906000526020600020905b81548152906001019060200180831161046757829003601f168201915b5050505050905090565b600061049982610ba2565b6104ae576104ad63cf4700e460e01b610c01565b5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6104f882826001610c0b565b5050565b6000610506610d3a565b6001546000540303905090565b600061051e82610d3f565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105935761059263a114810060e01b610c01565b5b60008061059f84610e02565b915091506105b581876105b0610e29565b610e31565b6105e0576105ca866105c5610e29565b610b0e565b6105df576105de6359c896be60e01b610c01565b5b5b6105ed8686866001610e75565b80156105f857600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154600101919050819055506106c6856106a2888887610e7b565b7c020000000000000000000000000000000000000000000000000000000017610ea3565b600460008681526020019081526020016000208190555060007c02000000000000000000000000000000000000000000000000000000008416141561074e57600060018501905060006004600083815260200190815260200160002054141561074c57600054811461074b578360046000838152602001908152602001600020819055505b5b505b600073ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a460008114156107c1576107c063ea553b3460e01b610c01565b5b6107ce8787876001610ece565b50505050505050565b6107f283838360405180602001604052806000815250610a3e565b505050565b600061080282610d3f565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108505761084f638f4eb60460e01b610c01565b5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b6060600380546108b0906116b1565b80601f01602080910402602001604051908101604052809291908181526020018280546108dc906116b1565b80156109295780601f106108fe57610100808354040283529160200191610929565b820191906000526020600020905b81548152906001019060200180831161090c57829003601f168201915b5050505050905090565b8060076000610940610e29565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166109ed610e29565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a32919061150a565b60405180910390a35050565b610a49848484610513565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610a8a57610a7484848484610ed4565b610a8957610a8863d1a57ed660e01b610c01565b5b5b50505050565b6060610a9b82610ba2565b610ab057610aaf63a14c4b5060e01b610c01565b5b6000610aba611013565b9050600081511415610adb5760405180602001604052806000815250610b06565b80610ae58461102a565b604051602001610af692919061147f565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610bad610d3a565b11158015610bbc575060005482105b8015610bfa575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b8060005260046000fd5b6000610c16836107f7565b9050818015610c5857508073ffffffffffffffffffffffffffffffffffffffff16610c3f610e29565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610c8457610c6e81610c69610e29565b610b0e565b610c8357610c8263cfb3b94260e01b610c01565b5b5b836006600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b600090565b600081610d4a610d3a565b11610dec576004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610deb576000811415610de6576000548210610db057610daf63df2d9b4260e01b610c01565b5b5b60046000836001900393508381526020019081526020016000205490506000811415610ddc57610de1565b610dfd565b610db1565b610dfd565b5b610dfc63df2d9b4260e01b610c01565b5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610e92868684611083565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610efa610e29565b8786866040518563ffffffff1660e01b8152600401610f1c94939291906114be565b602060405180830381600087803b158015610f3657600080fd5b505af1925050508015610f6757506040513d601f19601f82011682018060405250810190610f649190611355565b60015b610fc0573d8060008114610f97576040519150601f19603f3d011682016040523d82523d6000602084013e610f9c565b606091505b50600081511415610fb857610fb763d1a57ed660e01b610c01565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b606060a060405101806040526020810391506000825281835b60011561106e57600184039350600a81066030018453600a81049050806110695761106e565b611043565b50828103602084039350808452505050919050565b60009392505050565b600061109f61109a84611587565b611562565b9050828152602081018484840111156110bb576110ba611777565b5b6110c684828561166f565b509392505050565b6000813590506110dd81611797565b92915050565b6000813590506110f2816117ae565b92915050565b600081359050611107816117c5565b92915050565b60008151905061111c816117c5565b92915050565b600082601f83011261113757611136611772565b5b813561114784826020860161108c565b91505092915050565b60008135905061115f816117dc565b92915050565b60006020828403121561117b5761117a611781565b5b6000611189848285016110ce565b91505092915050565b600080604083850312156111a9576111a8611781565b5b60006111b7858286016110ce565b92505060206111c8858286016110ce565b9150509250929050565b6000806000606084860312156111eb576111ea611781565b5b60006111f9868287016110ce565b935050602061120a868287016110ce565b925050604061121b86828701611150565b9150509250925092565b6000806000806080858703121561123f5761123e611781565b5b600061124d878288016110ce565b945050602061125e878288016110ce565b935050604061126f87828801611150565b925050606085013567ffffffffffffffff8111156112905761128f61177c565b5b61129c87828801611122565b91505092959194509250565b600080604083850312156112bf576112be611781565b5b60006112cd858286016110ce565b92505060206112de858286016110e3565b9150509250929050565b600080604083850312156112ff576112fe611781565b5b600061130d858286016110ce565b925050602061131e85828601611150565b9150509250929050565b60006020828403121561133e5761133d611781565b5b600061134c848285016110f8565b91505092915050565b60006020828403121561136b5761136a611781565b5b60006113798482850161110d565b91505092915050565b60006020828403121561139857611397611781565b5b60006113a684828501611150565b91505092915050565b6113b8816115fb565b82525050565b6113c78161160d565b82525050565b60006113d8826115b8565b6113e281856115ce565b93506113f281856020860161167e565b6113fb81611786565b840191505092915050565b6000611411826115c3565b61141b81856115df565b935061142b81856020860161167e565b61143481611786565b840191505092915050565b600061144a826115c3565b61145481856115f0565b935061146481856020860161167e565b80840191505092915050565b61147981611665565b82525050565b600061148b828561143f565b9150611497828461143f565b91508190509392505050565b60006020820190506114b860008301846113af565b92915050565b60006080820190506114d360008301876113af565b6114e060208301866113af565b6114ed6040830185611470565b81810360608301526114ff81846113cd565b905095945050505050565b600060208201905061151f60008301846113be565b92915050565b6000602082019050818103600083015261153f8184611406565b905092915050565b600060208201905061155c6000830184611470565b92915050565b600061156c61157d565b905061157882826116e3565b919050565b6000604051905090565b600067ffffffffffffffff8211156115a2576115a1611743565b5b6115ab82611786565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061160682611645565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561169c578082015181840152602081019050611681565b838111156116ab576000848401525b50505050565b600060028204905060018216806116c957607f821691505b602082108114156116dd576116dc611714565b5b50919050565b6116ec82611786565b810181811067ffffffffffffffff8211171561170b5761170a611743565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6117a0816115fb565b81146117ab57600080fd5b50565b6117b78161160d565b81146117c257600080fd5b50565b6117ce81611619565b81146117d957600080fd5b50565b6117e581611665565b81146117f057600080fd5b5056fea2646970667358221220c8135ae9d8738cbc2d06ba416373c21a9f673265b7f8b3dd4a8ecb998c0dc7a264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x32D JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x280 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EA JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x11D2 JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x11D2 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x14A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x12A8 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1382 JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C5 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F5 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x16B1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x484 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x467 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x499 DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x4AE JUMPI PUSH2 0x4AD PUSH4 0xCF4700E4 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F8 DUP3 DUP3 PUSH1 0x1 PUSH2 0xC0B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51E DUP3 PUSH2 0xD3F JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x593 JUMPI PUSH2 0x592 PUSH4 0xA1148100 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x59F DUP5 PUSH2 0xE02 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x5B5 DUP2 DUP8 PUSH2 0x5B0 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST PUSH2 0x5E0 JUMPI PUSH2 0x5CA DUP7 PUSH2 0x5C5 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0x5DF JUMPI PUSH2 0x5DE PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5ED DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xE75 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x6C6 DUP6 PUSH2 0x6A2 DUP9 DUP9 DUP8 PUSH2 0xE7B JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xEA3 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND EQ ISZERO PUSH2 0x74E JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x74B JUMPI DUP4 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x7C1 JUMPI PUSH2 0x7C0 PUSH4 0xEA553B34 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST PUSH2 0x7CE DUP8 DUP8 DUP8 PUSH1 0x1 PUSH2 0xECE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7F2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA3E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x802 DUP3 PUSH2 0xD3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x850 JUMPI PUSH2 0x84F PUSH4 0x8F4EB604 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8DC SWAP1 PUSH2 0x16B1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x929 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x929 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x940 PUSH2 0xE29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9ED PUSH2 0xE29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA32 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA49 DUP5 DUP5 DUP5 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xA8A JUMPI PUSH2 0xA74 DUP5 DUP5 DUP5 DUP5 PUSH2 0xED4 JUMP JUMPDEST PUSH2 0xA89 JUMPI PUSH2 0xA88 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA9B DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0xAB0 JUMPI PUSH2 0xAAF PUSH4 0xA14C4B50 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xABA PUSH2 0x1013 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB06 JUMP JUMPDEST DUP1 PUSH2 0xAE5 DUP5 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAF6 SWAP3 SWAP2 SWAP1 PUSH2 0x147F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xBAD PUSH2 0xD3A JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xBBC JUMPI POP PUSH1 0x0 SLOAD DUP3 LT JUMPDEST DUP1 ISZERO PUSH2 0xBFA JUMPI POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC16 DUP4 PUSH2 0x7F7 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xC58 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC3F PUSH2 0xE29 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC84 JUMPI PUSH2 0xC6E DUP2 PUSH2 0xC69 PUSH2 0xE29 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH2 0xC83 JUMPI PUSH2 0xC82 PUSH4 0xCFB3B942 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xD4A PUSH2 0xD3A JUMP JUMPDEST GT PUSH2 0xDEC JUMPI PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ ISZERO PUSH2 0xDEB JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xDB0 JUMPI PUSH2 0xDAF PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xDDC JUMPI PUSH2 0xDE1 JUMP JUMPDEST PUSH2 0xDFD JUMP JUMPDEST PUSH2 0xDB1 JUMP JUMPDEST PUSH2 0xDFD JUMP JUMPDEST JUMPDEST PUSH2 0xDFC PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xE92 DUP7 DUP7 DUP5 PUSH2 0x1083 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xEFA PUSH2 0xE29 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF67 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF64 SWAP2 SWAP1 PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFC0 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF9C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xFB8 JUMPI PUSH2 0xFB7 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xC01 JUMP JUMPDEST JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH1 0x0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x106E JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x1069 JUMPI PUSH2 0x106E JUMP JUMPDEST PUSH2 0x1043 JUMP JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH2 0x109A DUP5 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x1562 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x10BB JUMPI PUSH2 0x10BA PUSH2 0x1777 JUMP JUMPDEST JUMPDEST PUSH2 0x10C6 DUP5 DUP3 DUP6 PUSH2 0x166F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10DD DUP2 PUSH2 0x1797 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10F2 DUP2 PUSH2 0x17AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1107 DUP2 PUSH2 0x17C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x111C DUP2 PUSH2 0x17C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1137 JUMPI PUSH2 0x1136 PUSH2 0x1772 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1147 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x108C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x115F DUP2 PUSH2 0x17DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117B JUMPI PUSH2 0x117A PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1189 DUP5 DUP3 DUP6 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH2 0x11A8 PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11B7 DUP6 DUP3 DUP7 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11C8 DUP6 DUP3 DUP7 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11EB JUMPI PUSH2 0x11EA PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11F9 DUP7 DUP3 DUP8 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x120A DUP7 DUP3 DUP8 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x121B DUP7 DUP3 DUP8 ADD PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x123F JUMPI PUSH2 0x123E PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x124D DUP8 DUP3 DUP9 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x125E DUP8 DUP3 DUP9 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x126F DUP8 DUP3 DUP9 ADD PUSH2 0x1150 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1290 JUMPI PUSH2 0x128F PUSH2 0x177C JUMP JUMPDEST JUMPDEST PUSH2 0x129C DUP8 DUP3 DUP9 ADD PUSH2 0x1122 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12BF JUMPI PUSH2 0x12BE PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12CD DUP6 DUP3 DUP7 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12DE DUP6 DUP3 DUP7 ADD PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12FF JUMPI PUSH2 0x12FE PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x130D DUP6 DUP3 DUP7 ADD PUSH2 0x10CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x131E DUP6 DUP3 DUP7 ADD PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x133E JUMPI PUSH2 0x133D PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x134C DUP5 DUP3 DUP6 ADD PUSH2 0x10F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x136B JUMPI PUSH2 0x136A PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1379 DUP5 DUP3 DUP6 ADD PUSH2 0x110D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1398 JUMPI PUSH2 0x1397 PUSH2 0x1781 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13A6 DUP5 DUP3 DUP6 ADD PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13B8 DUP2 PUSH2 0x15FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x13C7 DUP2 PUSH2 0x160D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D8 DUP3 PUSH2 0x15B8 JUMP JUMPDEST PUSH2 0x13E2 DUP2 DUP6 PUSH2 0x15CE JUMP JUMPDEST SWAP4 POP PUSH2 0x13F2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x167E JUMP JUMPDEST PUSH2 0x13FB DUP2 PUSH2 0x1786 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1411 DUP3 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x141B DUP2 DUP6 PUSH2 0x15DF JUMP JUMPDEST SWAP4 POP PUSH2 0x142B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x167E JUMP JUMPDEST PUSH2 0x1434 DUP2 PUSH2 0x1786 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144A DUP3 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x1454 DUP2 DUP6 PUSH2 0x15F0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1464 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x167E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1479 DUP2 PUSH2 0x1665 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148B DUP3 DUP6 PUSH2 0x143F JUMP JUMPDEST SWAP2 POP PUSH2 0x1497 DUP3 DUP5 PUSH2 0x143F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x14D3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x14E0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x14ED PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1470 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x14FF DUP2 DUP5 PUSH2 0x13CD JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x151F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x153F DUP2 DUP5 PUSH2 0x1406 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1470 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156C PUSH2 0x157D JUMP JUMPDEST SWAP1 POP PUSH2 0x1578 DUP3 DUP3 PUSH2 0x16E3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15A2 JUMPI PUSH2 0x15A1 PUSH2 0x1743 JUMP JUMPDEST JUMPDEST PUSH2 0x15AB DUP3 PUSH2 0x1786 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1606 DUP3 PUSH2 0x1645 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x169C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1681 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16AB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16C9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x16DD JUMPI PUSH2 0x16DC PUSH2 0x1714 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EC DUP3 PUSH2 0x1786 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x1743 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A0 DUP2 PUSH2 0x15FB JUMP JUMPDEST DUP2 EQ PUSH2 0x17AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17B7 DUP2 PUSH2 0x160D JUMP JUMPDEST DUP2 EQ PUSH2 0x17C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17CE DUP2 PUSH2 0x1619 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17E5 DUP2 PUSH2 0x1665 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 SGT GAS 0xE9 0xD8 PUSH20 0x8CBC2D06BA416373C21A9F673265B7F8B3DD4A8E 0xCB SWAP10 DUP13 0xD 0xC7 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "895:41958:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9164:630;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10048:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16314:223;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16042:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5894:317;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19866:3447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23404:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11409:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7045:239;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10217:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16864:231;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24172:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10420:322;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17245:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9164:630;9249:4;9582:10;9567:25;;:11;:25;;;;:101;;;;9658:10;9643:25;;:11;:25;;;;9567:101;:177;;;;9734:10;9719:25;;:11;:25;;;;9567:177;9548:196;;9164:630;;;:::o;10048:98::-;10102:13;10134:5;10127:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10048:98;:::o;16314:223::-;16390:7;16414:16;16422:7;16414;:16::i;:::-;16409:73;;16432:50;16440:41;;;16432:7;:50::i;:::-;16409:73;16500:15;:24;16516:7;16500:24;;;;;;;;;;;:30;;;;;;;;;;;;16493:37;;16314:223;;;:::o;16042:122::-;16130:27;16139:2;16143:7;16152:4;16130:8;:27::i;:::-;16042:122;;:::o;5894:317::-;5955:7;6179:15;:13;:15::i;:::-;6164:12;;6148:13;;:28;:46;6141:53;;5894:317;:::o;19866:3447::-;20003:27;20033;20052:7;20033:18;:27::i;:::-;20003:57;;2785:14;20201:4;20185:22;;:41;20162:66;;20284:4;20243:45;;20259:19;20243:45;;;20239:95;;20290:44;20298:35;;;20290:7;:44::i;:::-;20239:95;20346:27;20375:23;20402:35;20429:7;20402:26;:35::i;:::-;20345:92;;;;20534:68;20559:15;20576:4;20582:19;:17;:19::i;:::-;20534:24;:68::i;:::-;20529:188;;20621:43;20638:4;20644:19;:17;:19::i;:::-;20621:16;:43::i;:::-;20616:101;;20666:51;20674:42;;;20666:7;:51::i;:::-;20616:101;20529:188;20728:43;20750:4;20756:2;20760:7;20769:1;20728:21;:43::i;:::-;20860:15;20857:157;;;20998:1;20977:19;20970:30;20857:157;21386:18;:24;21405:4;21386:24;;;;;;;;;;;;;;;;21384:26;;;;;;;;;;;;21454:18;:22;21473:2;21454:22;;;;;;;;;;;;;;;;21452:24;;;;;;;;;;;21769:143;21805:2;21853:45;21868:4;21874:2;21878:19;21853:14;:45::i;:::-;2392:8;21825:73;21769:18;:143::i;:::-;21740:17;:26;21758:7;21740:26;;;;;;;;;;;:172;;;;22080:1;2392:8;22029:19;:47;:52;22025:617;;;22101:19;22133:1;22123:7;:11;22101:33;;22288:1;22254:17;:30;22272:11;22254:30;;;;;;;;;;;;:35;22250:378;;;22390:13;;22375:11;:28;22371:239;;22568:19;22535:17;:30;22553:11;22535:30;;;;;;;;;;;:52;;;;22371:239;22250:378;22083:559;22025:617;22751:16;2785:14;22786:2;22770:20;;:39;22751:58;;23141:7;23106:8;23073:4;23016:25;22962:1;22906;22884:292;23211:1;23199:8;:13;23195:58;;;23214:39;23222:30;;;23214:7;:39::i;:::-;23195:58;23264:42;23285:4;23291:2;23295:7;23304:1;23264:20;:42::i;:::-;19993:3320;;;;19866:3447;;;:::o;23404:187::-;23545:39;23562:4;23568:2;23572:7;23545:39;;;;;;;;;;;;:16;:39::i;:::-;23404:187;;;:::o;11409:150::-;11481:7;11523:27;11542:7;11523:18;:27::i;:::-;11500:52;;11409:150;;;:::o;7045:239::-;7117:7;7157:1;7140:19;;:5;:19;;;7136:69;;;7161:44;7169:35;;;7161:7;:44::i;:::-;7136:69;1360:13;7222:18;:25;7241:5;7222:25;;;;;;;;;;;;;;;;:55;7215:62;;7045:239;;;:::o;10217:102::-;10273:13;10305:7;10298:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10217:102;:::o;16864:231::-;17010:8;16958:18;:39;16977:19;:17;:19::i;:::-;16958:39;;;;;;;;;;;;;;;:49;16998:8;16958:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;17069:8;17033:55;;17048:19;:17;:19::i;:::-;17033:55;;;17079:8;17033:55;;;;;;:::i;:::-;;;;;;;;16864:231;;:::o;24172:405::-;24341:31;24354:4;24360:2;24364:7;24341:12;:31::i;:::-;24404:1;24386:2;:14;;;:19;24382:189;;24424:56;24455:4;24461:2;24465:7;24474:5;24424:30;:56::i;:::-;24419:152;;24500:56;24508:47;;;24500:7;:56::i;:::-;24419:152;24382:189;24172:405;;;;:::o;10420:322::-;10493:13;10523:16;10531:7;10523;:16::i;:::-;10518:68;;10541:45;10549:36;;;10541:7;:45::i;:::-;10518:68;10597:21;10621:10;:8;:10::i;:::-;10597:34;;10673:1;10654:7;10648:21;:26;;:87;;;;;;;;;;;;;;;;;10701:7;10710:18;10720:7;10710:9;:18::i;:::-;10684:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10648:87;10641:94;;;10420:322;;;:::o;17245:162::-;17342:4;17365:18;:25;17384:5;17365:25;;;;;;;;;;;;;;;:35;17391:8;17365:35;;;;;;;;;;;;;;;;;;;;;;;;;17358:42;;17245:162;;;;:::o;17656:277::-;17721:4;17775:7;17756:15;:13;:15::i;:::-;:26;;:65;;;;;17808:13;;17798:7;:23;17756:65;:151;;;;;17906:1;2118:8;17858:17;:26;17876:7;17858:26;;;;;;;;;;;;:44;:49;17756:151;17737:170;;17656:277;;;:::o;42691:160::-;42790:13;42784:4;42777:27;42830:4;42824;42817:18;34339:460;34463:13;34479:16;34487:7;34479;:16::i;:::-;34463:32;;34510:13;:45;;;;;34550:5;34527:28;;:19;:17;:19::i;:::-;:28;;;;34510:45;34506:198;;;34574:44;34591:5;34598:19;:17;:19::i;:::-;34574:16;:44::i;:::-;34569:135;;34638:51;34646:42;;;34638:7;:51::i;:::-;34569:135;34506:198;34747:2;34714:15;:24;34730:7;34714:24;;;;;;;;;;;:30;;;:35;;;;;;;;;;;;;;;;;;34784:7;34780:2;34764:28;;34773:5;34764:28;;;;;;;;;;;;34453:346;34339:460;;;:::o;5426:90::-;5482:7;5426:90;:::o;12533:1698::-;12600:14;12649:7;12630:15;:13;:15::i;:::-;:26;12626:1542;;12681:17;:26;12699:7;12681:26;;;;;;;;;;;;12672:35;;12783:1;2118:8;12755:6;:24;:29;12751:1407;;;12902:1;12892:6;:11;12888:972;;;12942:13;;12931:7;:24;12927:77;;12957:47;12965:38;;;12957:7;:47::i;:::-;12927:77;13591:251;13675:17;:28;13693:9;;;;;;;13675:28;;;;;;;;;;;;13666:37;;13769:1;13759:6;:11;13755:25;;;13772:8;;13755:25;13806:13;;13591:251;;;12888:972;14130:13;;12751:1407;12626:1542;14177:47;14185:38;;;14177:7;:47::i;:::-;12533:1698;;;;:::o;18791:474::-;18890:27;18919:23;18958:38;18999:15;:24;19015:7;18999:24;;;;;;;;;;;18958:65;;19173:18;19150:41;;19229:19;19223:26;19204:45;;19136:123;18791:474;;;:::o;40721:103::-;40781:7;40807:10;40800:17;;40721:103;:::o;18037:646::-;18182:11;18344:16;18337:5;18333:28;18324:37;;18502:16;18491:9;18487:32;18474:45;;18650:15;18639:9;18636:30;18628:5;18617:9;18614:20;18611:56;18601:66;;18037:646;;;;;:::o;25221:154::-;;;;;:::o;40048:304::-;40179:7;40198:16;2513:3;40224:19;:41;;40198:68;;2513:3;40291:31;40302:4;40308:2;40312:9;40291:10;:31::i;:::-;40283:40;;:62;;40276:69;;;40048:304;;;;;:::o;14764:443::-;14844:14;15009:16;15002:5;14998:28;14989:37;;15184:5;15170:11;15145:23;15141:41;15138:52;15131:5;15128:63;15118:73;;14764:443;;;;:::o;26022:153::-;;;;;:::o;26603:673::-;26761:4;26806:2;26781:45;;;26827:19;:17;:19::i;:::-;26848:4;26854:7;26863:5;26781:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;26777:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27076:1;27059:6;:13;:18;27055:113;;;27097:56;27105:47;;;27097:7;:56::i;:::-;27055:113;27238:6;27232:13;27223:6;27219:2;27215:15;27208:38;26777:493;26947:54;;;26937:64;;;:6;:64;;;;26930:71;;;26603:673;;;;;;:::o;10987:92::-;11038:13;11063:9;;;;;;;;;;;;;;10987:92;:::o;40921:1708::-;40986:17;41414:4;41407;41401:11;41397:22;41504:1;41498:4;41491:15;41577:4;41574:1;41570:12;41563:19;;41657:1;41652:3;41645:14;41758:3;41992:5;41974:419;42000:1;41974:419;;;42039:1;42034:3;42030:11;42023:18;;42207:2;42201:4;42197:13;42193:2;42189:22;42184:3;42176:36;42299:2;42293:4;42289:13;42281:21;;42364:4;42354:25;;42372:5;;42354:25;41974:419;;;41978:21;42430:3;42425;42421:13;42543:4;42538:3;42534:14;42527:21;;42606:6;42601:3;42594:19;41024:1599;;;40921:1708;;;:::o;39759:143::-;39892:6;39759:143;;;;;:::o;7:410:2:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:377::-;6946:3;6974:39;7007:5;6974:39;:::i;:::-;7029:89;7111:6;7106:3;7029:89;:::i;:::-;7022:96;;7127:52;7172:6;7167:3;7160:4;7153:5;7149:16;7127:52;:::i;:::-;7204:6;7199:3;7195:16;7188:23;;6950:267;6840:377;;;;:::o;7223:118::-;7310:24;7328:5;7310:24;:::i;:::-;7305:3;7298:37;7223:118;;:::o;7347:435::-;7527:3;7549:95;7640:3;7631:6;7549:95;:::i;:::-;7542:102;;7661:95;7752:3;7743:6;7661:95;:::i;:::-;7654:102;;7773:3;7766:10;;7347:435;;;;;:::o;7788:222::-;7881:4;7919:2;7908:9;7904:18;7896:26;;7932:71;8000:1;7989:9;7985:17;7976:6;7932:71;:::i;:::-;7788:222;;;;:::o;8016:640::-;8211:4;8249:3;8238:9;8234:19;8226:27;;8263:71;8331:1;8320:9;8316:17;8307:6;8263:71;:::i;:::-;8344:72;8412:2;8401:9;8397:18;8388:6;8344:72;:::i;:::-;8426;8494:2;8483:9;8479:18;8470:6;8426:72;:::i;:::-;8545:9;8539:4;8535:20;8530:2;8519:9;8515:18;8508:48;8573:76;8644:4;8635:6;8573:76;:::i;:::-;8565:84;;8016:640;;;;;;;:::o;8662:210::-;8749:4;8787:2;8776:9;8772:18;8764:26;;8800:65;8862:1;8851:9;8847:17;8838:6;8800:65;:::i;:::-;8662:210;;;;:::o;8878:313::-;8991:4;9029:2;9018:9;9014:18;9006:26;;9078:9;9072:4;9068:20;9064:1;9053:9;9049:17;9042:47;9106:78;9179:4;9170:6;9106:78;:::i;:::-;9098:86;;8878:313;;;;:::o;9197:222::-;9290:4;9328:2;9317:9;9313:18;9305:26;;9341:71;9409:1;9398:9;9394:17;9385:6;9341:71;:::i;:::-;9197:222;;;;:::o;9425:129::-;9459:6;9486:20;;:::i;:::-;9476:30;;9515:33;9543:4;9535:6;9515:33;:::i;:::-;9425:129;;;:::o;9560:75::-;9593:6;9626:2;9620:9;9610:19;;9560:75;:::o;9641:307::-;9702:4;9792:18;9784:6;9781:30;9778:56;;;9814:18;;:::i;:::-;9778:56;9852:29;9874:6;9852:29;:::i;:::-;9844:37;;9936:4;9930;9926:15;9918:23;;9641:307;;;:::o;9954:98::-;10005:6;10039:5;10033:12;10023:22;;9954:98;;;:::o;10058:99::-;10110:6;10144:5;10138:12;10128:22;;10058:99;;;:::o;10163:168::-;10246:11;10280:6;10275:3;10268:19;10320:4;10315:3;10311:14;10296:29;;10163:168;;;;:::o;10337:169::-;10421:11;10455:6;10450:3;10443:19;10495:4;10490:3;10486:14;10471:29;;10337:169;;;;:::o;10512:148::-;10614:11;10651:3;10636:18;;10512:148;;;;:::o;10666:96::-;10703:7;10732:24;10750:5;10732:24;:::i;:::-;10721:35;;10666:96;;;:::o;10768:90::-;10802:7;10845:5;10838:13;10831:21;10820:32;;10768:90;;;:::o;10864:149::-;10900:7;10940:66;10933:5;10929:78;10918:89;;10864:149;;;:::o;11019:126::-;11056:7;11096:42;11089:5;11085:54;11074:65;;11019:126;;;:::o;11151:77::-;11188:7;11217:5;11206:16;;11151:77;;;:::o;11234:154::-;11318:6;11313:3;11308;11295:30;11380:1;11371:6;11366:3;11362:16;11355:27;11234:154;;;:::o;11394:307::-;11462:1;11472:113;11486:6;11483:1;11480:13;11472:113;;;11571:1;11566:3;11562:11;11556:18;11552:1;11547:3;11543:11;11536:39;11508:2;11505:1;11501:10;11496:15;;11472:113;;;11603:6;11600:1;11597:13;11594:101;;;11683:1;11674:6;11669:3;11665:16;11658:27;11594:101;11443:258;11394:307;;;:::o;11707:320::-;11751:6;11788:1;11782:4;11778:12;11768:22;;11835:1;11829:4;11825:12;11856:18;11846:81;;11912:4;11904:6;11900:17;11890:27;;11846:81;11974:2;11966:6;11963:14;11943:18;11940:38;11937:84;;;11993:18;;:::i;:::-;11937:84;11758:269;11707:320;;;:::o;12033:281::-;12116:27;12138:4;12116:27;:::i;:::-;12108:6;12104:40;12246:6;12234:10;12231:22;12210:18;12198:10;12195:34;12192:62;12189:88;;;12257:18;;:::i;:::-;12189:88;12297:10;12293:2;12286:22;12076:238;12033:281;;:::o;12320:180::-;12368:77;12365:1;12358:88;12465:4;12462:1;12455:15;12489:4;12486:1;12479:15;12506:180;12554:77;12551:1;12544:88;12651:4;12648:1;12641:15;12675:4;12672:1;12665:15;12692:117;12801:1;12798;12791:12;12815:117;12924:1;12921;12914:12;12938:117;13047:1;13044;13037:12;13061:117;13170:1;13167;13160:12;13184:102;13225:6;13276:2;13272:7;13267:2;13260:5;13256:14;13252:28;13242:38;;13184:102;;;:::o;13292:122::-;13365:24;13383:5;13365:24;:::i;:::-;13358:5;13355:35;13345:63;;13404:1;13401;13394:12;13345:63;13292:122;:::o;13420:116::-;13490:21;13505:5;13490:21;:::i;:::-;13483:5;13480:32;13470:60;;13526:1;13523;13516:12;13470:60;13420:116;:::o;13542:120::-;13614:23;13631:5;13614:23;:::i;:::-;13607:5;13604:34;13594:62;;13652:1;13649;13642:12;13594:62;13542:120;:::o;13668:122::-;13741:24;13759:5;13741:24;:::i;:::-;13734:5;13731:35;13721:63;;13780:1;13777;13770:12;13721:63;13668:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1237000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2930",
								"getApproved(uint256)": "7381",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "745",
								"symbol()": "infinite",
								"tokenURI(uint256)": "5545",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "infinite",
								"_approve(address,uint256,bool)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4416",
								"_extraData(address,address,uint24)": "24",
								"_getApprovedSlotAndAddress(uint256)": "2236",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "78",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "22",
								"_nextExtraData(address,address,uint256)": "114",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "61",
								"_packedOwnershipOf(uint256)": "infinite",
								"_revert(bytes4)": "19",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "15",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5020,
									"end": 5025,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5017,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5045,
									"end": 5052,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5042,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5078,
									"end": 5091,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 5078,
									"end": 5093,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5062,
									"end": 5075,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5482,
									"end": 5489,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5426,
									"end": 5516,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 908,
									"end": 914,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 922,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 965,
									"end": 967,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 962,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 944,
									"end": 951,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 940,
									"end": 963,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1110,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1097,
									"end": 1114,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1091,
									"end": 1115,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1140,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1131,
									"end": 1161,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1062,
									"end": 1353,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1413,
									"end": 1415,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1402,
									"end": 1411,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1398,
									"end": 1416,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1436,
									"end": 1442,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1433,
									"end": 1463,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 1637,
									"end": 1644,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1628,
									"end": 1634,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1617,
									"end": 1626,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1613,
									"end": 1635,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1363,
									"end": 1655,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1786,
									"end": 1790,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1778,
									"end": 1784,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1836,
									"end": 1842,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1871,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1863,
									"end": 1872,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2036,
									"end": 2054,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2028,
									"end": 2034,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2025,
									"end": 2055,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "tag",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2180,
									"end": 2184,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2174,
									"end": 2178,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2170,
									"end": 2185,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2266,
									"end": 2267,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2284,
									"end": 2297,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2375,
									"end": 2376,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2366,
									"end": 2377,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2360,
									"end": 2378,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2356,
									"end": 2357,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2351,
									"end": 2354,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2347,
									"end": 2358,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2340,
									"end": 2379,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2312,
									"end": 2314,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2305,
									"end": 2315,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2407,
									"end": 2413,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2404,
									"end": 2405,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2487,
									"end": 2488,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2478,
									"end": 2484,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2473,
									"end": 2476,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2469,
									"end": 2485,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2462,
									"end": 2489,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2247,
									"end": 2505,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2555,
									"end": 2561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 2593,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2586,
									"end": 2590,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2582,
									"end": 2594,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 2633,
									"end": 2637,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2629,
									"end": 2641,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2660,
									"end": 2678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2716,
									"end": 2720,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 2708,
									"end": 2714,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2704,
									"end": 2721,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "tag",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2778,
									"end": 2780,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2770,
									"end": 2776,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2767,
									"end": 2781,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2744,
									"end": 2782,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "tag",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2562,
									"end": 2831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 2942,
									"end": 2946,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "tag",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 2918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2908,
									"end": 2948,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3038,
									"end": 3048,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3035,
									"end": 3057,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 3014,
									"end": 3032,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3012,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2999,
									"end": 3033,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2996,
									"end": 3058,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "tag",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "tag",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3101,
									"end": 3111,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3097,
									"end": 3099,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3090,
									"end": 3112,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2880,
									"end": 3118,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "tag",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3172,
									"end": 3249,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3169,
									"end": 3170,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3250,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3269,
									"end": 3273,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 3266,
									"end": 3267,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3259,
									"end": 3274,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3293,
									"end": 3297,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3290,
									"end": 3291,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3283,
									"end": 3298,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3358,
									"end": 3435,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3355,
									"end": 3356,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3348,
									"end": 3436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3455,
									"end": 3459,
									"name": "PUSH",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 3452,
									"end": 3453,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 3445,
									"end": 3460,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 3476,
									"end": 3477,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3469,
									"end": 3484,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3605,
									"end": 3606,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3602,
									"end": 3603,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3595,
									"end": 3607,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3728,
									"end": 3729,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3718,
									"end": 3730,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3971,
									"end": 3972,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3964,
									"end": 3976,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4080,
									"end": 4082,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4076,
									"end": 4083,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4071,
									"end": 4073,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4060,
									"end": 4074,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4056,
									"end": 4084,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 42853,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c8135ae9d8738cbc2d06ba416373c21a9f673265b7f8b3dd4a8ecb998c0dc7a264736f6c63430008070033",
									".code": [
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 42853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9582,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9668,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD"
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9668,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9567,
											"end": 9668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9734,
											"end": 9744,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F"
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9744,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9567,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9164,
											"end": 9794,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10102,
											"end": 10115,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10134,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10146,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16390,
											"end": 16397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16414,
											"end": 16430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16422,
											"end": 16429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16414,
											"end": 16421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 16414,
											"end": 16430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16414,
											"end": 16430,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16414,
											"end": 16430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16409,
											"end": 16482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16409,
											"end": 16482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16432,
											"end": 16482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 16440,
											"end": 16481,
											"name": "PUSH",
											"source": 0,
											"value": "CF4700E4"
										},
										{
											"begin": 16440,
											"end": 16481,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16440,
											"end": 16481,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16432,
											"end": 16439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 16432,
											"end": 16482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16432,
											"end": 16482,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 16432,
											"end": 16482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16409,
											"end": 16482,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 16409,
											"end": 16482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16515,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16500,
											"end": 16524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16516,
											"end": 16523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16500,
											"end": 16524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16500,
											"end": 16524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16500,
											"end": 16524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16500,
											"end": 16530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16314,
											"end": 16537,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16130,
											"end": 16157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16139,
											"end": 16141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16143,
											"end": 16150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16152,
											"end": 16156,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16130,
											"end": 16138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 16130,
											"end": 16157,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16130,
											"end": 16157,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16130,
											"end": 16157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16164,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5955,
											"end": 5962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6179,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6179,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6194,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6141,
											"end": 6194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6141,
											"end": 6194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20003,
											"end": 20030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20033,
											"end": 20060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 20052,
											"end": 20059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20033,
											"end": 20051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 20033,
											"end": 20060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20033,
											"end": 20060,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 20033,
											"end": 20060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20003,
											"end": 20060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20003,
											"end": 20060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20201,
											"end": 20205,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20185,
											"end": 20207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20185,
											"end": 20207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20185,
											"end": 20226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20162,
											"end": 20228,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20162,
											"end": 20228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20284,
											"end": 20288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20243,
											"end": 20288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20243,
											"end": 20288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20259,
											"end": 20278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20243,
											"end": 20288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20243,
											"end": 20288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20243,
											"end": 20288,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20239,
											"end": 20334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 20239,
											"end": 20334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20290,
											"end": 20334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 20298,
											"end": 20333,
											"name": "PUSH",
											"source": 0,
											"value": "A1148100"
										},
										{
											"begin": 20298,
											"end": 20333,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 20298,
											"end": 20333,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 20290,
											"end": 20297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20290,
											"end": 20334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20290,
											"end": 20334,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 20290,
											"end": 20334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20239,
											"end": 20334,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 20239,
											"end": 20334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20346,
											"end": 20373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20375,
											"end": 20398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 20429,
											"end": 20436,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20402,
											"end": 20428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 20402,
											"end": 20437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20402,
											"end": 20437,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 20402,
											"end": 20437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20345,
											"end": 20437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20345,
											"end": 20437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20345,
											"end": 20437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20345,
											"end": 20437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20534,
											"end": 20602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 20559,
											"end": 20574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20576,
											"end": 20580,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20582,
											"end": 20601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 20582,
											"end": 20599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 20582,
											"end": 20601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20582,
											"end": 20601,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 20582,
											"end": 20601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20534,
											"end": 20558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 20534,
											"end": 20602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20534,
											"end": 20602,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 20534,
											"end": 20602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 20529,
											"end": 20717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20621,
											"end": 20664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 20638,
											"end": 20642,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20644,
											"end": 20663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 20644,
											"end": 20661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 20644,
											"end": 20663,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20644,
											"end": 20663,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 20644,
											"end": 20663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20621,
											"end": 20637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 20621,
											"end": 20664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20621,
											"end": 20664,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 20621,
											"end": 20664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20616,
											"end": 20717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 20616,
											"end": 20717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20666,
											"end": 20717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 20674,
											"end": 20716,
											"name": "PUSH",
											"source": 0,
											"value": "59C896BE"
										},
										{
											"begin": 20674,
											"end": 20716,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 20674,
											"end": 20716,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 20666,
											"end": 20673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20666,
											"end": 20717,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20666,
											"end": 20717,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 20666,
											"end": 20717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20616,
											"end": 20717,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 20616,
											"end": 20717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20529,
											"end": 20717,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 20529,
											"end": 20717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20728,
											"end": 20771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20750,
											"end": 20754,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20758,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20760,
											"end": 20767,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20769,
											"end": 20770,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20728,
											"end": 20749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 20728,
											"end": 20771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20728,
											"end": 20771,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20728,
											"end": 20771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20860,
											"end": 20875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20857,
											"end": 21014,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20857,
											"end": 21014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20857,
											"end": 21014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20998,
											"end": 20999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20977,
											"end": 20996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20970,
											"end": 21000,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20857,
											"end": 21014,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20857,
											"end": 21014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21404,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21405,
											"end": 21409,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21386,
											"end": 21410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21384,
											"end": 21410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21384,
											"end": 21410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21384,
											"end": 21410,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21384,
											"end": 21410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21384,
											"end": 21410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21384,
											"end": 21410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21384,
											"end": 21410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21384,
											"end": 21410,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21384,
											"end": 21410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21384,
											"end": 21410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21384,
											"end": 21410,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21384,
											"end": 21410,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21472,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21473,
											"end": 21475,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21452,
											"end": 21476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21452,
											"end": 21476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21452,
											"end": 21476,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21452,
											"end": 21476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21452,
											"end": 21476,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21452,
											"end": 21476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21452,
											"end": 21476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21452,
											"end": 21476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21452,
											"end": 21476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21452,
											"end": 21476,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21452,
											"end": 21476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21769,
											"end": 21912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 21805,
											"end": 21807,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21853,
											"end": 21898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 21868,
											"end": 21872,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21874,
											"end": 21876,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21878,
											"end": 21897,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21853,
											"end": 21867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 21853,
											"end": 21898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21853,
											"end": 21898,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 21853,
											"end": 21898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21825,
											"end": 21898,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21769,
											"end": 21787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 21769,
											"end": 21912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21769,
											"end": 21912,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 21769,
											"end": 21912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21740,
											"end": 21766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21758,
											"end": 21765,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21740,
											"end": 21766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21766,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21740,
											"end": 21766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21740,
											"end": 21766,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21912,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21740,
											"end": 21912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22080,
											"end": 22081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2400,
											"name": "PUSH",
											"source": 0,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22029,
											"end": 22048,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22029,
											"end": 22076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22029,
											"end": 22081,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22025,
											"end": 22642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22025,
											"end": 22642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 22025,
											"end": 22642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22101,
											"end": 22120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22133,
											"end": 22134,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22123,
											"end": 22130,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22123,
											"end": 22134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22101,
											"end": 22134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22101,
											"end": 22134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22288,
											"end": 22289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22254,
											"end": 22271,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22254,
											"end": 22284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22272,
											"end": 22283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22254,
											"end": 22284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22254,
											"end": 22284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22254,
											"end": 22284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22254,
											"end": 22284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22254,
											"end": 22284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22254,
											"end": 22284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22254,
											"end": 22284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22254,
											"end": 22284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22254,
											"end": 22284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22254,
											"end": 22284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22254,
											"end": 22284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22254,
											"end": 22284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22254,
											"end": 22289,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22250,
											"end": 22628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22250,
											"end": 22628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 22250,
											"end": 22628,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22390,
											"end": 22403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22390,
											"end": 22403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22375,
											"end": 22386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22375,
											"end": 22403,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 22371,
											"end": 22610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22568,
											"end": 22587,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22552,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22535,
											"end": 22565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22553,
											"end": 22564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22535,
											"end": 22565,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22587,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22371,
											"end": 22610,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 22371,
											"end": 22610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22250,
											"end": 22628,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 22250,
											"end": 22628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22025,
											"end": 22642,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 22025,
											"end": 22642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22751,
											"end": 22767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22786,
											"end": 22788,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22770,
											"end": 22790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22770,
											"end": 22790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22770,
											"end": 22809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22751,
											"end": 22809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22751,
											"end": 22809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23141,
											"end": 23148,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23106,
											"end": 23114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23073,
											"end": 23077,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23016,
											"end": 23041,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 22962,
											"end": 22963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22906,
											"end": 22907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22884,
											"end": 23176,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 23211,
											"end": 23212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23199,
											"end": 23207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23199,
											"end": 23212,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23195,
											"end": 23253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23195,
											"end": 23253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 23195,
											"end": 23253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23214,
											"end": 23253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 23222,
											"end": 23252,
											"name": "PUSH",
											"source": 0,
											"value": "EA553B34"
										},
										{
											"begin": 23222,
											"end": 23252,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23222,
											"end": 23252,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23214,
											"end": 23221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23214,
											"end": 23253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23214,
											"end": 23253,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 23214,
											"end": 23253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23195,
											"end": 23253,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 23195,
											"end": 23253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23264,
											"end": 23306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 23285,
											"end": 23289,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23291,
											"end": 23293,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23295,
											"end": 23302,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23304,
											"end": 23305,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23264,
											"end": 23284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 23264,
											"end": 23306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23264,
											"end": 23306,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 23264,
											"end": 23306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19993,
											"end": 23313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19993,
											"end": 23313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19993,
											"end": 23313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19993,
											"end": 23313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19866,
											"end": 23313,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 23562,
											"end": 23566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23568,
											"end": 23570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23572,
											"end": 23579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23545,
											"end": 23561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 23545,
											"end": 23584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23404,
											"end": 23591,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11481,
											"end": 11488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 11542,
											"end": 11549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 11523,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11500,
											"end": 11552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11500,
											"end": 11552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11409,
											"end": 11559,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7169,
											"end": 7204,
											"name": "PUSH",
											"source": 0,
											"value": "8F4EB604"
										},
										{
											"begin": 7169,
											"end": 7204,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7169,
											"end": 7204,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7161,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7136,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7222,
											"end": 7240,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7246,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7284,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10273,
											"end": 10286,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10305,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10319,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17010,
											"end": 17018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16976,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16977,
											"end": 16996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 16977,
											"end": 16994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 16977,
											"end": 16996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16977,
											"end": 16996,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 16977,
											"end": 16996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16958,
											"end": 16997,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16998,
											"end": 17006,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16958,
											"end": 17018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17069,
											"end": 17077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17048,
											"end": 17065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17048,
											"end": 17067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17048,
											"end": 17067,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 17048,
											"end": 17067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17079,
											"end": 17087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17033,
											"end": 17088,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16864,
											"end": 17095,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 24354,
											"end": 24358,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24364,
											"end": 24371,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24341,
											"end": 24353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24341,
											"end": 24372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24341,
											"end": 24372,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 24341,
											"end": 24372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24404,
											"end": 24405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24386,
											"end": 24388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24386,
											"end": 24400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24400,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 24386,
											"end": 24405,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 24382,
											"end": 24571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 24455,
											"end": 24459,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24461,
											"end": 24463,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24465,
											"end": 24472,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24474,
											"end": 24479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24424,
											"end": 24454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 24424,
											"end": 24480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24424,
											"end": 24480,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 24424,
											"end": 24480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24419,
											"end": 24571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 24419,
											"end": 24571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24500,
											"end": 24556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 24508,
											"end": 24555,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED6"
										},
										{
											"begin": 24508,
											"end": 24555,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24508,
											"end": 24555,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 24500,
											"end": 24507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 24500,
											"end": 24556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24500,
											"end": 24556,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 24500,
											"end": 24556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24419,
											"end": 24571,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 24419,
											"end": 24571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24382,
											"end": 24571,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 24382,
											"end": 24571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24172,
											"end": 24577,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10493,
											"end": 10506,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 10531,
											"end": 10538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10523,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10518,
											"end": 10586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10541,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10549,
											"end": 10585,
											"name": "PUSH",
											"source": 0,
											"value": "A14C4B50"
										},
										{
											"begin": 10549,
											"end": 10585,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10549,
											"end": 10585,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10541,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10541,
											"end": 10586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10541,
											"end": 10586,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10541,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10586,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10518,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 10621,
											"end": 10629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 10621,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10597,
											"end": 10631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10673,
											"end": 10674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10654,
											"end": 10661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10674,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10701,
											"end": 10708,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 10720,
											"end": 10727,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10710,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 10710,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10684,
											"end": 10729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 10648,
											"end": 10735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10641,
											"end": 10735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10641,
											"end": 10735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10641,
											"end": 10735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10742,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17342,
											"end": 17346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17365,
											"end": 17383,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17384,
											"end": 17389,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17365,
											"end": 17390,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17391,
											"end": 17399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 17365,
											"end": 17400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17358,
											"end": 17400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17358,
											"end": 17400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17407,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17656,
											"end": 17933,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 17656,
											"end": 17933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17721,
											"end": 17725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17775,
											"end": 17782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 17756,
											"end": 17769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 17756,
											"end": 17771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17756,
											"end": 17771,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 17756,
											"end": 17771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17782,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 17756,
											"end": 17821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17808,
											"end": 17821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17808,
											"end": 17821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17798,
											"end": 17821,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17821,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 17756,
											"end": 17821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 17756,
											"end": 17907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17906,
											"end": 17907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17858,
											"end": 17875,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17858,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17876,
											"end": 17883,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17858,
											"end": 17884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17858,
											"end": 17884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17858,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17858,
											"end": 17884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17858,
											"end": 17884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17858,
											"end": 17884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17858,
											"end": 17884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17858,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17858,
											"end": 17884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17858,
											"end": 17884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17858,
											"end": 17884,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17858,
											"end": 17884,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17858,
											"end": 17902,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17858,
											"end": 17907,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17756,
											"end": 17907,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 17756,
											"end": 17907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17737,
											"end": 17907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17737,
											"end": 17907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17656,
											"end": 17933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17656,
											"end": 17933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17656,
											"end": 17933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17656,
											"end": 17933,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 42691,
											"end": 42851,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 42691,
											"end": 42851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42790,
											"end": 42803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42784,
											"end": 42788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42777,
											"end": 42804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42830,
											"end": 42834,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42824,
											"end": 42828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42817,
											"end": 42835,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34339,
											"end": 34799,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 34339,
											"end": 34799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34479,
											"end": 34495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 34487,
											"end": 34494,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34479,
											"end": 34486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 34479,
											"end": 34495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34479,
											"end": 34495,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 34479,
											"end": 34495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 34510,
											"end": 34555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34550,
											"end": 34555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34527,
											"end": 34555,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34527,
											"end": 34555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34527,
											"end": 34546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 34527,
											"end": 34544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 34527,
											"end": 34546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34527,
											"end": 34546,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 34527,
											"end": 34546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34527,
											"end": 34555,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34527,
											"end": 34555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34527,
											"end": 34555,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34527,
											"end": 34555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34555,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 34510,
											"end": 34555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34506,
											"end": 34704,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34506,
											"end": 34704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 34506,
											"end": 34704,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34574,
											"end": 34618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34591,
											"end": 34596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34598,
											"end": 34617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34598,
											"end": 34615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 34598,
											"end": 34617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34598,
											"end": 34617,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34598,
											"end": 34617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34574,
											"end": 34590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 34574,
											"end": 34618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34574,
											"end": 34618,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34574,
											"end": 34618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34569,
											"end": 34704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 34569,
											"end": 34704,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34638,
											"end": 34689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 34646,
											"end": 34688,
											"name": "PUSH",
											"source": 0,
											"value": "CFB3B942"
										},
										{
											"begin": 34646,
											"end": 34688,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34646,
											"end": 34688,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34638,
											"end": 34645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 34638,
											"end": 34689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34638,
											"end": 34689,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 34638,
											"end": 34689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34569,
											"end": 34704,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 34569,
											"end": 34704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34506,
											"end": 34704,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 34506,
											"end": 34704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34747,
											"end": 34749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34729,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 34714,
											"end": 34738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34730,
											"end": 34737,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34738,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34714,
											"end": 34738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34738,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34714,
											"end": 34738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34714,
											"end": 34738,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34714,
											"end": 34744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34714,
											"end": 34749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34784,
											"end": 34791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34780,
											"end": 34782,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34773,
											"end": 34778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34764,
											"end": 34792,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 34453,
											"end": 34799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34339,
											"end": 34799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34339,
											"end": 34799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34339,
											"end": 34799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34339,
											"end": 34799,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5426,
											"end": 5516,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12533,
											"end": 14231,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 12533,
											"end": 14231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12600,
											"end": 12614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12649,
											"end": 12656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 12630,
											"end": 12643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 12630,
											"end": 12645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12630,
											"end": 12645,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 12630,
											"end": 12645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12630,
											"end": 12656,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12626,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 12626,
											"end": 14168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12681,
											"end": 12698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12672,
											"end": 12707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12672,
											"end": 12707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12783,
											"end": 12784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12755,
											"end": 12761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12755,
											"end": 12779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12755,
											"end": 12784,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12751,
											"end": 14158,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12751,
											"end": 14158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 12751,
											"end": 14158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12902,
											"end": 12903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12892,
											"end": 12898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12892,
											"end": 12903,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 13860,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 13860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 12888,
											"end": 13860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12942,
											"end": 12955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12942,
											"end": 12955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12938,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12931,
											"end": 12955,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12927,
											"end": 13004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 12927,
											"end": 13004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12957,
											"end": 13004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 12965,
											"end": 13003,
											"name": "PUSH",
											"source": 0,
											"value": "DF2D9B42"
										},
										{
											"begin": 12965,
											"end": 13003,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 12965,
											"end": 13003,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 12957,
											"end": 12964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12957,
											"end": 13004,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12957,
											"end": 13004,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 12957,
											"end": 13004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12927,
											"end": 13004,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 12927,
											"end": 13004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13591,
											"end": 13842,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13591,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13675,
											"end": 13692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13675,
											"end": 13703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13702,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13693,
											"end": 13702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13693,
											"end": 13702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13693,
											"end": 13702,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13693,
											"end": 13702,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13693,
											"end": 13702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13693,
											"end": 13702,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13675,
											"end": 13703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13675,
											"end": 13703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13675,
											"end": 13703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13675,
											"end": 13703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13675,
											"end": 13703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13675,
											"end": 13703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13675,
											"end": 13703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13675,
											"end": 13703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13675,
											"end": 13703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13675,
											"end": 13703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13675,
											"end": 13703,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13675,
											"end": 13703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13769,
											"end": 13770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13759,
											"end": 13765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13759,
											"end": 13770,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13780,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 13755,
											"end": 13780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13772,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13772,
											"end": 13780,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13780,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 13755,
											"end": 13780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13806,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 13806,
											"end": 13819,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13591,
											"end": 13842,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13591,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13591,
											"end": 13842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13591,
											"end": 13842,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 13860,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 12888,
											"end": 13860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14130,
											"end": 14143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 14130,
											"end": 14143,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12751,
											"end": 14158,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 12751,
											"end": 14158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12626,
											"end": 14168,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 12626,
											"end": 14168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14177,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 14185,
											"end": 14223,
											"name": "PUSH",
											"source": 0,
											"value": "DF2D9B42"
										},
										{
											"begin": 14185,
											"end": 14223,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14185,
											"end": 14223,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14177,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14177,
											"end": 14224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14177,
											"end": 14224,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 14177,
											"end": 14224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 14231,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 12533,
											"end": 14231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 14231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 14231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 14231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 14231,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18791,
											"end": 19265,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 18791,
											"end": 19265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18890,
											"end": 18917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18919,
											"end": 18942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 18996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18999,
											"end": 19014,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18999,
											"end": 19023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19015,
											"end": 19022,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18999,
											"end": 19023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18999,
											"end": 19023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18999,
											"end": 19023,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 19023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18958,
											"end": 19023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19150,
											"end": 19191,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19150,
											"end": 19191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19229,
											"end": 19248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19204,
											"end": 19249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19204,
											"end": 19249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19136,
											"end": 19259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18791,
											"end": 19265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18791,
											"end": 19265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18791,
											"end": 19265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18791,
											"end": 19265,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40721,
											"end": 40824,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 40721,
											"end": 40824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40781,
											"end": 40788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40807,
											"end": 40817,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 40800,
											"end": 40817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40800,
											"end": 40817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40721,
											"end": 40824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40721,
											"end": 40824,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18037,
											"end": 18683,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 18037,
											"end": 18683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18182,
											"end": 18193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18344,
											"end": 18360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18337,
											"end": 18342,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18333,
											"end": 18361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18324,
											"end": 18361,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18324,
											"end": 18361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18502,
											"end": 18518,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18491,
											"end": 18500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18487,
											"end": 18519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18474,
											"end": 18519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18474,
											"end": 18519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18650,
											"end": 18665,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18639,
											"end": 18648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18636,
											"end": 18666,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18628,
											"end": 18633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18617,
											"end": 18626,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18614,
											"end": 18634,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18611,
											"end": 18667,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 18601,
											"end": 18667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18601,
											"end": 18667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18037,
											"end": 18683,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18037,
											"end": 18683,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18037,
											"end": 18683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18037,
											"end": 18683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18037,
											"end": 18683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18037,
											"end": 18683,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25221,
											"end": 25375,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 25221,
											"end": 25375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25221,
											"end": 25375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25221,
											"end": 25375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25221,
											"end": 25375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25221,
											"end": 25375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25221,
											"end": 25375,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40048,
											"end": 40352,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 40048,
											"end": 40352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40179,
											"end": 40186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40198,
											"end": 40214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2516,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 40224,
											"end": 40243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40224,
											"end": 40265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40224,
											"end": 40265,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 40198,
											"end": 40266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40198,
											"end": 40266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2513,
											"end": 2516,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 40291,
											"end": 40322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 40302,
											"end": 40306,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40308,
											"end": 40310,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40312,
											"end": 40321,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40291,
											"end": 40301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 40291,
											"end": 40322,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40291,
											"end": 40322,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 40291,
											"end": 40322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40283,
											"end": 40323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 40283,
											"end": 40323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40283,
											"end": 40345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40283,
											"end": 40345,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40276,
											"end": 40345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40048,
											"end": 40352,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40048,
											"end": 40352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40048,
											"end": 40352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40048,
											"end": 40352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40048,
											"end": 40352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40048,
											"end": 40352,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14764,
											"end": 15207,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14764,
											"end": 15207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14844,
											"end": 14858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15009,
											"end": 15025,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15002,
											"end": 15007,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14998,
											"end": 15026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14989,
											"end": 15026,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14989,
											"end": 15026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15170,
											"end": 15181,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 15145,
											"end": 15168,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 15141,
											"end": 15182,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15138,
											"end": 15190,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15131,
											"end": 15136,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15128,
											"end": 15191,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14764,
											"end": 15207,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14764,
											"end": 15207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14764,
											"end": 15207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14764,
											"end": 15207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14764,
											"end": 15207,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26022,
											"end": 26175,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 26022,
											"end": 26175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26022,
											"end": 26175,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26603,
											"end": 27276,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 26603,
											"end": 27276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26761,
											"end": 26765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26806,
											"end": 26808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26781,
											"end": 26826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 26827,
											"end": 26846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 26827,
											"end": 26844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 26827,
											"end": 26846,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26827,
											"end": 26846,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 26827,
											"end": 26846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26848,
											"end": 26852,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26854,
											"end": 26861,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26863,
											"end": 26868,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 26781,
											"end": 26869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27076,
											"end": 27077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27059,
											"end": 27065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27059,
											"end": 27072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27059,
											"end": 27077,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27055,
											"end": 27168,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27055,
											"end": 27168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 27055,
											"end": 27168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27097,
											"end": 27153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 27105,
											"end": 27152,
											"name": "PUSH",
											"source": 0,
											"value": "D1A57ED6"
										},
										{
											"begin": 27105,
											"end": 27152,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27105,
											"end": 27152,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 27097,
											"end": 27104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 27097,
											"end": 27153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27097,
											"end": 27153,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 27097,
											"end": 27153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27055,
											"end": 27168,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 27055,
											"end": 27168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27238,
											"end": 27244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27232,
											"end": 27245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27223,
											"end": 27229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27219,
											"end": 27221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27215,
											"end": 27230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27208,
											"end": 27246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 26777,
											"end": 27270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26947,
											"end": 27001,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 26947,
											"end": 27001,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26947,
											"end": 27001,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26937,
											"end": 27001,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26937,
											"end": 27001,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26937,
											"end": 27001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26937,
											"end": 26943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26937,
											"end": 27001,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26937,
											"end": 27001,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26937,
											"end": 27001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26937,
											"end": 27001,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26930,
											"end": 27001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26930,
											"end": 27001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26930,
											"end": 27001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26603,
											"end": 27276,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26603,
											"end": 27276,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26603,
											"end": 27276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26603,
											"end": 27276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26603,
											"end": 27276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26603,
											"end": 27276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26603,
											"end": 27276,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10987,
											"end": 11079,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 10987,
											"end": 11079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11038,
											"end": 11051,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10987,
											"end": 11079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10987,
											"end": 11079,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40921,
											"end": 42629,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 40921,
											"end": 42629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40986,
											"end": 41003,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41414,
											"end": 41418,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 41407,
											"end": 41411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41401,
											"end": 41412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41397,
											"end": 41419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41504,
											"end": 41505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41498,
											"end": 41502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41491,
											"end": 41506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41577,
											"end": 41581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41574,
											"end": 41575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41570,
											"end": 41582,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41563,
											"end": 41582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41563,
											"end": 41582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41657,
											"end": 41658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41652,
											"end": 41655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41645,
											"end": 41659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41758,
											"end": 41761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41992,
											"end": 41997,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41974,
											"end": 42393,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 41974,
											"end": 42393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42000,
											"end": 42001,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41974,
											"end": 42393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41974,
											"end": 42393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 41974,
											"end": 42393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42039,
											"end": 42040,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42034,
											"end": 42037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42030,
											"end": 42041,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42023,
											"end": 42041,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42023,
											"end": 42041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42207,
											"end": 42209,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 42201,
											"end": 42205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42197,
											"end": 42210,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 42193,
											"end": 42195,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 42189,
											"end": 42211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42184,
											"end": 42187,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42176,
											"end": 42212,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 42299,
											"end": 42301,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 42293,
											"end": 42297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42289,
											"end": 42302,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42281,
											"end": 42302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42281,
											"end": 42302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42364,
											"end": 42368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42354,
											"end": 42379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 42354,
											"end": 42379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42372,
											"end": 42377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 42372,
											"end": 42377,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42354,
											"end": 42379,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 42354,
											"end": 42379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41974,
											"end": 42393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 41974,
											"end": 42393,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41974,
											"end": 42393,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 41974,
											"end": 42393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41978,
											"end": 41999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42430,
											"end": 42433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42425,
											"end": 42428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42421,
											"end": 42434,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42543,
											"end": 42547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42538,
											"end": 42541,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42534,
											"end": 42548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42527,
											"end": 42548,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42527,
											"end": 42548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42606,
											"end": 42612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42601,
											"end": 42604,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42594,
											"end": 42613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41024,
											"end": 42623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41024,
											"end": 42623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41024,
											"end": 42623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40921,
											"end": 42629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40921,
											"end": 42629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40921,
											"end": 42629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40921,
											"end": 42629,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39759,
											"end": 39902,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 39759,
											"end": 39902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39892,
											"end": 39898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39759,
											"end": 39902,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39759,
											"end": 39902,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39759,
											"end": 39902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39759,
											"end": 39902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39759,
											"end": 39902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39759,
											"end": 39902,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 611,
											"end": 616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 636,
											"end": 656,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 627,
											"end": 656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 627,
											"end": 656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 665,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 665,
											"end": 695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 568,
											"end": 701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 701,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 752,
											"end": 757,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 796,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 777,
											"end": 797,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 768,
											"end": 797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 768,
											"end": 797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 832,
											"end": 837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 806,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 806,
											"end": 838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 707,
											"end": 844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 707,
											"end": 844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 707,
											"end": 844,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 931,
											"end": 944,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 922,
											"end": 944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 922,
											"end": 944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 979,
											"end": 984,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 953,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 953,
											"end": 985,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 850,
											"end": 991,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 850,
											"end": 991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 850,
											"end": 991,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1065,
											"end": 1070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1117,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1099,
											"end": 1105,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1118,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 1122,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1081,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 1338,
											"end": 1341,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1336,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1311,
											"end": 1328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 1264,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1255,
											"end": 1342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1071,
											"end": 1348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1348,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1405,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1445,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 1481,
											"end": 1486,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 1454,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1493,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1609,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1582,
											"end": 1605,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1610,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 1613,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 1575,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 1803,
											"end": 1810,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1794,
											"end": 1800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1792,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1801,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 1758,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1811,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1704,
											"end": 1821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1828,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1902,
											"end": 1908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1947,
											"end": 1956,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1938,
											"end": 1945,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 1957,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1930,
											"end": 1962,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 1965,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 1927,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 2155,
											"end": 2162,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 2110,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2259,
											"end": 2281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2238,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1834,
											"end": 2308,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2442,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2459,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 2462,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 2424,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 2652,
											"end": 2659,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2641,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 2607,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 2711,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2771,
											"end": 2777,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2769,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2778,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2735,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2680,
											"end": 2798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2808,
											"end": 2926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2933,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3110,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3111,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 3114,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 3075,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3293,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3280,
											"end": 3302,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 3259,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3361,
											"end": 3363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3421,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3332,
											"end": 3450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 3560,
											"end": 3567,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3558,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 3515,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3505,
											"end": 3568,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3643,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3617,
											"end": 3649,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3676,
											"end": 3694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 3698,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 3662,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 3857,
											"end": 3864,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3833,
											"end": 3855,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 3803,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3588,
											"end": 3875,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 3882,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4010,
											"end": 4012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4007,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 3996,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3985,
											"end": 4008,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 4013,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 4016,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 3978,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 4206,
											"end": 4213,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4197,
											"end": 4203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4195,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4182,
											"end": 4204,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 4161,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4151,
											"end": 4214,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 4331,
											"end": 4338,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4307,
											"end": 4329,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 4289,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4234,
											"end": 4349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3888,
											"end": 4356,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4487,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4485,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4490,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 4493,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 4455,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4613,
											"end": 4614,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 4683,
											"end": 4690,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4663,
											"end": 4672,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4659,
											"end": 4681,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 4638,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4628,
											"end": 4691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4584,
											"end": 4701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4740,
											"end": 4742,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 4811,
											"end": 4818,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4802,
											"end": 4808,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4809,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 4766,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4756,
											"end": 4819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4711,
											"end": 4829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4362,
											"end": 4836,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4906,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4937,
											"end": 4946,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4928,
											"end": 4935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4924,
											"end": 4947,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4920,
											"end": 4952,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 4955,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 4917,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5075,
											"end": 5076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 5144,
											"end": 5151,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5120,
											"end": 5142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 5100,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5046,
											"end": 5162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4842,
											"end": 5169,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5279,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5268,
											"end": 5291,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5264,
											"end": 5296,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 5299,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 5261,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5419,
											"end": 5420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 5499,
											"end": 5506,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5490,
											"end": 5496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5479,
											"end": 5488,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5475,
											"end": 5497,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 5444,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5434,
											"end": 5507,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5175,
											"end": 5524,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5626,
											"end": 5635,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5617,
											"end": 5624,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5613,
											"end": 5636,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5609,
											"end": 5641,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 5644,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 5606,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 5834,
											"end": 5841,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5825,
											"end": 5831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5814,
											"end": 5823,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5810,
											"end": 5832,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 5789,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5779,
											"end": 5842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5530,
											"end": 5859,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 5952,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5947,
											"end": 5950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5940,
											"end": 5977,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5865,
											"end": 5983,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 6085,
											"end": 6090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 6070,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6065,
											"end": 6068,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6058,
											"end": 6092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 6098,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6190,
											"end": 6193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 6250,
											"end": 6255,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 6218,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6330,
											"end": 6333,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 6272,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6265,
											"end": 6342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6391,
											"end": 6394,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6377,
											"end": 6382,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6373,
											"end": 6389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 6351,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6450,
											"end": 6456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6419,
											"end": 6458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6412,
											"end": 6458,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6194,
											"end": 6464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6464,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6558,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 6619,
											"end": 6624,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 6586,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6700,
											"end": 6703,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 6641,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6712,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 6766,
											"end": 6772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6761,
											"end": 6764,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6754,
											"end": 6758,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6747,
											"end": 6752,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6743,
											"end": 6759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 6721,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 6798,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6793,
											"end": 6796,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6789,
											"end": 6828,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6828,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6470,
											"end": 6834,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6946,
											"end": 6949,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 7007,
											"end": 7012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 6974,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7106,
											"end": 7109,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 7029,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7022,
											"end": 7118,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7022,
											"end": 7118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 7172,
											"end": 7178,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7167,
											"end": 7170,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7160,
											"end": 7164,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7153,
											"end": 7158,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7149,
											"end": 7165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 7127,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7204,
											"end": 7210,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7199,
											"end": 7202,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7195,
											"end": 7211,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 7217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6840,
											"end": 7217,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 7328,
											"end": 7333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 7310,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7305,
											"end": 7308,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7341,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 7640,
											"end": 7643,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7631,
											"end": 7637,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 7549,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7542,
											"end": 7644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7542,
											"end": 7644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 7752,
											"end": 7755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 7661,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7654,
											"end": 7756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7773,
											"end": 7776,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7766,
											"end": 7776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7766,
											"end": 7776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7782,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7881,
											"end": 7885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7919,
											"end": 7921,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7908,
											"end": 7917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7904,
											"end": 7922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 7922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 7922,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 8000,
											"end": 8001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 7998,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 8002,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7976,
											"end": 7982,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 7932,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7788,
											"end": 8010,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8211,
											"end": 8215,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8252,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8238,
											"end": 8247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8253,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8226,
											"end": 8253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8226,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 8331,
											"end": 8332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8320,
											"end": 8329,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8316,
											"end": 8333,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8307,
											"end": 8313,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 8263,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 8344,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 8494,
											"end": 8496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8483,
											"end": 8492,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8470,
											"end": 8476,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 8426,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8545,
											"end": 8554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8535,
											"end": 8555,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8532,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8519,
											"end": 8528,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8508,
											"end": 8556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 8644,
											"end": 8648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8635,
											"end": 8641,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 8573,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8565,
											"end": 8649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8565,
											"end": 8649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8016,
											"end": 8656,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8776,
											"end": 8785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8772,
											"end": 8790,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8764,
											"end": 8790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8764,
											"end": 8790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 8862,
											"end": 8863,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8860,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8847,
											"end": 8864,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 8844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 8800,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8662,
											"end": 8872,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8991,
											"end": 8995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9029,
											"end": 9031,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9018,
											"end": 9027,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9078,
											"end": 9087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9072,
											"end": 9076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9068,
											"end": 9088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9064,
											"end": 9065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9062,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9089,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 9179,
											"end": 9183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9170,
											"end": 9176,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 9106,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8878,
											"end": 9191,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9290,
											"end": 9294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9328,
											"end": 9330,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9317,
											"end": 9326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9313,
											"end": 9331,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 9409,
											"end": 9410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9398,
											"end": 9407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9394,
											"end": 9411,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9385,
											"end": 9391,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 9341,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9197,
											"end": 9419,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9459,
											"end": 9465,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 9486,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9476,
											"end": 9506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9476,
											"end": 9506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 9543,
											"end": 9547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9535,
											"end": 9541,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "tag",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 9515,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9425,
											"end": 9554,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9593,
											"end": 9599,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9626,
											"end": 9628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9620,
											"end": 9629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9610,
											"end": 9629,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9560,
											"end": 9635,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9702,
											"end": 9706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9784,
											"end": 9790,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9781,
											"end": 9811,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 9814,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 9778,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 9874,
											"end": 9880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "tag",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 9852,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9844,
											"end": 9881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9844,
											"end": 9881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9940,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 9934,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9926,
											"end": 9941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9918,
											"end": 9941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9918,
											"end": 9941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9948,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10005,
											"end": 10011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10033,
											"end": 10045,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10023,
											"end": 10045,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10023,
											"end": 10045,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9954,
											"end": 10052,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10138,
											"end": 10150,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10128,
											"end": 10150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10128,
											"end": 10150,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10058,
											"end": 10157,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10257,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10280,
											"end": 10286,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10275,
											"end": 10278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10268,
											"end": 10287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10320,
											"end": 10324,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10315,
											"end": 10318,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10311,
											"end": 10325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10296,
											"end": 10325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10296,
											"end": 10325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10163,
											"end": 10331,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10421,
											"end": 10432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10450,
											"end": 10453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10443,
											"end": 10462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10490,
											"end": 10493,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10486,
											"end": 10500,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10471,
											"end": 10500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10471,
											"end": 10500,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10337,
											"end": 10506,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10614,
											"end": 10625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10651,
											"end": 10654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10512,
											"end": 10660,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10710,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 10750,
											"end": 10755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 10732,
											"end": 10756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10721,
											"end": 10756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10721,
											"end": 10756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10666,
											"end": 10762,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10802,
											"end": 10809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10845,
											"end": 10850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10851,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10831,
											"end": 10852,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10852,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10858,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10900,
											"end": 10907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10940,
											"end": 11006,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10933,
											"end": 10938,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10929,
											"end": 11007,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10918,
											"end": 11007,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10918,
											"end": 11007,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10864,
											"end": 11013,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "tag",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11056,
											"end": 11063,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11138,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11089,
											"end": 11094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11085,
											"end": 11139,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11074,
											"end": 11139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11074,
											"end": 11139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11019,
											"end": 11145,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11188,
											"end": 11195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11217,
											"end": 11222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11206,
											"end": 11222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11151,
											"end": 11228,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11318,
											"end": 11324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11313,
											"end": 11316,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11308,
											"end": 11311,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11295,
											"end": 11325,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 11380,
											"end": 11381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11371,
											"end": 11377,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11366,
											"end": 11369,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11362,
											"end": 11378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11382,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11234,
											"end": 11388,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11462,
											"end": 11463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "tag",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11486,
											"end": 11492,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11483,
											"end": 11484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11480,
											"end": 11493,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11566,
											"end": 11569,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11562,
											"end": 11573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11552,
											"end": 11553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11547,
											"end": 11550,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11543,
											"end": 11554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11536,
											"end": 11575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11510,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11505,
											"end": 11506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11501,
											"end": 11511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 11472,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11603,
											"end": 11609,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11600,
											"end": 11601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11597,
											"end": 11610,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11674,
											"end": 11680,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11669,
											"end": 11672,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11665,
											"end": 11681,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11658,
											"end": 11685,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 11594,
											"end": 11695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11443,
											"end": 11701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11394,
											"end": 11701,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11751,
											"end": 11757,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11788,
											"end": 11789,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11782,
											"end": 11786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11790,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11768,
											"end": 11790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11768,
											"end": 11790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11835,
											"end": 11836,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11829,
											"end": 11833,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11825,
											"end": 11837,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11856,
											"end": 11874,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11912,
											"end": 11916,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 11904,
											"end": 11910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11900,
											"end": 11917,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11890,
											"end": 11917,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11890,
											"end": 11917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "tag",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 11846,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 11976,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11966,
											"end": 11972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11963,
											"end": 11977,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11943,
											"end": 11961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11940,
											"end": 11978,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "tag",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "tag",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 11937,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11758,
											"end": 12027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11707,
											"end": 12027,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 12138,
											"end": 12142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12108,
											"end": 12114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12104,
											"end": 12144,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12246,
											"end": 12252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12234,
											"end": 12244,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12231,
											"end": 12253,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12198,
											"end": 12208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12195,
											"end": 12229,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 12192,
											"end": 12254,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "tag",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 12257,
											"end": 12275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "tag",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 12189,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12297,
											"end": 12307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12293,
											"end": 12295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12286,
											"end": 12308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12076,
											"end": 12314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12033,
											"end": 12314,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12320,
											"end": 12500,
											"name": "tag",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 12320,
											"end": 12500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12368,
											"end": 12445,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12365,
											"end": 12366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12358,
											"end": 12446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12465,
											"end": 12469,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 12462,
											"end": 12463,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12455,
											"end": 12470,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12489,
											"end": 12493,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 12486,
											"end": 12487,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12479,
											"end": 12494,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12506,
											"end": 12686,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 12506,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12554,
											"end": 12631,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12551,
											"end": 12552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12544,
											"end": 12632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12651,
											"end": 12655,
											"name": "PUSH",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 12648,
											"end": 12649,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12641,
											"end": 12656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12675,
											"end": 12679,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 12672,
											"end": 12673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12665,
											"end": 12680,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 12692,
											"end": 12809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12801,
											"end": 12802,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12798,
											"end": 12799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12791,
											"end": 12803,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12815,
											"end": 12932,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 12815,
											"end": 12932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12924,
											"end": 12925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12921,
											"end": 12922,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12914,
											"end": 12926,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12938,
											"end": 13055,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 12938,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13047,
											"end": 13048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13049,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13061,
											"end": 13178,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 13061,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13170,
											"end": 13171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13167,
											"end": 13168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13160,
											"end": 13172,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13225,
											"end": 13231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13276,
											"end": 13278,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 13272,
											"end": 13279,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13267,
											"end": 13269,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 13260,
											"end": 13265,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13256,
											"end": 13270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13252,
											"end": 13280,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13242,
											"end": 13280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13242,
											"end": 13280,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13184,
											"end": 13286,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 13383,
											"end": 13388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "tag",
											"source": 2,
											"value": "422"
										},
										{
											"begin": 13365,
											"end": 13389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13358,
											"end": 13363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13355,
											"end": 13390,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13404,
											"end": 13405,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13401,
											"end": 13402,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13394,
											"end": 13406,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "tag",
											"source": 2,
											"value": "423"
										},
										{
											"begin": 13345,
											"end": 13408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13292,
											"end": 13414,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 13505,
											"end": 13510,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "tag",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 13490,
											"end": 13511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13483,
											"end": 13488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13480,
											"end": 13512,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13526,
											"end": 13527,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13523,
											"end": 13524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13516,
											"end": 13528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "tag",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 13470,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13536,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 13631,
											"end": 13636,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "tag",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 13614,
											"end": 13637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13607,
											"end": 13612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13604,
											"end": 13638,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13652,
											"end": 13653,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13650,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13642,
											"end": 13654,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "tag",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 13594,
											"end": 13656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13542,
											"end": 13662,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 13759,
											"end": 13764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "tag",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 13741,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13734,
											"end": 13739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13731,
											"end": 13766,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13780,
											"end": 13781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13770,
											"end": 13782,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "tag",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13668,
											"end": 13790,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"extensions/erc721a/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"extensions/erc721a/ERC721A.sol\":{\"keccak256\":\"0xadb313dd36dea942e75461ac031c384b5b32f3c8c0e8363aba564831e3543ec5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e70dab654259fb65ba0824f3527e67dbe078bb8bcf4e000c282c2da0c96247d5\",\"dweb:/ipfs/QmXSchMdLnqNeJoQRBj81YRjPwN7HhNJ576H8SnxQmoqWE\"]},\"extensions/erc721a/IERC721A.sol\":{\"keccak256\":\"0xd369e9647904487d09c2aaa736baa5d7a4629d699e8d04cd6eb365b4921422ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d76a2749515b1cc5dfafcae19738f0360bb4cdbb480b755bce38a837ce0566d\",\"dweb:/ipfs/QmTfrYAMbdSsWq529WqTRun8LpxTP3kwoQzLU18ode4NbS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 91,
								"contract": "extensions/erc721a/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 93,
								"contract": "extensions/erc721a/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 95,
								"contract": "extensions/erc721a/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 97,
								"contract": "extensions/erc721a/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 101,
								"contract": "extensions/erc721a/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 105,
								"contract": "extensions/erc721a/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 110,
								"contract": "extensions/erc721a/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)23_storage)"
							},
							{
								"astId": 116,
								"contract": "extensions/erc721a/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)23_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)23_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)23_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 22,
										"contract": "extensions/erc721a/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"extensions/erc721a/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"extensions/erc721a/ERC721A.sol\":{\"keccak256\":\"0xadb313dd36dea942e75461ac031c384b5b32f3c8c0e8363aba564831e3543ec5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e70dab654259fb65ba0824f3527e67dbe078bb8bcf4e000c282c2da0c96247d5\",\"dweb:/ipfs/QmXSchMdLnqNeJoQRBj81YRjPwN7HhNJ576H8SnxQmoqWE\"]},\"extensions/erc721a/IERC721A.sol\":{\"keccak256\":\"0xd369e9647904487d09c2aaa736baa5d7a4629d699e8d04cd6eb365b4921422ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d76a2749515b1cc5dfafcae19738f0360bb4cdbb480b755bce38a837ce0566d\",\"dweb:/ipfs/QmTfrYAMbdSsWq529WqTRun8LpxTP3kwoQzLU18ode4NbS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"extensions/erc721a/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"extensions/erc721a/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"extensions/erc721a/IERC721A.sol\":{\"keccak256\":\"0xd369e9647904487d09c2aaa736baa5d7a4629d699e8d04cd6eb365b4921422ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d76a2749515b1cc5dfafcae19738f0360bb4cdbb480b755bce38a837ce0566d\",\"dweb:/ipfs/QmTfrYAMbdSsWq529WqTRun8LpxTP3kwoQzLU18ode4NbS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"extensions/erc721a/ERC721A.sol": {
				"ast": {
					"absolutePath": "extensions/erc721a/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							1754
						],
						"ERC721A__IERC721Receiver": [
							17
						],
						"IERC721A": [
							1960
						]
					},
					"id": 1755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:0"
						},
						{
							"absolutePath": "extensions/erc721a/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1755,
							"sourceUnit": 1961,
							"src": "109:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "135:51:0",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "197:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "237:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "271:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "263:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "297:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "289:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "311:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "351:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "336:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "336:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:108:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "380:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 13,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:0"
									},
									"scope": 17,
									"src": "228:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1755,
							"src": "187:203:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 19,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1960,
										"src": "915:8:0"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "915:8:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 18,
								"nodeType": "StructuredDocumentation",
								"src": "392:502:0",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1754,
							"linearizedBaseContracts": [
								1754,
								1960
							],
							"name": "ERC721A",
							"nameLocation": "904:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1057:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "1049:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1022:16:0",
									"nodeType": "StructDefinition",
									"scope": 1754,
									"src": "1015:54:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 31,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1330:27:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "1305:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1305:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1361:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1366:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 28,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1360:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 29,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1372:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1360:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 34,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1471:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "1446:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 32,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1446:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1495:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 37,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1595:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "1570:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 35,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1570:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 36,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1619:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 40,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1711:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "1686:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 38,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1686:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 39,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1725:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 48,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1841:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "1816:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 41,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1816:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 47,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1868:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1873:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1868:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 45,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1867:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 46,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1880:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1867:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 51,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "1978:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "1953:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1953:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 50,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2004:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 56,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2100:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "2075:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 52,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2075:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 55,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 53,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2118:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 54,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2123:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2118:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 59,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2232:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "2207:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 57,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2207:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 58,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2259:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 64,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2364:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "2339:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 60,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2339:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 61,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2392:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 62,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2397:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2392:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 67,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2492:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "2467:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 65,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2467:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 66,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2513:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 75,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2634:30:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "2609:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 68,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2609:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 74,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2668:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2673:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2668:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 72,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2667:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 73,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2680:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2667:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 83,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2766:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "2741:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 76,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2741:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 82,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2786:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2791:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2786:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 80,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2785:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 81,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2798:1:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2785:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 86,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3107:32:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "3082:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 84,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3082:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 85,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3142:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 89,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3293:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "3268:127:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 87,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3268:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 88,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3329:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3638:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "3622:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 90,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3622:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 93,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3710:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "3694:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 92,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3694:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3762:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "3747:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 94,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3747:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 97,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3809:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "3794:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 96,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3794:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 101,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4236:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "4200:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 100,
										"keyType": {
											"id": 98,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4208:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4200:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 99,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4219:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 105,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4495:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "4459:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 104,
										"keyType": {
											"id": 102,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 103,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 110,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4615:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "4570:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 109,
										"keyType": {
											"id": 106,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4578:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4570:36:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueType": {
											"id": 108,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 107,
												"name": "TokenApprovalRef",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "4589:16:0"
											},
											"referencedDeclaration": 23,
											"src": "4589:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 116,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4738:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1754,
									"src": "4685:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 115,
										"keyType": {
											"id": 111,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4693:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4685:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 114,
											"keyType": {
												"id": 112,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4712:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4704:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 113,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4723:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "5002:98:0",
										"statements": [
											{
												"expression": {
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 123,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "5012:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 124,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "5020:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5012:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "5012:13:0"
											},
											{
												"expression": {
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 127,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "5035:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 128,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "5045:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5035:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "5035:17:0"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 131,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "5062:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 132,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "5078:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5078:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5062:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "5062:31:0"
											}
										]
									},
									"id": 137,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "4972:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "4958:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4958:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "4993:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "4979:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 119,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4979:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:44:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5002:0:0"
									},
									"scope": 1754,
									"src": "4946:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "5491:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5508:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 142,
												"id": 144,
												"nodeType": "Return",
												"src": "5501:8:0"
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "5296:125:0",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5435:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5448:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "5482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5481:9:0"
									},
									"scope": 1754,
									"src": "5426:90:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "5654:37:0",
										"statements": [
											{
												"expression": {
													"id": 152,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "5671:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 151,
												"id": 153,
												"nodeType": "Return",
												"src": "5664:20:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "5522:63:0",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "5599:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5611:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5645:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:9:0"
									},
									"scope": 1754,
									"src": "5590:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1811
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "5964:247:0",
										"statements": [
											{
												"id": 169,
												"nodeType": "UncheckedBlock",
												"src": "6117:88:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 162,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "6148:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 163,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "6164:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6148:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 165,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "6179:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6148:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 161,
														"id": 168,
														"nodeType": "Return",
														"src": "6141:53:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5697:192:0",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5903:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5937:8:0"
									},
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5914:2:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "5955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:0"
									},
									"scope": 1754,
									"src": "5894:317:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "6368:226:0",
										"statements": [
											{
												"id": 182,
												"nodeType": "UncheckedBlock",
												"src": "6515:73:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 177,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "6546:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "6562:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6562:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6546:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 176,
														"id": 181,
														"nodeType": "Return",
														"src": "6539:38:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6217:82:0",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6325:2:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6359:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:9:0"
									},
									"scope": 1754,
									"src": "6304:290:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "6735:36:0",
										"statements": [
											{
												"expression": {
													"id": 190,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 93,
													"src": "6752:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 191,
												"nodeType": "Return",
												"src": "6745:19:0"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "6600:66:0",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "6680:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6692:2:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "6726:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6725:9:0"
									},
									"scope": 1754,
									"src": "6671:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1854
									],
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7126:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 202,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "7140:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7157:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7149:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 203,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7149:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7140:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "7136:69:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 209,
																	"name": "BalanceQueryForZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "7169:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "7169:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 208,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "7161:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7161:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 212,
													"nodeType": "ExpressionStatement",
													"src": "7161:44:0"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 214,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "7222:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 216,
														"indexExpression": {
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "7241:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7222:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 217,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7250:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7222:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 201,
												"id": 219,
												"nodeType": "Return",
												"src": "7215:62:0"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "6966:74:0",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7054:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 198,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7099:8:0"
									},
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7072:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "7064:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7063:15:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "7117:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7116:9:0"
									},
									"scope": 1754,
									"src": "7045:239:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "7431:106:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 229,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "7449:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 231,
																	"indexExpression": {
																		"id": 230,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "7468:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7449:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 232,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "7478:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7449:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 234,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7448:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 235,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7503:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7448:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 228,
												"id": 237,
												"nodeType": "Return",
												"src": "7441:89:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "7290:66:0",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7370:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7392:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7384:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7383:15:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7422:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7421:9:0"
									},
									"scope": 1754,
									"src": "7361:176:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "7700:106:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 247,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "7718:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 249,
																	"indexExpression": {
																		"id": 248,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "7737:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7718:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 250,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "7747:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7718:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 252,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7717:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 253,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "7772:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7717:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 255,
												"nodeType": "Return",
												"src": "7710:89:0"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "7543:82:0",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7639:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7661:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "7653:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7652:15:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "7691:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7691:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7690:9:0"
									},
									"scope": 1754,
									"src": "7630:176:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "7982:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 267,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "8006:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 269,
																"indexExpression": {
																	"id": 268,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "8025:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8006:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 270,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "8035:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8006:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7999:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 265,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7999:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7999:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 264,
												"id": 273,
												"nodeType": "Return",
												"src": "7992:55:0"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "7812:102:0",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7928:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7944:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "7936:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7935:15:0"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "7974:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 262,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7974:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7973:8:0"
									},
									"scope": 1754,
									"src": "7919:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "8297:334:0",
										"statements": [
											{
												"assignments": [
													284
												],
												"declarations": [
													{
														"constant": false,
														"id": 284,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "8315:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "8307:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 283,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8307:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"baseExpression": {
														"id": 285,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "8324:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 287,
													"indexExpression": {
														"id": 286,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8343:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8324:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8307:42:0"
											},
											{
												"assignments": [
													290
												],
												"declarations": [
													{
														"constant": false,
														"id": 290,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8367:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "8359:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 289,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8359:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 291,
												"nodeType": "VariableDeclarationStatement",
												"src": "8359:17:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8459:40:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8473:16:0",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "8486:3:0"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "8473:9:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 280,
														"isOffset": false,
														"isSlot": false,
														"src": "8486:3:0",
														"valueSize": 1
													},
													{
														"declaration": 290,
														"isOffset": false,
														"isSlot": false,
														"src": "8473:9:0",
														"valueSize": 1
													}
												],
												"id": 292,
												"nodeType": "InlineAssembly",
												"src": "8450:49:0"
											},
											{
												"expression": {
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 293,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "8508:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 294,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "8518:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 295,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "8527:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8518:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 297,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8517:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8555:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 299,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "8568:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8555:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 301,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8554:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8517:63:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8508:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "8508:72:0"
											},
											{
												"expression": {
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 305,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "8590:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 307,
														"indexExpression": {
															"id": 306,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "8609:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8590:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 308,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "8618:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8590:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "8590:34:0"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "8060:171:0",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8245:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8261:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "8253:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8275:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "8268:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 279,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8268:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8252:27:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8297:0:0"
									},
									"scope": 1754,
									"src": "8236:395:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1819
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "9255:539:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 321,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "9567:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9582:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "9567:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 324,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "9643:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9658:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "9643:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9567:101:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 328,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "9719:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9734:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "9719:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9567:177:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 320,
												"id": 332,
												"nodeType": "Return",
												"src": "9548:196:0"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "8818:341:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "9173:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 317,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9231:8:0"
									},
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "9198:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "9191:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 314,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9191:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9190:20:0"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "9249:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9248:6:0"
									},
									"scope": 1754,
									"src": "9164:630:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1934
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "10117:29:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 95,
													"src": "10134:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "10127:12:0"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "9985:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10057:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 337,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10084:8:0"
									},
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10061:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "10102:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 338,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10102:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10101:15:0"
									},
									"scope": 1754,
									"src": "10048:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1940
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "10288:31:0",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 97,
													"src": "10305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "10298:14:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "10152:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10226:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 347,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10255:8:0"
									},
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10232:2:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "10273:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10272:15:0"
									},
									"scope": 1754,
									"src": "10217:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1948
									],
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "10508:234:0",
										"statements": [
											{
												"condition": {
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10522:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 364,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "10531:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 363,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "10523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10523:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"nodeType": "IfStatement",
												"src": "10518:68:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 368,
																	"name": "URIQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "10549:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "10549:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 367,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "10541:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10541:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 371,
													"nodeType": "ExpressionStatement",
													"src": "10541:45:0"
												}
											},
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10611:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 398,
														"src": "10597:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 373,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10597:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "10621:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10621:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10597:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 380,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "10654:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10648:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 378,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10648:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10648:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10648:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10673:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10648:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10733:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10648:87:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 389,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "10701:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 391,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 357,
																				"src": "10720:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 390,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1745,
																			"src": "10710:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10710:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 387,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "10684:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "10684:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10684:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10677:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 385,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "10677:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10677:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 362,
												"id": 397,
												"nodeType": "Return",
												"src": "10641:94:0"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "10325:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10429:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 359,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10475:8:0"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10446:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "10438:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10437:17:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "10493:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10493:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10492:15:0"
									},
									"scope": 1754,
									"src": "10420:322:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "11053:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11070:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 404,
												"id": 406,
												"nodeType": "Return",
												"src": "11063:9:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "10748:234:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "10996:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11004:2:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "11038:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11038:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11037:15:0"
									},
									"scope": 1754,
									"src": "10987:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1862
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "11490:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 422,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "11542:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 421,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "11523:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11523:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11515:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 419,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11515:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11515:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11507:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 417,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11507:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11507:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 416,
												"id": 426,
												"nodeType": "Return",
												"src": "11500:52:0"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "11273:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11418:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 413,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11463:8:0"
									},
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11434:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "11426:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11425:17:0"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "11481:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11480:9:0"
									},
									"scope": 1754,
									"src": "11409:150:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "11835:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 439,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "11890:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 438,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "11871:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11871:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 437,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "11852:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1805_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11852:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1805_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 436,
												"id": 442,
												"nodeType": "Return",
												"src": "11845:54:0"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "11565:172:0",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "11751:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11772:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11764:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11763:17:0"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11812:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1805_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 434,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 433,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1805,
														"src": "11812:14:0"
													},
													"referencedDeclaration": 1805,
													"src": "11812:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1805_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11811:23:0"
									},
									"scope": 1754,
									"src": "11742:164:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "12088:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 454,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "12124:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 456,
															"indexExpression": {
																"id": 455,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "12142:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12124:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "12105:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1805_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12105:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1805_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 452,
												"id": 458,
												"nodeType": "Return",
												"src": "12098:51:0"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "11912:80:0",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "12006:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12027:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "12019:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12018:15:0"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "12065:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1805_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 450,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 449,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1805,
														"src": "12065:14:0"
													},
													"referencedDeclaration": 1805,
													"src": "12065:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1805_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12064:23:0"
									},
									"scope": 1754,
									"src": "11997:159:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "12328:128:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 466,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "12342:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 468,
														"indexExpression": {
															"id": 467,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "12360:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12342:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12370:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12342:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "12338:112:0",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "12373:77:0",
													"statements": [
														{
															"expression": {
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 471,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 101,
																		"src": "12387:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 473,
																	"indexExpression": {
																		"id": 472,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "12405:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12387:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 475,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "12433:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 474,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "12414:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12414:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12387:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 478,
															"nodeType": "ExpressionStatement",
															"src": "12387:52:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "12162:97:0",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "12273:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12304:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "12296:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12295:15:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12328:0:0"
									},
									"scope": 1754,
									"src": "12264:192:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "12616:1615:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 490,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "12630:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12630:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 492,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "12649:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12630:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "12626:1542:0",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "12658:1510:0",
													"statements": [
														{
															"expression": {
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 494,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "12672:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 495,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 101,
																		"src": "12681:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 497,
																	"indexExpression": {
																		"id": 496,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "12699:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12681:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12672:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 499,
															"nodeType": "ExpressionStatement",
															"src": "12672:35:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 500,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "12755:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 501,
																		"name": "_BITMASK_BURNED",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 56,
																		"src": "12764:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12755:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12783:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12755:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 539,
															"nodeType": "IfStatement",
															"src": "12751:1407:0",
															"trueBody": {
																"id": 538,
																"nodeType": "Block",
																"src": "12786:1372:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 505,
																				"name": "packed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 488,
																				"src": "12892:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12902:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "12892:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 535,
																		"nodeType": "IfStatement",
																		"src": "12888:972:0",
																		"trueBody": {
																			"id": 534,
																			"nodeType": "Block",
																			"src": "12905:955:0",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 510,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 508,
																							"name": "tokenId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 485,
																							"src": "12931:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"id": 509,
																							"name": "_currentIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 91,
																							"src": "12942:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12931:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 516,
																					"nodeType": "IfStatement",
																					"src": "12927:77:0",
																					"trueBody": {
																						"expression": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 512,
																										"name": "OwnerQueryForNonexistentToken",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1775,
																										"src": "12965:29:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_error_pure$__$returns$__$",
																											"typeString": "function () pure"
																										}
																									},
																									"id": 513,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "selector",
																									"nodeType": "MemberAccess",
																									"src": "12965:38:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								],
																								"id": 511,
																								"name": "_revert",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1753,
																								"src": "12957:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																									"typeString": "function (bytes4) pure"
																								}
																							},
																							"id": 514,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "12957:47:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 515,
																						"nodeType": "ExpressionStatement",
																						"src": "12957:47:0"
																					}
																				},
																				{
																					"body": {
																						"id": 532,
																						"nodeType": "Block",
																						"src": "13600:242:0",
																						"statements": [
																							{
																								"id": 524,
																								"nodeType": "UncheckedBlock",
																								"src": "13626:104:0",
																								"statements": [
																									{
																										"expression": {
																											"id": 522,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftHandSide": {
																												"id": 517,
																												"name": "packed",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 488,
																												"src": "13666:6:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "Assignment",
																											"operator": "=",
																											"rightHandSide": {
																												"baseExpression": {
																													"id": 518,
																													"name": "_packedOwnerships",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 101,
																													"src": "13675:17:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																														"typeString": "mapping(uint256 => uint256)"
																													}
																												},
																												"id": 521,
																												"indexExpression": {
																													"id": 520,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "UnaryOperation",
																													"operator": "--",
																													"prefix": true,
																													"src": "13693:9:0",
																													"subExpression": {
																														"id": 519,
																														"name": "tokenId",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 485,
																														"src": "13695:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "13675:28:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "13666:37:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 523,
																										"nodeType": "ExpressionStatement",
																										"src": "13666:37:0"
																									}
																								]
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 527,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 525,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 488,
																										"src": "13759:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"hexValue": "30",
																										"id": 526,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "13769:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"src": "13759:11:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 529,
																								"nodeType": "IfStatement",
																								"src": "13755:25:0",
																								"trueBody": {
																									"id": 528,
																									"nodeType": "Continue",
																									"src": "13772:8:0"
																								}
																							},
																							{
																								"expression": {
																									"id": 530,
																									"name": "packed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 488,
																									"src": "13813:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"functionReturnParameters": 489,
																								"id": 531,
																								"nodeType": "Return",
																								"src": "13806:13:0"
																							}
																						]
																					},
																					"id": 533,
																					"nodeType": "ForStatement",
																					"src": "13591:251:0"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 536,
																			"name": "packed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "14137:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 489,
																		"id": 537,
																		"nodeType": "Return",
																		"src": "14130:13:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 543,
																"name": "OwnerQueryForNonexistentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "14185:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "14185:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 542,
														"name": "_revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "14177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14177:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "14177:47:0"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "12462:66:0",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "12542:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12569:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "12561:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12560:17:0"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "12608:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "12600:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12599:16:0"
									},
									"scope": 1754,
									"src": "12533:1698:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "14424:262:0",
										"statements": [
											{
												"expression": {
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 557,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "14434:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1805_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 559,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1798,
														"src": "14434:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 564,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "14467:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14459:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 562,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "14459:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14459:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14451:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 560,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14451:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14451:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14434:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "14434:41:0"
											},
											{
												"expression": {
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 569,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "14485:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1805_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1800,
														"src": "14485:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 574,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "14519:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 575,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "14529:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14519:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14512:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 572,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "14512:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14512:41:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "14485:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "14485:68:0"
											},
											{
												"expression": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 580,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "14563:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1805_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1802,
														"src": "14563:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 583,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "14582:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 584,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "14591:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14582:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14610:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14582:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14563:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "14563:48:0"
											},
											{
												"expression": {
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 590,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "14621:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1805_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 592,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1804,
														"src": "14621:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 595,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "14650:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 596,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "14660:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14650:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14643:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 593,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "14643:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14643:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "14621:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "14621:58:0"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "14237:83:0",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "14334:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14361:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "14353:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14352:16:0"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "14413:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "14391:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1805_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 554,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 553,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1805,
														"src": "14391:14:0"
													},
													"referencedDeclaration": 1805,
													"src": "14391:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1805_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14390:33:0"
									},
									"scope": 1754,
									"src": "14325:361:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "14860:347:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14879:322:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14989:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15002:5:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "15009:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14998:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "14998:28:0"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "14989:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15118:73:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15131:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "15145:23:0"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "15170:9:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15170:11:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "15141:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15141:41:0"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "15184:5:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "15138:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15138:52:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15128:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "15128:63:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15118:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "15009:16:0",
														"valueSize": 1
													},
													{
														"declaration": 51,
														"isOffset": false,
														"isSlot": false,
														"src": "15145:23:0",
														"valueSize": 1
													},
													{
														"declaration": 607,
														"isOffset": false,
														"isSlot": false,
														"src": "15184:5:0",
														"valueSize": 1
													},
													{
														"declaration": 605,
														"isOffset": false,
														"isSlot": false,
														"src": "14989:5:0",
														"valueSize": 1
													},
													{
														"declaration": 605,
														"isOffset": false,
														"isSlot": false,
														"src": "15002:5:0",
														"valueSize": 1
													},
													{
														"declaration": 605,
														"isOffset": false,
														"isSlot": false,
														"src": "15131:5:0",
														"valueSize": 1
													},
													{
														"declaration": 610,
														"isOffset": false,
														"isSlot": false,
														"src": "15118:6:0",
														"valueSize": 1
													}
												],
												"id": 612,
												"nodeType": "InlineAssembly",
												"src": "14870:331:0"
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "14692:67:0",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "14773:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14800:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "14792:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "14815:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "14807:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14791:30:0"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14852:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "14844:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14843:16:0"
									},
									"scope": 1754,
									"src": "14764:443:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "15390:232:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15474:142:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15550:56:0",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "15564:24:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "15593:8:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15603:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15590:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15590:15:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "15560:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "15560:46:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15550:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 59,
														"isOffset": false,
														"isSlot": false,
														"src": "15564:24:0",
														"valueSize": 1
													},
													{
														"declaration": 617,
														"isOffset": false,
														"isSlot": false,
														"src": "15593:8:0",
														"valueSize": 1
													},
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "15550:6:0",
														"valueSize": 1
													}
												],
												"id": 622,
												"nodeType": "InlineAssembly",
												"src": "15465:151:0"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "15213:86:0",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "15313:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15342:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "15334:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15333:18:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15382:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "15374:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15373:16:0"
									},
									"scope": 1754,
									"src": "15304:318:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1902
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "16120:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 634,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "16139:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "16143:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16152:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 633,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1417,
															1467
														],
														"referencedDeclaration": 1467,
														"src": "16130:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16130:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "16130:27:0"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "15815:222:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n Requirements:\n - The caller must own the token or be an approved operator."
									},
									"functionSelector": "095ea7b3",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16051:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 631,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16111:8:0"
									},
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16067:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "16059:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16079:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "16071:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16058:29:0"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16120:0:0"
									},
									"scope": 1754,
									"src": "16042:122:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1918
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "16399:138:0",
										"statements": [
											{
												"condition": {
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16413:17:0",
													"subExpression": {
														"arguments": [
															{
																"id": 650,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "16422:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 649,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "16414:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16414:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 658,
												"nodeType": "IfStatement",
												"src": "16409:73:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 654,
																	"name": "ApprovalQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1763,
																	"src": "16440:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "16440:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 653,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "16432:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16432:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 657,
													"nodeType": "ExpressionStatement",
													"src": "16432:50:0"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 659,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "16500:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 661,
														"indexExpression": {
															"id": 660,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "16516:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16500:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 22,
													"src": "16500:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 648,
												"id": 663,
												"nodeType": "Return",
												"src": "16493:37:0"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "16170:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16323:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 645,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16372:8:0"
									},
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16343:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "16335:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16334:17:0"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "16390:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16389:9:0"
									},
									"scope": 1754,
									"src": "16314:223:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1910
									],
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "16948:147:0",
										"statements": [
											{
												"expression": {
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 674,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "16958:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 678,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 675,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "16977:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16977:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16958:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 679,
														"indexExpression": {
															"id": 677,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "16998:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16958:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 680,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "17010:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16958:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "16958:60:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 684,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1735,
																"src": "17048:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17048:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 686,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "17069:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 687,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "17079:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 683,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "17033:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17033:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "EmitStatement",
												"src": "17028:60:0"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "16543:316:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "16873:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 672,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16939:8:0"
									},
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16899:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "16891:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "16914:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "16909:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16909:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16890:33:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16948:0:0"
									},
									"scope": 1754,
									"src": "16864:231:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1928
									],
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "17348:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 702,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "17365:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 704,
														"indexExpression": {
															"id": 703,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "17384:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17365:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 706,
													"indexExpression": {
														"id": 705,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "17391:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17365:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 701,
												"id": 707,
												"nodeType": "Return",
												"src": "17358:42:0"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "17101:139:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17254:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 698,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17324:8:0"
									},
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17279:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "17271:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17271:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17294:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "17286:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17270:33:0"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "17342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17341:6:0"
									},
									"scope": 1754,
									"src": "17245:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "17727:206:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 717,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "17756:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17756:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 719,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "17775:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17756:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 721,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "17798:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 722,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "17808:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17798:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "17756:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 725,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "17858:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"id": 726,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "17876:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17858:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 728,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "17887:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17858:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17906:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17858:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17756:151:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 716,
												"id": 733,
												"nodeType": "Return",
												"src": "17737:170:0"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "17413:238:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "17665:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17681:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "17673:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17672:17:0"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "17721:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17721:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17720:6:0"
									},
									"scope": 1754,
									"src": "17656:277:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "18195:488:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18214:463:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18324:37:0",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "18337:5:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18344:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18333:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "18333:28:0"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "18324:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18474:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "18491:9:0"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18502:16:0"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18487:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "18487:32:0"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "18474:9:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18601:66:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "18617:9:0"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "18628:5:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18614:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18614:20:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "18639:9:0"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "18650:15:0"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18636:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18636:30:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18611:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "18611:56:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18601:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "18344:16:0",
														"valueSize": 1
													},
													{
														"declaration": 83,
														"isOffset": false,
														"isSlot": false,
														"src": "18502:16:0",
														"valueSize": 1
													},
													{
														"declaration": 738,
														"isOffset": false,
														"isSlot": false,
														"src": "18650:15:0",
														"valueSize": 1
													},
													{
														"declaration": 742,
														"isOffset": false,
														"isSlot": false,
														"src": "18474:9:0",
														"valueSize": 1
													},
													{
														"declaration": 742,
														"isOffset": false,
														"isSlot": false,
														"src": "18491:9:0",
														"valueSize": 1
													},
													{
														"declaration": 742,
														"isOffset": false,
														"isSlot": false,
														"src": "18617:9:0",
														"valueSize": 1
													},
													{
														"declaration": 742,
														"isOffset": false,
														"isSlot": false,
														"src": "18639:9:0",
														"valueSize": 1
													},
													{
														"declaration": 740,
														"isOffset": false,
														"isSlot": false,
														"src": "18324:5:0",
														"valueSize": 1
													},
													{
														"declaration": 740,
														"isOffset": false,
														"isSlot": false,
														"src": "18337:5:0",
														"valueSize": 1
													},
													{
														"declaration": 740,
														"isOffset": false,
														"isSlot": false,
														"src": "18628:5:0",
														"valueSize": 1
													},
													{
														"declaration": 745,
														"isOffset": false,
														"isSlot": false,
														"src": "18601:6:0",
														"valueSize": 1
													}
												],
												"id": 747,
												"nodeType": "InlineAssembly",
												"src": "18205:472:0"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "17939:93:0",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "18046:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18088:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "18080:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18080:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18121:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "18113:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "18144:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "18136:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18070:89:0"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18187:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "18182:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 744,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18182:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18181:13:0"
									},
									"scope": 1754,
									"src": "18037:646:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "18948:317:0",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "18983:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 767,
														"src": "18958:38:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 760,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 759,
																"name": "TokenApprovalRef",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 23,
																"src": "18958:16:0"
															},
															"referencedDeclaration": 23,
															"src": "18958:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"initialValue": {
													"baseExpression": {
														"id": 762,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "18999:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 764,
													"indexExpression": {
														"id": 763,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "19015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18999:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18958:65:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19136:123:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19150:41:0",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "19173:18:0"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "19150:19:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19204:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19229:19:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19223:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19223:26:0"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "19204:15:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 757,
														"isOffset": false,
														"isSlot": false,
														"src": "19204:15:0",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "19150:19:0",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "19229:19:0",
														"valueSize": 1
													},
													{
														"declaration": 761,
														"isOffset": false,
														"isSlot": true,
														"src": "19173:18:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 766,
												"nodeType": "InlineAssembly",
												"src": "19127:132:0"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "18689:97:0",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "18800:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18835:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "18827:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18826:17:0"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "18898:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "18890:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18927:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "18919:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18889:54:0"
									},
									"scope": 1754,
									"src": "18791:474:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1894
									],
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "19993:3320:0",
										"statements": [
											{
												"assignments": [
													780
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "20011:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "20003:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 779,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 784,
												"initialValue": {
													"arguments": [
														{
															"id": 782,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "20052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 781,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "20033:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20033:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20003:57:0"
											},
											{
												"expression": {
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 785,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "20162:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 794,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 771,
																							"src": "20201:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 793,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20193:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 792,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "20193:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 795,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20193:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "20185:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 790,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "20185:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20185:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"id": 797,
																			"name": "_BITMASK_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 83,
																			"src": "20210:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20185:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20177:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 788,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20177:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20177:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20169:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 786,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20169:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20169:59:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20162:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "20162:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 807,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 780,
																		"src": "20259:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20251:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 805,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20251:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20251:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20243:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 803,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20243:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20243:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 810,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "20284:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20243:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 817,
												"nodeType": "IfStatement",
												"src": "20239:95:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 813,
																	"name": "TransferFromIncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "20298:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "20298:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 812,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "20290:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20290:44:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 816,
													"nodeType": "ExpressionStatement",
													"src": "20290:44:0"
												}
											},
											{
												"assignments": [
													819,
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 819,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "20354:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "20346:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 818,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20346:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 821,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "20383:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "20375:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 820,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20375:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 825,
												"initialValue": {
													"arguments": [
														{
															"id": 823,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "20429:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 822,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "20402:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20402:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20345:92:0"
											},
											{
												"condition": {
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "20533:69:0",
													"subExpression": {
														"arguments": [
															{
																"id": 827,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "20559:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 828,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "20576:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 829,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "20582:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20582:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 826,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "20534:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20534:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "20529:188:0",
												"trueBody": {
													"condition": {
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "20620:44:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 834,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "20638:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 835,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "20644:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20644:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 833,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "20621:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20621:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 844,
													"nodeType": "IfStatement",
													"src": "20616:101:0",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 840,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1778,
																		"src": "20674:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20674:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 839,
																"name": "_revert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1753,
																"src": "20666:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																	"typeString": "function (bytes4) pure"
																}
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20666:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 843,
														"nodeType": "ExpressionStatement",
														"src": "20666:51:0"
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "20750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "20756:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "20760:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20769:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 846,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "20728:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20728:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "20728:43:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20843:181:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20876:138:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "20977:19:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20998:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "20970:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20970:30:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20970:30:0"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "20860:15:0"
															},
															"nodeType": "YulIf",
															"src": "20857:157:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 821,
														"isOffset": false,
														"isSlot": false,
														"src": "20860:15:0",
														"valueSize": 1
													},
													{
														"declaration": 819,
														"isOffset": false,
														"isSlot": false,
														"src": "20977:19:0",
														"valueSize": 1
													}
												],
												"id": 853,
												"nodeType": "InlineAssembly",
												"src": "20834:190:0"
											},
											{
												"id": 910,
												"nodeType": "UncheckedBlock",
												"src": "21291:1361:0",
												"statements": [
													{
														"expression": {
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "21384:26:0",
															"subExpression": {
																"baseExpression": {
																	"id": 854,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "21386:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 856,
																"indexExpression": {
																	"id": 855,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "21405:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21386:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 858,
														"nodeType": "ExpressionStatement",
														"src": "21384:26:0"
													},
													{
														"expression": {
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "21452:24:0",
															"subExpression": {
																"baseExpression": {
																	"id": 859,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "21454:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 861,
																"indexExpression": {
																	"id": 860,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "21473:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21454:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 863,
														"nodeType": "ExpressionStatement",
														"src": "21452:24:0"
													},
													{
														"expression": {
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 864,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "21740:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 866,
																"indexExpression": {
																	"id": 865,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "21758:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21740:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 868,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "21805:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 869,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 64,
																			"src": "21825:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 871,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 771,
																					"src": "21868:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 872,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 773,
																					"src": "21874:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 873,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "21878:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 870,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1725,
																				"src": "21853:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21853:45:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21825:73:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 867,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "21769:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21769:143:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21740:172:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 878,
														"nodeType": "ExpressionStatement",
														"src": "21740:172:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 879,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "22029:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 880,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "22051:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22029:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22080:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22029:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 909,
														"nodeType": "IfStatement",
														"src": "22025:617:0",
														"trueBody": {
															"id": 908,
															"nodeType": "Block",
															"src": "22083:559:0",
															"statements": [
																{
																	"assignments": [
																		885
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 885,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "22109:11:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 908,
																			"src": "22101:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 884,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22101:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 889,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 886,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 775,
																			"src": "22123:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22133:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22123:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22101:33:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 890,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "22254:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 892,
																			"indexExpression": {
																				"id": 891,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 885,
																				"src": "22272:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22254:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22288:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22254:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 907,
																	"nodeType": "IfStatement",
																	"src": "22250:378:0",
																	"trueBody": {
																		"id": 906,
																		"nodeType": "Block",
																		"src": "22291:337:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 897,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 895,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 885,
																						"src": "22375:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 896,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 91,
																						"src": "22390:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22375:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 905,
																				"nodeType": "IfStatement",
																				"src": "22371:239:0",
																				"trueBody": {
																					"id": 904,
																					"nodeType": "Block",
																					"src": "22405:205:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 902,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 898,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 101,
																										"src": "22535:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 900,
																									"indexExpression": {
																										"id": 899,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 885,
																										"src": "22553:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "22535:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 901,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 780,
																									"src": "22568:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "22535:52:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 903,
																							"nodeType": "ExpressionStatement",
																							"src": "22535:52:0"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													912
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"mutability": "mutable",
														"name": "toMasked",
														"nameLocation": "22759:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "22751:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 911,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22751:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 922,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 917,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "22786:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22778:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 915,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22778:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22778:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 913,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "22770:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22770:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 920,
														"name": "_BITMASK_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "22793:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22770:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22751:58:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "22828:358:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22906:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22962:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "23016:25:0"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "23073:4:0"
																	},
																	{
																		"name": "toMasked",
																		"nodeType": "YulIdentifier",
																		"src": "23106:8:0"
																	},
																	{
																		"name": "tokenId",
																		"nodeType": "YulIdentifier",
																		"src": "23141:7:0"
																	}
																],
																"functionName": {
																	"name": "log4",
																	"nodeType": "YulIdentifier",
																	"src": "22884:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "22884:292:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22884:292:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 89,
														"isOffset": false,
														"isSlot": false,
														"src": "23016:25:0",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "23073:4:0",
														"valueSize": 1
													},
													{
														"declaration": 912,
														"isOffset": false,
														"isSlot": false,
														"src": "23106:8:0",
														"valueSize": 1
													},
													{
														"declaration": 775,
														"isOffset": false,
														"isSlot": false,
														"src": "23141:7:0",
														"valueSize": 1
													}
												],
												"id": 923,
												"nodeType": "InlineAssembly",
												"src": "22819:367:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 924,
														"name": "toMasked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "23199:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23199:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 932,
												"nodeType": "IfStatement",
												"src": "23195:58:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 928,
																	"name": "TransferToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "23222:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "23222:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 927,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "23214:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23214:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 931,
													"nodeType": "ExpressionStatement",
													"src": "23214:39:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "23285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "23291:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "23295:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23304:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 933,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "23264:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23264:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "23264:42:0"
											}
										]
									},
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "19458:403:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "19875:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 777,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19984:8:0"
									},
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19905:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "19897:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19897:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19927:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "19919:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19947:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "19939:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19887:73:0"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19993:0:0"
									},
									"scope": 1754,
									"src": "19866:3447:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1884
									],
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "23535:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 953,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "23562:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "23568:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "23572:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23581:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 952,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															960,
															1000
														],
														"referencedDeclaration": 1000,
														"src": "23545:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23545:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "23545:39:0"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "23319:80:0",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23413:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 950,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23526:8:0"
									},
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "23439:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23469:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "23461:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23489:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "23481:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23429:73:0"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23535:0:0"
									},
									"scope": 1754,
									"src": "23404:187:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1874
									],
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "24331:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 974,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "24354:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 975,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "24360:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 976,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "24364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 973,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "24341:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24341:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "24341:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 979,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "24386:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "24386:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "24386:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24404:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24386:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "24382:189:0",
												"trueBody": {
													"condition": {
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "24423:57:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 985,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "24455:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 986,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "24461:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 987,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "24465:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 988,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "24474:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 984,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "24424:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24424:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 997,
													"nodeType": "IfStatement",
													"src": "24419:152:0",
													"trueBody": {
														"id": 996,
														"nodeType": "Block",
														"src": "24482:89:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 992,
																				"name": "TransferToNonERC721ReceiverImplementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1784,
																				"src": "24508:38:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "24508:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 991,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1753,
																		"src": "24500:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24500:56:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 995,
																"nodeType": "ExpressionStatement",
																"src": "24500:56:0"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "23597:570:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24181:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 971,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24322:8:0"
									},
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24215:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "24207:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24237:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "24229:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24257:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "24249:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "24287:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "24274:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 968,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24274:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24197:101:0"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24331:0:0"
									},
									"scope": 1754,
									"src": "24172:405:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "25373:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "24583:633:0",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "25230:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25269:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "25261:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25291:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "25283:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25311:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "25303:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "25341:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "25333:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25251:104:0"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25373:0:0"
									},
									"scope": 1754,
									"src": "25221:154:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "26173:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "25381:636:0",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "26031:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26069:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "26061:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26091:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "26083:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "26111:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "26103:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "26141:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "26133:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26051:104:0"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26173:0:0"
									},
									"scope": 1754,
									"src": "26022:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "26767:509:0",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1061,
															"nodeType": "Block",
															"src": "26916:96:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1053,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1051,
																			"src": "26937:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1055,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1031,
																							"src": "26972:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1054,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 17,
																						"src": "26947:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$17_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1056,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26947:28:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$17",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1057,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 16,
																				"src": "26947:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "26947:54:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "26937:64:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1039,
																	"id": 1060,
																	"nodeType": "Return",
																	"src": "26930:71:0"
																}
															]
														},
														"errorName": "",
														"id": 1062,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1052,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1051,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "26899:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1062,
																	"src": "26892:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1050,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "26892:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "26878:37:0"
														},
														"src": "26870:142:0"
													},
													{
														"block": {
															"id": 1078,
															"nodeType": "Block",
															"src": "27041:229:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1066,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1064,
																				"src": "27059:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "27059:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27076:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27059:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1076,
																	"nodeType": "IfStatement",
																	"src": "27055:113:0",
																	"trueBody": {
																		"id": 1075,
																		"nodeType": "Block",
																		"src": "27079:89:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1071,
																								"name": "TransferToNonERC721ReceiverImplementer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1784,
																								"src": "27105:38:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_error_pure$__$returns$__$",
																									"typeString": "function () pure"
																								}
																							},
																							"id": 1072,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "selector",
																							"nodeType": "MemberAccess",
																							"src": "27105:47:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						],
																						"id": 1070,
																						"name": "_revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1753,
																						"src": "27097:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																							"typeString": "function (bytes4) pure"
																						}
																					},
																					"id": 1073,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27097:56:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1074,
																				"nodeType": "ExpressionStatement",
																				"src": "27097:56:0"
																			}
																		]
																	}
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "27190:70:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "27219:2:0",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "reason",
																									"nodeType": "YulIdentifier",
																									"src": "27223:6:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "27215:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27215:15:0"
																						},
																						{
																							"arguments": [
																								{
																									"name": "reason",
																									"nodeType": "YulIdentifier",
																									"src": "27238:6:0"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "27232:5:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27232:13:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "27208:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27208:38:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "27208:38:0"
																			}
																		]
																	},
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1064,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "27223:6:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1064,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "27238:6:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1077,
																	"nodeType": "InlineAssembly",
																	"src": "27181:79:0"
																}
															]
														},
														"errorName": "",
														"id": 1079,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1065,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1064,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "27033:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1079,
																	"src": "27020:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1063,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "27020:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "27019:21:0"
														},
														"src": "27013:257:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1044,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1735,
																"src": "26827:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26827:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "26848:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "26854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1048,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "26863:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1041,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "26806:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1040,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "26781:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$17_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26781:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$17",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "26781:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26781:88:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1080,
												"nodeType": "TryStatement",
												"src": "26777:493:0"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "26181:417:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "26612:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "26652:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26682:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "26674:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26702:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "26694:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26732:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "26719:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26642:101:0"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "26761:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26761:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26760:6:0"
									},
									"scope": 1754,
									"src": "26603:673:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "27784:2189:0",
										"statements": [
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "27802:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1200,
														"src": "27794:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1090,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27794:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1093,
												"initialValue": {
													"id": 1092,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "27817:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27794:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1094,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "27844:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27856:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27844:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1102,
												"nodeType": "IfStatement",
												"src": "27840:53:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1098,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "27867:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "27867:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1097,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "27859:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27859:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1101,
													"nodeType": "ExpressionStatement",
													"src": "27859:34:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27934:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27926:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1104,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27926:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27926:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "27938:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "27942:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1110,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "27956:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1103,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "27904:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27904:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "27904:61:0"
											},
											{
												"id": 1189,
												"nodeType": "UncheckedBlock",
												"src": "28148:1749:0",
												"statements": [
													{
														"expression": {
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1113,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "28393:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1115,
																"indexExpression": {
																	"id": 1114,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "28411:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28393:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1117,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "28463:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1119,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1087,
																					"src": "28504:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1118,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 624,
																				"src": "28483:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28483:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1124,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28539:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "28531:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1122,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "28531:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28531:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1126,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "28543:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1127,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28547:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1121,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1725,
																				"src": "28516:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28516:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28483:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1116,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "28427:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28427:136:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28393:170:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1132,
														"nodeType": "ExpressionStatement",
														"src": "28393:170:0"
													},
													{
														"expression": {
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1133,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "28774:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1135,
																"indexExpression": {
																	"id": 1134,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "28793:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28774:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1136,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "28800:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1137,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28813:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1138,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 34,
																							"src": "28818:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "28813:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1140,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "28812:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28843:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "28812:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1143,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "28811:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28800:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28774:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1146,
														"nodeType": "ExpressionStatement",
														"src": "28774:71:0"
													},
													{
														"assignments": [
															1148
														],
														"declarations": [
															{
																"constant": false,
																"id": 1148,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "28961:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 1189,
																"src": "28953:16:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1147,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28953:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1158,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1153,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "28988:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28980:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 1151,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "28980:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28980:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28972:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1149,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "28972:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28972:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1156,
																"name": "_BITMASK_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "28995:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28972:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28953:58:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1159,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "29030:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29042:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29030:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1167,
														"nodeType": "IfStatement",
														"src": "29026:54:0",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1163,
																			"name": "MintToZeroAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1769,
																			"src": "29053:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "29053:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1162,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1753,
																	"src": "29045:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29045:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1166,
															"nodeType": "ExpressionStatement",
															"src": "29045:35:0"
														}
													},
													{
														"assignments": [
															1169
														],
														"declarations": [
															{
																"constant": false,
																"id": 1169,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "29103:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1189,
																"src": "29095:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1168,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29095:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1173,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1170,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "29109:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1171,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "29124:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29109:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29095:37:0"
													},
													{
														"assignments": [
															1175
														],
														"declarations": [
															{
																"constant": false,
																"id": 1175,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "29154:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 1189,
																"src": "29146:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1174,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29146:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1177,
														"initialValue": {
															"id": 1176,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "29164:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29146:30:0"
													},
													{
														"body": {
															"id": 1179,
															"nodeType": "Block",
															"src": "29194:633:0",
															"statements": [
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "29221:441:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29323:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29387:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "29449:25:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29514:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "29558:8:0"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "29601:7:0"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "29293:4:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29293:351:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "29293:351:0"
																			}
																		]
																	},
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 89,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "29449:25:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1148,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "29558:8:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1175,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "29601:7:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1178,
																	"nodeType": "InlineAssembly",
																	"src": "29212:450:0"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "29835:9:0",
																"subExpression": {
																	"id": 1180,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "29837:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1182,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "29848:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29835:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1184,
														"nodeType": "DoWhileStatement",
														"src": "29191:662:0"
													},
													{
														"expression": {
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1185,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "29867:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1186,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "29883:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29867:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1188,
														"nodeType": "ExpressionStatement",
														"src": "29867:19:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29935:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29927:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1191,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29927:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29927:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "29939:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1196,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "29943:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1197,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "29957:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1190,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "29906:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29906:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "29906:60:0"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "27467:250:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "27731:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27745:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "27737:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27757:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "27749:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27736:30:0"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27784:0:0"
									},
									"scope": 1754,
									"src": "27722:2251:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "30882:1401:0",
										"statements": [
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "30900:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1318,
														"src": "30892:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1209,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30892:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"id": 1211,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "30915:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30892:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1213,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "30942:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30956:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "30948:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30948:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30942:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "30938:57:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1220,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "30968:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "30968:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1219,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "30960:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30960:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1223,
													"nodeType": "ExpressionStatement",
													"src": "30960:35:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1225,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "31009:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31021:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31009:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1233,
												"nodeType": "IfStatement",
												"src": "31005:53:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1229,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1772,
																	"src": "31032:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "31032:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1228,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "31024:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31024:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1232,
													"nodeType": "ExpressionStatement",
													"src": "31024:34:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1234,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "31072:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1235,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "31083:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31072:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1242,
												"nodeType": "IfStatement",
												"src": "31068:98:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1238,
																	"name": "MintERC2309QuantityExceedsLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1793,
																	"src": "31125:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "31125:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1237,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "31117:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31117:49:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1241,
													"nodeType": "ExpressionStatement",
													"src": "31117:49:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31207:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31199:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1244,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31199:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31199:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1248,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "31211:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1249,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "31215:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1250,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "31229:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1243,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "31177:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31177:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "31177:61:0"
											},
											{
												"id": 1307,
												"nodeType": "UncheckedBlock",
												"src": "31347:860:0",
												"statements": [
													{
														"expression": {
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1253,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "31567:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1255,
																"indexExpression": {
																	"id": 1254,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "31586:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31567:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1256,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "31593:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1259,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1257,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "31606:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1258,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 34,
																							"src": "31611:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "31606:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1260,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "31605:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31636:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "31605:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1263,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31604:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31593:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31567:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1266,
														"nodeType": "ExpressionStatement",
														"src": "31567:71:0"
													},
													{
														"expression": {
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1267,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "31874:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1269,
																"indexExpression": {
																	"id": 1268,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "31892:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31874:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1271,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "31944:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1273,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1206,
																					"src": "31985:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1272,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 624,
																				"src": "31964:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31964:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1278,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32020:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1277,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "32012:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1276,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "32012:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1279,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "32012:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1280,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1204,
																					"src": "32024:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1281,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32028:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1275,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1725,
																				"src": "31997:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31997:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "31964:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1270,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "31908:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31908:136:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31874:170:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1286,
														"nodeType": "ExpressionStatement",
														"src": "31874:170:0"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1288,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "32084:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1289,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1210,
																			"src": "32098:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1290,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1206,
																			"src": "32113:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32098:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32124:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32098:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32135:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32127:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1294,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32127:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32127:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1298,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "32139:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1287,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1959,
																"src": "32064:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32064:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1300,
														"nodeType": "EmitStatement",
														"src": "32059:83:0"
													},
													{
														"expression": {
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1301,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "32157:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1302,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "32173:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1303,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "32188:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32173:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32157:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1306,
														"nodeType": "ExpressionStatement",
														"src": "32157:39:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32245:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32237:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32237:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32237:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "32249:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1314,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "32253:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1315,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "32267:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1308,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "32216:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32216:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "32216:60:0"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "29979:829:0",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "30822:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30843:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "30835:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "30855:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "30847:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30834:30:0"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30882:0:0"
									},
									"scope": 1754,
									"src": "30813:1470:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "32798:572:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1330,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "32814:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1331,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "32818:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1329,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "32808:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32808:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "32808:19:0"
											},
											{
												"id": 1385,
												"nodeType": "UncheckedBlock",
												"src": "32838:526:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1334,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1322,
																		"src": "32866:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "32866:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "32866:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32884:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32866:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1384,
														"nodeType": "IfStatement",
														"src": "32862:492:0",
														"trueBody": {
															"id": 1383,
															"nodeType": "Block",
															"src": "32887:467:0",
															"statements": [
																{
																	"assignments": [
																		1340
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1340,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "32913:3:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1383,
																			"src": "32905:11:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1339,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "32905:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1342,
																	"initialValue": {
																		"id": 1341,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "32919:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "32905:27:0"
																},
																{
																	"assignments": [
																		1344
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1344,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "32958:5:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1383,
																			"src": "32950:13:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1343,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "32950:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1348,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1345,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "32966:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1346,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1324,
																			"src": "32972:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32966:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "32950:30:0"
																},
																{
																	"body": {
																		"id": 1367,
																		"nodeType": "Block",
																		"src": "33001:214:0",
																		"statements": [
																			{
																				"condition": {
																					"id": 1359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "33027:63:0",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1352,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "33067:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1351,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "33059:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1350,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "33059:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1353,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33059:10:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1354,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1322,
																								"src": "33071:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1356,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "33075:7:0",
																								"subExpression": {
																									"id": 1355,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1344,
																									"src": "33075:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1357,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1326,
																								"src": "33084:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1349,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1082,
																							"src": "33028:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1358,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "33028:62:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1366,
																				"nodeType": "IfStatement",
																				"src": "33023:174:0",
																				"trueBody": {
																					"id": 1365,
																					"nodeType": "Block",
																					"src": "33092:105:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1361,
																											"name": "TransferToNonERC721ReceiverImplementer",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1784,
																											"src": "33126:38:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_error_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 1362,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "selector",
																										"nodeType": "MemberAccess",
																										"src": "33126:47:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									],
																									"id": 1360,
																									"name": "_revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1753,
																									"src": "33118:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																										"typeString": "function (bytes4) pure"
																									}
																								},
																								"id": 1363,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33118:56:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1364,
																							"nodeType": "ExpressionStatement",
																							"src": "33118:56:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1368,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "33223:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1369,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "33231:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33223:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1371,
																	"nodeType": "DoWhileStatement",
																	"src": "32998:238:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1372,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 91,
																			"src": "33299:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1373,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "33316:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33299:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1382,
																	"nodeType": "IfStatement",
																	"src": "33295:44:0",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1378,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "33336:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1377,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "33329:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes4_$",
																							"typeString": "type(bytes4)"
																						},
																						"typeName": {
																							"id": 1376,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "33329:6:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1379,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33329:9:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"id": 1375,
																				"name": "_revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1753,
																				"src": "33321:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																					"typeString": "function (bytes4) pure"
																				}
																			},
																			"id": 1380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33321:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1381,
																		"nodeType": "ExpressionStatement",
																		"src": "33321:18:0"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "32289:388:0",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "32691:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32718:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "32710:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32738:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "32730:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "32769:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "32756:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32756:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32700:80:0"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32798:0:0"
									},
									"scope": 1754,
									"src": "32682:688:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "33515:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1396,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "33535:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1397,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "33539:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33549:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1395,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1387,
															1402
														],
														"referencedDeclaration": 1387,
														"src": "33525:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33525:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "33525:27:0"
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "33376:68:0",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33458:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33476:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "33468:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33488:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "33480:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33467:30:0"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33515:0:0"
									},
									"scope": 1754,
									"src": "33449:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "33891:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1411,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "33910:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1412,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "33914:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33923:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1410,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1417,
															1467
														],
														"referencedDeclaration": 1467,
														"src": "33901:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33901:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "33901:28:0"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "33753:69:0",
										"text": " @dev Equivalent to `_approve(to, tokenId, false)`."
									},
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "33836:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33853:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "33845:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33865:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "33857:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33844:29:0"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33891:0:0"
									},
									"scope": 1754,
									"src": "33827:109:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "34453:346:0",
										"statements": [
											{
												"assignments": [
													1428
												],
												"declarations": [
													{
														"constant": false,
														"id": 1428,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "34471:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1466,
														"src": "34463:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1427,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34463:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1432,
												"initialValue": {
													"arguments": [
														{
															"id": 1430,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "34487:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1429,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "34479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34479:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34463:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1433,
														"name": "approvalCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "34510:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1434,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1735,
																"src": "34527:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34527:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1436,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "34550:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "34527:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "34510:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1452,
												"nodeType": "IfStatement",
												"src": "34506:198:0",
												"trueBody": {
													"condition": {
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "34573:45:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 1440,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "34591:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1441,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "34598:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34598:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1439,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "34574:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34574:44:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1451,
													"nodeType": "IfStatement",
													"src": "34569:135:0",
													"trueBody": {
														"id": 1450,
														"nodeType": "Block",
														"src": "34620:84:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1446,
																				"name": "ApprovalCallerNotOwnerNorApproved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1760,
																				"src": "34646:33:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "34646:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1445,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1753,
																		"src": "34638:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34638:51:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1449,
																"nodeType": "ExpressionStatement",
																"src": "34638:51:0"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1453,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "34714:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$23_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 1455,
															"indexExpression": {
																"id": 1454,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "34730:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34714:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$23_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 1456,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "34714:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1457,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "34747:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "34714:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "34714:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1461,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "34773:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1462,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "34780:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1463,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "34784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1460,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1837,
														"src": "34764:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34764:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "EmitStatement",
												"src": "34759:33:0"
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "33942:392:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "34348:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34374:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "34366:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34394:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "34386:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "34416:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "34411:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34411:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34356:79:0"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34453:0:0"
									},
									"scope": 1754,
									"src": "34339:460:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "35106:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1474,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "35122:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1473,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1479,
															1633
														],
														"referencedDeclaration": 1633,
														"src": "35116:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35116:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "35116:21:0"
											}
										]
									},
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "34990:62:0",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "35066:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35080:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "35072:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35071:17:0"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35106:0:0"
									},
									"scope": 1754,
									"src": "35057:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "35430:2955:0",
										"statements": [
											{
												"assignments": [
													1488
												],
												"declarations": [
													{
														"constant": false,
														"id": 1488,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "35448:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "35440:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1487,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1492,
												"initialValue": {
													"arguments": [
														{
															"id": 1490,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "35489:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1489,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "35470:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35470:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35440:57:0"
											},
											{
												"assignments": [
													1494
												],
												"declarations": [
													{
														"constant": false,
														"id": 1494,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "35516:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "35508:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1493,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35508:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1502,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1499,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1488,
																	"src": "35539:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35531:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1497,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "35531:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35531:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "35523:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1495,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35523:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35523:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35508:52:0"
											},
											{
												"assignments": [
													1504,
													1506
												],
												"declarations": [
													{
														"constant": false,
														"id": 1504,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "35580:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "35572:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1503,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35572:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1506,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "35609:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "35601:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1505,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35601:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1510,
												"initialValue": {
													"arguments": [
														{
															"id": 1508,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "35655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1507,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "35628:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35628:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35571:92:0"
											},
											{
												"condition": {
													"id": 1511,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1484,
													"src": "35678:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1533,
												"nodeType": "IfStatement",
												"src": "35674:321:0",
												"trueBody": {
													"id": 1532,
													"nodeType": "Block",
													"src": "35693:302:0",
													"statements": [
														{
															"condition": {
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "35796:69:0",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1513,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1506,
																			"src": "35822:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1514,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1494,
																			"src": "35839:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1515,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1735,
																				"src": "35845:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35845:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1512,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "35797:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35797:68:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1531,
															"nodeType": "IfStatement",
															"src": "35792:192:0",
															"trueBody": {
																"condition": {
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "35887:44:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1520,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1494,
																				"src": "35905:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1521,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1735,
																					"src": "35911:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35911:19:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1519,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "35888:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35888:43:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1530,
																"nodeType": "IfStatement",
																"src": "35883:101:0",
																"trueBody": {
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1526,
																					"name": "TransferCallerNotOwnerNorApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1778,
																					"src": "35941:33:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "35941:42:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"id": 1525,
																			"name": "_revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1753,
																			"src": "35933:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																				"typeString": "function (bytes4) pure"
																			}
																		},
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35933:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1529,
																	"nodeType": "ExpressionStatement",
																	"src": "35933:51:0"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1535,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "36027:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36041:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36033:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36033:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36033:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1540,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "36045:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36054:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1534,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "36005:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36005:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "36005:51:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "36128:181:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "36161:138:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "36262:19:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "36283:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "36255:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "36255:30:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "36255:30:0"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "36145:15:0"
															},
															"nodeType": "YulIf",
															"src": "36142:157:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1506,
														"isOffset": false,
														"isSlot": false,
														"src": "36145:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1504,
														"isOffset": false,
														"isSlot": false,
														"src": "36262:19:0",
														"valueSize": 1
													}
												],
												"id": 1544,
												"nodeType": "InlineAssembly",
												"src": "36119:190:0"
											},
											{
												"id": 1608,
												"nodeType": "UncheckedBlock",
												"src": "36576:1545:0",
												"statements": [
													{
														"expression": {
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1545,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "36888:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1547,
																"indexExpression": {
																	"id": 1546,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1494,
																	"src": "36907:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36888:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36917:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1549,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 37,
																				"src": "36922:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "36917:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1551,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "36916:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36947:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "36916:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36888:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1555,
														"nodeType": "ExpressionStatement",
														"src": "36888:60:0"
													},
													{
														"expression": {
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1556,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "37179:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1558,
																"indexExpression": {
																	"id": 1557,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "37197:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "37179:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1560,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1494,
																		"src": "37244:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1563,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1561,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 56,
																						"src": "37267:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1562,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 64,
																						"src": "37285:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "37267:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1564,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "37266:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1566,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1494,
																					"src": "37329:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1569,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "37343:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1568,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "37335:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1567,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "37335:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1570,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "37335:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1571,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1488,
																					"src": "37347:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1565,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1725,
																				"src": "37314:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37314:53:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "37266:101:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1559,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "37208:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37208:173:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37179:202:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1576,
														"nodeType": "ExpressionStatement",
														"src": "37179:202:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1577,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1488,
																	"src": "37498:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1578,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "37520:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37498:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37549:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37498:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1607,
														"nodeType": "IfStatement",
														"src": "37494:617:0",
														"trueBody": {
															"id": 1606,
															"nodeType": "Block",
															"src": "37552:559:0",
															"statements": [
																{
																	"assignments": [
																		1583
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1583,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "37578:11:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1606,
																			"src": "37570:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1582,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "37570:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1587,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1584,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1482,
																			"src": "37592:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37602:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "37592:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "37570:33:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1588,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "37723:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1590,
																			"indexExpression": {
																				"id": 1589,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "37741:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "37723:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37757:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "37723:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1605,
																	"nodeType": "IfStatement",
																	"src": "37719:378:0",
																	"trueBody": {
																		"id": 1604,
																		"nodeType": "Block",
																		"src": "37760:337:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1595,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1593,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1583,
																						"src": "37844:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1594,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 91,
																						"src": "37859:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "37844:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1603,
																				"nodeType": "IfStatement",
																				"src": "37840:239:0",
																				"trueBody": {
																					"id": 1602,
																					"nodeType": "Block",
																					"src": "37874:205:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 1600,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1596,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 101,
																										"src": "38004:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1598,
																									"indexExpression": {
																										"id": 1597,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1583,
																										"src": "38022:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "38004:30:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1599,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1488,
																									"src": "38037:19:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "38004:52:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1601,
																							"nodeType": "ExpressionStatement",
																							"src": "38004:52:0"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1610,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "38145:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38159:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38151:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1611,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38151:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38151:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1615,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "38163:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1609,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "38136:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38136:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1617,
												"nodeType": "EmitStatement",
												"src": "38131:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "38202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38216:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38208:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1620,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38208:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38208:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1624,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "38220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38229:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1618,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "38181:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38181:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "38181:50:0"
											},
											{
												"id": 1631,
												"nodeType": "UncheckedBlock",
												"src": "38330:49:0",
												"statements": [
													{
														"expression": {
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "38354:14:0",
															"subExpression": {
																"id": 1628,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "38354:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1630,
														"nodeType": "ExpressionStatement",
														"src": "38354:14:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1480,
										"nodeType": "StructuredDocumentation",
										"src": "35150:206:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "35370:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35384:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "35376:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "35398:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "35393:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35393:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35375:37:0"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35430:0:0"
									},
									"scope": 1754,
									"src": "35361:3024:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "38743:456:0",
										"statements": [
											{
												"assignments": [
													1642
												],
												"declarations": [
													{
														"constant": false,
														"id": 1642,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "38761:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1678,
														"src": "38753:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1646,
												"initialValue": {
													"baseExpression": {
														"id": 1643,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "38770:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1645,
													"indexExpression": {
														"id": 1644,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "38788:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38770:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38753:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1647,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "38808:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38818:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38808:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1655,
												"nodeType": "IfStatement",
												"src": "38804:70:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1651,
																	"name": "OwnershipNotInitializedForExtraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1796,
																	"src": "38829:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "38829:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1650,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "38821:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38821:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1654,
													"nodeType": "ExpressionStatement",
													"src": "38821:53:0"
												}
											},
											{
												"assignments": [
													1657
												],
												"declarations": [
													{
														"constant": false,
														"id": 1657,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "38892:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1678,
														"src": "38884:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1656,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38884:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1658,
												"nodeType": "VariableDeclarationStatement",
												"src": "38884:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "38996:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "39010:28:0",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "39029:9:0"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "39010:15:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1638,
														"isOffset": false,
														"isSlot": false,
														"src": "39029:9:0",
														"valueSize": 1
													},
													{
														"declaration": 1657,
														"isOffset": false,
														"isSlot": false,
														"src": "39010:15:0",
														"valueSize": 1
													}
												],
												"id": 1659,
												"nodeType": "InlineAssembly",
												"src": "38987:61:0"
											},
											{
												"expression": {
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1660,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "39057:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1661,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1642,
																		"src": "39067:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1662,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "39076:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "39067:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1664,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "39066:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1665,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1657,
																		"src": "39111:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1666,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "39130:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "39111:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1668,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "39110:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "39066:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39057:92:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1671,
												"nodeType": "ExpressionStatement",
												"src": "39057:92:0"
											},
											{
												"expression": {
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1672,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "39159:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1674,
														"indexExpression": {
															"id": 1673,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "39177:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "39159:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1675,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "39186:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39159:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1677,
												"nodeType": "ExpressionStatement",
												"src": "39159:33:0"
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "38579:84:0",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "38677:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "38701:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "38693:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "38715:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "38708:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1637,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38708:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38692:33:0"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38743:0:0"
									},
									"scope": 1754,
									"src": "38668:531:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "39900:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "39205:549:0",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "39768:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39796:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "39788:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39788:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39818:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "39810:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "39837:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "39830:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1685,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39830:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39778:82:0"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "39892:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1688,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39892:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39891:8:0"
									},
									"scope": 1754,
									"src": "39759:143:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "40188:164:0",
										"statements": [
											{
												"assignments": [
													1705
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "40205:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1724,
														"src": "40198:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1704,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "40198:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1712,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1708,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "40224:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1709,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "40247:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40224:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "40217:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1706,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "40217:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40217:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40198:68:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1716,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1695,
																		"src": "40302:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1717,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1697,
																		"src": "40308:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1718,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "40312:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1715,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1692,
																	"src": "40291:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40291:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40283:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1713,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "40283:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40283:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1721,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "40327:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40283:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1703,
												"id": 1723,
												"nodeType": "Return",
												"src": "40276:69:0"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "39908:135:0",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "40057:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40089:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "40081:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40111:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "40103:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "40131:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "40123:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40071:85:0"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "40179:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40179:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40178:9:0"
									},
									"scope": 1754,
									"src": "40048:304:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "40790:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1731,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "40807:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "40807:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1730,
												"id": 1733,
												"nodeType": "Return",
												"src": "40800:17:0"
											}
										]
									},
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "40543:173:0",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "40730:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40747:2:0"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "40781:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40780:9:0"
									},
									"scope": 1754,
									"src": "40721:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "41005:1624:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "41024:1599:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41388:31:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "41407:4:0",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "41401:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "41401:11:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41414:4:0",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "41397:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "41397:22:0"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "41392:1:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41498:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "41504:1:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41491:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "41491:15:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41491:15:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "41563:19:0",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "41574:1:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41577:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41570:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "41570:12:0"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "41563:3:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41652:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41657:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41645:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "41645:14:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41645:14:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41747:14:0",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "41758:3:0"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "41751:3:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "42005:388:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "42023:18:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "42034:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42039:1:0",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "42030:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42030:11:0"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "42023:3:0"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "42184:3:0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "42193:2:0",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "42201:4:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "42207:2:0",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "42197:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "42197:13:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "42189:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "42189:22:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "42176:7:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42176:36:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "42176:36:0"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "42281:21:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "42293:4:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42299:2:0",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "42289:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42289:13:0"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "42281:4:0"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "42370:9:0",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "42372:5:0"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "42364:4:0"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "42357:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42357:12:0"
																		},
																		"nodeType": "YulIf",
																		"src": "42354:25:0"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "42000:1:0",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "42002:2:0",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "41978:21:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "41980:17:0",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "41992:5:0"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "41984:4:0",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "41974:419:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "42407:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "42425:3:0"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42430:3:0"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "42421:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "42421:13:0"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "42411:6:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "42527:21:0",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42538:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42543:4:0",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "42534:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "42534:14:0"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "42527:3:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42601:3:0"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "42606:6:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "42594:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "42594:19:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42594:19:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1741,
														"isOffset": false,
														"isSlot": false,
														"src": "41563:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1741,
														"isOffset": false,
														"isSlot": false,
														"src": "41652:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1741,
														"isOffset": false,
														"isSlot": false,
														"src": "41758:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1741,
														"isOffset": false,
														"isSlot": false,
														"src": "42023:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1741,
														"isOffset": false,
														"isSlot": false,
														"src": "42034:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1741,
														"isOffset": false,
														"isSlot": false,
														"src": "42184:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1741,
														"isOffset": false,
														"isSlot": false,
														"src": "42430:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1741,
														"isOffset": false,
														"isSlot": false,
														"src": "42527:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1741,
														"isOffset": false,
														"isSlot": false,
														"src": "42538:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1741,
														"isOffset": false,
														"isSlot": false,
														"src": "42601:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "41992:5:0",
														"valueSize": 1
													}
												],
												"id": 1743,
												"nodeType": "InlineAssembly",
												"src": "41015:1608:0"
											}
										]
									},
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "40830:86:0",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "40930:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40948:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "40940:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40939:15:0"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "41000:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "40986:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1740,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40986:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40985:19:0"
									},
									"scope": 1754,
									"src": "40921:1708:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1752,
										"nodeType": "Block",
										"src": "42744:107:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "42763:82:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42784:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "errorSelector",
																		"nodeType": "YulIdentifier",
																		"src": "42790:13:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "42777:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "42777:27:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42777:27:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42824:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42830:4:0",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "42817:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "42817:18:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42817:18:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1748,
														"isOffset": false,
														"isSlot": false,
														"src": "42790:13:0",
														"valueSize": 1
													}
												],
												"id": 1751,
												"nodeType": "InlineAssembly",
												"src": "42754:91:0"
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "42635:51:0",
										"text": " @dev For more efficient reverts."
									},
									"id": 1753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "42700:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "errorSelector",
												"nameLocation": "42715:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "42708:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1747,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "42708:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42707:22:0"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42744:0:0"
									},
									"scope": 1754,
									"src": "42691:160:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1755,
							"src": "895:41958:0",
							"usedErrors": [
								1760,
								1763,
								1766,
								1769,
								1772,
								1775,
								1778,
								1781,
								1784,
								1787,
								1790,
								1793,
								1796
							]
						}
					],
					"src": "84:42769:0"
				},
				"id": 0
			},
			"extensions/erc721a/IERC721A.sol": {
				"ast": {
					"absolutePath": "extensions/erc721a/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							1960
						]
					},
					"id": 1961,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1757,
								"nodeType": "StructuredDocumentation",
								"src": "109:37:1",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 1960,
							"linearizedBaseContracts": [
								1960
							],
							"name": "IERC721A",
							"nameLocation": "157:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "172:76:1",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 1760,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "259:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:1"
									},
									"src": "253:42:1"
								},
								{
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "301:44:1",
										"text": " The token does not exist."
									},
									"id": 1763,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "356:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:1"
									},
									"src": "350:41:1"
								},
								{
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "397:65:1",
										"text": " Cannot query the balance for the zero address."
									},
									"id": 1766,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "473:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:1"
									},
									"src": "467:35:1"
								},
								{
									"documentation": {
										"id": 1767,
										"nodeType": "StructuredDocumentation",
										"src": "508:51:1",
										"text": " Cannot mint to the zero address."
									},
									"id": 1769,
									"name": "MintToZeroAddress",
									"nameLocation": "570:17:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "564:26:1"
								},
								{
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "596:72:1",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"id": 1772,
									"name": "MintZeroQuantity",
									"nameLocation": "679:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:1"
									},
									"src": "673:25:1"
								},
								{
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "704:44:1",
										"text": " The token does not exist."
									},
									"id": 1775,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "759:29:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:1"
									},
									"src": "753:38:1"
								},
								{
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "797:76:1",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 1778,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "884:33:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:1"
									},
									"src": "878:42:1"
								},
								{
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "926:53:1",
										"text": " The token must be owned by `from`."
									},
									"id": 1781,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "990:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:1"
									},
									"src": "984:35:1"
								},
								{
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "1025:116:1",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"id": 1784,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1152:38:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:1"
									},
									"src": "1146:47:1"
								},
								{
									"documentation": {
										"id": 1785,
										"nodeType": "StructuredDocumentation",
										"src": "1199:55:1",
										"text": " Cannot transfer to the zero address."
									},
									"id": 1787,
									"name": "TransferToZeroAddress",
									"nameLocation": "1265:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:1"
									},
									"src": "1259:30:1"
								},
								{
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "1295:44:1",
										"text": " The token does not exist."
									},
									"id": 1790,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1350:27:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:1"
									},
									"src": "1344:36:1"
								},
								{
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "1386:79:1",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"id": 1793,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1476:31:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:1"
									},
									"src": "1470:40:1"
								},
								{
									"documentation": {
										"id": 1794,
										"nodeType": "StructuredDocumentation",
										"src": "1516:83:1",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"id": 1796,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1610:35:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:1"
									},
									"src": "1604:44:1"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1805,
									"members": [
										{
											"constant": false,
											"id": 1798,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1912:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 1805,
											"src": "1904:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1797,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1904:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1800,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2017:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 1805,
											"src": "2010:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1799,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2010:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1802,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2092:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 1805,
											"src": "2087:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1801,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2087:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1804,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2203:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 1805,
											"src": "2196:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1803,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2196:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1842:14:1",
									"nodeType": "StructDefinition",
									"scope": 1960,
									"src": "1835:384:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1806,
										"nodeType": "StructuredDocumentation",
										"src": "2410:192:1",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 1811,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2616:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2627:2:1"
									},
									"returnParameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "2653:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:9:1"
									},
									"scope": 1960,
									"src": "2607:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1812,
										"nodeType": "StructuredDocumentation",
										"src": "2849:341:1",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3204:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3229:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "3222:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1813,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3222:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:20:1"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "3265:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1816,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3265:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:6:1"
									},
									"scope": 1960,
									"src": "3195:76:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "3458:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 1828,
									"name": "Transfer",
									"nameLocation": "3557:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3582:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "3566:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "3588:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3624:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "3608:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3565:67:1"
									},
									"src": "3551:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "3639:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 1837,
									"name": "Approval",
									"nameLocation": "3744:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3769:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "3753:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3792:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "3776:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3818:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "3802:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:74:1"
									},
									"src": "3738:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1838,
										"nodeType": "StructuredDocumentation",
										"src": "3833:124:1",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"id": 1846,
									"name": "ApprovalForAll",
									"nameLocation": "3968:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3999:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "3983:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4022:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "4006:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4037:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4032:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:64:1"
									},
									"src": "3962:85:1"
								},
								{
									"documentation": {
										"id": 1847,
										"nodeType": "StructuredDocumentation",
										"src": "4053:74:1",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4141:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4159:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4151:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4151:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4150:15:1"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4197:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "4189:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4189:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:17:1"
									},
									"scope": 1960,
									"src": "4132:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "4212:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4357:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4373:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "4365:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4365:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4364:17:1"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4413:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "4405:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4404:15:1"
									},
									"scope": 1960,
									"src": "4348:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "4426:711:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1874,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5151:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5185:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5177:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5177:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5207:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5199:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5227:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5219:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5259:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5244:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1870,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5244:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5167:102:1"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5286:0:1"
									},
									"scope": 1960,
									"src": "5142:145:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1875,
										"nodeType": "StructuredDocumentation",
										"src": "5293:80:1",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1884,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5387:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "5413:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5413:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "5435:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5435:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "5455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5403:73:1"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5493:0:1"
									},
									"scope": 1960,
									"src": "5378:116:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "5500:512:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1894,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6026:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6056:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "6048:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6048:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6078:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "6070:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6098:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "6090:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6090:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:73:1"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6128:0:1"
									},
									"scope": 1960,
									"src": "6017:112:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "6135:459:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6608:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6624:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "6616:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6636:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "6628:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6615:29:1"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6661:0:1"
									},
									"scope": 1960,
									"src": "6599:63:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1903,
										"nodeType": "StructuredDocumentation",
										"src": "6668:316:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "6998:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7024:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "7016:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7039:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "7034:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7034:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7015:34:1"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7058:0:1"
									},
									"scope": 1960,
									"src": "6989:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "7065:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7218:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7238:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "7230:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7229:17:1"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7278:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "7270:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7269:18:1"
									},
									"scope": 1960,
									"src": "7209:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "7294:139:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7447:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7472:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "7464:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7487:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "7479:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7479:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:33:1"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "7520:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7520:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7519:6:1"
									},
									"scope": 1960,
									"src": "7438:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "7717:58:1",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7789:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7793:2:1"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "7819:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1931,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7819:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7818:15:1"
									},
									"scope": 1960,
									"src": "7780:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "7840:60:1",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1940,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7914:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7920:2:1"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "7946:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1937,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7946:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7945:15:1"
									},
									"scope": 1960,
									"src": "7905:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1941,
										"nodeType": "StructuredDocumentation",
										"src": "7967:90:1",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8071:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8088:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "8080:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8080:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8079:17:1"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "8120:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1945,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8120:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8119:15:1"
									},
									"scope": 1960,
									"src": "8062:73:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "8322:267:1",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"id": 1959,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8600:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8636:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "8620:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8620:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8657:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "8649:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8649:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8684:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "8668:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8706:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "8690:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8690:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8619:90:1"
									},
									"src": "8594:116:1"
								}
							],
							"scope": 1961,
							"src": "147:8565:1",
							"usedErrors": [
								1760,
								1763,
								1766,
								1769,
								1772,
								1775,
								1778,
								1781,
								1784,
								1787,
								1790,
								1793,
								1796
							]
						}
					],
					"src": "84:8628:1"
				},
				"id": 1
			}
		}
	}
}
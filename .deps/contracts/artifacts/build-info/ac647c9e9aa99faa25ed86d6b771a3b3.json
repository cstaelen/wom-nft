{
	"id": "ac647c9e9aa99faa25ed86d6b771a3b3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/contracts/WOM_Mint.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract WOMNFT is ERC1155, Ownable {   \n    constructor() ERC1155(\"\") {      \n    }\n    \n    function mint(uint256 tokenId, uint256 amount) onlyOwner public {\n        _mint(msg.sender, tokenId, amount, \"\");\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/contracts/WOM_Mint.sol": {
				"WOMNFT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/contracts/WOM_Mint.sol\":178:393  contract WOMNFT is ERC1155, Ownable {   ... */\n  mstore(0x40, 0x80)\n    /* \".deps/contracts/WOM_Mint.sol\":223:262  constructor() ERC1155(\"\") {      ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  0x40\n  dup1\n  mload\n  0x20\n  dup2\n  add\n  swap1\n  swap2\n  mstore\n  0x00\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1156  _setURI */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \".deps/contracts/WOM_Mint.sol\":178:393  contract WOMNFT is ERC1155, Ownable {   ... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8173:8259  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8239:8243  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8239:8252  _uri = newuri */\n  tag_16\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8246:8252  newuri */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8239:8243  _uri */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8239:8252  _uri = newuri */\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8173:8259  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x03\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_20:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_21:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_28:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_29:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_23:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_33\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_33:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_34:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_32:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_17:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_40\n  tag_20\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1582:1679   */\n  tag_41\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_42\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_21\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_23\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_45\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_45:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_36)\n    /* \"#utility.yul\":1810:2473   */\ntag_44:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_48:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_48)\ntag_50:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_51:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\ntag_25:\n    /* \".deps/contracts/WOM_Mint.sol\":178:393  contract WOMNFT is ERC1155, Ownable {   ... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/contracts/WOM_Mint.sol\":178:393  contract WOMNFT is ERC1155, Ownable {   ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1b2ef1ca\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_20\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \".deps/contracts/WOM_Mint.sol\":272:391  function mint(uint256 tokenId, uint256 amount) onlyOwner public {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4065:4492  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_8:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_34\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x03)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7227:7278   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7215:7217   */\n      0x20\n        /* \"#utility.yul\":7200:7218   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_20\n        /* \"#utility.yul\":7081:7284   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_11:\n      tag_34\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_12:\n      tag_22\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3514  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3464:3468  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3514  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3505  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3514  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3524  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3598:3993  function safeTransferFrom(... */\n    tag_13:\n      tag_34\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_34\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2271:2278  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2366  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8910:8912   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2366  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8892:8913   */\n      mstore\n        /* \"#utility.yul\":8949:8951   */\n      0x2a\n        /* \"#utility.yul\":8929:8947   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8922:8952   */\n      mstore\n        /* \"#utility.yul\":8988:9022   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":8968:8986   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8961:9023   */\n      mstore\n      shl(0xb1, 0x30b634b21037bbb732b9)\n        /* \"#utility.yul\":9039:9057   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9032:9072   */\n      mstore\n        /* \"#utility.yul\":9089:9108   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2366  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2392  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2396  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2405  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1338:1342  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1354:1534  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2000:2013  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2032:2036  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2025:2036  return _uri */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/contracts/WOM_Mint.sol\":272:391  function mint(uint256 tokenId, uint256 amount) onlyOwner public {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_88:\n        /* \".deps/contracts/WOM_Mint.sol\":346:384  _mint(msg.sender, tokenId, amount, \"\") */\n      tag_91\n        /* \".deps/contracts/WOM_Mint.sol\":352:362  msg.sender */\n      caller\n        /* \".deps/contracts/WOM_Mint.sol\":364:371  tokenId */\n      dup4\n        /* \".deps/contracts/WOM_Mint.sol\":373:379  amount */\n      dup4\n        /* \".deps/contracts/WOM_Mint.sol\":346:384  _mint(msg.sender, tokenId, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/contracts/WOM_Mint.sol\":346:351  _mint */\n      tag_92\n        /* \".deps/contracts/WOM_Mint.sol\":346:384  _mint(msg.sender, tokenId, amount, \"\") */\n      jump\t// in\n    tag_91:\n        /* \".deps/contracts/WOM_Mint.sol\":272:391  function mint(uint256 tokenId, uint256 amount) onlyOwner public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4065:4492  function safeBatchTransferFrom(... */\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4290:4310  from == _msgSender() */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4290:4310  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4290:4350  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_97\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4314:4350  isApprovedForAll(from, _msgSender()) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4331:4335  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4314:4350  isApprovedForAll(from, _msgSender()) */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4423  require(... */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_101\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4433:4485  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4456:4460  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4462:4464  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4466:4469  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4471:4478  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4480:4484  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4433:4455  _safeBatchTransferFrom */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4433:4485  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4065:4492  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2720:2736  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2779:2782  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2779:2789  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2768  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2775  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2789  accounts.length == ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2752:2835  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10122:10124   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2752:2835  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10104:10125   */\n      mstore\n        /* \"#utility.yul\":10161:10163   */\n      0x29\n        /* \"#utility.yul\":10141:10159   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10134:10164   */\n      mstore\n        /* \"#utility.yul\":10200:10234   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":10180:10198   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10173:10235   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":10251:10269   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10244:10283   */\n      mstore\n        /* \"#utility.yul\":10300:10319   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2752:2835  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_73\n        /* \"#utility.yul\":9920:10325   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2752:2835  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2846:2876  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:2901  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:2908  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2909  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_109\n      jumpi\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_111\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_111:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2846:2909  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2925:2934  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2944:2952  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2944:2959  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2940:2941  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2940:2959  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3029  balanceOf(accounts[i], ids[i]) */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3009:3017  accounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3019  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3009:3020  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_117\n      jumpi\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3025  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3026:3027  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3028  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_120\n      jumpi\n      tag_120\n      tag_118\n      jump\t// in\n    tag_120:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3008  balanceOf */\n      tag_19\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3029  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2993  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2994:2995  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2996  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_122\n      jumpi\n      tag_122\n      tag_118\n      jump\t// in\n    tag_122:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:3029  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2961:2964  ++i */\n      tag_123\n      dup2\n      tag_124\n      jump\t// in\n    tag_123:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_112)\n    tag_113:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3057:3070  batchBalances */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3291  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_91\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3272:3280  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3282:3290  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3257  _setApprovalForAll */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3291  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3598:3993  function safeTransferFrom(... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3818  from == _msgSender() */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3818  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3858  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_139\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3822:3858  isApprovedForAll(from, _msgSender()) */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3839:3843  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3822:3858  isApprovedForAll(from, _msgSender()) */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3777:3931  require(... */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_101\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3941:3986  _safeTransferFrom(from, to, id, amount, data) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3959:3963  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3965:3967  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3969:3971  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3973:3979  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3981:3985  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3941:3958  _safeTransferFrom */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3941:3986  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10936:10938   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10918:10939   */\n      mstore\n        /* \"#utility.yul\":10975:10977   */\n      0x26\n        /* \"#utility.yul\":10955:10973   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10948:10978   */\n      mstore\n        /* \"#utility.yul\":11014:11048   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10994:11012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10987:11049   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11065:11083   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11058:11094   */\n      mstore\n        /* \"#utility.yul\":11111:11130   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_73\n        /* \"#utility.yul\":10734:11136   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11343:11345   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11325:11346   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11362:11380   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11355:11385   */\n      mstore\n        /* \"#utility.yul\":11421:11455   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11401:11419   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11394:11456   */\n      mstore\n        /* \"#utility.yul\":11473:11491   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_73\n        /* \"#utility.yul\":11141:11497   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8632:9341  function _mint(... */\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8779:8795  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8771:8833  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11704:11706   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8771:8833  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11686:11707   */\n      mstore\n        /* \"#utility.yul\":11743:11745   */\n      0x21\n        /* \"#utility.yul\":11723:11741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11716:11746   */\n      mstore\n        /* \"#utility.yul\":11782:11816   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":11762:11780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11755:11817   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":11833:11851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11826:11857   */\n      mstore\n        /* \"#utility.yul\":11874:11893   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8771:8833  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_73\n        /* \"#utility.yul\":11502:11899   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8771:8833  require(to != address(0), \"ERC1155: mint to the zero address\") */\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8844:8860  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8908:8929  _asSingletonArray(id) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8926:8928  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8908:8925  _asSingletonArray */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8908:8929  _asSingletonArray(id) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8885:8929  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8939:8963  uint256[] memory amounts */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8966:8991  _asSingletonArray(amount) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8984:8990  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8966:8983  _asSingletonArray */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8966:8991  _asSingletonArray(amount) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8939:8991  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9079:9088  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9079:9092  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9079:9096  _balances[id][to] */\n      dup12\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9079:9106  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9100:9106  amount */\n      dup8\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9079:9088  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9079:9106  _balances[id][to] += amount */\n      tag_169\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9100:9106  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9079:9106  _balances[id][to] += amount */\n      tag_170\n      jump\t// in\n    tag_169:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9121:9173  TransferSingle(operator, address(0), to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12211:12236   */\n      dup8\n      dup2\n      mstore\n        /* \"#utility.yul\":12267:12269   */\n      0x20\n        /* \"#utility.yul\":12252:12270   */\n      dup2\n      add\n        /* \"#utility.yul\":12245:12279   */\n      dup8\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9121:9173  TransferSingle(operator, address(0), to, id, amount) */\n      dup1\n      dup11\n      and\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9154:9155  0 */\n      0x00\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9121:9173  TransferSingle(operator, address(0), to, id, amount) */\n      swap2\n      dup8\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12184:12202   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9121:9173  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9260:9334  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9291:9299  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9309:9310  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9313:9315  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9317:9319  id */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9321:9327  amount */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9329:9333  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9260:9290  _doSafeTransferAcceptanceCheck */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9260:9334  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8761:9341  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8632:9341  function _mint(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6235:7350  function _safeBatchTransferFrom(... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6455:6462  amounts */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6455:6469  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6441:6444  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6441:6451  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6441:6469  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6433:6514  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12492:12494   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6433:6514  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12474:12495   */\n      mstore\n        /* \"#utility.yul\":12531:12533   */\n      0x28\n        /* \"#utility.yul\":12511:12529   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12504:12534   */\n      mstore\n        /* \"#utility.yul\":12570:12604   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":12550:12568   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12543:12605   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":12621:12639   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12614:12652   */\n      mstore\n        /* \"#utility.yul\":12669:12688   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6433:6514  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_73\n        /* \"#utility.yul\":12290:12694   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6433:6514  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6532:6548  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6524:6590  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_184\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6601:6617  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6714:7125  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6738:6741  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6738:6748  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6734:6735  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6734:6748  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6714:7125  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6769:6779  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6782:6785  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6786:6787  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6782:6788  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_191\n      jumpi\n      tag_191\n      tag_118\n      jump\t// in\n    tag_191:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6769:6788  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6802:6816  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6819:6826  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6827:6828  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6819:6829  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_193\n      tag_118\n      jump\t// in\n    tag_193:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6844:6863  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6866:6879  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6866:6885  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6819:6829  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6907:6928  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6899:6975  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_196\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7026  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7030  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7036  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7039:7059  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7059  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7104  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7114  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7039:7059  fromBalance - amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7026  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7114  _balances[id][to] += amount */\n      tag_197\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7039:7059  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7114  _balances[id][to] += amount */\n      tag_170\n      jump\t// in\n    tag_197:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7125  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6750:6753  ++i */\n      dup1\n      tag_198\n      swap1\n      tag_124\n      jump\t// in\n    tag_198:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6714:7125  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_187)\n    tag_188:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7170:7172  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7140:7187  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7164:7168  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7140:7187  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7154:7162  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7140:7187  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7174:7177  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7179:7186  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7140:7187  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_199\n      swap3\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7268:7343  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7304:7312  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7314:7318  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7320:7322  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7324:7327  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7329:7336  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7338:7342  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7268:7303  _doSafeBatchTransferAcceptanceCheck */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7268:7343  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6423:7350  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6235:7350  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x03\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12912:13235  function _setApprovalForAll(... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13062:13070  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13053:13070  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13053:13058  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13053:13070  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13045:13116  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14188:14190   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13045:13116  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14170:14191   */\n      mstore\n        /* \"#utility.yul\":14227:14229   */\n      0x29\n        /* \"#utility.yul\":14207:14225   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14200:14230   */\n      mstore\n        /* \"#utility.yul\":14266:14300   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":14246:14264   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14239:14301   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":14317:14335   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14310:14349   */\n      mstore\n        /* \"#utility.yul\":14366:14385   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13045:13116  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_73\n        /* \"#utility.yul\":13986:14391   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13045:13116  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13151  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13144  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13151  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13161  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13172  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13187:13228  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13187:13228  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13187:13228  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12912:13235  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4942:5889  function _safeTransferFrom(... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5123:5139  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5115:5181  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_184\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5192:5208  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5256:5277  _asSingletonArray(id) */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5274:5276  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5256:5273  _asSingletonArray */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5256:5277  _asSingletonArray(id) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5233:5277  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5287:5311  uint256[] memory amounts */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5314:5339  _asSingletonArray(amount) */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5332:5338  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5314:5331  _asSingletonArray */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5314:5339  _asSingletonArray(amount) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5287:5339  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5421:5440  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5443:5456  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5443:5462  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5480:5501  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5472:5548  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_196\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5591  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5595  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5601  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5604:5624  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5624  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5661  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5671  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5604:5624  fromBalance - amount */\n      dup9\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5591  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5671  _balances[id][to] += amount */\n      tag_219\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5604:5624  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5671  _balances[id][to] += amount */\n      tag_170\n      jump\t// in\n    tag_219:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5687:5733  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12211:12236   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":12267:12269   */\n      0x20\n        /* \"#utility.yul\":12252:12270   */\n      dup2\n      add\n        /* \"#utility.yul\":12245:12279   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5687:5733  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12184:12202   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5687:5733  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5814:5882  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5845:5853  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5855:5859  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5861:5863  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5865:5867  id */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5869:5875  amount */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5877:5881  data */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5814:5844  _doSafeTransferAcceptanceCheck */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5814:5882  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5105:5889  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4942:5889  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17066:17259  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17185:17201  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17199:17200  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17185:17201  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17132:17148  uint256[] memory */\n      0x60\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17160:17182  uint256[] memory array */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17185:17201  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17160:17201  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17222:17229  element */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17211:17216  array */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17217:17218  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17211:17219  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_228\n      jumpi\n      tag_228\n      tag_118\n      jump\t// in\n    tag_228:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17211:17229  array[0] = element */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17247:17252  array */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17066:17259  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:16262  function _doSafeTransferAcceptanceCheck(... */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15744:15757  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15740:16256  if (to.isContract()) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15779:15851  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15779:15817  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15779:15851  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_235\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15818:15826  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15828:15832  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15834:15836  id */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15838:15844  amount */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15846:15850  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15779:15851  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_236\n      jump\t// in\n    tag_235:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_237\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_238\n      swap2\n      dup2\n      add\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      0x01\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15775:16246  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_240\n      jumpi\n      tag_244\n      tag_245\n      jump\t// in\n    tag_244:\n      dup1\n      0x08c379a0\n      sub\n      tag_243\n      jumpi\n      pop\n      tag_246\n      tag_247\n      jump\t// in\n    tag_246:\n      dup1\n      tag_248\n      jumpi\n      pop\n      jump(tag_242)\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16122:16128  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16115:16129  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15775:16246  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_243:\n      pop\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16169:16231  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16278:16280   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16169:16231  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16260:16281   */\n      mstore\n        /* \"#utility.yul\":16317:16319   */\n      0x34\n        /* \"#utility.yul\":16297:16315   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16290:16320   */\n      mstore\n        /* \"#utility.yul\":16356:16390   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":16336:16354   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16329:16391   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":16407:16425   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16400:16450   */\n      mstore\n        /* \"#utility.yul\":16467:16486   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16169:16231  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_73\n        /* \"#utility.yul\":16076:16492   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15775:16246  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n    tag_240:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15900:15955  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15896:16048  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15979:16029  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_255\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16268:17060  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16500:16513  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16496:17054  if (to.isContract()) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16535:16614  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16535:16578  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16535:16614  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_259\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16579:16587  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16589:16593  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16595:16598  ids */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16600:16607  amounts */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16609:16613  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16535:16614  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_260\n      jump\t// in\n    tag_259:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_261\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_262\n      swap2\n      dup2\n      add\n      swap1\n      tag_239\n      jump\t// in\n    tag_262:\n      0x01\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16531:17044  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_263\n      jumpi\n      tag_244\n      tag_245\n      jump\t// in\n    tag_263:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16693:16753  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16689:16846  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16777:16827  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_255\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_276:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_287:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_18:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_289:\n        /* \"#utility.yul\":360:389   */\n      tag_290\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_276\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_277:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":769:1014   */\n    tag_24:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_295:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_296\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_277\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_30:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_299:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1868   */\n    tag_278:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_301:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_301)\n    tag_303:\n        /* \"#utility.yul\":1718:1724   */\n      dup2\n        /* \"#utility.yul\":1715:1716   */\n      dup2\n        /* \"#utility.yul\":1712:1725   */\n      gt\n        /* \"#utility.yul\":1709:1796   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":1784:1785   */\n      0x00\n        /* \"#utility.yul\":1777:1781   */\n      0x20\n        /* \"#utility.yul\":1768:1774   */\n      dup4\n        /* \"#utility.yul\":1763:1766   */\n      dup8\n        /* \"#utility.yul\":1759:1775   */\n      add\n        /* \"#utility.yul\":1755:1782   */\n      add\n        /* \"#utility.yul\":1748:1786   */\n      mstore\n        /* \"#utility.yul\":1709:1796   */\n    tag_304:\n      pop\n        /* \"#utility.yul\":1850:1852   */\n      0x1f\n        /* \"#utility.yul\":1829:1844   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1825:1854   */\n      and\n        /* \"#utility.yul\":1816:1855   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1857:1861   */\n      0x20\n        /* \"#utility.yul\":1812:1862   */\n      add\n      swap3\n        /* \"#utility.yul\":1396:1868   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1873:2093   */\n    tag_33:\n        /* \"#utility.yul\":2022:2024   */\n      0x20\n        /* \"#utility.yul\":2011:2020   */\n      dup2\n        /* \"#utility.yul\":2004:2025   */\n      mstore\n        /* \"#utility.yul\":1985:1989   */\n      0x00\n        /* \"#utility.yul\":2042:2087   */\n      tag_296\n        /* \"#utility.yul\":2083:2085   */\n      0x20\n        /* \"#utility.yul\":2072:2081   */\n      dup4\n        /* \"#utility.yul\":2068:2086   */\n      add\n        /* \"#utility.yul\":2060:2066   */\n      dup5\n        /* \"#utility.yul\":2042:2087   */\n      tag_278\n      jump\t// in\n        /* \"#utility.yul\":2098:2346   */\n    tag_36:\n        /* \"#utility.yul\":2166:2172   */\n      0x00\n        /* \"#utility.yul\":2174:2180   */\n      dup1\n        /* \"#utility.yul\":2227:2229   */\n      0x40\n        /* \"#utility.yul\":2215:2224   */\n      dup4\n        /* \"#utility.yul\":2206:2213   */\n      dup6\n        /* \"#utility.yul\":2202:2225   */\n      sub\n        /* \"#utility.yul\":2198:2230   */\n      slt\n        /* \"#utility.yul\":2195:2247   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":2243:2244   */\n      0x00\n        /* \"#utility.yul\":2240:2241   */\n      dup1\n        /* \"#utility.yul\":2233:2245   */\n      revert\n        /* \"#utility.yul\":2195:2247   */\n    tag_308:\n      pop\n      pop\n        /* \"#utility.yul\":2266:2289   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2336:2338   */\n      0x20\n        /* \"#utility.yul\":2321:2339   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2308:2340   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2098:2346   */\n      jump\t// out\n        /* \"#utility.yul\":2351:2478   */\n    tag_110:\n        /* \"#utility.yul\":2412:2422   */\n      0x4e487b71\n        /* \"#utility.yul\":2407:2410   */\n      0xe0\n        /* \"#utility.yul\":2403:2423   */\n      shl\n        /* \"#utility.yul\":2400:2401   */\n      0x00\n        /* \"#utility.yul\":2393:2424   */\n      mstore\n        /* \"#utility.yul\":2443:2447   */\n      0x41\n        /* \"#utility.yul\":2440:2441   */\n      0x04\n        /* \"#utility.yul\":2433:2448   */\n      mstore\n        /* \"#utility.yul\":2467:2471   */\n      0x24\n        /* \"#utility.yul\":2464:2465   */\n      0x00\n        /* \"#utility.yul\":2457:2472   */\n      revert\n        /* \"#utility.yul\":2483:2732   */\n    tag_279:\n        /* \"#utility.yul\":2593:2595   */\n      0x1f\n        /* \"#utility.yul\":2574:2587   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2570:2597   */\n      and\n        /* \"#utility.yul\":2558:2598   */\n      dup2\n      add\n        /* \"#utility.yul\":2628:2646   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2613:2647   */\n      dup2\n      gt\n        /* \"#utility.yul\":2649:2671   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2610:2672   */\n      or\n        /* \"#utility.yul\":2607:2695   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":2675:2693   */\n      tag_312\n      tag_110\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2711:2713   */\n      0x40\n        /* \"#utility.yul\":2704:2726   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2483:2732   */\n      jump\t// out\n        /* \"#utility.yul\":2737:2920   */\n    tag_280:\n        /* \"#utility.yul\":2797:2801   */\n      0x00\n        /* \"#utility.yul\":2830:2848   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2822:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2849   */\n      gt\n        /* \"#utility.yul\":2816:2872   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":2852:2870   */\n      tag_315\n      tag_110\n      jump\t// in\n    tag_315:\n      pop\n        /* \"#utility.yul\":2897:2898   */\n      0x05\n        /* \"#utility.yul\":2893:2907   */\n      shl\n        /* \"#utility.yul\":2909:2913   */\n      0x20\n        /* \"#utility.yul\":2889:2914   */\n      add\n      swap1\n        /* \"#utility.yul\":2737:2920   */\n      jump\t// out\n        /* \"#utility.yul\":2925:3649   */\n    tag_281:\n        /* \"#utility.yul\":2979:2984   */\n      0x00\n        /* \"#utility.yul\":3032:3035   */\n      dup3\n        /* \"#utility.yul\":3025:3029   */\n      0x1f\n        /* \"#utility.yul\":3017:3023   */\n      dup4\n        /* \"#utility.yul\":3013:3030   */\n      add\n        /* \"#utility.yul\":3009:3036   */\n      slt\n        /* \"#utility.yul\":2999:3054   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":3050:3051   */\n      0x00\n        /* \"#utility.yul\":3047:3048   */\n      dup1\n        /* \"#utility.yul\":3040:3052   */\n      revert\n        /* \"#utility.yul\":2999:3054   */\n    tag_317:\n        /* \"#utility.yul\":3086:3092   */\n      dup2\n        /* \"#utility.yul\":3073:3093   */\n      calldataload\n        /* \"#utility.yul\":3112:3116   */\n      0x20\n        /* \"#utility.yul\":3135:3178   */\n      tag_318\n        /* \"#utility.yul\":3175:3177   */\n      dup3\n        /* \"#utility.yul\":3135:3178   */\n      tag_280\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3207:3209   */\n      0x40\n        /* \"#utility.yul\":3201:3210   */\n      mload\n        /* \"#utility.yul\":3219:3250   */\n      tag_319\n        /* \"#utility.yul\":3247:3249   */\n      dup3\n        /* \"#utility.yul\":3239:3245   */\n      dup3\n        /* \"#utility.yul\":3219:3250   */\n      tag_279\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":3285:3303   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3377:3378   */\n      0x05\n        /* \"#utility.yul\":3373:3383   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3361:3384   */\n      dup6\n      add\n        /* \"#utility.yul\":3357:3389   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3319:3334   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3401:3416   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3398:3433   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":3429:3430   */\n      0x00\n        /* \"#utility.yul\":3426:3427   */\n      dup1\n        /* \"#utility.yul\":3419:3431   */\n      revert\n        /* \"#utility.yul\":3398:3433   */\n    tag_320:\n        /* \"#utility.yul\":3465:3467   */\n      dup3\n        /* \"#utility.yul\":3457:3463   */\n      dup7\n        /* \"#utility.yul\":3453:3468   */\n      add\n        /* \"#utility.yul\":3477:3619   */\n    tag_321:\n        /* \"#utility.yul\":3493:3499   */\n      dup5\n        /* \"#utility.yul\":3488:3491   */\n      dup2\n        /* \"#utility.yul\":3485:3500   */\n      lt\n        /* \"#utility.yul\":3477:3619   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":3559:3576   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3547:3577   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3597:3609   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3510:3522   */\n      dup4\n      add\n        /* \"#utility.yul\":3477:3619   */\n      jump(tag_321)\n    tag_323:\n      pop\n        /* \"#utility.yul\":3637:3643   */\n      swap7\n        /* \"#utility.yul\":2925:3649   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3654:4209   */\n    tag_282:\n        /* \"#utility.yul\":3696:3701   */\n      0x00\n        /* \"#utility.yul\":3749:3752   */\n      dup3\n        /* \"#utility.yul\":3742:3746   */\n      0x1f\n        /* \"#utility.yul\":3734:3740   */\n      dup4\n        /* \"#utility.yul\":3730:3747   */\n      add\n        /* \"#utility.yul\":3726:3753   */\n      slt\n        /* \"#utility.yul\":3716:3771   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":3767:3768   */\n      0x00\n        /* \"#utility.yul\":3764:3765   */\n      dup1\n        /* \"#utility.yul\":3757:3769   */\n      revert\n        /* \"#utility.yul\":3716:3771   */\n    tag_325:\n        /* \"#utility.yul\":3803:3809   */\n      dup2\n        /* \"#utility.yul\":3790:3810   */\n      calldataload\n        /* \"#utility.yul\":3829:3847   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3825:3827   */\n      dup2\n        /* \"#utility.yul\":3822:3848   */\n      gt\n        /* \"#utility.yul\":3819:3871   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":3851:3869   */\n      tag_327\n      tag_110\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3900:3902   */\n      0x40\n        /* \"#utility.yul\":3894:3903   */\n      mload\n        /* \"#utility.yul\":3912:3979   */\n      tag_328\n        /* \"#utility.yul\":3967:3969   */\n      0x1f\n        /* \"#utility.yul\":3948:3961   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3944:3971   */\n      and\n        /* \"#utility.yul\":3973:3977   */\n      0x20\n        /* \"#utility.yul\":3940:3978   */\n      add\n        /* \"#utility.yul\":3894:3903   */\n      dup3\n        /* \"#utility.yul\":3912:3979   */\n      tag_279\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":4003:4005   */\n      dup2\n        /* \"#utility.yul\":3995:4001   */\n      dup2\n        /* \"#utility.yul\":3988:4006   */\n      mstore\n        /* \"#utility.yul\":4049:4052   */\n      dup5\n        /* \"#utility.yul\":4042:4046   */\n      0x20\n        /* \"#utility.yul\":4037:4039   */\n      dup4\n        /* \"#utility.yul\":4029:4035   */\n      dup7\n        /* \"#utility.yul\":4025:4040   */\n      add\n        /* \"#utility.yul\":4021:4047   */\n      add\n        /* \"#utility.yul\":4018:4053   */\n      gt\n        /* \"#utility.yul\":4015:4070   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4063:4064   */\n      dup1\n        /* \"#utility.yul\":4056:4068   */\n      revert\n        /* \"#utility.yul\":4015:4070   */\n    tag_329:\n        /* \"#utility.yul\":4130:4132   */\n      dup2\n        /* \"#utility.yul\":4123:4127   */\n      0x20\n        /* \"#utility.yul\":4115:4121   */\n      dup6\n        /* \"#utility.yul\":4111:4128   */\n      add\n        /* \"#utility.yul\":4104:4108   */\n      0x20\n        /* \"#utility.yul\":4096:4102   */\n      dup4\n        /* \"#utility.yul\":4092:4109   */\n      add\n        /* \"#utility.yul\":4079:4133   */\n      calldatacopy\n        /* \"#utility.yul\":4177:4178   */\n      0x00\n        /* \"#utility.yul\":4153:4168   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":4170:4174   */\n      0x20\n        /* \"#utility.yul\":4149:4175   */\n      add\n        /* \"#utility.yul\":4142:4179   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4157:4163   */\n      swap4\n        /* \"#utility.yul\":3654:4209   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4214:5157   */\n    tag_40:\n        /* \"#utility.yul\":4368:4374   */\n      0x00\n        /* \"#utility.yul\":4376:4382   */\n      dup1\n        /* \"#utility.yul\":4384:4390   */\n      0x00\n        /* \"#utility.yul\":4392:4398   */\n      dup1\n        /* \"#utility.yul\":4400:4406   */\n      0x00\n        /* \"#utility.yul\":4453:4456   */\n      0xa0\n        /* \"#utility.yul\":4441:4450   */\n      dup7\n        /* \"#utility.yul\":4432:4439   */\n      dup9\n        /* \"#utility.yul\":4428:4451   */\n      sub\n        /* \"#utility.yul\":4424:4457   */\n      slt\n        /* \"#utility.yul\":4421:4474   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":4470:4471   */\n      0x00\n        /* \"#utility.yul\":4467:4468   */\n      dup1\n        /* \"#utility.yul\":4460:4472   */\n      revert\n        /* \"#utility.yul\":4421:4474   */\n    tag_331:\n        /* \"#utility.yul\":4493:4522   */\n      tag_332\n        /* \"#utility.yul\":4512:4521   */\n      dup7\n        /* \"#utility.yul\":4493:4522   */\n      tag_276\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4483:4522   */\n      swap5\n      pop\n        /* \"#utility.yul\":4541:4579   */\n      tag_333\n        /* \"#utility.yul\":4575:4577   */\n      0x20\n        /* \"#utility.yul\":4564:4573   */\n      dup8\n        /* \"#utility.yul\":4560:4578   */\n      add\n        /* \"#utility.yul\":4541:4579   */\n      tag_276\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":4531:4579   */\n      swap4\n      pop\n        /* \"#utility.yul\":4630:4632   */\n      0x40\n        /* \"#utility.yul\":4619:4628   */\n      dup7\n        /* \"#utility.yul\":4615:4633   */\n      add\n        /* \"#utility.yul\":4602:4634   */\n      calldataload\n        /* \"#utility.yul\":4653:4671   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4694:4696   */\n      dup1\n        /* \"#utility.yul\":4686:4692   */\n      dup3\n        /* \"#utility.yul\":4683:4697   */\n      gt\n        /* \"#utility.yul\":4680:4714   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":4710:4711   */\n      0x00\n        /* \"#utility.yul\":4707:4708   */\n      dup1\n        /* \"#utility.yul\":4700:4712   */\n      revert\n        /* \"#utility.yul\":4680:4714   */\n    tag_334:\n        /* \"#utility.yul\":4733:4794   */\n      tag_335\n        /* \"#utility.yul\":4786:4793   */\n      dup10\n        /* \"#utility.yul\":4777:4783   */\n      dup4\n        /* \"#utility.yul\":4766:4775   */\n      dup11\n        /* \"#utility.yul\":4762:4784   */\n      add\n        /* \"#utility.yul\":4733:4794   */\n      tag_281\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":4723:4794   */\n      swap5\n      pop\n        /* \"#utility.yul\":4847:4849   */\n      0x60\n        /* \"#utility.yul\":4836:4845   */\n      dup9\n        /* \"#utility.yul\":4832:4850   */\n      add\n        /* \"#utility.yul\":4819:4851   */\n      calldataload\n        /* \"#utility.yul\":4803:4851   */\n      swap2\n      pop\n        /* \"#utility.yul\":4876:4878   */\n      dup1\n        /* \"#utility.yul\":4866:4874   */\n      dup3\n        /* \"#utility.yul\":4863:4879   */\n      gt\n        /* \"#utility.yul\":4860:4896   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":4892:4893   */\n      0x00\n        /* \"#utility.yul\":4889:4890   */\n      dup1\n        /* \"#utility.yul\":4882:4894   */\n      revert\n        /* \"#utility.yul\":4860:4896   */\n    tag_336:\n        /* \"#utility.yul\":4915:4978   */\n      tag_337\n        /* \"#utility.yul\":4970:4977   */\n      dup10\n        /* \"#utility.yul\":4959:4967   */\n      dup4\n        /* \"#utility.yul\":4948:4957   */\n      dup11\n        /* \"#utility.yul\":4944:4968   */\n      add\n        /* \"#utility.yul\":4915:4978   */\n      tag_281\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4905:4978   */\n      swap4\n      pop\n        /* \"#utility.yul\":5031:5034   */\n      0x80\n        /* \"#utility.yul\":5020:5029   */\n      dup9\n        /* \"#utility.yul\":5016:5035   */\n      add\n        /* \"#utility.yul\":5003:5036   */\n      calldataload\n        /* \"#utility.yul\":4987:5036   */\n      swap2\n      pop\n        /* \"#utility.yul\":5061:5063   */\n      dup1\n        /* \"#utility.yul\":5051:5059   */\n      dup3\n        /* \"#utility.yul\":5048:5064   */\n      gt\n        /* \"#utility.yul\":5045:5081   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":5077:5078   */\n      0x00\n        /* \"#utility.yul\":5074:5075   */\n      dup1\n        /* \"#utility.yul\":5067:5079   */\n      revert\n        /* \"#utility.yul\":5045:5081   */\n    tag_338:\n      pop\n        /* \"#utility.yul\":5100:5151   */\n      tag_339\n        /* \"#utility.yul\":5143:5150   */\n      dup9\n        /* \"#utility.yul\":5132:5140   */\n      dup3\n        /* \"#utility.yul\":5121:5130   */\n      dup10\n        /* \"#utility.yul\":5117:5141   */\n      add\n        /* \"#utility.yul\":5100:5151   */\n      tag_282\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":5090:5151   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4214:5157   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5162:6370   */\n    tag_44:\n        /* \"#utility.yul\":5280:5286   */\n      0x00\n        /* \"#utility.yul\":5288:5294   */\n      dup1\n        /* \"#utility.yul\":5341:5343   */\n      0x40\n        /* \"#utility.yul\":5329:5338   */\n      dup4\n        /* \"#utility.yul\":5320:5327   */\n      dup6\n        /* \"#utility.yul\":5316:5339   */\n      sub\n        /* \"#utility.yul\":5312:5344   */\n      slt\n        /* \"#utility.yul\":5309:5361   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":5357:5358   */\n      0x00\n        /* \"#utility.yul\":5354:5355   */\n      dup1\n        /* \"#utility.yul\":5347:5359   */\n      revert\n        /* \"#utility.yul\":5309:5361   */\n    tag_341:\n        /* \"#utility.yul\":5397:5406   */\n      dup3\n        /* \"#utility.yul\":5384:5407   */\n      calldataload\n        /* \"#utility.yul\":5426:5444   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5467:5469   */\n      dup1\n        /* \"#utility.yul\":5459:5465   */\n      dup3\n        /* \"#utility.yul\":5456:5470   */\n      gt\n        /* \"#utility.yul\":5453:5487   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":5483:5484   */\n      0x00\n        /* \"#utility.yul\":5480:5481   */\n      dup1\n        /* \"#utility.yul\":5473:5485   */\n      revert\n        /* \"#utility.yul\":5453:5487   */\n    tag_342:\n        /* \"#utility.yul\":5521:5527   */\n      dup2\n        /* \"#utility.yul\":5510:5519   */\n      dup6\n        /* \"#utility.yul\":5506:5528   */\n      add\n        /* \"#utility.yul\":5496:5528   */\n      swap2\n      pop\n        /* \"#utility.yul\":5566:5573   */\n      dup6\n        /* \"#utility.yul\":5559:5563   */\n      0x1f\n        /* \"#utility.yul\":5555:5557   */\n      dup4\n        /* \"#utility.yul\":5551:5564   */\n      add\n        /* \"#utility.yul\":5547:5574   */\n      slt\n        /* \"#utility.yul\":5537:5592   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":5588:5589   */\n      0x00\n        /* \"#utility.yul\":5585:5586   */\n      dup1\n        /* \"#utility.yul\":5578:5590   */\n      revert\n        /* \"#utility.yul\":5537:5592   */\n    tag_343:\n        /* \"#utility.yul\":5624:5626   */\n      dup2\n        /* \"#utility.yul\":5611:5627   */\n      calldataload\n        /* \"#utility.yul\":5646:5650   */\n      0x20\n        /* \"#utility.yul\":5669:5712   */\n      tag_344\n        /* \"#utility.yul\":5709:5711   */\n      dup3\n        /* \"#utility.yul\":5669:5712   */\n      tag_280\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5741:5743   */\n      0x40\n        /* \"#utility.yul\":5735:5744   */\n      mload\n        /* \"#utility.yul\":5753:5784   */\n      tag_345\n        /* \"#utility.yul\":5781:5783   */\n      dup3\n        /* \"#utility.yul\":5773:5779   */\n      dup3\n        /* \"#utility.yul\":5753:5784   */\n      tag_279\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":5819:5837   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5907:5908   */\n      0x05\n        /* \"#utility.yul\":5903:5913   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5895:5914   */\n      dup6\n      add\n        /* \"#utility.yul\":5891:5919   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5853:5868   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5931:5950   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5928:5967   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":5963:5964   */\n      0x00\n        /* \"#utility.yul\":5960:5961   */\n      dup1\n        /* \"#utility.yul\":5953:5965   */\n      revert\n        /* \"#utility.yul\":5928:5967   */\n    tag_346:\n        /* \"#utility.yul\":5987:5998   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6007:6155   */\n    tag_347:\n        /* \"#utility.yul\":6023:6029   */\n      dup4\n        /* \"#utility.yul\":6018:6021   */\n      dup7\n        /* \"#utility.yul\":6015:6030   */\n      lt\n        /* \"#utility.yul\":6007:6155   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":6089:6112   */\n      tag_350\n        /* \"#utility.yul\":6108:6111   */\n      dup7\n        /* \"#utility.yul\":6089:6112   */\n      tag_276\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6077:6113   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6040:6052   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6133:6145   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6007:6155   */\n      jump(tag_347)\n    tag_349:\n        /* \"#utility.yul\":6174:6180   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":6218:6236   */\n      dup7\n      add\n        /* \"#utility.yul\":6205:6237   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":6249:6265   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6246:6282   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":6278:6279   */\n      0x00\n        /* \"#utility.yul\":6275:6276   */\n      dup1\n        /* \"#utility.yul\":6268:6280   */\n      revert\n        /* \"#utility.yul\":6246:6282   */\n    tag_351:\n      pop\n        /* \"#utility.yul\":6301:6364   */\n      tag_352\n        /* \"#utility.yul\":6356:6363   */\n      dup6\n        /* \"#utility.yul\":6345:6353   */\n      dup3\n        /* \"#utility.yul\":6334:6343   */\n      dup7\n        /* \"#utility.yul\":6330:6354   */\n      add\n        /* \"#utility.yul\":6301:6364   */\n      tag_281\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":6291:6364   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5162:6370   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6375:6810   */\n    tag_283:\n        /* \"#utility.yul\":6428:6431   */\n      0x00\n        /* \"#utility.yul\":6466:6471   */\n      dup2\n        /* \"#utility.yul\":6460:6472   */\n      mload\n        /* \"#utility.yul\":6493:6499   */\n      dup1\n        /* \"#utility.yul\":6488:6491   */\n      dup5\n        /* \"#utility.yul\":6481:6500   */\n      mstore\n        /* \"#utility.yul\":6519:6523   */\n      0x20\n        /* \"#utility.yul\":6548:6550   */\n      dup1\n        /* \"#utility.yul\":6543:6546   */\n      dup6\n        /* \"#utility.yul\":6539:6551   */\n      add\n        /* \"#utility.yul\":6532:6551   */\n      swap5\n      pop\n        /* \"#utility.yul\":6585:6587   */\n      dup1\n        /* \"#utility.yul\":6578:6583   */\n      dup5\n        /* \"#utility.yul\":6574:6588   */\n      add\n        /* \"#utility.yul\":6606:6607   */\n      0x00\n        /* \"#utility.yul\":6616:6785   */\n    tag_354:\n        /* \"#utility.yul\":6630:6636   */\n      dup4\n        /* \"#utility.yul\":6627:6628   */\n      dup2\n        /* \"#utility.yul\":6624:6637   */\n      lt\n        /* \"#utility.yul\":6616:6785   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":6691:6704   */\n      dup2\n      mload\n        /* \"#utility.yul\":6679:6705   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6725:6737   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6760:6775   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6652:6653   */\n      0x01\n        /* \"#utility.yul\":6645:6654   */\n      add\n        /* \"#utility.yul\":6616:6785   */\n      jump(tag_354)\n    tag_356:\n      pop\n        /* \"#utility.yul\":6801:6804   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6375:6810   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6815:7076   */\n    tag_47:\n        /* \"#utility.yul\":6994:6996   */\n      0x20\n        /* \"#utility.yul\":6983:6992   */\n      dup2\n        /* \"#utility.yul\":6976:6997   */\n      mstore\n        /* \"#utility.yul\":6957:6961   */\n      0x00\n        /* \"#utility.yul\":7014:7070   */\n      tag_296\n        /* \"#utility.yul\":7066:7068   */\n      0x20\n        /* \"#utility.yul\":7055:7064   */\n      dup4\n        /* \"#utility.yul\":7051:7069   */\n      add\n        /* \"#utility.yul\":7043:7049   */\n      dup5\n        /* \"#utility.yul\":7014:7070   */\n      tag_283\n      jump\t// in\n        /* \"#utility.yul\":7289:7636   */\n    tag_56:\n        /* \"#utility.yul\":7354:7360   */\n      0x00\n        /* \"#utility.yul\":7362:7368   */\n      dup1\n        /* \"#utility.yul\":7415:7417   */\n      0x40\n        /* \"#utility.yul\":7403:7412   */\n      dup4\n        /* \"#utility.yul\":7394:7401   */\n      dup6\n        /* \"#utility.yul\":7390:7413   */\n      sub\n        /* \"#utility.yul\":7386:7418   */\n      slt\n        /* \"#utility.yul\":7383:7435   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":7431:7432   */\n      0x00\n        /* \"#utility.yul\":7428:7429   */\n      dup1\n        /* \"#utility.yul\":7421:7433   */\n      revert\n        /* \"#utility.yul\":7383:7435   */\n    tag_361:\n        /* \"#utility.yul\":7454:7483   */\n      tag_362\n        /* \"#utility.yul\":7473:7482   */\n      dup4\n        /* \"#utility.yul\":7454:7483   */\n      tag_276\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":7444:7483   */\n      swap2\n      pop\n        /* \"#utility.yul\":7533:7535   */\n      0x20\n        /* \"#utility.yul\":7522:7531   */\n      dup4\n        /* \"#utility.yul\":7518:7536   */\n      add\n        /* \"#utility.yul\":7505:7537   */\n      calldataload\n        /* \"#utility.yul\":7580:7585   */\n      dup1\n        /* \"#utility.yul\":7573:7586   */\n      iszero\n        /* \"#utility.yul\":7566:7587   */\n      iszero\n        /* \"#utility.yul\":7559:7564   */\n      dup2\n        /* \"#utility.yul\":7556:7588   */\n      eq\n        /* \"#utility.yul\":7546:7606   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":7602:7603   */\n      0x00\n        /* \"#utility.yul\":7599:7600   */\n      dup1\n        /* \"#utility.yul\":7592:7604   */\n      revert\n        /* \"#utility.yul\":7546:7606   */\n    tag_363:\n        /* \"#utility.yul\":7625:7630   */\n      dup1\n        /* \"#utility.yul\":7615:7630   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7289:7636   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7641:7901   */\n    tag_60:\n        /* \"#utility.yul\":7709:7715   */\n      0x00\n        /* \"#utility.yul\":7717:7723   */\n      dup1\n        /* \"#utility.yul\":7770:7772   */\n      0x40\n        /* \"#utility.yul\":7758:7767   */\n      dup4\n        /* \"#utility.yul\":7749:7756   */\n      dup6\n        /* \"#utility.yul\":7745:7768   */\n      sub\n        /* \"#utility.yul\":7741:7773   */\n      slt\n        /* \"#utility.yul\":7738:7790   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":7786:7787   */\n      0x00\n        /* \"#utility.yul\":7783:7784   */\n      dup1\n        /* \"#utility.yul\":7776:7788   */\n      revert\n        /* \"#utility.yul\":7738:7790   */\n    tag_365:\n        /* \"#utility.yul\":7809:7838   */\n      tag_366\n        /* \"#utility.yul\":7828:7837   */\n      dup4\n        /* \"#utility.yul\":7809:7838   */\n      tag_276\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":7799:7838   */\n      swap2\n      pop\n        /* \"#utility.yul\":7857:7895   */\n      tag_367\n        /* \"#utility.yul\":7891:7893   */\n      0x20\n        /* \"#utility.yul\":7880:7889   */\n      dup5\n        /* \"#utility.yul\":7876:7894   */\n      add\n        /* \"#utility.yul\":7857:7895   */\n      tag_276\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":7847:7895   */\n      swap1\n      pop\n        /* \"#utility.yul\":7641:7901   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7906:8512   */\n    tag_65:\n        /* \"#utility.yul\":8010:8016   */\n      0x00\n        /* \"#utility.yul\":8018:8024   */\n      dup1\n        /* \"#utility.yul\":8026:8032   */\n      0x00\n        /* \"#utility.yul\":8034:8040   */\n      dup1\n        /* \"#utility.yul\":8042:8048   */\n      0x00\n        /* \"#utility.yul\":8095:8098   */\n      0xa0\n        /* \"#utility.yul\":8083:8092   */\n      dup7\n        /* \"#utility.yul\":8074:8081   */\n      dup9\n        /* \"#utility.yul\":8070:8093   */\n      sub\n        /* \"#utility.yul\":8066:8099   */\n      slt\n        /* \"#utility.yul\":8063:8116   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":8112:8113   */\n      0x00\n        /* \"#utility.yul\":8109:8110   */\n      dup1\n        /* \"#utility.yul\":8102:8114   */\n      revert\n        /* \"#utility.yul\":8063:8116   */\n    tag_369:\n        /* \"#utility.yul\":8135:8164   */\n      tag_370\n        /* \"#utility.yul\":8154:8163   */\n      dup7\n        /* \"#utility.yul\":8135:8164   */\n      tag_276\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":8125:8164   */\n      swap5\n      pop\n        /* \"#utility.yul\":8183:8221   */\n      tag_371\n        /* \"#utility.yul\":8217:8219   */\n      0x20\n        /* \"#utility.yul\":8206:8215   */\n      dup8\n        /* \"#utility.yul\":8202:8220   */\n      add\n        /* \"#utility.yul\":8183:8221   */\n      tag_276\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":8173:8221   */\n      swap4\n      pop\n        /* \"#utility.yul\":8268:8270   */\n      0x40\n        /* \"#utility.yul\":8257:8266   */\n      dup7\n        /* \"#utility.yul\":8253:8271   */\n      add\n        /* \"#utility.yul\":8240:8272   */\n      calldataload\n        /* \"#utility.yul\":8230:8272   */\n      swap3\n      pop\n        /* \"#utility.yul\":8319:8321   */\n      0x60\n        /* \"#utility.yul\":8308:8317   */\n      dup7\n        /* \"#utility.yul\":8304:8322   */\n      add\n        /* \"#utility.yul\":8291:8323   */\n      calldataload\n        /* \"#utility.yul\":8281:8323   */\n      swap2\n      pop\n        /* \"#utility.yul\":8374:8377   */\n      0x80\n        /* \"#utility.yul\":8363:8372   */\n      dup7\n        /* \"#utility.yul\":8359:8378   */\n      add\n        /* \"#utility.yul\":8346:8379   */\n      calldataload\n        /* \"#utility.yul\":8402:8420   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8394:8400   */\n      dup2\n        /* \"#utility.yul\":8391:8421   */\n      gt\n        /* \"#utility.yul\":8388:8438   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":8434:8435   */\n      0x00\n        /* \"#utility.yul\":8431:8432   */\n      dup1\n        /* \"#utility.yul\":8424:8436   */\n      revert\n        /* \"#utility.yul\":8388:8438   */\n    tag_372:\n        /* \"#utility.yul\":8457:8506   */\n      tag_339\n        /* \"#utility.yul\":8498:8505   */\n      dup9\n        /* \"#utility.yul\":8489:8495   */\n      dup3\n        /* \"#utility.yul\":8478:8487   */\n      dup10\n        /* \"#utility.yul\":8474:8496   */\n      add\n        /* \"#utility.yul\":8457:8506   */\n      tag_282\n      jump\t// in\n        /* \"#utility.yul\":8517:8703   */\n    tag_69:\n        /* \"#utility.yul\":8576:8582   */\n      0x00\n        /* \"#utility.yul\":8629:8631   */\n      0x20\n        /* \"#utility.yul\":8617:8626   */\n      dup3\n        /* \"#utility.yul\":8608:8615   */\n      dup5\n        /* \"#utility.yul\":8604:8627   */\n      sub\n        /* \"#utility.yul\":8600:8632   */\n      slt\n        /* \"#utility.yul\":8597:8649   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":8645:8646   */\n      0x00\n        /* \"#utility.yul\":8642:8643   */\n      dup1\n        /* \"#utility.yul\":8635:8647   */\n      revert\n        /* \"#utility.yul\":8597:8649   */\n    tag_375:\n        /* \"#utility.yul\":8668:8697   */\n      tag_296\n        /* \"#utility.yul\":8687:8696   */\n      dup3\n        /* \"#utility.yul\":8668:8697   */\n      tag_276\n      jump\t// in\n        /* \"#utility.yul\":9119:9499   */\n    tag_82:\n        /* \"#utility.yul\":9198:9199   */\n      0x01\n        /* \"#utility.yul\":9194:9206   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9241:9253   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9262:9323   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":9316:9320   */\n      0x7f\n        /* \"#utility.yul\":9308:9314   */\n      dup3\n        /* \"#utility.yul\":9304:9321   */\n      and\n        /* \"#utility.yul\":9294:9321   */\n      swap2\n      pop\n        /* \"#utility.yul\":9262:9323   */\n    tag_379:\n        /* \"#utility.yul\":9369:9371   */\n      0x20\n        /* \"#utility.yul\":9361:9367   */\n      dup3\n        /* \"#utility.yul\":9358:9372   */\n      lt\n        /* \"#utility.yul\":9338:9356   */\n      dup2\n        /* \"#utility.yul\":9335:9373   */\n      sub\n        /* \"#utility.yul\":9332:9493   */\n      tag_380\n      jumpi\n        /* \"#utility.yul\":9415:9425   */\n      0x4e487b71\n        /* \"#utility.yul\":9410:9413   */\n      0xe0\n        /* \"#utility.yul\":9406:9426   */\n      shl\n        /* \"#utility.yul\":9403:9404   */\n      0x00\n        /* \"#utility.yul\":9396:9427   */\n      mstore\n        /* \"#utility.yul\":9450:9454   */\n      0x22\n        /* \"#utility.yul\":9447:9448   */\n      0x04\n        /* \"#utility.yul\":9440:9455   */\n      mstore\n        /* \"#utility.yul\":9478:9482   */\n      0x24\n        /* \"#utility.yul\":9475:9476   */\n      0x00\n        /* \"#utility.yul\":9468:9483   */\n      revert\n        /* \"#utility.yul\":9332:9493   */\n    tag_380:\n      pop\n        /* \"#utility.yul\":9119:9499   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9504:9915   */\n    tag_101:\n        /* \"#utility.yul\":9706:9708   */\n      0x20\n        /* \"#utility.yul\":9688:9709   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9745:9747   */\n      0x2f\n        /* \"#utility.yul\":9725:9743   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9718:9748   */\n      mstore\n        /* \"#utility.yul\":9784:9818   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":9779:9781   */\n      0x40\n        /* \"#utility.yul\":9764:9782   */\n      dup3\n      add\n        /* \"#utility.yul\":9757:9819   */\n      mstore\n      shl(0x8a, 0x195c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9850:9852   */\n      0x60\n        /* \"#utility.yul\":9835:9853   */\n      dup3\n      add\n        /* \"#utility.yul\":9828:9873   */\n      mstore\n        /* \"#utility.yul\":9905:9908   */\n      0x80\n        /* \"#utility.yul\":9890:9909   */\n      add\n      swap1\n        /* \"#utility.yul\":9504:9915   */\n      jump\t// out\n        /* \"#utility.yul\":10330:10457   */\n    tag_118:\n        /* \"#utility.yul\":10391:10401   */\n      0x4e487b71\n        /* \"#utility.yul\":10386:10389   */\n      0xe0\n        /* \"#utility.yul\":10382:10402   */\n      shl\n        /* \"#utility.yul\":10379:10380   */\n      0x00\n        /* \"#utility.yul\":10372:10403   */\n      mstore\n        /* \"#utility.yul\":10422:10426   */\n      0x32\n        /* \"#utility.yul\":10419:10420   */\n      0x04\n        /* \"#utility.yul\":10412:10427   */\n      mstore\n        /* \"#utility.yul\":10446:10450   */\n      0x24\n        /* \"#utility.yul\":10443:10444   */\n      0x00\n        /* \"#utility.yul\":10436:10451   */\n      revert\n        /* \"#utility.yul\":10462:10589   */\n    tag_284:\n        /* \"#utility.yul\":10523:10533   */\n      0x4e487b71\n        /* \"#utility.yul\":10518:10521   */\n      0xe0\n        /* \"#utility.yul\":10514:10534   */\n      shl\n        /* \"#utility.yul\":10511:10512   */\n      0x00\n        /* \"#utility.yul\":10504:10535   */\n      mstore\n        /* \"#utility.yul\":10554:10558   */\n      0x11\n        /* \"#utility.yul\":10551:10552   */\n      0x04\n        /* \"#utility.yul\":10544:10559   */\n      mstore\n        /* \"#utility.yul\":10578:10582   */\n      0x24\n        /* \"#utility.yul\":10575:10576   */\n      0x00\n        /* \"#utility.yul\":10568:10583   */\n      revert\n        /* \"#utility.yul\":10594:10729   */\n    tag_124:\n        /* \"#utility.yul\":10633:10636   */\n      0x00\n        /* \"#utility.yul\":10654:10671   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10651:10694   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":10674:10692   */\n      tag_387\n      tag_284\n      jump\t// in\n    tag_387:\n      pop\n        /* \"#utility.yul\":10721:10722   */\n      0x01\n        /* \"#utility.yul\":10710:10723   */\n      add\n      swap1\n        /* \"#utility.yul\":10594:10729   */\n      jump\t// out\n        /* \"#utility.yul\":11904:12032   */\n    tag_170:\n        /* \"#utility.yul\":11944:11947   */\n      0x00\n        /* \"#utility.yul\":11975:11976   */\n      dup3\n        /* \"#utility.yul\":11971:11977   */\n      not\n        /* \"#utility.yul\":11968:11969   */\n      dup3\n        /* \"#utility.yul\":11965:11978   */\n      gt\n        /* \"#utility.yul\":11962:12001   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":11981:11999   */\n      tag_393\n      tag_284\n      jump\t// in\n    tag_393:\n      pop\n        /* \"#utility.yul\":12017:12026   */\n      add\n      swap1\n        /* \"#utility.yul\":11904:12032   */\n      jump\t// out\n        /* \"#utility.yul\":12699:13100   */\n    tag_184:\n        /* \"#utility.yul\":12901:12903   */\n      0x20\n        /* \"#utility.yul\":12883:12904   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12940:12942   */\n      0x25\n        /* \"#utility.yul\":12920:12938   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12913:12943   */\n      mstore\n        /* \"#utility.yul\":12979:13013   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":12974:12976   */\n      0x40\n        /* \"#utility.yul\":12959:12977   */\n      dup3\n      add\n        /* \"#utility.yul\":12952:13014   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":13045:13047   */\n      0x60\n        /* \"#utility.yul\":13030:13048   */\n      dup3\n      add\n        /* \"#utility.yul\":13023:13058   */\n      mstore\n        /* \"#utility.yul\":13090:13093   */\n      0x80\n        /* \"#utility.yul\":13075:13094   */\n      add\n      swap1\n        /* \"#utility.yul\":12699:13100   */\n      jump\t// out\n        /* \"#utility.yul\":13105:13511   */\n    tag_196:\n        /* \"#utility.yul\":13307:13309   */\n      0x20\n        /* \"#utility.yul\":13289:13310   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13346:13348   */\n      0x2a\n        /* \"#utility.yul\":13326:13344   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13319:13349   */\n      mstore\n        /* \"#utility.yul\":13385:13419   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":13380:13382   */\n      0x40\n        /* \"#utility.yul\":13365:13383   */\n      dup3\n      add\n        /* \"#utility.yul\":13358:13420   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":13451:13453   */\n      0x60\n        /* \"#utility.yul\":13436:13454   */\n      dup3\n      add\n        /* \"#utility.yul\":13429:13469   */\n      mstore\n        /* \"#utility.yul\":13501:13504   */\n      0x80\n        /* \"#utility.yul\":13486:13505   */\n      add\n      swap1\n        /* \"#utility.yul\":13105:13511   */\n      jump\t// out\n        /* \"#utility.yul\":13516:13981   */\n    tag_200:\n        /* \"#utility.yul\":13773:13775   */\n      0x40\n        /* \"#utility.yul\":13762:13771   */\n      dup2\n        /* \"#utility.yul\":13755:13776   */\n      mstore\n        /* \"#utility.yul\":13736:13740   */\n      0x00\n        /* \"#utility.yul\":13799:13855   */\n      tag_399\n        /* \"#utility.yul\":13851:13853   */\n      0x40\n        /* \"#utility.yul\":13840:13849   */\n      dup4\n        /* \"#utility.yul\":13836:13854   */\n      add\n        /* \"#utility.yul\":13828:13834   */\n      dup6\n        /* \"#utility.yul\":13799:13855   */\n      tag_283\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":13903:13912   */\n      dup3\n        /* \"#utility.yul\":13895:13901   */\n      dup2\n        /* \"#utility.yul\":13891:13913   */\n      sub\n        /* \"#utility.yul\":13886:13888   */\n      0x20\n        /* \"#utility.yul\":13875:13884   */\n      dup5\n        /* \"#utility.yul\":13871:13889   */\n      add\n        /* \"#utility.yul\":13864:13914   */\n      mstore\n        /* \"#utility.yul\":13931:13975   */\n      tag_400\n        /* \"#utility.yul\":13968:13974   */\n      dup2\n        /* \"#utility.yul\":13960:13966   */\n      dup6\n        /* \"#utility.yul\":13931:13975   */\n      tag_283\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":13923:13975   */\n      swap6\n        /* \"#utility.yul\":13516:13981   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14396:14957   */\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14693:14708   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":14675:14709   */\n      dup3\n      mstore\n        /* \"#utility.yul\":14745:14760   */\n      dup6\n      and\n        /* \"#utility.yul\":14740:14742   */\n      0x20\n        /* \"#utility.yul\":14725:14743   */\n      dup3\n      add\n        /* \"#utility.yul\":14718:14761   */\n      mstore\n        /* \"#utility.yul\":14792:14794   */\n      0x40\n        /* \"#utility.yul\":14777:14795   */\n      dup2\n      add\n        /* \"#utility.yul\":14770:14804   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":14835:14837   */\n      0x60\n        /* \"#utility.yul\":14820:14838   */\n      dup2\n      add\n        /* \"#utility.yul\":14813:14847   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14655:14658   */\n      0xa0\n        /* \"#utility.yul\":14878:14881   */\n      0x80\n        /* \"#utility.yul\":14863:14882   */\n      dup3\n      add\n        /* \"#utility.yul\":14856:14888   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14618:14622   */\n      0x00\n      swap1\n        /* \"#utility.yul\":14905:14951   */\n      tag_403\n      swap1\n        /* \"#utility.yul\":14931:14950   */\n      dup4\n      add\n        /* \"#utility.yul\":14923:14929   */\n      dup5\n        /* \"#utility.yul\":14905:14951   */\n      tag_278\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":14897:14951   */\n      swap8\n        /* \"#utility.yul\":14396:14957   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14962:15211   */\n    tag_239:\n        /* \"#utility.yul\":15031:15037   */\n      0x00\n        /* \"#utility.yul\":15084:15086   */\n      0x20\n        /* \"#utility.yul\":15072:15081   */\n      dup3\n        /* \"#utility.yul\":15063:15070   */\n      dup5\n        /* \"#utility.yul\":15059:15082   */\n      sub\n        /* \"#utility.yul\":15055:15087   */\n      slt\n        /* \"#utility.yul\":15052:15104   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":15100:15101   */\n      0x00\n        /* \"#utility.yul\":15097:15098   */\n      dup1\n        /* \"#utility.yul\":15090:15102   */\n      revert\n        /* \"#utility.yul\":15052:15104   */\n    tag_405:\n        /* \"#utility.yul\":15132:15141   */\n      dup2\n        /* \"#utility.yul\":15126:15142   */\n      mload\n        /* \"#utility.yul\":15151:15181   */\n      tag_296\n        /* \"#utility.yul\":15175:15180   */\n      dup2\n        /* \"#utility.yul\":15151:15181   */\n      tag_277\n      jump\t// in\n        /* \"#utility.yul\":15216:15395   */\n    tag_245:\n        /* \"#utility.yul\":15251:15254   */\n      0x00\n        /* \"#utility.yul\":15293:15294   */\n      0x03\n        /* \"#utility.yul\":15275:15291   */\n      returndatasize\n        /* \"#utility.yul\":15272:15295   */\n      gt\n        /* \"#utility.yul\":15269:15389   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":15339:15340   */\n      0x04\n        /* \"#utility.yul\":15336:15337   */\n      0x00\n        /* \"#utility.yul\":15333:15334   */\n      dup1\n        /* \"#utility.yul\":15318:15341   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":15376:15377   */\n      0x00\n        /* \"#utility.yul\":15370:15378   */\n      mload\n        /* \"#utility.yul\":15365:15368   */\n      0xe0\n        /* \"#utility.yul\":15361:15379   */\n      shr\n        /* \"#utility.yul\":15269:15389   */\n    tag_408:\n        /* \"#utility.yul\":15216:15395   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15400:16071   */\n    tag_247:\n        /* \"#utility.yul\":15439:15442   */\n      0x00\n        /* \"#utility.yul\":15481:15485   */\n      0x44\n        /* \"#utility.yul\":15463:15479   */\n      returndatasize\n        /* \"#utility.yul\":15460:15486   */\n      lt\n        /* \"#utility.yul\":15457:15496   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":15400:16071   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15457:15496   */\n    tag_410:\n        /* \"#utility.yul\":15523:15525   */\n      0x40\n        /* \"#utility.yul\":15517:15526   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":15588:15604   */\n      returndatasize\n        /* \"#utility.yul\":15584:15609   */\n      dup2\n      add\n        /* \"#utility.yul\":15581:15582   */\n      0x04\n        /* \"#utility.yul\":15517:15526   */\n      dup4\n        /* \"#utility.yul\":15560:15610   */\n      returndatacopy\n        /* \"#utility.yul\":15639:15643   */\n      dup2\n        /* \"#utility.yul\":15633:15644   */\n      mload\n        /* \"#utility.yul\":15663:15679   */\n      returndatasize\n        /* \"#utility.yul\":15698:15716   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15769:15771   */\n      dup2\n        /* \"#utility.yul\":15762:15766   */\n      0x24\n        /* \"#utility.yul\":15754:15760   */\n      dup5\n        /* \"#utility.yul\":15750:15767   */\n      add\n        /* \"#utility.yul\":15747:15772   */\n      gt\n        /* \"#utility.yul\":15742:15744   */\n      dup2\n        /* \"#utility.yul\":15734:15740   */\n      dup5\n        /* \"#utility.yul\":15731:15745   */\n      gt\n        /* \"#utility.yul\":15728:15773   */\n      or\n        /* \"#utility.yul\":15725:15783   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":15776:15781   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15400:16071   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15725:15783   */\n    tag_411:\n        /* \"#utility.yul\":15813:15819   */\n      dup3\n        /* \"#utility.yul\":15807:15811   */\n      dup6\n        /* \"#utility.yul\":15803:15820   */\n      add\n        /* \"#utility.yul\":15792:15820   */\n      swap2\n      pop\n        /* \"#utility.yul\":15849:15852   */\n      dup2\n        /* \"#utility.yul\":15843:15853   */\n      mload\n        /* \"#utility.yul\":15876:15878   */\n      dup2\n        /* \"#utility.yul\":15868:15874   */\n      dup2\n        /* \"#utility.yul\":15865:15879   */\n      gt\n        /* \"#utility.yul\":15862:15889   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":15882:15887   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15400:16071   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15862:15889   */\n    tag_412:\n        /* \"#utility.yul\":15966:15968   */\n      dup5\n        /* \"#utility.yul\":15947:15963   */\n      returndatasize\n        /* \"#utility.yul\":15941:15945   */\n      dup8\n        /* \"#utility.yul\":15937:15964   */\n      add\n        /* \"#utility.yul\":15933:15969   */\n      add\n        /* \"#utility.yul\":15926:15930   */\n      0x20\n        /* \"#utility.yul\":15917:15923   */\n      dup3\n        /* \"#utility.yul\":15912:15915   */\n      dup6\n        /* \"#utility.yul\":15908:15924   */\n      add\n        /* \"#utility.yul\":15904:15931   */\n      add\n        /* \"#utility.yul\":15901:15970   */\n      gt\n        /* \"#utility.yul\":15898:15980   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":15973:15978   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15400:16071   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15898:15980   */\n    tag_413:\n        /* \"#utility.yul\":15989:16046   */\n      tag_414\n        /* \"#utility.yul\":16040:16044   */\n      0x20\n        /* \"#utility.yul\":16031:16037   */\n      dup3\n        /* \"#utility.yul\":16023:16029   */\n      dup7\n        /* \"#utility.yul\":16019:16038   */\n      add\n        /* \"#utility.yul\":16015:16045   */\n      add\n        /* \"#utility.yul\":16009:16013   */\n      dup8\n        /* \"#utility.yul\":15989:16046   */\n      tag_279\n      jump\t// in\n    tag_414:\n      pop\n        /* \"#utility.yul\":16062:16065   */\n      swap1\n      swap6\n        /* \"#utility.yul\":15400:16071   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16497:16901   */\n    tag_255:\n        /* \"#utility.yul\":16699:16701   */\n      0x20\n        /* \"#utility.yul\":16681:16702   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16738:16740   */\n      0x28\n        /* \"#utility.yul\":16718:16736   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16711:16741   */\n      mstore\n        /* \"#utility.yul\":16777:16811   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":16772:16774   */\n      0x40\n        /* \"#utility.yul\":16757:16775   */\n      dup3\n      add\n        /* \"#utility.yul\":16750:16812   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":16843:16845   */\n      0x60\n        /* \"#utility.yul\":16828:16846   */\n      dup3\n      add\n        /* \"#utility.yul\":16821:16859   */\n      mstore\n        /* \"#utility.yul\":16891:16894   */\n      0x80\n        /* \"#utility.yul\":16876:16895   */\n      add\n      swap1\n        /* \"#utility.yul\":16497:16901   */\n      jump\t// out\n        /* \"#utility.yul\":16906:17733   */\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17303:17318   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":17285:17319   */\n      dup3\n      mstore\n        /* \"#utility.yul\":17355:17370   */\n      dup6\n      and\n        /* \"#utility.yul\":17350:17352   */\n      0x20\n        /* \"#utility.yul\":17335:17353   */\n      dup3\n      add\n        /* \"#utility.yul\":17328:17371   */\n      mstore\n        /* \"#utility.yul\":17265:17268   */\n      0xa0\n        /* \"#utility.yul\":17402:17404   */\n      0x40\n        /* \"#utility.yul\":17387:17405   */\n      dup3\n      add\n        /* \"#utility.yul\":17380:17411   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":17228:17232   */\n      0x00\n      swap1\n        /* \"#utility.yul\":17434:17491   */\n      tag_418\n      swap1\n        /* \"#utility.yul\":17471:17490   */\n      dup4\n      add\n        /* \"#utility.yul\":17463:17469   */\n      dup7\n        /* \"#utility.yul\":17434:17491   */\n      tag_283\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":17539:17548   */\n      dup3\n        /* \"#utility.yul\":17531:17537   */\n      dup2\n        /* \"#utility.yul\":17527:17549   */\n      sub\n        /* \"#utility.yul\":17522:17524   */\n      0x60\n        /* \"#utility.yul\":17511:17520   */\n      dup5\n        /* \"#utility.yul\":17507:17525   */\n      add\n        /* \"#utility.yul\":17500:17550   */\n      mstore\n        /* \"#utility.yul\":17573:17617   */\n      tag_419\n        /* \"#utility.yul\":17610:17616   */\n      dup2\n        /* \"#utility.yul\":17602:17608   */\n      dup7\n        /* \"#utility.yul\":17573:17617   */\n      tag_283\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":17559:17617   */\n      swap1\n      pop\n        /* \"#utility.yul\":17666:17675   */\n      dup3\n        /* \"#utility.yul\":17658:17664   */\n      dup2\n        /* \"#utility.yul\":17654:17676   */\n      sub\n        /* \"#utility.yul\":17648:17651   */\n      0x80\n        /* \"#utility.yul\":17637:17646   */\n      dup5\n        /* \"#utility.yul\":17633:17652   */\n      add\n        /* \"#utility.yul\":17626:17677   */\n      mstore\n        /* \"#utility.yul\":17694:17727   */\n      tag_420\n        /* \"#utility.yul\":17720:17726   */\n      dup2\n        /* \"#utility.yul\":17712:17718   */\n      dup6\n        /* \"#utility.yul\":17694:17727   */\n      tag_278\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":17686:17727   */\n      swap9\n        /* \"#utility.yul\":16906:17733   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b2a6533bb8ee4f7aa34cd8e425bd74781f12c578060f4e75ff8eda8027d55cbd64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_14": {
									"entryPoint": null,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_191": {
									"entryPoint": null,
									"id": 191,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_57": {
									"entryPoint": null,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1854": {
									"entryPoint": null,
									"id": 1854,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_702": {
									"entryPoint": 62,
									"id": 702,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_145": {
									"entryPoint": 80,
									"id": 145,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 244,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2732:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:10"
															},
															"nodeType": "YulIf",
															"src": "289:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:10"
															},
															"nodeType": "YulIf",
															"src": "359:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:10",
														"type": ""
													}
												],
												"src": "146:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:10",
														"type": ""
													}
												],
												"src": "531:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:10",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:10"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:10"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:10"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:10"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:10"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:10",
																			"statements": []
																		},
																		"src": "1104:82:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:10"
															},
															"nodeType": "YulIf",
															"src": "748:448:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:10",
														"type": ""
													}
												],
												"src": "657:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:10",
														"type": ""
													}
												],
												"src": "1207:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:10"
															},
															"nodeType": "YulIf",
															"src": "1517:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:10",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:10"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:10",
																					"statements": []
																				},
																				"src": "1964:236:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:10"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:10"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:10",
														"type": ""
													}
												],
												"src": "1378:1352:10"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040805160208101909152600081526200002c816200003e565b50620000383362000050565b62000213565b60026200004c828262000147565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000cd57607f821691505b602082108103620000ee57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014257600081815260208120601f850160051c810160208610156200011d5750805b601f850160051c820191505b818110156200013e5782815560010162000129565b5050505b505050565b81516001600160401b03811115620001635762000163620000a2565b6200017b81620001748454620000b8565b84620000f4565b602080601f831160018114620001b357600084156200019a5750858301515b600019600386901b1c1916600185901b1785556200013e565b600085815260208120601f198616915b82811015620001e457888601518255948401946001909101908401620001c3565b5085821015620002035787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61169f80620002236000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c8063715018a611610071578063715018a6146101695780638da5cb5b14610171578063a22cb4651461018c578063e985e9c51461019f578063f242432a146101db578063f2fde38b146101ee57600080fd5b8062fdd58e146100b857806301ffc9a7146100de5780630e89341c146101015780631b2ef1ca146101215780632eb2c2d6146101365780634e1273f414610149575b600080fd5b6100cb6100c6366004610e1b565b610201565b6040519081526020015b60405180910390f35b6100f16100ec366004610e5b565b610297565b60405190151581526020016100d5565b61011461010f366004610e7f565b6102e9565b6040516100d59190610ee5565b61013461012f366004610ef8565b61037d565b005b610134610144366004611066565b6103a4565b61015c610157366004611110565b6103f0565b6040516100d59190611216565b61013461051a565b6003546040516001600160a01b0390911681526020016100d5565b61013461019a366004611229565b61052e565b6100f16101ad366004611265565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101346101e9366004611298565b610539565b6101346101fc3660046112fd565b61057e565b60006001600160a01b0383166102715760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102c857506001600160e01b031982166303a24d0760e21b145b806102e357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102f890611318565b80601f016020809104026020016040519081016040528092919081815260200182805461032490611318565b80156103715780601f1061034657610100808354040283529160200191610371565b820191906000526020600020905b81548152906001019060200180831161035457829003601f168201915b50505050509050919050565b6103856105f7565b6103a033838360405180602001604052806000815250610651565b5050565b6001600160a01b0385163314806103c057506103c085336101ad565b6103dc5760405162461bcd60e51b815260040161026890611352565b6103e98585858585610765565b5050505050565b606081518351146104555760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610268565b6000835167ffffffffffffffff81111561047157610471610f1a565b60405190808252806020026020018201604052801561049a578160200160208202803683370190505b50905060005b8451811015610512576104e58582815181106104be576104be6113a1565b60200260200101518583815181106104d8576104d86113a1565b6020026020010151610201565b8282815181106104f7576104f76113a1565b602090810291909101015261050b816113cd565b90506104a0565b509392505050565b6105226105f7565b61052c6000610942565b565b6103a0338383610994565b6001600160a01b038516331480610555575061055585336101ad565b6105715760405162461bcd60e51b815260040161026890611352565b6103e98585858585610a74565b6105866105f7565b6001600160a01b0381166105eb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610268565b6105f481610942565b50565b6003546001600160a01b0316331461052c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610268565b6001600160a01b0384166106b15760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610268565b3360006106bd85610b9e565b905060006106ca85610b9e565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906106fc9084906113e6565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461075c83600089898989610be9565b50505050505050565b81518351146107c75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610268565b6001600160a01b0384166107ed5760405162461bcd60e51b8152600401610268906113fe565b3360005b84518110156108d457600085828151811061080e5761080e6113a1565b60200260200101519050600085838151811061082c5761082c6113a1565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561087c5760405162461bcd60e51b815260040161026890611443565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906108b99084906113e6565b92505081905550505050806108cd906113cd565b90506107f1565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161092492919061148d565b60405180910390a461093a818787878787610d44565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610a075760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610268565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610a9a5760405162461bcd60e51b8152600401610268906113fe565b336000610aa685610b9e565b90506000610ab385610b9e565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610af65760405162461bcd60e51b815260040161026890611443565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610b339084906113e6565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610b93848a8a8a8a8a610be9565b505050505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610bd857610bd86113a1565b602090810291909101015292915050565b6001600160a01b0384163b1561093a5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610c2d90899089908890889088906004016114bb565b6020604051808303816000875af1925050508015610c68575060408051601f3d908101601f19168201909252610c6591810190611500565b60015b610d1457610c7461151d565b806308c379a003610cad5750610c88611539565b80610c935750610caf565b8060405162461bcd60e51b81526004016102689190610ee5565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610268565b6001600160e01b0319811663f23a6e6160e01b1461075c5760405162461bcd60e51b8152600401610268906115c3565b6001600160a01b0384163b1561093a5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610d88908990899088908890889060040161160b565b6020604051808303816000875af1925050508015610dc3575060408051601f3d908101601f19168201909252610dc091810190611500565b60015b610dcf57610c7461151d565b6001600160e01b0319811663bc197c8160e01b1461075c5760405162461bcd60e51b8152600401610268906115c3565b80356001600160a01b0381168114610e1657600080fd5b919050565b60008060408385031215610e2e57600080fd5b610e3783610dff565b946020939093013593505050565b6001600160e01b0319811681146105f457600080fd5b600060208284031215610e6d57600080fd5b8135610e7881610e45565b9392505050565b600060208284031215610e9157600080fd5b5035919050565b6000815180845260005b81811015610ebe57602081850181015186830182015201610ea2565b81811115610ed0576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610e786020830184610e98565b60008060408385031215610f0b57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610f5657610f56610f1a565b6040525050565b600067ffffffffffffffff821115610f7757610f77610f1a565b5060051b60200190565b600082601f830112610f9257600080fd5b81356020610f9f82610f5d565b604051610fac8282610f30565b83815260059390931b8501820192828101915086841115610fcc57600080fd5b8286015b84811015610fe75780358352918301918301610fd0565b509695505050505050565b600082601f83011261100357600080fd5b813567ffffffffffffffff81111561101d5761101d610f1a565b604051611034601f8301601f191660200182610f30565b81815284602083860101111561104957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561107e57600080fd5b61108786610dff565b945061109560208701610dff565b9350604086013567ffffffffffffffff808211156110b257600080fd5b6110be89838a01610f81565b945060608801359150808211156110d457600080fd5b6110e089838a01610f81565b935060808801359150808211156110f657600080fd5b5061110388828901610ff2565b9150509295509295909350565b6000806040838503121561112357600080fd5b823567ffffffffffffffff8082111561113b57600080fd5b818501915085601f83011261114f57600080fd5b8135602061115c82610f5d565b6040516111698282610f30565b83815260059390931b850182019282810191508984111561118957600080fd5b948201945b838610156111ae5761119f86610dff565b8252948201949082019061118e565b965050860135925050808211156111c457600080fd5b506111d185828601610f81565b9150509250929050565b600081518084526020808501945080840160005b8381101561120b578151875295820195908201906001016111ef565b509495945050505050565b602081526000610e7860208301846111db565b6000806040838503121561123c57600080fd5b61124583610dff565b91506020830135801515811461125a57600080fd5b809150509250929050565b6000806040838503121561127857600080fd5b61128183610dff565b915061128f60208401610dff565b90509250929050565b600080600080600060a086880312156112b057600080fd5b6112b986610dff565b94506112c760208701610dff565b93506040860135925060608601359150608086013567ffffffffffffffff8111156112f157600080fd5b61110388828901610ff2565b60006020828403121561130f57600080fd5b610e7882610dff565b600181811c9082168061132c57607f821691505b60208210810361134c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113df576113df6113b7565b5060010190565b600082198211156113f9576113f96113b7565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006114a060408301856111db565b82810360208401526114b281856111db565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906114f590830184610e98565b979650505050505050565b60006020828403121561151257600080fd5b8151610e7881610e45565b600060033d11156115365760046000803e5060005160e01c5b90565b600060443d10156115475790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561157757505050505090565b828501915081518181111561158f5750505050505090565b843d87010160208285010111156115a95750505050505090565b6115b860208286010187610f30565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611637908301866111db565b828103606084015261164981866111db565b9050828103608084015261165d8185610e98565b9897505050505050505056fea2646970667358221220b2a6533bb8ee4f7aa34cd8e425bd74781f12c578060f4e75ff8eda8027d55cbd64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH3 0x2C DUP2 PUSH3 0x3E JUMP JUMPDEST POP PUSH3 0x38 CALLER PUSH3 0x50 JUMP JUMPDEST PUSH3 0x213 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x4C DUP3 DUP3 PUSH3 0x147 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xCD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xEE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x142 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x11D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x13E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x129 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x163 JUMPI PUSH3 0x163 PUSH3 0xA2 JUMP JUMPDEST PUSH3 0x17B DUP2 PUSH3 0x174 DUP5 SLOAD PUSH3 0xB8 JUMP JUMPDEST DUP5 PUSH3 0xF4 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1B3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x19A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1E4 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1C3 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x203 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x169F DUP1 PUSH3 0x223 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x1B2EF1CA EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1B JUMP JUMPDEST PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0xE5B JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x1216 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x1229 JUMP JUMPDEST PUSH2 0x52E JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0x12FD JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2C8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x2E3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2F8 SWAP1 PUSH2 0x1318 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x324 SWAP1 PUSH2 0x1318 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x371 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x346 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x371 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x354 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x385 PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x3A0 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x651 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x3C0 JUMPI POP PUSH2 0x3C0 DUP6 CALLER PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0x3E9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x765 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x49A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x512 JUMPI PUSH2 0x4E5 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4BE JUMPI PUSH2 0x4BE PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4D8 JUMPI PUSH2 0x4D8 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x201 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH2 0x4F7 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x50B DUP2 PUSH2 0x13CD JUMP JUMPDEST SWAP1 POP PUSH2 0x4A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x522 PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x52C PUSH1 0x0 PUSH2 0x942 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3A0 CALLER DUP4 DUP4 PUSH2 0x994 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x555 JUMPI POP PUSH2 0x555 DUP6 CALLER PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0x3E9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA74 JUMP JUMPDEST PUSH2 0x586 PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST PUSH2 0x5F4 DUP2 PUSH2 0x942 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x6BD DUP6 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6CA DUP6 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x6FC SWAP1 DUP5 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x75C DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0xBE9 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x13FE JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x80E JUMPI PUSH2 0x80E PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x82C JUMPI PUSH2 0x82C PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8B9 SWAP1 DUP5 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x8CD SWAP1 PUSH2 0x13CD JUMP JUMPDEST SWAP1 POP PUSH2 0x7F1 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x924 SWAP3 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93A DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD44 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x13FE JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xAA6 DUP6 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAB3 DUP6 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xB33 SWAP1 DUP5 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB93 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xBE9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xBD8 JUMPI PUSH2 0xBD8 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xC2D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC68 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC65 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1500 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD14 JUMPI PUSH2 0xC74 PUSH2 0x151D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xCAD JUMPI POP PUSH2 0xC88 PUSH2 0x1539 JUMP JUMPDEST DUP1 PUSH2 0xC93 JUMPI POP PUSH2 0xCAF JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xD88 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x160B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDC3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDC0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1500 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDCF JUMPI PUSH2 0xC74 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x15C3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE37 DUP4 PUSH2 0xDFF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE78 DUP2 PUSH2 0xE45 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEBE JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xEA2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE78 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF56 JUMPI PUSH2 0xF56 PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF77 PUSH2 0xF1A JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF9F DUP3 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFAC DUP3 DUP3 PUSH2 0xF30 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xFE7 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xFD0 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x101D JUMPI PUSH2 0x101D PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1034 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xF30 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x107E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1087 DUP7 PUSH2 0xDFF JUMP JUMPDEST SWAP5 POP PUSH2 0x1095 PUSH1 0x20 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10BE DUP10 DUP4 DUP11 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10E0 DUP10 DUP4 DUP11 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1103 DUP9 DUP3 DUP10 ADD PUSH2 0xFF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x113B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x114F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x115C DUP3 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1169 DUP3 DUP3 PUSH2 0xF30 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x1189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x11AE JUMPI PUSH2 0x119F DUP7 PUSH2 0xDFF JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x118E JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x11C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D1 DUP6 DUP3 DUP7 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x120B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x11EF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE78 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1245 DUP4 PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x125A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1281 DUP4 PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP PUSH2 0x128F PUSH1 0x20 DUP5 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x12B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12B9 DUP7 PUSH2 0xDFF JUMP JUMPDEST SWAP5 POP PUSH2 0x12C7 PUSH1 0x20 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1103 DUP9 DUP3 DUP10 ADD PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE78 DUP3 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x132C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x134C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x195C881B9BDC88185C1C1C9BDD9959 PUSH1 0x8A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13DF JUMPI PUSH2 0x13DF PUSH2 0x13B7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13F9 JUMPI PUSH2 0x13F9 PUSH2 0x13B7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14A0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x11DB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x14B2 DUP2 DUP6 PUSH2 0x11DB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x14F5 SWAP1 DUP4 ADD DUP5 PUSH2 0xE98 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE78 DUP2 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1536 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1547 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1577 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x158F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x15A9 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x15B8 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xF30 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1637 SWAP1 DUP4 ADD DUP7 PUSH2 0x11DB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1649 DUP2 DUP7 PUSH2 0x11DB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x165D DUP2 DUP6 PUSH2 0xE98 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xA6 MSTORE8 EXTCODESIZE 0xB8 0xEE 0x4F PUSH27 0xA34CD8E425BD74781F12C578060F4E75FF8EDA8027D55CBD64736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "178:215:0:-:0;;;223:39;;;;;;;;;-1:-1:-1;1107:62:2;;;;;;;;;-1:-1:-1;1107:62:2;;1149:13;1107:62;1149:7;:13::i;:::-;-1:-1:-1;936:32:1;719:10:7;936:18:1;:32::i;:::-;178:215:0;;8173:86:2;8239:4;:13;8246:6;8239:4;:13;:::i;:::-;;8173:86;:::o;2433:187:1:-;2525:6;;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:10;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:10;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:10;;;2580:26;2531:89;-1:-1:-1;;1335:1:10;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:10;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:10;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:10;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:10:o;:::-;178:215:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1212": {
									"entryPoint": null,
									"id": 1212,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1368": {
									"entryPoint": 2974,
									"id": 1368,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1193": {
									"entryPoint": null,
									"id": 1193,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_checkOwner_88": {
									"entryPoint": 1527,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1340": {
									"entryPoint": 3396,
									"id": 1340,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1275": {
									"entryPoint": 3049,
									"id": 1275,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_803": {
									"entryPoint": 1617,
									"id": 803,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1854": {
									"entryPoint": null,
									"id": 1854,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_691": {
									"entryPoint": 1893,
									"id": 691,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_556": {
									"entryPoint": 2676,
									"id": 556,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1174": {
									"entryPoint": 2452,
									"id": 1174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_145": {
									"entryPoint": 2370,
									"id": 145,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOfBatch_326": {
									"entryPoint": 1008,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_262": {
									"entryPoint": 513,
									"id": 262,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_361": {
									"entryPoint": null,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1565": {
									"entryPoint": null,
									"id": 1565,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_32": {
									"entryPoint": 893,
									"id": 32,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_102": {
									"entryPoint": 1306,
									"id": 102,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_439": {
									"entryPoint": 932,
									"id": 439,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_399": {
									"entryPoint": 1337,
									"id": 399,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_343": {
									"entryPoint": 1326,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1887": {
									"entryPoint": null,
									"id": 1887,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_222": {
									"entryPoint": 663,
									"id": 222,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_125": {
									"entryPoint": 1406,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uri_234": {
									"entryPoint": 745,
									"id": 234,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 4082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 4198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 4571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5643,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5307,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5261,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 5069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5025,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3866,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 5405,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 5433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 3653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17735:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:10"
															},
															"nodeType": "YulIf",
															"src": "289:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:10",
														"type": ""
													}
												],
												"src": "192:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:10",
														"type": ""
													}
												],
												"src": "451:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:10"
															},
															"nodeType": "YulIf",
															"src": "687:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:10",
														"type": ""
													}
												],
												"src": "633:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:10"
															},
															"nodeType": "YulIf",
															"src": "848:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:10",
														"type": ""
													}
												],
												"src": "769:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:10",
														"type": ""
													}
												],
												"src": "1019:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:10"
															},
															"nodeType": "YulIf",
															"src": "1291:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:10",
														"type": ""
													}
												],
												"src": "1211:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:422:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:10",
																"statements": []
															},
															"src": "1538:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:62:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1763:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1768:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1759:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1759:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1777:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1755:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1755:27:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1784:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:38:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1715:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1718:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1712:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:13:10"
															},
															"nodeType": "YulIf",
															"src": "1709:87:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1805:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1820:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1833:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1841:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1829:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1829:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1850:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1846:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1846:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1825:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1812:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:10",
														"type": ""
													}
												],
												"src": "1396:472:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2011:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2022:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2004:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2034:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2060:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2072:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2083:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2068:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2068:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2042:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2034:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1963:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1974:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1985:4:10",
														"type": ""
													}
												],
												"src": "1873:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2185:161:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2231:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2240:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2243:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2233:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2233:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2233:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2206:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2215:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2202:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2202:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2227:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2198:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:32:10"
															},
															"nodeType": "YulIf",
															"src": "2195:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2256:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2279:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2266:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2266:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2325:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2336:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2321:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2321:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2308:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2143:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2154:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2166:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2174:6:10",
														"type": ""
													}
												],
												"src": "2098:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2383:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2400:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2407:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2412:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2403:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2393:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2393:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2393:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2440:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2443:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2433:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2433:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2464:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2467:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2457:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2457:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2351:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2530:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2540:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2562:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2578:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2584:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2574:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2574:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2593:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2589:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2589:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2570:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2570:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2558:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2544:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2673:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2675:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2675:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2675:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2616:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2628:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2613:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2613:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2652:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2664:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2649:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2649:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2610:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2610:62:10"
															},
															"nodeType": "YulIf",
															"src": "2607:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2711:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2715:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2704:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2704:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2704:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2512:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2520:4:10",
														"type": ""
													}
												],
												"src": "2483:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2806:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2850:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2852:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2852:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2852:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2822:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2830:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2819:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:30:10"
															},
															"nodeType": "YulIf",
															"src": "2816:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2881:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2897:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2900:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2893:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2893:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2909:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2889:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2881:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2786:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2797:4:10",
														"type": ""
													}
												],
												"src": "2737:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2989:660:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3038:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3047:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3050:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3040:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3040:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3040:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3017:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3025:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3032:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3009:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3009:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3002:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3002:35:10"
															},
															"nodeType": "YulIf",
															"src": "2999:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3063:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3086:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3073:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3067:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3102:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3112:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3106:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3125:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3175:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3135:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3129:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3187:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3207:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3201:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3201:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3191:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3239:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3247:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3219:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3219:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3259:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3270:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3263:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3292:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3300:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3285:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3285:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3285:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3312:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3323:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3331:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3319:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3319:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3312:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3343:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3365:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3377:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3380:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3373:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3373:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3361:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3361:23:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3386:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3357:32:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3347:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3417:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3426:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3429:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3419:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3419:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3419:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3404:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3412:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3401:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:15:10"
															},
															"nodeType": "YulIf",
															"src": "3398:35:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3442:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3457:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3465:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3453:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3453:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3446:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3533:86:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3554:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3572:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3559:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3559:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3547:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3590:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3601:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3606:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3597:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3597:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3590:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3488:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3493:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3485:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3485:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3501:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3503:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3514:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3519:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3510:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3510:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3503:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3481:3:10",
																"statements": []
															},
															"src": "3477:142:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3628:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3637:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2963:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2971:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2979:5:10",
														"type": ""
													}
												],
												"src": "2925:724:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3706:503:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3755:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3764:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3767:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3757:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3757:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3757:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3734:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3742:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3730:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3730:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3749:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3726:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3726:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:35:10"
															},
															"nodeType": "YulIf",
															"src": "3716:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3780:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3803:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3790:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3790:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3784:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3849:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3851:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3851:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3851:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3825:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3829:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3822:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3822:26:10"
															},
															"nodeType": "YulIf",
															"src": "3819:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3880:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3900:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3894:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3894:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3884:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3932:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3952:2:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3956:4:10",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3948:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3948:13:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3967:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3963:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3963:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3944:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3944:27:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3973:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3940:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3940:38:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3912:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3912:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3995:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4003:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3988:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3988:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3988:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4054:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4063:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4066:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4056:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4056:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4056:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4029:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4037:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4025:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4025:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4042:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4021:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4021:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4049:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4018:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4018:35:10"
															},
															"nodeType": "YulIf",
															"src": "4015:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4096:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4104:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4092:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4092:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4115:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4123:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4111:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4111:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4130:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4079:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4079:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4079:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4157:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4165:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4153:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4153:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4170:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4149:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4149:26:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4177:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4142:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4142:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4142:37:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4188:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4197:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4188:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3680:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3688:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3696:5:10",
														"type": ""
													}
												],
												"src": "3654:555:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4411:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4458:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4467:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4470:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4460:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4460:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4460:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4432:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4441:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4428:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4428:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4453:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4424:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4424:33:10"
															},
															"nodeType": "YulIf",
															"src": "4421:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4483:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4512:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4493:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4493:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4483:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4531:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4564:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4575:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4560:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4560:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4541:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4541:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4531:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4588:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4619:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4630:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4615:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4602:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4602:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4592:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4643:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4653:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4647:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4698:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4707:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4710:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4700:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4700:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4700:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4686:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4694:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4683:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4683:14:10"
															},
															"nodeType": "YulIf",
															"src": "4680:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4723:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4766:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4777:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4762:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4762:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4786:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4733:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4723:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4803:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4836:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4847:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4819:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4819:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4807:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4880:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4889:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4892:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4882:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4882:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4882:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4866:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4876:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4863:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:16:10"
															},
															"nodeType": "YulIf",
															"src": "4860:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4905:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4948:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4959:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4944:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4944:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4970:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4915:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4915:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4905:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4987:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5031:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5016:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5016:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5003:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4991:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5065:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5074:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5077:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5067:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5067:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5067:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "5051:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5061:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5048:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5048:16:10"
															},
															"nodeType": "YulIf",
															"src": "5045:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5090:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5121:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "5132:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5117:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5117:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5143:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5100:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5100:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5090:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4345:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4356:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4368:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4376:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4384:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4392:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4400:6:10",
														"type": ""
													}
												],
												"src": "4214:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5299:1071:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5345:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5354:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5357:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5347:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5347:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5347:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5320:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5329:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5316:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5341:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5312:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5312:32:10"
															},
															"nodeType": "YulIf",
															"src": "5309:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5370:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5397:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5384:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5384:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5374:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5416:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5426:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5420:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5471:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5480:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5483:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5473:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5473:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5473:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5459:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5467:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5456:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:14:10"
															},
															"nodeType": "YulIf",
															"src": "5453:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5496:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5510:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5521:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5506:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5500:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5576:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5585:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5588:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5578:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5578:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5578:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5555:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5559:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5551:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5551:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5566:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5547:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5540:35:10"
															},
															"nodeType": "YulIf",
															"src": "5537:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5601:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5624:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5611:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5611:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5605:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5636:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5646:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5640:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5659:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5709:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5669:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5669:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5663:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5721:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5741:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5735:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5735:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5725:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5773:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5781:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5753:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5753:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5753:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5793:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5804:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5797:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5826:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5834:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5819:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5819:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5819:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5846:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5857:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5865:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5853:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5853:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5846:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5877:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5899:2:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5907:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5910:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5903:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5903:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5895:19:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5916:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5891:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5891:28:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5881:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5951:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5960:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5963:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5953:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5953:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5953:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5934:6:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5942:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5931:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5931:19:10"
															},
															"nodeType": "YulIf",
															"src": "5928:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5976:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5991:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5995:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5987:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5987:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5980:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6063:92:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6084:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "6108:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "6089:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6089:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6077:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6077:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6077:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6126:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6137:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6142:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6133:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6133:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6126:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6018:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6023:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6015:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6015:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6031:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6033:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6044:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6049:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6040:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6040:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6033:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6011:3:10",
																"statements": []
															},
															"src": "6007:148:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6164:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6174:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6164:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6189:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6222:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "6233:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6218:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6218:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6205:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6205:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6193:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6266:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6275:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6278:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6268:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6268:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6268:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6252:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6262:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6249:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:16:10"
															},
															"nodeType": "YulIf",
															"src": "6246:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6291:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6334:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6345:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6330:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6330:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6356:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6301:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6301:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6291:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5257:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5268:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5280:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5288:6:10",
														"type": ""
													}
												],
												"src": "5162:1208:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6436:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6446:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6466:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6460:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6460:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6450:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6488:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6493:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6481:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6481:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6481:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6509:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6519:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6513:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6532:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6543:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6548:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6539:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6539:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6532:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6560:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6578:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6585:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6574:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6574:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6564:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6597:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6606:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6601:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6665:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6686:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6697:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6691:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6691:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6679:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6679:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6679:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6718:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6729:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6734:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6725:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6725:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6718:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6750:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6764:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6772:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6760:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6760:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6750:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6627:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6630:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6624:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6638:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6640:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6649:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6652:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6645:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6645:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6640:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6620:3:10",
																"statements": []
															},
															"src": "6616:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6794:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6801:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6794:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6413:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6420:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6428:3:10",
														"type": ""
													}
												],
												"src": "6375:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6966:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6983:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6994:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6976:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6976:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6976:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7006:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7043:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7055:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7066:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7051:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7051:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7014:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7014:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7006:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6935:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6946:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6957:4:10",
														"type": ""
													}
												],
												"src": "6815:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7182:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7192:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7204:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7215:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7200:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7200:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7192:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7234:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7249:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7265:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7270:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7261:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7261:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7274:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7257:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7257:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7245:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7245:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7227:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7227:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7227:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7151:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7162:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7173:4:10",
														"type": ""
													}
												],
												"src": "7081:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7373:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7419:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7428:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7431:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7421:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7421:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7421:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7394:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7403:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7390:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7390:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7415:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7386:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7386:32:10"
															},
															"nodeType": "YulIf",
															"src": "7383:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7444:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7473:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7454:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7454:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7444:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7492:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7522:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7533:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7518:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7518:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7505:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7496:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7590:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7599:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7602:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7592:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7592:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7592:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7559:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7580:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7573:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7573:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7566:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7566:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7556:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7556:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7549:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7549:40:10"
															},
															"nodeType": "YulIf",
															"src": "7546:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7615:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7625:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7615:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7331:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7342:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7354:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7362:6:10",
														"type": ""
													}
												],
												"src": "7289:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7728:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7774:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7783:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7786:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7776:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7776:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7776:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7749:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7758:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7745:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7745:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7770:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7741:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7741:32:10"
															},
															"nodeType": "YulIf",
															"src": "7738:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7799:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7828:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7809:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7809:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7799:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7847:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7880:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7891:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7876:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7876:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7857:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7857:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7847:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7686:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7697:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7709:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7717:6:10",
														"type": ""
													}
												],
												"src": "7641:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8053:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8100:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8109:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8112:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8102:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8102:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8102:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8074:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8083:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8070:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8070:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8095:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8066:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8066:33:10"
															},
															"nodeType": "YulIf",
															"src": "8063:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8125:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8154:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8135:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8135:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8125:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8173:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8206:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8217:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8202:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8202:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8183:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8183:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8173:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8230:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8257:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8268:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8253:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8253:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8240:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8230:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8281:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8308:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8319:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8304:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8304:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8291:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8291:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8281:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8332:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8363:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8374:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8359:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8359:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8346:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8346:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8336:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8422:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8431:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8434:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8424:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8424:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8424:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8394:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8402:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8391:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8391:30:10"
															},
															"nodeType": "YulIf",
															"src": "8388:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8447:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8478:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8489:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8474:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8474:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8498:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8457:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8457:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "8447:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7987:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7998:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8010:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8018:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8026:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8034:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8042:6:10",
														"type": ""
													}
												],
												"src": "7906:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8587:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8633:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8642:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8645:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8635:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8635:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8635:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8608:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8617:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8604:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8604:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8629:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8600:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8600:32:10"
															},
															"nodeType": "YulIf",
															"src": "8597:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8658:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8687:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8668:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8668:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8658:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8553:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8564:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8576:6:10",
														"type": ""
													}
												],
												"src": "8517:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8882:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8899:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8910:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8892:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8892:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8892:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8933:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8944:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8929:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8929:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8949:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8922:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8922:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8922:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8972:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8983:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8968:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8968:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8988:34:10",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8961:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8961:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8961:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9043:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9039:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9039:18:10"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9059:12:10",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9032:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9032:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9032:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9081:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9093:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9104:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9089:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9089:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9081:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8859:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8873:4:10",
														"type": ""
													}
												],
												"src": "8708:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9174:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9184:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9198:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9201:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9194:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9194:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9184:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9215:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9245:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9251:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9241:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9241:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9219:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9292:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9294:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9308:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9316:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9304:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9304:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9294:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9272:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9265:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9265:26:10"
															},
															"nodeType": "YulIf",
															"src": "9262:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9382:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9403:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9410:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9415:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9406:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9406:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9396:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9396:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9396:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9447:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9450:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9440:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9440:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9440:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9475:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9478:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9468:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9468:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9468:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9338:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9361:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9369:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9358:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9358:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9335:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9335:38:10"
															},
															"nodeType": "YulIf",
															"src": "9332:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9154:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9163:6:10",
														"type": ""
													}
												],
												"src": "9119:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9678:237:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9695:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9706:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9688:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9688:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9688:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9729:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9740:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9725:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9725:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9745:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9718:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9718:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9718:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9768:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9764:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9764:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9784:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9757:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9757:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9757:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9839:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9850:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9835:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9835:18:10"
																	},
																	{
																		"hexValue": "6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9855:17:10",
																		"type": "",
																		"value": "er nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9828:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9828:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9828:45:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9882:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9894:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9905:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9890:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9890:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9882:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9655:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9669:4:10",
														"type": ""
													}
												],
												"src": "9504:411:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10094:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10111:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10122:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10104:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10104:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10104:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10145:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10156:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10141:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10141:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10161:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10134:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10134:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10134:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10184:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10195:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10180:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10180:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10200:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10173:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10173:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10173:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10255:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10266:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10251:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10251:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10271:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10244:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10244:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10244:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10292:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10304:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10315:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10300:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10292:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10071:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10085:4:10",
														"type": ""
													}
												],
												"src": "9920:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10362:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10379:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10386:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10391:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10382:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10382:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10372:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10372:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10372:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10419:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10422:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10412:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10412:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10412:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10443:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10446:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10436:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10436:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10436:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10330:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10494:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10511:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10518:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10523:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10514:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10514:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10504:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10504:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10504:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10551:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10554:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10544:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10544:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10544:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10575:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10578:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10568:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10568:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10568:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10462:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10641:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10672:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10674:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10674:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10674:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10657:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10668:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10664:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10664:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10654:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10654:17:10"
															},
															"nodeType": "YulIf",
															"src": "10651:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10703:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10714:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10721:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10710:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10710:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10703:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10623:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10633:3:10",
														"type": ""
													}
												],
												"src": "10594:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10908:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10925:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10936:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10918:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10918:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10918:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10959:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10970:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10955:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10955:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10975:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10948:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10948:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10948:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10998:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11009:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10994:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10994:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11014:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10987:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10987:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10987:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11069:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11080:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11065:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11065:18:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11085:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11058:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11058:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11058:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11103:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11115:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11126:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11111:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11111:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11103:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10885:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10899:4:10",
														"type": ""
													}
												],
												"src": "10734:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11315:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11332:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11343:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11325:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11325:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11325:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11366:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11377:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11362:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11362:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11382:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11355:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11355:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11355:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11405:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11416:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11401:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11401:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11421:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11394:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11394:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11394:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11465:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11477:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11488:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11473:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11473:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11465:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11292:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11306:4:10",
														"type": ""
													}
												],
												"src": "11141:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11676:223:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11693:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11704:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11686:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11686:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11686:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11727:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11738:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11723:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11723:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11743:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11716:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11716:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11716:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11766:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11777:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11762:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11762:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11782:34:10",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11755:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11755:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11755:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11837:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11848:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11833:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11833:18:10"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11853:3:10",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11826:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11826:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11826:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11866:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11878:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11889:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11874:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11874:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11866:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11653:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11667:4:10",
														"type": ""
													}
												],
												"src": "11502:397:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11952:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11979:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11981:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11981:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11981:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11968:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11975:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11971:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11971:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11965:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11965:13:10"
															},
															"nodeType": "YulIf",
															"src": "11962:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12010:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12021:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12024:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12017:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12017:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12010:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11935:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11938:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11944:3:10",
														"type": ""
													}
												],
												"src": "11904:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12166:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12176:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12188:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12199:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12184:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12184:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12176:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12218:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12229:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12211:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12211:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12211:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12256:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12267:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12252:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12252:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12272:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12245:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12245:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12245:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12127:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12138:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12146:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12157:4:10",
														"type": ""
													}
												],
												"src": "12037:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12464:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12481:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12492:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12474:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12474:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12474:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12515:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12526:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12511:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12511:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12531:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12504:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12504:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12504:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12554:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12565:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12550:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12550:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12570:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12543:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12543:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12543:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12625:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12636:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12621:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12621:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12641:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12614:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12614:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12614:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12661:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12673:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12684:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12669:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12669:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12661:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12441:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12455:4:10",
														"type": ""
													}
												],
												"src": "12290:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12873:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12890:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12901:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12883:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12883:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12883:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12924:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12935:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12920:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12920:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12940:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12913:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12913:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12963:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12974:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12959:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12959:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12979:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12952:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12952:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12952:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13034:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13045:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13030:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13030:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13050:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13023:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13023:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13023:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13067:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13079:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13090:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13075:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13075:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13067:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12850:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12864:4:10",
														"type": ""
													}
												],
												"src": "12699:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13279:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13296:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13307:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13289:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13289:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13289:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13330:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13341:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13326:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13326:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13346:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13319:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13319:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13319:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13369:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13380:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13365:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13365:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13385:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13358:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13358:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13358:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13440:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13451:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13436:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13436:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13456:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13429:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13429:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13429:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13478:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13490:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13501:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13486:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13486:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13478:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13256:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13270:4:10",
														"type": ""
													}
												],
												"src": "13105:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13745:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13762:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13773:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13755:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13755:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13755:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13785:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13828:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13840:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13851:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13836:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13836:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13799:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13799:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13789:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13875:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13886:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13871:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13871:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13895:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13903:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13891:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13891:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13864:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13864:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13864:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13923:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13960:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13968:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13931:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13931:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13923:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13706:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13717:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13725:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13736:4:10",
														"type": ""
													}
												],
												"src": "13516:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14160:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14177:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14188:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14170:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14170:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14170:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14211:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14222:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14207:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14207:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14227:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14200:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14200:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14200:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14250:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14261:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14246:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14246:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14266:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14239:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14239:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14239:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14321:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14332:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14317:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14317:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14337:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14310:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14310:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14358:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14370:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14381:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14366:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14366:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14358:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14137:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14151:4:10",
														"type": ""
													}
												],
												"src": "13986:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14627:330:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14637:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14655:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14660:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14651:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14651:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14664:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14647:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14647:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14641:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14682:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14697:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14705:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14693:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14693:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14675:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14675:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14675:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14729:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14740:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14725:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14725:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14749:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14757:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14745:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14745:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14718:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14718:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14718:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14781:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14792:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14777:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14777:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14797:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14770:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14770:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14770:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14824:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14835:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14820:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14820:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14840:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14813:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14813:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14813:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14867:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14878:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14863:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14863:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14884:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14856:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14856:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14856:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14897:54:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "14923:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14935:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14946:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14931:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14931:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14905:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14905:46:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14897:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14564:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14575:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14583:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14591:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14599:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14607:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14618:4:10",
														"type": ""
													}
												],
												"src": "14396:561:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15042:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15088:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15097:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15100:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15090:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15090:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15090:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15063:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15072:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15059:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15059:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15084:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15055:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15055:32:10"
															},
															"nodeType": "YulIf",
															"src": "15052:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15113:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15132:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15126:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15126:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "15117:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15175:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "15151:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15151:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15151:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15190:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15200:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "15190:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15008:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15019:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15031:6:10",
														"type": ""
													}
												],
												"src": "14962:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15259:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15304:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15333:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15336:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15339:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "15318:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15318:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15318:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15354:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15365:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15376:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15370:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15370:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "15361:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15361:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "15354:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15275:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15275:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15293:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15272:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15272:23:10"
															},
															"nodeType": "YulIf",
															"src": "15269:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "15251:3:10",
														"type": ""
													}
												],
												"src": "15216:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15447:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15487:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15489:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15463:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15463:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15481:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15460:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15460:26:10"
															},
															"nodeType": "YulIf",
															"src": "15457:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15505:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15523:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15517:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15517:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "15509:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15535:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15549:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "15545:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15545:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15539:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15575:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15581:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "15588:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15588:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15606:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15584:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15584:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "15560:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15560:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15560:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15619:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15639:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15633:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15633:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "15623:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15653:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "15663:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15663:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "15657:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15688:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15698:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "15692:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15774:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15776:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15734:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "15742:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15731:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15731:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15754:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15762:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15750:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15750:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "15769:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15747:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15747:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15728:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15728:45:10"
															},
															"nodeType": "YulIf",
															"src": "15725:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15792:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15807:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15813:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15803:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15803:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "15796:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15829:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "15849:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15843:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15843:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15833:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15880:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15882:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15868:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "15876:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15865:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15865:14:10"
															},
															"nodeType": "YulIf",
															"src": "15862:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15971:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15973:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "15912:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "15917:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15908:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15908:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15926:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15904:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15904:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "15941:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "15947:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15947:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15937:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15937:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15966:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15933:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15933:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15901:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15901:69:10"
															},
															"nodeType": "YulIf",
															"src": "15898:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16009:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16023:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16031:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16019:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16019:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16040:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16015:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16015:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "15989:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15989:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15989:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16055:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "16062:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16055:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15439:3:10",
														"type": ""
													}
												],
												"src": "15400:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16250:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16267:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16278:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16260:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16260:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16260:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16301:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16312:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16297:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16297:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16317:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16290:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16290:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16290:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16340:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16351:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16336:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16336:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16356:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16329:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16329:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16329:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16411:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16422:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16407:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16407:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16427:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16400:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16400:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16400:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16459:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16471:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16482:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16467:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16467:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16459:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16227:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16241:4:10",
														"type": ""
													}
												],
												"src": "16076:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16671:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16688:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16699:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16681:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16681:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16681:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16722:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16733:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16718:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16718:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16738:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16711:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16711:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16711:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16761:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16772:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16757:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16757:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16777:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16750:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16750:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16750:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16832:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16843:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16828:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16828:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16848:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16821:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16821:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16821:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16868:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16880:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16891:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16876:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16876:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16868:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16648:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16662:4:10",
														"type": ""
													}
												],
												"src": "16497:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17237:496:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17247:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17265:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17270:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17261:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17261:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17274:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17257:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17257:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "17251:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17292:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17307:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17315:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17303:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17303:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17285:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17285:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17285:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17339:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17350:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17335:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17335:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "17359:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17367:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17355:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17355:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17328:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17328:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17328:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17391:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17402:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17387:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17387:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17407:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17380:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17380:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17380:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17420:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17463:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17475:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17486:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17471:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17471:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "17434:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17434:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "17424:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17511:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17522:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17507:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17507:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "17531:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17539:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17527:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17527:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17500:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17500:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17500:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17559:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "17602:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "17610:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "17573:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17573:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "17563:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17637:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17648:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17633:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17633:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "17658:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17666:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17654:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17654:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17626:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17626:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17626:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17686:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "17712:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "17720:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "17694:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17694:33:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17686:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17174:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "17185:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "17193:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17201:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17209:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17217:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17228:4:10",
														"type": ""
													}
												],
												"src": "16906:827:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b35760003560e01c8063715018a611610071578063715018a6146101695780638da5cb5b14610171578063a22cb4651461018c578063e985e9c51461019f578063f242432a146101db578063f2fde38b146101ee57600080fd5b8062fdd58e146100b857806301ffc9a7146100de5780630e89341c146101015780631b2ef1ca146101215780632eb2c2d6146101365780634e1273f414610149575b600080fd5b6100cb6100c6366004610e1b565b610201565b6040519081526020015b60405180910390f35b6100f16100ec366004610e5b565b610297565b60405190151581526020016100d5565b61011461010f366004610e7f565b6102e9565b6040516100d59190610ee5565b61013461012f366004610ef8565b61037d565b005b610134610144366004611066565b6103a4565b61015c610157366004611110565b6103f0565b6040516100d59190611216565b61013461051a565b6003546040516001600160a01b0390911681526020016100d5565b61013461019a366004611229565b61052e565b6100f16101ad366004611265565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101346101e9366004611298565b610539565b6101346101fc3660046112fd565b61057e565b60006001600160a01b0383166102715760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102c857506001600160e01b031982166303a24d0760e21b145b806102e357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102f890611318565b80601f016020809104026020016040519081016040528092919081815260200182805461032490611318565b80156103715780601f1061034657610100808354040283529160200191610371565b820191906000526020600020905b81548152906001019060200180831161035457829003601f168201915b50505050509050919050565b6103856105f7565b6103a033838360405180602001604052806000815250610651565b5050565b6001600160a01b0385163314806103c057506103c085336101ad565b6103dc5760405162461bcd60e51b815260040161026890611352565b6103e98585858585610765565b5050505050565b606081518351146104555760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610268565b6000835167ffffffffffffffff81111561047157610471610f1a565b60405190808252806020026020018201604052801561049a578160200160208202803683370190505b50905060005b8451811015610512576104e58582815181106104be576104be6113a1565b60200260200101518583815181106104d8576104d86113a1565b6020026020010151610201565b8282815181106104f7576104f76113a1565b602090810291909101015261050b816113cd565b90506104a0565b509392505050565b6105226105f7565b61052c6000610942565b565b6103a0338383610994565b6001600160a01b038516331480610555575061055585336101ad565b6105715760405162461bcd60e51b815260040161026890611352565b6103e98585858585610a74565b6105866105f7565b6001600160a01b0381166105eb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610268565b6105f481610942565b50565b6003546001600160a01b0316331461052c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610268565b6001600160a01b0384166106b15760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610268565b3360006106bd85610b9e565b905060006106ca85610b9e565b90506000868152602081815260408083206001600160a01b038b168452909152812080548792906106fc9084906113e6565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461075c83600089898989610be9565b50505050505050565b81518351146107c75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610268565b6001600160a01b0384166107ed5760405162461bcd60e51b8152600401610268906113fe565b3360005b84518110156108d457600085828151811061080e5761080e6113a1565b60200260200101519050600085838151811061082c5761082c6113a1565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561087c5760405162461bcd60e51b815260040161026890611443565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906108b99084906113e6565b92505081905550505050806108cd906113cd565b90506107f1565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161092492919061148d565b60405180910390a461093a818787878787610d44565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610a075760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610268565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610a9a5760405162461bcd60e51b8152600401610268906113fe565b336000610aa685610b9e565b90506000610ab385610b9e565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610af65760405162461bcd60e51b815260040161026890611443565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610b339084906113e6565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610b93848a8a8a8a8a610be9565b505050505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610bd857610bd86113a1565b602090810291909101015292915050565b6001600160a01b0384163b1561093a5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610c2d90899089908890889088906004016114bb565b6020604051808303816000875af1925050508015610c68575060408051601f3d908101601f19168201909252610c6591810190611500565b60015b610d1457610c7461151d565b806308c379a003610cad5750610c88611539565b80610c935750610caf565b8060405162461bcd60e51b81526004016102689190610ee5565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610268565b6001600160e01b0319811663f23a6e6160e01b1461075c5760405162461bcd60e51b8152600401610268906115c3565b6001600160a01b0384163b1561093a5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610d88908990899088908890889060040161160b565b6020604051808303816000875af1925050508015610dc3575060408051601f3d908101601f19168201909252610dc091810190611500565b60015b610dcf57610c7461151d565b6001600160e01b0319811663bc197c8160e01b1461075c5760405162461bcd60e51b8152600401610268906115c3565b80356001600160a01b0381168114610e1657600080fd5b919050565b60008060408385031215610e2e57600080fd5b610e3783610dff565b946020939093013593505050565b6001600160e01b0319811681146105f457600080fd5b600060208284031215610e6d57600080fd5b8135610e7881610e45565b9392505050565b600060208284031215610e9157600080fd5b5035919050565b6000815180845260005b81811015610ebe57602081850181015186830182015201610ea2565b81811115610ed0576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610e786020830184610e98565b60008060408385031215610f0b57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610f5657610f56610f1a565b6040525050565b600067ffffffffffffffff821115610f7757610f77610f1a565b5060051b60200190565b600082601f830112610f9257600080fd5b81356020610f9f82610f5d565b604051610fac8282610f30565b83815260059390931b8501820192828101915086841115610fcc57600080fd5b8286015b84811015610fe75780358352918301918301610fd0565b509695505050505050565b600082601f83011261100357600080fd5b813567ffffffffffffffff81111561101d5761101d610f1a565b604051611034601f8301601f191660200182610f30565b81815284602083860101111561104957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561107e57600080fd5b61108786610dff565b945061109560208701610dff565b9350604086013567ffffffffffffffff808211156110b257600080fd5b6110be89838a01610f81565b945060608801359150808211156110d457600080fd5b6110e089838a01610f81565b935060808801359150808211156110f657600080fd5b5061110388828901610ff2565b9150509295509295909350565b6000806040838503121561112357600080fd5b823567ffffffffffffffff8082111561113b57600080fd5b818501915085601f83011261114f57600080fd5b8135602061115c82610f5d565b6040516111698282610f30565b83815260059390931b850182019282810191508984111561118957600080fd5b948201945b838610156111ae5761119f86610dff565b8252948201949082019061118e565b965050860135925050808211156111c457600080fd5b506111d185828601610f81565b9150509250929050565b600081518084526020808501945080840160005b8381101561120b578151875295820195908201906001016111ef565b509495945050505050565b602081526000610e7860208301846111db565b6000806040838503121561123c57600080fd5b61124583610dff565b91506020830135801515811461125a57600080fd5b809150509250929050565b6000806040838503121561127857600080fd5b61128183610dff565b915061128f60208401610dff565b90509250929050565b600080600080600060a086880312156112b057600080fd5b6112b986610dff565b94506112c760208701610dff565b93506040860135925060608601359150608086013567ffffffffffffffff8111156112f157600080fd5b61110388828901610ff2565b60006020828403121561130f57600080fd5b610e7882610dff565b600181811c9082168061132c57607f821691505b60208210810361134c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113df576113df6113b7565b5060010190565b600082198211156113f9576113f96113b7565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006114a060408301856111db565b82810360208401526114b281856111db565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906114f590830184610e98565b979650505050505050565b60006020828403121561151257600080fd5b8151610e7881610e45565b600060033d11156115365760046000803e5060005160e01c5b90565b600060443d10156115475790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561157757505050505090565b828501915081518181111561158f5750505050505090565b843d87010160208285010111156115a95750505050505090565b6115b860208286010187610f30565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611637908301866111db565b828103606084015261164981866111db565b9050828103608084015261165d8185610e98565b9897505050505050505056fea2646970667358221220b2a6533bb8ee4f7aa34cd8e425bd74781f12c578060f4e75ff8eda8027d55cbd64736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x1B2EF1CA EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1B JUMP JUMPDEST PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0xE5B JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0xEF8 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x1066 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x1216 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD5 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x1229 JUMP JUMPDEST PUSH2 0x52E JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x539 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0x12FD JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x271 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2C8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x2E3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2F8 SWAP1 PUSH2 0x1318 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x324 SWAP1 PUSH2 0x1318 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x371 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x346 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x371 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x354 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x385 PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x3A0 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x651 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x3C0 JUMPI POP PUSH2 0x3C0 DUP6 CALLER PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0x3E9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x765 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x455 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x49A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x512 JUMPI PUSH2 0x4E5 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4BE JUMPI PUSH2 0x4BE PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4D8 JUMPI PUSH2 0x4D8 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x201 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4F7 JUMPI PUSH2 0x4F7 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x50B DUP2 PUSH2 0x13CD JUMP JUMPDEST SWAP1 POP PUSH2 0x4A0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x522 PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x52C PUSH1 0x0 PUSH2 0x942 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3A0 CALLER DUP4 DUP4 PUSH2 0x994 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x555 JUMPI POP PUSH2 0x555 DUP6 CALLER PUSH2 0x1AD JUMP JUMPDEST PUSH2 0x571 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0x3E9 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA74 JUMP JUMPDEST PUSH2 0x586 PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST PUSH2 0x5F4 DUP2 PUSH2 0x942 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x6B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x6BD DUP6 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6CA DUP6 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x6FC SWAP1 DUP5 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x75C DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0xBE9 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x13FE JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x80E JUMPI PUSH2 0x80E PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x82C JUMPI PUSH2 0x82C PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8B9 SWAP1 DUP5 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x8CD SWAP1 PUSH2 0x13CD JUMP JUMPDEST SWAP1 POP PUSH2 0x7F1 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x924 SWAP3 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93A DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xD44 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x13FE JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xAA6 DUP6 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAB3 DUP6 PUSH2 0xB9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xAF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xB33 SWAP1 DUP5 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB93 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xBE9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xBD8 JUMPI PUSH2 0xBD8 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xC2D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC68 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC65 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1500 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD14 JUMPI PUSH2 0xC74 PUSH2 0x151D JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xCAD JUMPI POP PUSH2 0xC88 PUSH2 0x1539 JUMP JUMPDEST DUP1 PUSH2 0xC93 JUMPI POP PUSH2 0xCAF JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0xEE5 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xD88 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x160B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDC3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDC0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1500 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xDCF JUMPI PUSH2 0xC74 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268 SWAP1 PUSH2 0x15C3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE37 DUP4 PUSH2 0xDFF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE78 DUP2 PUSH2 0xE45 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEBE JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xEA2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xED0 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE78 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF56 JUMPI PUSH2 0xF56 PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF77 PUSH2 0xF1A JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xF9F DUP3 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFAC DUP3 DUP3 PUSH2 0xF30 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xFE7 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xFD0 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x101D JUMPI PUSH2 0x101D PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1034 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xF30 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x107E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1087 DUP7 PUSH2 0xDFF JUMP JUMPDEST SWAP5 POP PUSH2 0x1095 PUSH1 0x20 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10BE DUP10 DUP4 DUP11 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10E0 DUP10 DUP4 DUP11 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1103 DUP9 DUP3 DUP10 ADD PUSH2 0xFF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x113B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x114F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x115C DUP3 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1169 DUP3 DUP3 PUSH2 0xF30 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x1189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x11AE JUMPI PUSH2 0x119F DUP7 PUSH2 0xDFF JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x118E JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x11C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D1 DUP6 DUP3 DUP7 ADD PUSH2 0xF81 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x120B JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x11EF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE78 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x123C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1245 DUP4 PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x125A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1281 DUP4 PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP PUSH2 0x128F PUSH1 0x20 DUP5 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x12B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12B9 DUP7 PUSH2 0xDFF JUMP JUMPDEST SWAP5 POP PUSH2 0x12C7 PUSH1 0x20 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1103 DUP9 DUP3 DUP10 ADD PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE78 DUP3 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x132C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x134C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x195C881B9BDC88185C1C1C9BDD9959 PUSH1 0x8A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13DF JUMPI PUSH2 0x13DF PUSH2 0x13B7 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13F9 JUMPI PUSH2 0x13F9 PUSH2 0x13B7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14A0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x11DB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x14B2 DUP2 DUP6 PUSH2 0x11DB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x14F5 SWAP1 DUP4 ADD DUP5 PUSH2 0xE98 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE78 DUP2 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1536 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1547 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1577 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x158F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x15A9 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x15B8 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xF30 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1637 SWAP1 DUP4 ADD DUP7 PUSH2 0x11DB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1649 DUP2 DUP7 PUSH2 0x11DB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x165D DUP2 DUP6 PUSH2 0xE98 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xA6 MSTORE8 EXTCODESIZE 0xB8 0xEE 0x4F PUSH27 0xA34CD8E425BD74781F12C578060F4E75FF8EDA8027D55CBD64736F PUSH13 0x634300080F0033000000000000 ",
							"sourceMap": "178:215:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227:2;;;;;;:::i;:::-;;:::i;:::-;;;597:25:10;;;585:2;570:18;2185:227:2;;;;;;;;1236:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:10;;1177:22;1159:41;;1147:2;1132:18;1236:305:2;1019:187:10;1940:103:2;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;272:119:0:-;;;;;;:::i;:::-;;:::i;:::-;;4065:427:2;;;;;;:::i;:::-;;:::i;2569:508::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1831:101:1:-;;;:::i;1201:85::-;1273:6;;1201:85;;-1:-1:-1;;;;;1273:6:1;;;7227:51:10;;7215:2;7200:18;1201:85:1;7081:203:10;3145:153:2;;;;;;:::i;:::-;;:::i;3365:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3487:27:2;;;3464:4;3487:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3365:166;3598:395;;;;;;:::i;:::-;;:::i;2081:198:1:-;;;;;;:::i;:::-;;:::i;2185:227:2:-;2271:7;-1:-1:-1;;;;;2298:21:2;;2290:76;;;;-1:-1:-1;;;2290:76:2;;8910:2:10;2290:76:2;;;8892:21:10;8949:2;8929:18;;;8922:30;8988:34;8968:18;;;8961:62;-1:-1:-1;;;9039:18:10;;;9032:40;9089:19;;2290:76:2;;;;;;;;;-1:-1:-1;2383:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2383:22:2;;;;;;;;;;;;2185:227::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:2;;-1:-1:-1;;;1373:41:2;;:109;;-1:-1:-1;;;;;;;1430:52:2;;-1:-1:-1;;;1430:52:2;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1498:36:2;1354:180;1236:305;-1:-1:-1;;1236:305:2:o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;272:119:0:-;1094:13:1;:11;:13::i;:::-;346:38:0::1;352:10;364:7;373:6;346:38;;;;;;;;;;;::::0;:5:::1;:38::i;:::-;272:119:::0;;:::o;4065:427:2:-;-1:-1:-1;;;;;4290:20:2;;719:10:7;4290:20:2;;:60;;-1:-1:-1;4314:36:2;4331:4;719:10:7;3365:166:2;:::i;4314:36::-;4269:154;;;;-1:-1:-1;;;4269:154:2;;;;;;;:::i;:::-;4433:52;4456:4;4462:2;4466:3;4471:7;4480:4;4433:22;:52::i;:::-;4065:427;;;;;:::o;2569:508::-;2720:16;2779:3;:10;2760:8;:15;:29;2752:83;;;;-1:-1:-1;;;2752:83:2;;10122:2:10;2752:83:2;;;10104:21:10;10161:2;10141:18;;;10134:30;10200:34;10180:18;;;10173:62;-1:-1:-1;;;10251:18:10;;;10244:39;10300:19;;2752:83:2;9920:405:10;2752:83:2;2846:30;2893:8;:15;2879:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2879:30:2;;2846:63;;2925:9;2920:120;2944:8;:15;2940:1;:19;2920:120;;;2999:30;3009:8;3018:1;3009:11;;;;;;;;:::i;:::-;;;;;;;3022:3;3026:1;3022:6;;;;;;;;:::i;:::-;;;;;;;2999:9;:30::i;:::-;2980:13;2994:1;2980:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2961:3;;;:::i;:::-;;;2920:120;;;-1:-1:-1;3057:13:2;2569:508;-1:-1:-1;;;2569:508:2:o;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3145:153:2:-;3239:52;719:10:7;3272:8:2;3282;3239:18;:52::i;3598:395::-;-1:-1:-1;;;;;3798:20:2;;719:10:7;3798:20:2;;:60;;-1:-1:-1;3822:36:2;3839:4;719:10:7;3365:166:2;:::i;3822:36::-;3777:154;;;;-1:-1:-1;;;3777:154:2;;;;;;;:::i;:::-;3941:45;3959:4;3965:2;3969;3973:6;3981:4;3941:17;:45::i;2081:198:1:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:1;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:1;;10936:2:10;2161:73:1::1;::::0;::::1;10918:21:10::0;10975:2;10955:18;;;10948:30;11014:34;10994:18;;;10987:62;-1:-1:-1;;;11065:18:10;;;11058:36;11111:19;;2161:73:1::1;10734:402:10::0;2161:73:1::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1273:6;;-1:-1:-1;;;;;1273:6:1;719:10:7;1422:23:1;1414:68;;;;-1:-1:-1;;;1414:68:1;;11343:2:10;1414:68:1;;;11325:21:10;;;11362:18;;;11355:30;11421:34;11401:18;;;11394:62;11473:18;;1414:68:1;11141:356:10;8632:709:2;-1:-1:-1;;;;;8779:16:2;;8771:62;;;;-1:-1:-1;;;8771:62:2;;11704:2:10;8771:62:2;;;11686:21:10;11743:2;11723:18;;;11716:30;11782:34;11762:18;;;11755:62;-1:-1:-1;;;11833:18:10;;;11826:31;11874:19;;8771:62:2;11502:397:10;8771:62:2;719:10:7;8844:16:2;8908:21;8926:2;8908:17;:21::i;:::-;8885:44;;8939:24;8966:25;8984:6;8966:17;:25::i;:::-;8939:52;;9079:9;:13;;;;;;;;;;;-1:-1:-1;;;;;9079:17:2;;;;;;;;;:27;;9100:6;;9079:9;:27;;9100:6;;9079:27;:::i;:::-;;;;-1:-1:-1;;9121:52:2;;;12211:25:10;;;12267:2;12252:18;;12245:34;;;-1:-1:-1;;;;;9121:52:2;;;;9154:1;;9121:52;;;;;;12184:18:10;9121:52:2;;;;;;;9260:74;9291:8;9309:1;9313:2;9317;9321:6;9329:4;9260:30;:74::i;:::-;8761:580;;;8632:709;;;;:::o;6235:1115::-;6455:7;:14;6441:3;:10;:28;6433:81;;;;-1:-1:-1;;;6433:81:2;;12492:2:10;6433:81:2;;;12474:21:10;12531:2;12511:18;;;12504:30;12570:34;12550:18;;;12543:62;-1:-1:-1;;;12621:18:10;;;12614:38;12669:19;;6433:81:2;12290:404:10;6433:81:2;-1:-1:-1;;;;;6532:16:2;;6524:66;;;;-1:-1:-1;;;6524:66:2;;;;;;;:::i;:::-;719:10:7;6601:16:2;6714:411;6738:3;:10;6734:1;:14;6714:411;;;6769:10;6782:3;6786:1;6782:6;;;;;;;;:::i;:::-;;;;;;;6769:19;;6802:14;6819:7;6827:1;6819:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6844:19;6866:13;;;;;;;;;;-1:-1:-1;;;;;6866:19:2;;;;;;;;;;;;6819:10;;-1:-1:-1;6907:21:2;;;;6899:76;;;;-1:-1:-1;;;6899:76:2;;;;;;;:::i;:::-;7017:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7017:19:2;;;;;;;;;;7039:20;;;7017:42;;7087:17;;;;;;;:27;;7039:20;;7017:9;7087:27;;7039:20;;7087:27;:::i;:::-;;;;;;;;6755:370;;;6750:3;;;;:::i;:::-;;;6714:411;;;;7170:2;-1:-1:-1;;;;;7140:47:2;7164:4;-1:-1:-1;;;;;7140:47:2;7154:8;-1:-1:-1;;;;;7140:47:2;;7174:3;7179:7;7140:47;;;;;;;:::i;:::-;;;;;;;;7268:75;7304:8;7314:4;7320:2;7324:3;7329:7;7338:4;7268:35;:75::i;:::-;6423:927;6235:1115;;;;;:::o;2433:187:1:-;2525:6;;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;12912:323:2:-;13062:8;-1:-1:-1;;;;;13053:17:2;:5;-1:-1:-1;;;;;13053:17:2;;13045:71;;;;-1:-1:-1;;;13045:71:2;;14188:2:10;13045:71:2;;;14170:21:10;14227:2;14207:18;;;14200:30;14266:34;14246:18;;;14239:62;-1:-1:-1;;;14317:18:10;;;14310:39;14366:19;;13045:71:2;13986:405:10;13045:71:2;-1:-1:-1;;;;;13126:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13126:46:2;;;;;;;;;;13187:41;;1159::10;;;13187::2;;1132:18:10;13187:41:2;;;;;;;12912:323;;;:::o;4942:947::-;-1:-1:-1;;;;;5123:16:2;;5115:66;;;;-1:-1:-1;;;5115:66:2;;;;;;;:::i;:::-;719:10:7;5192:16:2;5256:21;5274:2;5256:17;:21::i;:::-;5233:44;;5287:24;5314:25;5332:6;5314:17;:25::i;:::-;5287:52;;5421:19;5443:13;;;;;;;;;;;-1:-1:-1;;;;;5443:19:2;;;;;;;;;;5480:21;;;;5472:76;;;;-1:-1:-1;;;5472:76:2;;;;;;;:::i;:::-;5582:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5582:19:2;;;;;;;;;;5604:20;;;5582:42;;5644:17;;;;;;;:27;;5604:20;;5582:9;5644:27;;5604:20;;5644:27;:::i;:::-;;;;-1:-1:-1;;5687:46:2;;;12211:25:10;;;12267:2;12252:18;;12245:34;;;-1:-1:-1;;;;;5687:46:2;;;;;;;;;;;;;;12184:18:10;5687:46:2;;;;;;;5814:68;5845:8;5855:4;5861:2;5865;5869:6;5877:4;5814:30;:68::i;:::-;5105:784;;;;4942:947;;;;;:::o;17066:193::-;17185:16;;;17199:1;17185:16;;;;;;;;;17132;;17160:22;;17185:16;;;;;;;;;;;;-1:-1:-1;17185:16:2;17160:41;;17222:7;17211:5;17217:1;17211:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17247:5;17066:193;-1:-1:-1;;17066:193:2:o;15537:725::-;-1:-1:-1;;;;;15744:13:2;;1465:19:6;:23;15740:516:2;;15779:72;;-1:-1:-1;;;15779:72:2;;-1:-1:-1;;;;;15779:38:2;;;;;:72;;15818:8;;15828:4;;15834:2;;15838:6;;15846:4;;15779:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15779:72:2;;;;;;;;-1:-1:-1;;15779:72:2;;;;;;;;;;;;:::i;:::-;;;15775:471;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16122:6;16115:14;;-1:-1:-1;;;16115:14:2;;;;;;;;:::i;15775:471::-;;;16169:62;;-1:-1:-1;;;16169:62:2;;16278:2:10;16169:62:2;;;16260:21:10;16317:2;16297:18;;;16290:30;16356:34;16336:18;;;16329:62;-1:-1:-1;;;16407:18:10;;;16400:50;16467:19;;16169:62:2;16076:416:10;15775:471:2;-1:-1:-1;;;;;;15900:55:2;;-1:-1:-1;;;15900:55:2;15896:152;;15979:50;;-1:-1:-1;;;15979:50:2;;;;;;;:::i;16268:792::-;-1:-1:-1;;;;;16500:13:2;;1465:19:6;:23;16496:558:2;;16535:79;;-1:-1:-1;;;16535:79:2;;-1:-1:-1;;;;;16535:43:2;;;;;:79;;16579:8;;16589:4;;16595:3;;16600:7;;16609:4;;16535:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16535:79:2;;;;;;;;-1:-1:-1;;16535:79:2;;;;;;;;;;;;:::i;:::-;;;16531:513;;;;:::i;:::-;-1:-1:-1;;;;;;16693:60:2;;-1:-1:-1;;;16693:60:2;16689:157;;16777:50;;-1:-1:-1;;;16777:50:2;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:10:o;633:131::-;-1:-1:-1;;;;;;707:32:10;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:10:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:10;;1211:180;-1:-1:-1;1211:180:10:o;1396:472::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1718:6;1715:1;1712:13;1709:87;;;1784:1;1777:4;1768:6;1763:3;1759:16;1755:27;1748:38;1709:87;-1:-1:-1;1850:2:10;1829:15;-1:-1:-1;;1825:29:10;1816:39;;;;1857:4;1812:50;;1396:472;-1:-1:-1;;1396:472:10:o;1873:220::-;2022:2;2011:9;2004:21;1985:4;2042:45;2083:2;2072:9;2068:18;2060:6;2042:45;:::i;2098:248::-;2166:6;2174;2227:2;2215:9;2206:7;2202:23;2198:32;2195:52;;;2243:1;2240;2233:12;2195:52;-1:-1:-1;;2266:23:10;;;2336:2;2321:18;;;2308:32;;-1:-1:-1;2098:248:10:o;2351:127::-;2412:10;2407:3;2403:20;2400:1;2393:31;2443:4;2440:1;2433:15;2467:4;2464:1;2457:15;2483:249;2593:2;2574:13;;-1:-1:-1;;2570:27:10;2558:40;;2628:18;2613:34;;2649:22;;;2610:62;2607:88;;;2675:18;;:::i;:::-;2711:2;2704:22;-1:-1:-1;;2483:249:10:o;2737:183::-;2797:4;2830:18;2822:6;2819:30;2816:56;;;2852:18;;:::i;:::-;-1:-1:-1;2897:1:10;2893:14;2909:4;2889:25;;2737:183::o;2925:724::-;2979:5;3032:3;3025:4;3017:6;3013:17;3009:27;2999:55;;3050:1;3047;3040:12;2999:55;3086:6;3073:20;3112:4;3135:43;3175:2;3135:43;:::i;:::-;3207:2;3201:9;3219:31;3247:2;3239:6;3219:31;:::i;:::-;3285:18;;;3377:1;3373:10;;;;3361:23;;3357:32;;;3319:15;;;;-1:-1:-1;3401:15:10;;;3398:35;;;3429:1;3426;3419:12;3398:35;3465:2;3457:6;3453:15;3477:142;3493:6;3488:3;3485:15;3477:142;;;3559:17;;3547:30;;3597:12;;;;3510;;3477:142;;;-1:-1:-1;3637:6:10;2925:724;-1:-1:-1;;;;;;2925:724:10:o;3654:555::-;3696:5;3749:3;3742:4;3734:6;3730:17;3726:27;3716:55;;3767:1;3764;3757:12;3716:55;3803:6;3790:20;3829:18;3825:2;3822:26;3819:52;;;3851:18;;:::i;:::-;3900:2;3894:9;3912:67;3967:2;3948:13;;-1:-1:-1;;3944:27:10;3973:4;3940:38;3894:9;3912:67;:::i;:::-;4003:2;3995:6;3988:18;4049:3;4042:4;4037:2;4029:6;4025:15;4021:26;4018:35;4015:55;;;4066:1;4063;4056:12;4015:55;4130:2;4123:4;4115:6;4111:17;4104:4;4096:6;4092:17;4079:54;4177:1;4153:15;;;4170:4;4149:26;4142:37;;;;4157:6;3654:555;-1:-1:-1;;;3654:555:10:o;4214:943::-;4368:6;4376;4384;4392;4400;4453:3;4441:9;4432:7;4428:23;4424:33;4421:53;;;4470:1;4467;4460:12;4421:53;4493:29;4512:9;4493:29;:::i;:::-;4483:39;;4541:38;4575:2;4564:9;4560:18;4541:38;:::i;:::-;4531:48;;4630:2;4619:9;4615:18;4602:32;4653:18;4694:2;4686:6;4683:14;4680:34;;;4710:1;4707;4700:12;4680:34;4733:61;4786:7;4777:6;4766:9;4762:22;4733:61;:::i;:::-;4723:71;;4847:2;4836:9;4832:18;4819:32;4803:48;;4876:2;4866:8;4863:16;4860:36;;;4892:1;4889;4882:12;4860:36;4915:63;4970:7;4959:8;4948:9;4944:24;4915:63;:::i;:::-;4905:73;;5031:3;5020:9;5016:19;5003:33;4987:49;;5061:2;5051:8;5048:16;5045:36;;;5077:1;5074;5067:12;5045:36;;5100:51;5143:7;5132:8;5121:9;5117:24;5100:51;:::i;:::-;5090:61;;;4214:943;;;;;;;;:::o;5162:1208::-;5280:6;5288;5341:2;5329:9;5320:7;5316:23;5312:32;5309:52;;;5357:1;5354;5347:12;5309:52;5397:9;5384:23;5426:18;5467:2;5459:6;5456:14;5453:34;;;5483:1;5480;5473:12;5453:34;5521:6;5510:9;5506:22;5496:32;;5566:7;5559:4;5555:2;5551:13;5547:27;5537:55;;5588:1;5585;5578:12;5537:55;5624:2;5611:16;5646:4;5669:43;5709:2;5669:43;:::i;:::-;5741:2;5735:9;5753:31;5781:2;5773:6;5753:31;:::i;:::-;5819:18;;;5907:1;5903:10;;;;5895:19;;5891:28;;;5853:15;;;;-1:-1:-1;5931:19:10;;;5928:39;;;5963:1;5960;5953:12;5928:39;5987:11;;;;6007:148;6023:6;6018:3;6015:15;6007:148;;;6089:23;6108:3;6089:23;:::i;:::-;6077:36;;6040:12;;;;6133;;;;6007:148;;;6174:6;-1:-1:-1;;6218:18:10;;6205:32;;-1:-1:-1;;6249:16:10;;;6246:36;;;6278:1;6275;6268:12;6246:36;;6301:63;6356:7;6345:8;6334:9;6330:24;6301:63;:::i;:::-;6291:73;;;5162:1208;;;;;:::o;6375:435::-;6428:3;6466:5;6460:12;6493:6;6488:3;6481:19;6519:4;6548:2;6543:3;6539:12;6532:19;;6585:2;6578:5;6574:14;6606:1;6616:169;6630:6;6627:1;6624:13;6616:169;;;6691:13;;6679:26;;6725:12;;;;6760:15;;;;6652:1;6645:9;6616:169;;;-1:-1:-1;6801:3:10;;6375:435;-1:-1:-1;;;;;6375:435:10:o;6815:261::-;6994:2;6983:9;6976:21;6957:4;7014:56;7066:2;7055:9;7051:18;7043:6;7014:56;:::i;7289:347::-;7354:6;7362;7415:2;7403:9;7394:7;7390:23;7386:32;7383:52;;;7431:1;7428;7421:12;7383:52;7454:29;7473:9;7454:29;:::i;:::-;7444:39;;7533:2;7522:9;7518:18;7505:32;7580:5;7573:13;7566:21;7559:5;7556:32;7546:60;;7602:1;7599;7592:12;7546:60;7625:5;7615:15;;;7289:347;;;;;:::o;7641:260::-;7709:6;7717;7770:2;7758:9;7749:7;7745:23;7741:32;7738:52;;;7786:1;7783;7776:12;7738:52;7809:29;7828:9;7809:29;:::i;:::-;7799:39;;7857:38;7891:2;7880:9;7876:18;7857:38;:::i;:::-;7847:48;;7641:260;;;;;:::o;7906:606::-;8010:6;8018;8026;8034;8042;8095:3;8083:9;8074:7;8070:23;8066:33;8063:53;;;8112:1;8109;8102:12;8063:53;8135:29;8154:9;8135:29;:::i;:::-;8125:39;;8183:38;8217:2;8206:9;8202:18;8183:38;:::i;:::-;8173:48;;8268:2;8257:9;8253:18;8240:32;8230:42;;8319:2;8308:9;8304:18;8291:32;8281:42;;8374:3;8363:9;8359:19;8346:33;8402:18;8394:6;8391:30;8388:50;;;8434:1;8431;8424:12;8388:50;8457:49;8498:7;8489:6;8478:9;8474:22;8457:49;:::i;8517:186::-;8576:6;8629:2;8617:9;8608:7;8604:23;8600:32;8597:52;;;8645:1;8642;8635:12;8597:52;8668:29;8687:9;8668:29;:::i;9119:380::-;9198:1;9194:12;;;;9241;;;9262:61;;9316:4;9308:6;9304:17;9294:27;;9262:61;9369:2;9361:6;9358:14;9338:18;9335:38;9332:161;;9415:10;9410:3;9406:20;9403:1;9396:31;9450:4;9447:1;9440:15;9478:4;9475:1;9468:15;9332:161;;9119:380;;;:::o;9504:411::-;9706:2;9688:21;;;9745:2;9725:18;;;9718:30;9784:34;9779:2;9764:18;;9757:62;-1:-1:-1;;;9850:2:10;9835:18;;9828:45;9905:3;9890:19;;9504:411::o;10330:127::-;10391:10;10386:3;10382:20;10379:1;10372:31;10422:4;10419:1;10412:15;10446:4;10443:1;10436:15;10462:127;10523:10;10518:3;10514:20;10511:1;10504:31;10554:4;10551:1;10544:15;10578:4;10575:1;10568:15;10594:135;10633:3;10654:17;;;10651:43;;10674:18;;:::i;:::-;-1:-1:-1;10721:1:10;10710:13;;10594:135::o;11904:128::-;11944:3;11975:1;11971:6;11968:1;11965:13;11962:39;;;11981:18;;:::i;:::-;-1:-1:-1;12017:9:10;;11904:128::o;12699:401::-;12901:2;12883:21;;;12940:2;12920:18;;;12913:30;12979:34;12974:2;12959:18;;12952:62;-1:-1:-1;;;13045:2:10;13030:18;;13023:35;13090:3;13075:19;;12699:401::o;13105:406::-;13307:2;13289:21;;;13346:2;13326:18;;;13319:30;13385:34;13380:2;13365:18;;13358:62;-1:-1:-1;;;13451:2:10;13436:18;;13429:40;13501:3;13486:19;;13105:406::o;13516:465::-;13773:2;13762:9;13755:21;13736:4;13799:56;13851:2;13840:9;13836:18;13828:6;13799:56;:::i;:::-;13903:9;13895:6;13891:22;13886:2;13875:9;13871:18;13864:50;13931:44;13968:6;13960;13931:44;:::i;:::-;13923:52;13516:465;-1:-1:-1;;;;;13516:465:10:o;14396:561::-;-1:-1:-1;;;;;14693:15:10;;;14675:34;;14745:15;;14740:2;14725:18;;14718:43;14792:2;14777:18;;14770:34;;;14835:2;14820:18;;14813:34;;;14655:3;14878;14863:19;;14856:32;;;14618:4;;14905:46;;14931:19;;14923:6;14905:46;:::i;:::-;14897:54;14396:561;-1:-1:-1;;;;;;;14396:561:10:o;14962:249::-;15031:6;15084:2;15072:9;15063:7;15059:23;15055:32;15052:52;;;15100:1;15097;15090:12;15052:52;15132:9;15126:16;15151:30;15175:5;15151:30;:::i;15216:179::-;15251:3;15293:1;15275:16;15272:23;15269:120;;;15339:1;15336;15333;15318:23;-1:-1:-1;15376:1:10;15370:8;15365:3;15361:18;15269:120;15216:179;:::o;15400:671::-;15439:3;15481:4;15463:16;15460:26;15457:39;;;15400:671;:::o;15457:39::-;15523:2;15517:9;-1:-1:-1;;15588:16:10;15584:25;;15581:1;15517:9;15560:50;15639:4;15633:11;15663:16;15698:18;15769:2;15762:4;15754:6;15750:17;15747:25;15742:2;15734:6;15731:14;15728:45;15725:58;;;15776:5;;;;;15400:671;:::o;15725:58::-;15813:6;15807:4;15803:17;15792:28;;15849:3;15843:10;15876:2;15868:6;15865:14;15862:27;;;15882:5;;;;;;15400:671;:::o;15862:27::-;15966:2;15947:16;15941:4;15937:27;15933:36;15926:4;15917:6;15912:3;15908:16;15904:27;15901:69;15898:82;;;15973:5;;;;;;15400:671;:::o;15898:82::-;15989:57;16040:4;16031:6;16023;16019:19;16015:30;16009:4;15989:57;:::i;:::-;-1:-1:-1;16062:3:10;;15400:671;-1:-1:-1;;;;;15400:671:10:o;16497:404::-;16699:2;16681:21;;;16738:2;16718:18;;;16711:30;16777:34;16772:2;16757:18;;16750:62;-1:-1:-1;;;16843:2:10;16828:18;;16821:38;16891:3;16876:19;;16497:404::o;16906:827::-;-1:-1:-1;;;;;17303:15:10;;;17285:34;;17355:15;;17350:2;17335:18;;17328:43;17265:3;17402:2;17387:18;;17380:31;;;17228:4;;17434:57;;17471:19;;17463:6;17434:57;:::i;:::-;17539:9;17531:6;17527:22;17522:2;17511:9;17507:18;17500:50;17573:44;17610:6;17602;17573:44;:::i;:::-;17559:58;;17666:9;17658:6;17654:22;17648:3;17637:9;17633:19;17626:51;17694:33;17720:6;17712;17694:33;:::i;:::-;17686:41;16906:827;-1:-1:-1;;;;;;;;16906:827:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1158200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2672",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(uint256,uint256)": "infinite",
								"owner()": "2323",
								"renounceOwnership()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26727",
								"supportsInterface(bytes4)": "544",
								"transferOwnership(address)": "28446",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 178,
									"end": 393,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 178,
									"end": 393,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 178,
									"end": 393,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 223,
									"end": 262,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 223,
									"end": 262,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 223,
									"end": 262,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 223,
									"end": 262,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 262,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 223,
									"end": 262,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 262,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 223,
									"end": 262,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 223,
									"end": 262,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 262,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1149,
									"end": 1162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 178,
									"end": 393,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 178,
									"end": 393,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8173,
									"end": 8259,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8173,
									"end": 8259,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8239,
									"end": 8243,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 8246,
									"end": 8252,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8239,
									"end": 8243,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 8239,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8173,
									"end": 8259,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8173,
									"end": 8259,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 178,
									"end": 393,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 393,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 178,
									"end": 393,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 393,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 393,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 178,
									"end": 393,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 393,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2a6533bb8ee4f7aa34cd8e425bd74781f12c578060f4e75ff8eda8027d55cbd64736f6c634300080f0033",
									".code": [
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "1B2EF1CA"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 178,
											"end": 393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2185,
											"end": 2412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2185,
											"end": 2412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 272,
											"end": 391,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 272,
											"end": 391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 272,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 272,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 272,
											"end": 391,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 272,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 272,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 272,
											"end": 391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 272,
											"end": 391,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 272,
											"end": 391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 272,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 272,
											"end": 391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 272,
											"end": 391,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 272,
											"end": 391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 272,
											"end": 391,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4065,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2569,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2569,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2569,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7227,
											"end": 7278,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7227,
											"end": 7278,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7215,
											"end": 7217,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7081,
											"end": 7284,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3145,
											"end": 3298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3145,
											"end": 3298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3365,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3464,
											"end": 3468,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3598,
											"end": 3993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3598,
											"end": 3993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8910,
											"end": 8912,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8892,
											"end": 8913,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8949,
											"end": 8951,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 8929,
											"end": 8947,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8929,
											"end": 8947,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8929,
											"end": 8947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8922,
											"end": 8952,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8988,
											"end": 9022,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 8968,
											"end": 8986,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8968,
											"end": 8986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8968,
											"end": 8986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8961,
											"end": 9023,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9032,
											"end": 9072,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9089,
											"end": 9108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2383,
											"end": 2392,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 272,
											"end": 391,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 272,
											"end": 391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 352,
											"end": 362,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 364,
											"end": 371,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 373,
											"end": 379,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 346,
											"end": 384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 351,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 346,
											"end": 384,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 346,
											"end": 384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 272,
											"end": 391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 272,
											"end": 391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 272,
											"end": 391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4290,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4290,
											"end": 4350,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4314,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4331,
											"end": 4335,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3365,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4314,
											"end": 4350,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4314,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4269,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4456,
											"end": 4460,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4469,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 4478,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4480,
											"end": 4484,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4433,
											"end": 4485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2720,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2775,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2789,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10122,
											"end": 10124,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10104,
											"end": 10125,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10161,
											"end": 10163,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 10141,
											"end": 10159,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10141,
											"end": 10159,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10141,
											"end": 10159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10134,
											"end": 10164,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10200,
											"end": 10234,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 10180,
											"end": 10198,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10180,
											"end": 10198,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10173,
											"end": 10235,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10251,
											"end": 10269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10244,
											"end": 10283,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10300,
											"end": 10319,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10300,
											"end": 10319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 9920,
											"end": 10325,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2901,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 2908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2879,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 2934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2952,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2940,
											"end": 2941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2940,
											"end": 2959,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3009,
											"end": 3017,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3009,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3025,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3022,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2999,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2994,
											"end": 2995,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2980,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2961,
											"end": 2964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3057,
											"end": 3070,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2569,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3280,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3239,
											"end": 3291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3365,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3777,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3959,
											"end": 3963,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3965,
											"end": 3967,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3971,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3973,
											"end": 3979,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3941,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10938,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10918,
											"end": 10939,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10975,
											"end": 10977,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 10955,
											"end": 10973,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10955,
											"end": 10973,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10955,
											"end": 10973,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10948,
											"end": 10978,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11014,
											"end": 11048,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10994,
											"end": 11012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10987,
											"end": 11049,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11058,
											"end": 11094,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11111,
											"end": 11130,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11111,
											"end": 11130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 10734,
											"end": 11136,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11343,
											"end": 11345,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11325,
											"end": 11346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11325,
											"end": 11346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11362,
											"end": 11380,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11362,
											"end": 11380,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11362,
											"end": 11380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11355,
											"end": 11385,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11421,
											"end": 11455,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11401,
											"end": 11419,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11401,
											"end": 11419,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11401,
											"end": 11419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11394,
											"end": 11456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11473,
											"end": 11491,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11473,
											"end": 11491,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 11141,
											"end": 11497,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8632,
											"end": 9341,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 8632,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8779,
											"end": 8795,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8779,
											"end": 8795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8771,
											"end": 8833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 8771,
											"end": 8833,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8771,
											"end": 8833,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8771,
											"end": 8833,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8771,
											"end": 8833,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8771,
											"end": 8833,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11704,
											"end": 11706,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8771,
											"end": 8833,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8771,
											"end": 8833,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8771,
											"end": 8833,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11686,
											"end": 11707,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11743,
											"end": 11745,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 11723,
											"end": 11741,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11723,
											"end": 11741,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11723,
											"end": 11741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11716,
											"end": 11746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11782,
											"end": 11816,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 11762,
											"end": 11780,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11762,
											"end": 11780,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11762,
											"end": 11780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11755,
											"end": 11817,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11833,
											"end": 11851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11826,
											"end": 11857,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11874,
											"end": 11893,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11874,
											"end": 11893,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8771,
											"end": 8833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 11502,
											"end": 11899,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8771,
											"end": 8833,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 8771,
											"end": 8833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8844,
											"end": 8860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8908,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 8926,
											"end": 8928,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8908,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 8908,
											"end": 8929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8908,
											"end": 8929,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 8908,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8885,
											"end": 8929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8885,
											"end": 8929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8939,
											"end": 8963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8966,
											"end": 8991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 8984,
											"end": 8990,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8966,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 8966,
											"end": 8991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8966,
											"end": 8991,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 8966,
											"end": 8991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8939,
											"end": 8991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8939,
											"end": 8991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9092,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9092,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9079,
											"end": 9092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9092,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9092,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9079,
											"end": 9092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9092,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9092,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9079,
											"end": 9096,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9096,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9096,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9096,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9106,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9100,
											"end": 9106,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9100,
											"end": 9106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 9079,
											"end": 9106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9100,
											"end": 9106,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9100,
											"end": 9106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 9079,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9106,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 9079,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9079,
											"end": 9106,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12236,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12211,
											"end": 12236,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12211,
											"end": 12236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12269,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12252,
											"end": 12270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12252,
											"end": 12270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12245,
											"end": 12279,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12245,
											"end": 12279,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12245,
											"end": 12279,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9154,
											"end": 9155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9154,
											"end": 9155,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9173,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9260,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 9291,
											"end": 9299,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9309,
											"end": 9310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9313,
											"end": 9315,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9317,
											"end": 9319,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9321,
											"end": 9327,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9329,
											"end": 9333,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9260,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9260,
											"end": 9334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9260,
											"end": 9334,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 9260,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8761,
											"end": 9341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8761,
											"end": 9341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8761,
											"end": 9341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8632,
											"end": 9341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8632,
											"end": 9341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8632,
											"end": 9341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8632,
											"end": 9341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8632,
											"end": 9341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6455,
											"end": 6462,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6455,
											"end": 6469,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6441,
											"end": 6444,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6441,
											"end": 6451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6441,
											"end": 6469,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12492,
											"end": 12494,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12474,
											"end": 12495,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12531,
											"end": 12533,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12511,
											"end": 12529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12534,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12604,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 12550,
											"end": 12568,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12550,
											"end": 12568,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12550,
											"end": 12568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12543,
											"end": 12605,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12621,
											"end": 12639,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12621,
											"end": 12639,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12621,
											"end": 12639,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12614,
											"end": 12652,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12669,
											"end": 12688,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12669,
											"end": 12688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 12290,
											"end": 12694,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6524,
											"end": 6590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6738,
											"end": 6748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6748,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6785,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6786,
											"end": 6787,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6782,
											"end": 6788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6802,
											"end": 6816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6826,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6827,
											"end": 6828,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6819,
											"end": 6829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6863,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6907,
											"end": 6928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6907,
											"end": 6928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6907,
											"end": 6928,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6907,
											"end": 6928,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6899,
											"end": 6975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7059,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 7087,
											"end": 7114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6750,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7164,
											"end": 7168,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7154,
											"end": 7162,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7174,
											"end": 7177,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7186,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 7140,
											"end": 7187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7268,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7304,
											"end": 7312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7314,
											"end": 7318,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7320,
											"end": 7322,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7329,
											"end": 7336,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7338,
											"end": 7342,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7268,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 7268,
											"end": 7343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7268,
											"end": 7343,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7268,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 7350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13062,
											"end": 13070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13053,
											"end": 13070,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13053,
											"end": 13058,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13053,
											"end": 13070,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13053,
											"end": 13070,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14188,
											"end": 14190,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14170,
											"end": 14191,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14227,
											"end": 14229,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 14207,
											"end": 14225,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14207,
											"end": 14225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14207,
											"end": 14225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14200,
											"end": 14230,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14266,
											"end": 14300,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14246,
											"end": 14264,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14239,
											"end": 14301,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14317,
											"end": 14335,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14317,
											"end": 14335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14317,
											"end": 14335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14310,
											"end": 14349,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14366,
											"end": 14385,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14366,
											"end": 14385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 13986,
											"end": 14391,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13144,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 13235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 5115,
											"end": 5181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5192,
											"end": 5208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 5274,
											"end": 5276,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5256,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5233,
											"end": 5277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5233,
											"end": 5277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 5332,
											"end": 5338,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5314,
											"end": 5339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5501,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5501,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5501,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5501,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5472,
											"end": 5548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5644,
											"end": 5671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12211,
											"end": 12236,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12211,
											"end": 12236,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12211,
											"end": 12236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12267,
											"end": 12269,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12252,
											"end": 12270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12252,
											"end": 12270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12245,
											"end": 12279,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12245,
											"end": 12279,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12245,
											"end": 12279,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5814,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5845,
											"end": 5853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5855,
											"end": 5859,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5861,
											"end": 5863,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5865,
											"end": 5867,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5877,
											"end": 5881,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5814,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5814,
											"end": 5882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5814,
											"end": 5882,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5814,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5105,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5105,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5105,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5105,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17066,
											"end": 17259,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 17066,
											"end": 17259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17199,
											"end": 17200,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17132,
											"end": 17148,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17132,
											"end": 17148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17160,
											"end": 17182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17160,
											"end": 17182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17160,
											"end": 17201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17160,
											"end": 17201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17217,
											"end": 17218,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 17211,
											"end": 17219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17247,
											"end": 17252,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17066,
											"end": 17259,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17066,
											"end": 17259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15537,
											"end": 16262,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 15537,
											"end": 16262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15744,
											"end": 15757,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15744,
											"end": 15757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15740,
											"end": 16256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 15740,
											"end": 16256,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15779,
											"end": 15817,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15817,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 15779,
											"end": 15817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15818,
											"end": 15826,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15818,
											"end": 15826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15828,
											"end": 15832,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15828,
											"end": 15832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15834,
											"end": 15836,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15834,
											"end": 15836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15844,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15846,
											"end": 15850,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15846,
											"end": 15850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 15779,
											"end": 15851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 15779,
											"end": 15851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 15775,
											"end": 16246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 15775,
											"end": 16246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16122,
											"end": 16128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16115,
											"end": 16129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 16115,
											"end": 16129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16278,
											"end": 16280,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16260,
											"end": 16281,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16317,
											"end": 16319,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 16297,
											"end": 16315,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16297,
											"end": 16315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16297,
											"end": 16315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16290,
											"end": 16320,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16356,
											"end": 16390,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 16336,
											"end": 16354,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 16336,
											"end": 16354,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16336,
											"end": 16354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16329,
											"end": 16391,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16407,
											"end": 16425,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 16407,
											"end": 16425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16407,
											"end": 16425,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16400,
											"end": 16450,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16467,
											"end": 16486,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 16467,
											"end": 16486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16169,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 16076,
											"end": 16492,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15900,
											"end": 15955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15900,
											"end": 15955,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15900,
											"end": 15955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15896,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 15896,
											"end": 16048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 15979,
											"end": 16029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16500,
											"end": 16513,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16500,
											"end": 16513,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16496,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 16496,
											"end": 17054,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16535,
											"end": 16578,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16578,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16578,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 16535,
											"end": 16578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16579,
											"end": 16587,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16579,
											"end": 16587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16589,
											"end": 16593,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16589,
											"end": 16593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16595,
											"end": 16598,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16595,
											"end": 16598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16600,
											"end": 16607,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16600,
											"end": 16607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16609,
											"end": 16613,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16609,
											"end": 16613,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 16535,
											"end": 16614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 16535,
											"end": 16614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 16531,
											"end": 17044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16693,
											"end": 16753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16693,
											"end": 16753,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16693,
											"end": 16753,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16689,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 16689,
											"end": 16846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 16777,
											"end": 16827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1774,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1829,
											"end": 1844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2024,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2025,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 1989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 2083,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 2042,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2346,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 2098,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2172,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2180,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2215,
											"end": 2224,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2206,
											"end": 2213,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2225,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2198,
											"end": 2230,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2247,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2195,
											"end": 2247,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2244,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2241,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2195,
											"end": 2247,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 2195,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2266,
											"end": 2289,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2289,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2289,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2338,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2339,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2308,
											"end": 2340,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2478,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2351,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2412,
											"end": 2422,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 2407,
											"end": 2410,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2403,
											"end": 2423,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2400,
											"end": 2401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2424,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2443,
											"end": 2447,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2440,
											"end": 2441,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2433,
											"end": 2448,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2471,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2464,
											"end": 2465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2472,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2732,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 2483,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2593,
											"end": 2595,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2587,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2597,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2558,
											"end": 2598,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2628,
											"end": 2646,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2647,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2613,
											"end": 2647,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2671,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2610,
											"end": 2672,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2695,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 2607,
											"end": 2695,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 2675,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2675,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2693,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 2675,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2713,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2704,
											"end": 2726,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2483,
											"end": 2732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2920,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 2737,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2797,
											"end": 2801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2848,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2822,
											"end": 2828,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2872,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2816,
											"end": 2872,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2852,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2893,
											"end": 2907,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2909,
											"end": 2913,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2889,
											"end": 2914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 3649,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2925,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2979,
											"end": 2984,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3035,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3025,
											"end": 3029,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3017,
											"end": 3023,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3009,
											"end": 3036,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2999,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 2999,
											"end": 3054,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3048,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3052,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2999,
											"end": 3054,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 2999,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3092,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3073,
											"end": 3093,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3112,
											"end": 3116,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 3135,
											"end": 3178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3207,
											"end": 3209,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 3219,
											"end": 3250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3250,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 3219,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3303,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3303,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3303,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3377,
											"end": 3378,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3373,
											"end": 3383,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3373,
											"end": 3383,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3373,
											"end": 3383,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3373,
											"end": 3383,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3361,
											"end": 3384,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3361,
											"end": 3384,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3357,
											"end": 3389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3357,
											"end": 3389,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3357,
											"end": 3389,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3319,
											"end": 3334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3319,
											"end": 3334,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3319,
											"end": 3334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3319,
											"end": 3334,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3416,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3416,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3416,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3433,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 3398,
											"end": 3433,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3429,
											"end": 3430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3427,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3431,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3398,
											"end": 3433,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 3398,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3457,
											"end": 3463,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3468,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3619,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 3477,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3488,
											"end": 3491,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3619,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 3477,
											"end": 3619,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3559,
											"end": 3576,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3559,
											"end": 3576,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3577,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3577,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3597,
											"end": 3609,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3597,
											"end": 3609,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3597,
											"end": 3609,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3597,
											"end": 3609,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 3477,
											"end": 3619,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3619,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 3477,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3637,
											"end": 3643,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 2925,
											"end": 3649,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2925,
											"end": 3649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3654,
											"end": 4209,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 3654,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3696,
											"end": 3701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3746,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3734,
											"end": 3740,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3730,
											"end": 3747,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 3716,
											"end": 3771,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3757,
											"end": 3769,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3716,
											"end": 3771,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 3716,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3790,
											"end": 3810,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3847,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3825,
											"end": 3827,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3848,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3871,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3819,
											"end": 3871,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 3851,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 3903,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3948,
											"end": 3961,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3961,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3944,
											"end": 3971,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3973,
											"end": 3977,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3940,
											"end": 3978,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3894,
											"end": 3903,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 3912,
											"end": 3979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3979,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 3912,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4005,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3995,
											"end": 4001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4052,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4042,
											"end": 4046,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4037,
											"end": 4039,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4029,
											"end": 4035,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4040,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4021,
											"end": 4047,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4018,
											"end": 4053,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4015,
											"end": 4070,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4015,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 4015,
											"end": 4070,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4056,
											"end": 4068,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4015,
											"end": 4070,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 4015,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4123,
											"end": 4127,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4111,
											"end": 4128,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4104,
											"end": 4108,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4096,
											"end": 4102,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4079,
											"end": 4133,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4168,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4153,
											"end": 4168,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4153,
											"end": 4168,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4170,
											"end": 4174,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4179,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4179,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4179,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4179,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4157,
											"end": 4163,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3654,
											"end": 4209,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3654,
											"end": 4209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 5157,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4374,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4382,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4398,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4400,
											"end": 4406,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4456,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4432,
											"end": 4439,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4428,
											"end": 4451,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4424,
											"end": 4457,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4474,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 4421,
											"end": 4474,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4467,
											"end": 4468,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4460,
											"end": 4472,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4474,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 4421,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4493,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 4512,
											"end": 4521,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4493,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4493,
											"end": 4522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4493,
											"end": 4522,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 4493,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4522,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 4575,
											"end": 4577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4564,
											"end": 4573,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4560,
											"end": 4578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4541,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4579,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 4541,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4579,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4632,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4619,
											"end": 4628,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4634,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4671,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4694,
											"end": 4696,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4692,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4697,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4714,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 4680,
											"end": 4714,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4712,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4714,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 4680,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 4786,
											"end": 4793,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4777,
											"end": 4783,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 4733,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4733,
											"end": 4794,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 4733,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4723,
											"end": 4794,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4723,
											"end": 4794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4849,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4836,
											"end": 4845,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4819,
											"end": 4851,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 4851,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 4851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4876,
											"end": 4878,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4874,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4879,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4882,
											"end": 4894,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 4970,
											"end": 4977,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 4967,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4948,
											"end": 4957,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 4968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 4915,
											"end": 4978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4978,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 4915,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4978,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4905,
											"end": 4978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5031,
											"end": 5034,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5016,
											"end": 5035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 5036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5061,
											"end": 5063,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5064,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5081,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 5045,
											"end": 5081,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5074,
											"end": 5075,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5079,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5081,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 5045,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5100,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 5143,
											"end": 5150,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5132,
											"end": 5140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5130,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5117,
											"end": 5141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5100,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5100,
											"end": 5151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5100,
											"end": 5151,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 5100,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5151,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 5157,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 5157,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 5157,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 5157,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 5157,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 5157,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 5157,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 5157,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 5157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 6370,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5162,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5280,
											"end": 5286,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5294,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5343,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5329,
											"end": 5338,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5320,
											"end": 5327,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5316,
											"end": 5339,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5312,
											"end": 5344,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5361,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 5309,
											"end": 5361,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5357,
											"end": 5358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5355,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5359,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5361,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 5309,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5397,
											"end": 5406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5407,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5426,
											"end": 5444,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5467,
											"end": 5469,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5459,
											"end": 5465,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 5470,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5483,
											"end": 5484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5480,
											"end": 5481,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5485,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 5453,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5496,
											"end": 5528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5496,
											"end": 5528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5573,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5559,
											"end": 5563,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5555,
											"end": 5557,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5551,
											"end": 5564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 5537,
											"end": 5592,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5588,
											"end": 5589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5590,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5537,
											"end": 5592,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 5537,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5624,
											"end": 5626,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5611,
											"end": 5627,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5646,
											"end": 5650,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 5709,
											"end": 5711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5669,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 5669,
											"end": 5712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5669,
											"end": 5712,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 5669,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5741,
											"end": 5743,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5735,
											"end": 5744,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 5781,
											"end": 5783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5773,
											"end": 5779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 5753,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5784,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 5753,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5819,
											"end": 5837,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5819,
											"end": 5837,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5819,
											"end": 5837,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5908,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5903,
											"end": 5913,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5913,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5913,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 5914,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5895,
											"end": 5914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 5919,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 5919,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5891,
											"end": 5919,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5853,
											"end": 5868,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5853,
											"end": 5868,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5853,
											"end": 5868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5853,
											"end": 5868,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5931,
											"end": 5950,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5931,
											"end": 5950,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5931,
											"end": 5950,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 5967,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 5928,
											"end": 5967,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5963,
											"end": 5964,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5960,
											"end": 5961,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5953,
											"end": 5965,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5928,
											"end": 5967,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 5928,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 5998,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 5998,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 5998,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 5998,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6007,
											"end": 6155,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 6007,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6023,
											"end": 6029,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6021,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6015,
											"end": 6030,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6007,
											"end": 6155,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6007,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 6007,
											"end": 6155,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 6108,
											"end": 6111,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 6089,
											"end": 6112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6112,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 6089,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6113,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6113,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6052,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6052,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6052,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6133,
											"end": 6145,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6133,
											"end": 6145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6133,
											"end": 6145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6133,
											"end": 6145,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6007,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 6007,
											"end": 6155,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6007,
											"end": 6155,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 6007,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6180,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6218,
											"end": 6236,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6218,
											"end": 6236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6205,
											"end": 6237,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6205,
											"end": 6237,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6249,
											"end": 6265,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6249,
											"end": 6265,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6249,
											"end": 6265,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6246,
											"end": 6282,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6246,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 6246,
											"end": 6282,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6278,
											"end": 6279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6275,
											"end": 6276,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6268,
											"end": 6280,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6246,
											"end": 6282,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 6246,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6246,
											"end": 6282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6301,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 6356,
											"end": 6363,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6334,
											"end": 6343,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6330,
											"end": 6354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6301,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 6301,
											"end": 6364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6301,
											"end": 6364,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 6301,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6364,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6291,
											"end": 6364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 6370,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 6370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 6370,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 6370,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 6370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5162,
											"end": 6370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6810,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 6375,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6428,
											"end": 6431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6471,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6460,
											"end": 6472,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6493,
											"end": 6499,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6488,
											"end": 6491,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6481,
											"end": 6500,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6523,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6548,
											"end": 6550,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6546,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6539,
											"end": 6551,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6532,
											"end": 6551,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6532,
											"end": 6551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6583,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6574,
											"end": 6588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6616,
											"end": 6785,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 6616,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6630,
											"end": 6636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6627,
											"end": 6628,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6624,
											"end": 6637,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6616,
											"end": 6785,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6616,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 6616,
											"end": 6785,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6691,
											"end": 6704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6691,
											"end": 6704,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6679,
											"end": 6705,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6679,
											"end": 6705,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6725,
											"end": 6737,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6725,
											"end": 6737,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6725,
											"end": 6737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6725,
											"end": 6737,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6652,
											"end": 6653,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6645,
											"end": 6654,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6616,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 6616,
											"end": 6785,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6616,
											"end": 6785,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 6616,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6801,
											"end": 6804,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6804,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6810,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6375,
											"end": 6810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6815,
											"end": 7076,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 6815,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6994,
											"end": 6996,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6983,
											"end": 6992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6976,
											"end": 6997,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6957,
											"end": 6961,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7014,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 7066,
											"end": 7068,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7055,
											"end": 7064,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7051,
											"end": 7069,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7049,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7014,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 7014,
											"end": 7070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7636,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 7289,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7417,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7403,
											"end": 7412,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7401,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7390,
											"end": 7413,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7435,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 7383,
											"end": 7435,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7432,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7428,
											"end": 7429,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7421,
											"end": 7433,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7435,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 7383,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7454,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 7473,
											"end": 7482,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7454,
											"end": 7483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 7454,
											"end": 7483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7454,
											"end": 7483,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 7454,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7444,
											"end": 7483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7444,
											"end": 7483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7533,
											"end": 7535,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7522,
											"end": 7531,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7518,
											"end": 7536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7505,
											"end": 7537,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7580,
											"end": 7585,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7573,
											"end": 7586,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7566,
											"end": 7587,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7559,
											"end": 7564,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7556,
											"end": 7588,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 7546,
											"end": 7606,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7592,
											"end": 7604,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7606,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 7546,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7625,
											"end": 7630,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7630,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7636,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7636,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7289,
											"end": 7636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7901,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7641,
											"end": 7901,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7715,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7723,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7772,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7758,
											"end": 7767,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7749,
											"end": 7756,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7745,
											"end": 7768,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7741,
											"end": 7773,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 7790,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 7790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 7738,
											"end": 7790,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7786,
											"end": 7787,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7783,
											"end": 7784,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7776,
											"end": 7788,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 7790,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 7738,
											"end": 7790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 7809,
											"end": 7838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7838,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 7809,
											"end": 7838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7799,
											"end": 7838,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7799,
											"end": 7838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7857,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 7891,
											"end": 7893,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7880,
											"end": 7889,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7876,
											"end": 7894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7857,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 7857,
											"end": 7895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7857,
											"end": 7895,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 7857,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7847,
											"end": 7895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7847,
											"end": 7895,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7901,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7901,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7906,
											"end": 8512,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 7906,
											"end": 8512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8010,
											"end": 8016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8018,
											"end": 8024,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8026,
											"end": 8032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8034,
											"end": 8040,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8042,
											"end": 8048,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8095,
											"end": 8098,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8083,
											"end": 8092,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8074,
											"end": 8081,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8070,
											"end": 8093,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8066,
											"end": 8099,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8063,
											"end": 8116,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8063,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 8063,
											"end": 8116,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8112,
											"end": 8113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8109,
											"end": 8110,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8102,
											"end": 8114,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8063,
											"end": 8116,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 8063,
											"end": 8116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 8135,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 8135,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8125,
											"end": 8164,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8125,
											"end": 8164,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8183,
											"end": 8221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 8217,
											"end": 8219,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8206,
											"end": 8215,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8202,
											"end": 8220,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8183,
											"end": 8221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 8183,
											"end": 8221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8183,
											"end": 8221,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 8183,
											"end": 8221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8173,
											"end": 8221,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8173,
											"end": 8221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8268,
											"end": 8270,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8257,
											"end": 8266,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8253,
											"end": 8271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8240,
											"end": 8272,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8272,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8230,
											"end": 8272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8319,
											"end": 8321,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8308,
											"end": 8317,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8291,
											"end": 8323,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8323,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8281,
											"end": 8323,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8374,
											"end": 8377,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8363,
											"end": 8372,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8359,
											"end": 8378,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8346,
											"end": 8379,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8402,
											"end": 8420,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8394,
											"end": 8400,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8391,
											"end": 8421,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8438,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 8388,
											"end": 8438,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8434,
											"end": 8435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8431,
											"end": 8432,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8424,
											"end": 8436,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8438,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 8388,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8457,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 8498,
											"end": 8505,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8489,
											"end": 8495,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8487,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8474,
											"end": 8496,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8457,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 8457,
											"end": 8506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8517,
											"end": 8703,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 8517,
											"end": 8703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8629,
											"end": 8631,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8617,
											"end": 8626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8608,
											"end": 8615,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8604,
											"end": 8627,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8600,
											"end": 8632,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8597,
											"end": 8649,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8597,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 8597,
											"end": 8649,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8645,
											"end": 8646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8642,
											"end": 8643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8635,
											"end": 8647,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8597,
											"end": 8649,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 8597,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8668,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 8687,
											"end": 8696,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8668,
											"end": 8697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 8668,
											"end": 8697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9499,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 9119,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9198,
											"end": 9199,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 9194,
											"end": 9206,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9194,
											"end": 9206,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9194,
											"end": 9206,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 9194,
											"end": 9206,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9241,
											"end": 9253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9241,
											"end": 9253,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9241,
											"end": 9253,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9262,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 9262,
											"end": 9323,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9316,
											"end": 9320,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 9308,
											"end": 9314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9304,
											"end": 9321,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9294,
											"end": 9321,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9294,
											"end": 9321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9262,
											"end": 9323,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 9262,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9369,
											"end": 9371,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9361,
											"end": 9367,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9358,
											"end": 9372,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9335,
											"end": 9373,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9332,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 9332,
											"end": 9493,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9415,
											"end": 9425,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 9410,
											"end": 9413,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9406,
											"end": 9426,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9403,
											"end": 9404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9396,
											"end": 9427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9450,
											"end": 9454,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 9447,
											"end": 9448,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9440,
											"end": 9455,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9475,
											"end": 9476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9468,
											"end": 9483,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9332,
											"end": 9493,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 9332,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9332,
											"end": 9493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9499,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9915,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 9504,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9706,
											"end": 9708,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9688,
											"end": 9709,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9688,
											"end": 9709,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9688,
											"end": 9709,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9745,
											"end": 9747,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 9725,
											"end": 9743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9725,
											"end": 9743,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9725,
											"end": 9743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9718,
											"end": 9748,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9784,
											"end": 9818,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 9779,
											"end": 9781,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9764,
											"end": 9782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9764,
											"end": 9782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9757,
											"end": 9819,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9850,
											"end": 9852,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9835,
											"end": 9853,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9835,
											"end": 9853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9828,
											"end": 9873,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9905,
											"end": 9908,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9890,
											"end": 9909,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 9909,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10330,
											"end": 10457,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 10330,
											"end": 10457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10391,
											"end": 10401,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 10386,
											"end": 10389,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 10382,
											"end": 10402,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 10379,
											"end": 10380,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10372,
											"end": 10403,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10422,
											"end": 10426,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 10419,
											"end": 10420,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10412,
											"end": 10427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10446,
											"end": 10450,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10443,
											"end": 10444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10451,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10462,
											"end": 10589,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 10462,
											"end": 10589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10523,
											"end": 10533,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 10518,
											"end": 10521,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 10514,
											"end": 10534,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 10511,
											"end": 10512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10504,
											"end": 10535,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10554,
											"end": 10558,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 10551,
											"end": 10552,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10544,
											"end": 10559,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10578,
											"end": 10582,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10575,
											"end": 10576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10568,
											"end": 10583,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10594,
											"end": 10729,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 10594,
											"end": 10729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10633,
											"end": 10636,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10654,
											"end": 10671,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10654,
											"end": 10671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10654,
											"end": 10671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 10651,
											"end": 10694,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10674,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 10674,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 10674,
											"end": 10692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10674,
											"end": 10692,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 10674,
											"end": 10692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10721,
											"end": 10722,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10710,
											"end": 10723,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10710,
											"end": 10723,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10594,
											"end": 10729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 12032,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 11904,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11944,
											"end": 11947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11975,
											"end": 11976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 11977,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 11968,
											"end": 11969,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11965,
											"end": 11978,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11962,
											"end": 12001,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11962,
											"end": 12001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 11962,
											"end": 12001,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 11981,
											"end": 11999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12017,
											"end": 12026,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12017,
											"end": 12026,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 12032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12699,
											"end": 13100,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 12699,
											"end": 13100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12901,
											"end": 12903,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12883,
											"end": 12904,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 12904,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12883,
											"end": 12904,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12940,
											"end": 12942,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 12920,
											"end": 12938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12920,
											"end": 12938,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12920,
											"end": 12938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12913,
											"end": 12943,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 13013,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 12974,
											"end": 12976,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12959,
											"end": 12977,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12959,
											"end": 12977,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 13014,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13045,
											"end": 13047,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13030,
											"end": 13048,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13030,
											"end": 13048,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13023,
											"end": 13058,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13090,
											"end": 13093,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13075,
											"end": 13094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12699,
											"end": 13100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13105,
											"end": 13511,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 13105,
											"end": 13511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13307,
											"end": 13309,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13289,
											"end": 13310,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13289,
											"end": 13310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13289,
											"end": 13310,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13346,
											"end": 13348,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13326,
											"end": 13344,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13319,
											"end": 13349,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13385,
											"end": 13419,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 13380,
											"end": 13382,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13365,
											"end": 13383,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13365,
											"end": 13383,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13358,
											"end": 13420,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13451,
											"end": 13453,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13436,
											"end": 13454,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13436,
											"end": 13454,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13429,
											"end": 13469,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13501,
											"end": 13504,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13486,
											"end": 13505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13486,
											"end": 13505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13105,
											"end": 13511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13516,
											"end": 13981,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 13516,
											"end": 13981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13775,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13762,
											"end": 13771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13755,
											"end": 13776,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13736,
											"end": 13740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13799,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 13851,
											"end": 13853,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13840,
											"end": 13849,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13836,
											"end": 13854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13828,
											"end": 13834,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13799,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 13799,
											"end": 13855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13799,
											"end": 13855,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 13799,
											"end": 13855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13903,
											"end": 13912,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13895,
											"end": 13901,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13891,
											"end": 13913,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13886,
											"end": 13888,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13875,
											"end": 13884,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13871,
											"end": 13889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13864,
											"end": 13914,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13931,
											"end": 13975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 13968,
											"end": 13974,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13960,
											"end": 13966,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13931,
											"end": 13975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 13931,
											"end": 13975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13931,
											"end": 13975,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 13931,
											"end": 13975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13923,
											"end": 13975,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 13516,
											"end": 13981,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13516,
											"end": 13981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14396,
											"end": 14957,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 14396,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14693,
											"end": 14708,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 14708,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14693,
											"end": 14708,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14675,
											"end": 14709,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14675,
											"end": 14709,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14745,
											"end": 14760,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14745,
											"end": 14760,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14742,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14725,
											"end": 14743,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14725,
											"end": 14743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 14761,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14792,
											"end": 14794,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14777,
											"end": 14795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14777,
											"end": 14795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14770,
											"end": 14804,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14770,
											"end": 14804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14770,
											"end": 14804,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14835,
											"end": 14837,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14820,
											"end": 14838,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14820,
											"end": 14838,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14813,
											"end": 14847,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14813,
											"end": 14847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14813,
											"end": 14847,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14655,
											"end": 14658,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 14878,
											"end": 14881,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14863,
											"end": 14882,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14863,
											"end": 14882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14856,
											"end": 14888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14856,
											"end": 14888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14856,
											"end": 14888,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14618,
											"end": 14622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14618,
											"end": 14622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14905,
											"end": 14951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 14905,
											"end": 14951,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14931,
											"end": 14950,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14931,
											"end": 14950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14923,
											"end": 14929,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14905,
											"end": 14951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 14905,
											"end": 14951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14905,
											"end": 14951,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 14905,
											"end": 14951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14897,
											"end": 14951,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 14396,
											"end": 14957,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14396,
											"end": 14957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14962,
											"end": 15211,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 14962,
											"end": 15211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15031,
											"end": 15037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15084,
											"end": 15086,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15072,
											"end": 15081,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15063,
											"end": 15070,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15059,
											"end": 15082,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15055,
											"end": 15087,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 15052,
											"end": 15104,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15052,
											"end": 15104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 15052,
											"end": 15104,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15100,
											"end": 15101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15097,
											"end": 15098,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15090,
											"end": 15102,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15052,
											"end": 15104,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 15052,
											"end": 15104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15132,
											"end": 15141,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15126,
											"end": 15142,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 15175,
											"end": 15180,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 15151,
											"end": 15181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15216,
											"end": 15395,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 15216,
											"end": 15395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15251,
											"end": 15254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15293,
											"end": 15294,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 15275,
											"end": 15291,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15272,
											"end": 15295,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15269,
											"end": 15389,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15269,
											"end": 15389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 15269,
											"end": 15389,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15339,
											"end": 15340,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15336,
											"end": 15337,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15333,
											"end": 15334,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15318,
											"end": 15341,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15376,
											"end": 15377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15370,
											"end": 15378,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15365,
											"end": 15368,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15361,
											"end": 15379,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 15269,
											"end": 15389,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 15269,
											"end": 15389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15216,
											"end": 15395,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15216,
											"end": 15395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15400,
											"end": 16071,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 15400,
											"end": 16071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15439,
											"end": 15442,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15481,
											"end": 15485,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15463,
											"end": 15479,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15460,
											"end": 15486,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 15457,
											"end": 15496,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15457,
											"end": 15496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 15457,
											"end": 15496,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15400,
											"end": 16071,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15400,
											"end": 16071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15457,
											"end": 15496,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 15457,
											"end": 15496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15523,
											"end": 15525,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15517,
											"end": 15526,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15588,
											"end": 15604,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15584,
											"end": 15609,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15584,
											"end": 15609,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15581,
											"end": 15582,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15517,
											"end": 15526,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15560,
											"end": 15610,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 15639,
											"end": 15643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15633,
											"end": 15644,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15663,
											"end": 15679,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15698,
											"end": 15716,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15769,
											"end": 15771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15762,
											"end": 15766,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15754,
											"end": 15760,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15750,
											"end": 15767,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15747,
											"end": 15772,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15742,
											"end": 15744,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15734,
											"end": 15740,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15731,
											"end": 15745,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15728,
											"end": 15773,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 15725,
											"end": 15783,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15725,
											"end": 15783,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 15725,
											"end": 15783,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15776,
											"end": 15781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15400,
											"end": 16071,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15400,
											"end": 16071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15725,
											"end": 15783,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 15725,
											"end": 15783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15813,
											"end": 15819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15807,
											"end": 15811,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15803,
											"end": 15820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15792,
											"end": 15820,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15792,
											"end": 15820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15849,
											"end": 15852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15843,
											"end": 15853,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15876,
											"end": 15878,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15868,
											"end": 15874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15865,
											"end": 15879,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15862,
											"end": 15889,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15862,
											"end": 15889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 15862,
											"end": 15889,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15882,
											"end": 15887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15882,
											"end": 15887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15882,
											"end": 15887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15882,
											"end": 15887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15882,
											"end": 15887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15882,
											"end": 15887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15400,
											"end": 16071,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15400,
											"end": 16071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15862,
											"end": 15889,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 15862,
											"end": 15889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15966,
											"end": 15968,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15947,
											"end": 15963,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15941,
											"end": 15945,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15937,
											"end": 15964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15933,
											"end": 15969,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15926,
											"end": 15930,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15917,
											"end": 15923,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15915,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15908,
											"end": 15924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15904,
											"end": 15931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15901,
											"end": 15970,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15898,
											"end": 15980,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15898,
											"end": 15980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 15898,
											"end": 15980,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15973,
											"end": 15978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15973,
											"end": 15978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15973,
											"end": 15978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15973,
											"end": 15978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15973,
											"end": 15978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15973,
											"end": 15978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15400,
											"end": 16071,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15400,
											"end": 16071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15898,
											"end": 15980,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 15898,
											"end": 15980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15989,
											"end": 16046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 16040,
											"end": 16044,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16031,
											"end": 16037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16023,
											"end": 16029,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16019,
											"end": 16038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16015,
											"end": 16045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16009,
											"end": 16013,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15989,
											"end": 16046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 15989,
											"end": 16046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15989,
											"end": 16046,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 15989,
											"end": 16046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16062,
											"end": 16065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16062,
											"end": 16065,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15400,
											"end": 16071,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15400,
											"end": 16071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16497,
											"end": 16901,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 16497,
											"end": 16901,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16699,
											"end": 16701,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16681,
											"end": 16702,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16681,
											"end": 16702,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16681,
											"end": 16702,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16738,
											"end": 16740,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16711,
											"end": 16741,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16777,
											"end": 16811,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 16772,
											"end": 16774,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16757,
											"end": 16775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16750,
											"end": 16812,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16843,
											"end": 16845,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16828,
											"end": 16846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16828,
											"end": 16846,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16821,
											"end": 16859,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16891,
											"end": 16894,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16876,
											"end": 16895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16876,
											"end": 16895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16497,
											"end": 16901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16906,
											"end": 17733,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 16906,
											"end": 17733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17303,
											"end": 17318,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17303,
											"end": 17318,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17303,
											"end": 17318,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17285,
											"end": 17319,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17285,
											"end": 17319,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17355,
											"end": 17370,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17355,
											"end": 17370,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17350,
											"end": 17352,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17335,
											"end": 17353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17335,
											"end": 17353,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17328,
											"end": 17371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17265,
											"end": 17268,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 17402,
											"end": 17404,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17387,
											"end": 17405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17387,
											"end": 17405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17380,
											"end": 17411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17380,
											"end": 17411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17380,
											"end": 17411,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17228,
											"end": 17232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17228,
											"end": 17232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17434,
											"end": 17491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 17434,
											"end": 17491,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17471,
											"end": 17490,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17471,
											"end": 17490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17463,
											"end": 17469,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17434,
											"end": 17491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 17434,
											"end": 17491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17434,
											"end": 17491,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 17434,
											"end": 17491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17539,
											"end": 17548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17531,
											"end": 17537,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17527,
											"end": 17549,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17522,
											"end": 17524,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17511,
											"end": 17520,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17507,
											"end": 17525,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17500,
											"end": 17550,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 17610,
											"end": 17616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17602,
											"end": 17608,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 17573,
											"end": 17617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17617,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 17573,
											"end": 17617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17559,
											"end": 17617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17666,
											"end": 17675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17658,
											"end": 17664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17676,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17648,
											"end": 17651,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 17637,
											"end": 17646,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17633,
											"end": 17652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17626,
											"end": 17677,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17694,
											"end": 17727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 17720,
											"end": 17726,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17712,
											"end": 17718,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17694,
											"end": 17727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 17694,
											"end": 17727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17694,
											"end": 17727,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 17694,
											"end": 17727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17686,
											"end": 17727,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 16906,
											"end": 17733,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16906,
											"end": 17733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								".deps/contracts/WOM_Mint.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(uint256,uint256)": "1b2ef1ca",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/contracts/WOM_Mint.sol\":\"WOMNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/contracts/WOM_Mint.sol\":{\"keccak256\":\"0x46f3f3b8edbd197070e92b1a9e5b854986b02e96bdf140c8d84c82ebfc5cabf0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5fa45ebd326a5624673cd18886eb9f9a43484c151d4d477a26517c0426a7d5e7\",\"dweb:/ipfs/QmcqDRyu8WqHbbRktoYYE9Mskq2JiqoroyC71LpU7ksA6W\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d\",\"dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 172,
								"contract": ".deps/contracts/WOM_Mint.sol:WOMNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 178,
								"contract": ".deps/contracts/WOM_Mint.sol:WOMNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 180,
								"contract": ".deps/contracts/WOM_Mint.sol:WOMNFT",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 41,
								"contract": ".deps/contracts/WOM_Mint.sol:WOMNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 41,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17261  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1157:1161  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1156  _setURI */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1149:1162  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1107:1169  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17261  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8173:8259  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8239:8243  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8239:8252  _uri = newuri */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8246:8252  newuri */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8239:8243  _uri */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8239:8252  _uri = newuri */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8173:8259  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_12:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1233   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":257:259   */\n  0x20\n    /* \"#utility.yul\":300:302   */\n  dup1\n    /* \"#utility.yul\":288:297   */\n  dup4\n    /* \"#utility.yul\":279:286   */\n  dup6\n    /* \"#utility.yul\":275:298   */\n  sub\n    /* \"#utility.yul\":271:303   */\n  slt\n    /* \"#utility.yul\":268:320   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":313:314   */\n  dup1\n    /* \"#utility.yul\":306:318   */\n  revert\n    /* \"#utility.yul\":268:320   */\ntag_20:\n    /* \"#utility.yul\":343:359   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":408:422   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":405:439   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":432:433   */\n  dup1\n    /* \"#utility.yul\":425:437   */\n  revert\n    /* \"#utility.yul\":405:439   */\ntag_21:\n    /* \"#utility.yul\":473:479   */\n  dup2\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":448:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":518:525   */\n  dup6\n    /* \"#utility.yul\":511:515   */\n  0x1f\n    /* \"#utility.yul\":507:509   */\n  dup4\n    /* \"#utility.yul\":503:516   */\n  add\n    /* \"#utility.yul\":499:526   */\n  slt\n    /* \"#utility.yul\":489:544   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":540:541   */\n  0x00\n    /* \"#utility.yul\":537:538   */\n  dup1\n    /* \"#utility.yul\":530:542   */\n  revert\n    /* \"#utility.yul\":489:544   */\ntag_22:\n    /* \"#utility.yul\":569:571   */\n  dup2\n    /* \"#utility.yul\":563:572   */\n  mload\n    /* \"#utility.yul\":591:593   */\n  dup2\n    /* \"#utility.yul\":587:589   */\n  dup2\n    /* \"#utility.yul\":584:594   */\n  gt\n    /* \"#utility.yul\":581:617   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":597:615   */\n  tag_24\n  tag_12\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":672:674   */\n  0x40\n    /* \"#utility.yul\":666:675   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  0x1f\n    /* \"#utility.yul\":726:739   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":722:744   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":746:748   */\n  0x3f\n    /* \"#utility.yul\":718:749   */\n  add\n    /* \"#utility.yul\":714:754   */\n  and\n    /* \"#utility.yul\":702:755   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":770:788   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":790:812   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":767:813   */\n  or\n    /* \"#utility.yul\":764:836   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":816:834   */\n  tag_26\n  tag_12\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":856:866   */\n  dup2\n    /* \"#utility.yul\":852:854   */\n  0x40\n    /* \"#utility.yul\":845:867   */\n  mstore\n    /* \"#utility.yul\":891:893   */\n  dup3\n    /* \"#utility.yul\":883:889   */\n  dup2\n    /* \"#utility.yul\":876:894   */\n  mstore\n    /* \"#utility.yul\":931:938   */\n  dup9\n    /* \"#utility.yul\":926:928   */\n  dup7\n    /* \"#utility.yul\":921:923   */\n  dup5\n    /* \"#utility.yul\":917:919   */\n  dup8\n    /* \"#utility.yul\":913:924   */\n  add\n    /* \"#utility.yul\":909:929   */\n  add\n    /* \"#utility.yul\":906:939   */\n  gt\n    /* \"#utility.yul\":903:956   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":952:953   */\n  0x00\n    /* \"#utility.yul\":949:950   */\n  dup1\n    /* \"#utility.yul\":942:954   */\n  revert\n    /* \"#utility.yul\":903:956   */\ntag_27:\n    /* \"#utility.yul\":974:975   */\n  0x00\n    /* \"#utility.yul\":965:975   */\n  swap4\n  pop\n    /* \"#utility.yul\":984:1113   */\ntag_28:\n    /* \"#utility.yul\":998:1000   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup5\n    /* \"#utility.yul\":992:1001   */\n  lt\n    /* \"#utility.yul\":984:1113   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1082:1101   */\n  dup7\n  add\n    /* \"#utility.yul\":1076:1102   */\n  mload\n    /* \"#utility.yul\":1055:1069   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1051:1074   */\n  dup8\n  add\n    /* \"#utility.yul\":1044:1103   */\n  mstore\n    /* \"#utility.yul\":1009:1019   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":984:1113   */\n  jump(tag_28)\ntag_30:\n    /* \"#utility.yul\":1131:1133   */\n  dup3\n    /* \"#utility.yul\":1128:1129   */\n  dup5\n    /* \"#utility.yul\":1125:1134   */\n  gt\n    /* \"#utility.yul\":1122:1202   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1190:1191   */\n  0x00\n    /* \"#utility.yul\":1185:1187   */\n  dup7\n    /* \"#utility.yul\":1180:1182   */\n  dup5\n    /* \"#utility.yul\":1172:1178   */\n  dup4\n    /* \"#utility.yul\":1168:1183   */\n  add\n    /* \"#utility.yul\":1164:1188   */\n  add\n    /* \"#utility.yul\":1157:1192   */\n  mstore\n    /* \"#utility.yul\":1122:1202   */\ntag_31:\n    /* \"#utility.yul\":1221:1227   */\n  swap9\n    /* \"#utility.yul\":146:1233   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1238:1618   */\ntag_13:\n    /* \"#utility.yul\":1317:1318   */\n  0x01\n    /* \"#utility.yul\":1313:1325   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1360:1372   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1381:1442   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1435:1439   */\n  0x7f\n    /* \"#utility.yul\":1427:1433   */\n  dup3\n    /* \"#utility.yul\":1423:1440   */\n  and\n    /* \"#utility.yul\":1413:1440   */\n  swap2\n  pop\n    /* \"#utility.yul\":1381:1442   */\ntag_33:\n    /* \"#utility.yul\":1488:1490   */\n  0x20\n    /* \"#utility.yul\":1480:1486   */\n  dup3\n    /* \"#utility.yul\":1477:1491   */\n  lt\n    /* \"#utility.yul\":1457:1475   */\n  dup2\n    /* \"#utility.yul\":1454:1492   */\n  sub\n    /* \"#utility.yul\":1451:1612   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1534:1544   */\n  0x4e487b71\n    /* \"#utility.yul\":1529:1532   */\n  0xe0\n    /* \"#utility.yul\":1525:1545   */\n  shl\n    /* \"#utility.yul\":1522:1523   */\n  0x00\n    /* \"#utility.yul\":1515:1546   */\n  mstore\n    /* \"#utility.yul\":1569:1573   */\n  0x22\n    /* \"#utility.yul\":1566:1567   */\n  0x04\n    /* \"#utility.yul\":1559:1574   */\n  mstore\n    /* \"#utility.yul\":1597:1601   */\n  0x24\n    /* \"#utility.yul\":1594:1595   */\n  0x00\n    /* \"#utility.yul\":1587:1602   */\n  revert\n    /* \"#utility.yul\":1451:1612   */\ntag_34:\n  pop\n    /* \"#utility.yul\":1238:1618   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1749:2294   */\ntag_15:\n    /* \"#utility.yul\":1851:1853   */\n  0x1f\n    /* \"#utility.yul\":1846:1849   */\n  dup3\n    /* \"#utility.yul\":1843:1854   */\n  gt\n    /* \"#utility.yul\":1840:2288   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1912:1917   */\n  dup2\n    /* \"#utility.yul\":1908:1910   */\n  dup2\n    /* \"#utility.yul\":1901:1918   */\n  mstore\n    /* \"#utility.yul\":1957:1961   */\n  0x20\n    /* \"#utility.yul\":1953:1955   */\n  dup2\n    /* \"#utility.yul\":1943:1962   */\n  keccak256\n    /* \"#utility.yul\":2027:2029   */\n  0x1f\n    /* \"#utility.yul\":2015:2025   */\n  dup6\n    /* \"#utility.yul\":2011:2030   */\n  add\n    /* \"#utility.yul\":2008:2009   */\n  0x05\n    /* \"#utility.yul\":2004:2031   */\n  shr\n    /* \"#utility.yul\":1998:2002   */\n  dup2\n    /* \"#utility.yul\":1994:2032   */\n  add\n    /* \"#utility.yul\":2063:2067   */\n  0x20\n    /* \"#utility.yul\":2051:2061   */\n  dup7\n    /* \"#utility.yul\":2048:2068   */\n  lt\n    /* \"#utility.yul\":2045:2092   */\n  iszero\n  tag_38\n  jumpi\n  pop\n    /* \"#utility.yul\":2086:2090   */\n  dup1\n    /* \"#utility.yul\":2045:2092   */\ntag_38:\n    /* \"#utility.yul\":2141:2143   */\n  0x1f\n    /* \"#utility.yul\":2136:2139   */\n  dup6\n    /* \"#utility.yul\":2132:2144   */\n  add\n    /* \"#utility.yul\":2129:2130   */\n  0x05\n    /* \"#utility.yul\":2125:2145   */\n  shr\n    /* \"#utility.yul\":2119:2123   */\n  dup3\n    /* \"#utility.yul\":2115:2146   */\n  add\n    /* \"#utility.yul\":2105:2146   */\n  swap2\n  pop\n    /* \"#utility.yul\":2196:2278   */\ntag_39:\n    /* \"#utility.yul\":2214:2216   */\n  dup2\n    /* \"#utility.yul\":2207:2212   */\n  dup2\n    /* \"#utility.yul\":2204:2217   */\n  lt\n    /* \"#utility.yul\":2196:2278   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":2259:2276   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2240:2241   */\n  0x01\n    /* \"#utility.yul\":2229:2242   */\n  add\n    /* \"#utility.yul\":2196:2278   */\n  jump(tag_39)\ntag_41:\n    /* \"#utility.yul\":2200:2203   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1840:2288   */\ntag_37:\n    /* \"#utility.yul\":1749:2294   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2470:3822   */\ntag_11:\n    /* \"#utility.yul\":2590:2600   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2612:2642   */\n  dup2\n  gt\n    /* \"#utility.yul\":2609:2665   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":2645:2663   */\n  tag_45\n  tag_12\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2674:2771   */\n  tag_46\n    /* \"#utility.yul\":2764:2770   */\n  dup2\n    /* \"#utility.yul\":2724:2762   */\n  tag_47\n    /* \"#utility.yul\":2756:2760   */\n  dup5\n    /* \"#utility.yul\":2750:2761   */\n  sload\n    /* \"#utility.yul\":2724:2762   */\n  tag_13\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2718:2722   */\n  dup5\n    /* \"#utility.yul\":2674:2771   */\n  tag_15\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2826:2830   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2890:2892   */\n  0x1f\n    /* \"#utility.yul\":2879:2893   */\n  dup4\n  gt\n    /* \"#utility.yul\":2907:2908   */\n  0x01\n    /* \"#utility.yul\":2902:3565   */\n  dup2\n  eq\n  tag_49\n  jumpi\n    /* \"#utility.yul\":3609:3610   */\n  0x00\n    /* \"#utility.yul\":3626:3632   */\n  dup5\n    /* \"#utility.yul\":3623:3712   */\n  iszero\n  tag_50\n  jumpi\n  pop\n    /* \"#utility.yul\":3678:3697   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3672:3698   */\n  mload\n    /* \"#utility.yul\":3623:3712   */\ntag_50:\n  not(0x00)\n    /* \"#utility.yul\":2427:2428   */\n  0x03\n    /* \"#utility.yul\":2423:2434   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2419:2443   */\n  shr\n    /* \"#utility.yul\":2415:2444   */\n  not\n    /* \"#utility.yul\":2405:2445   */\n  and\n    /* \"#utility.yul\":2451:2452   */\n  0x01\n    /* \"#utility.yul\":2447:2458   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2402:2459   */\n  or\n    /* \"#utility.yul\":3725:3806   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2872:3816   */\n  jump(tag_41)\n    /* \"#utility.yul\":2902:3565   */\ntag_49:\n    /* \"#utility.yul\":1696:1697   */\n  0x00\n    /* \"#utility.yul\":1689:1703   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1733:1737   */\n  0x20\n    /* \"#utility.yul\":1720:1738   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2938:2958   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3056:3292   */\ntag_53:\n    /* \"#utility.yul\":3070:3077   */\n  dup3\n    /* \"#utility.yul\":3067:3068   */\n  dup2\n    /* \"#utility.yul\":3064:3078   */\n  lt\n    /* \"#utility.yul\":3056:3292   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3159:3178   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3153:3179   */\n  mload\n    /* \"#utility.yul\":3138:3180   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3251:3278   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3219:3220   */\n  0x01\n    /* \"#utility.yul\":3207:3221   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3086:3105   */\n  dup5\n  add\n    /* \"#utility.yul\":3056:3292   */\n  jump(tag_53)\ntag_55:\n    /* \"#utility.yul\":3060:3063   */\n  pop\n    /* \"#utility.yul\":3320:3326   */\n  dup6\n    /* \"#utility.yul\":3311:3318   */\n  dup3\n    /* \"#utility.yul\":3308:3327   */\n  lt\n    /* \"#utility.yul\":3305:3506   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":3381:3400   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3375:3401   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3464:3465   */\n  0x03\n    /* \"#utility.yul\":3460:3474   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3476:3479   */\n  0xf8\n    /* \"#utility.yul\":3456:3480   */\n  and\n    /* \"#utility.yul\":3452:3489   */\n  shr\n    /* \"#utility.yul\":3448:3490   */\n  not\n    /* \"#utility.yul\":3433:3491   */\n  and\n    /* \"#utility.yul\":3418:3492   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3305:3506   */\ntag_56:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3552:3553   */\n  0x01\n    /* \"#utility.yul\":3536:3550   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3532:3554   */\n  add\n    /* \"#utility.yul\":3519:3555   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2470:3822   */\n  jump\t// out\ntag_17:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17261  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":570:17261  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4065:4492  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3514  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3464:3468  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3514  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3505  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3514  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3487:3524  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3598:3993  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2271:2278  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2298:2319  account != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2366  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8258:8260   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2366  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8240:8261   */\n      mstore\n        /* \"#utility.yul\":8297:8299   */\n      0x2a\n        /* \"#utility.yul\":8277:8295   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8270:8300   */\n      mstore\n        /* \"#utility.yul\":8336:8370   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":8316:8334   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8309:8371   */\n      mstore\n      shl(0xb1, 0x30b634b21037bbb732b9)\n        /* \"#utility.yul\":8387:8405   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8380:8420   */\n      mstore\n        /* \"#utility.yul\":8437:8456   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2290:2366  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2392  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2396  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2383:2405  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2185:2412  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1338:1342  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1414  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1430:1482  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1482  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1373:1534  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_60\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1534  super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1354:1534  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1236:1541  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2000:2013  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2032:2036  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2025:2036  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1940:2043  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4065:4492  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4290:4310  from == _msgSender() */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4290:4310  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4290:4350  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4314:4350  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4331:4335  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4314:4350  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4423  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_77\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4433:4485  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4456:4460  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4462:4464  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4466:4469  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4471:4478  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4480:4484  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4433:4455  _safeBatchTransferFrom */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4433:4485  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4065:4492  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2720:2736  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2779:2782  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2779:2789  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2768  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2775  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2760:2789  accounts.length == ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2752:2835  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9470:9472   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2752:2835  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9452:9473   */\n      mstore\n        /* \"#utility.yul\":9509:9511   */\n      0x29\n        /* \"#utility.yul\":9489:9507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9482:9512   */\n      mstore\n        /* \"#utility.yul\":9548:9582   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":9528:9546   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9521:9583   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9599:9617   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9592:9631   */\n      mstore\n        /* \"#utility.yul\":9648:9667   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2752:2835  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":9268:9673   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2752:2835  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2846:2876  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:2901  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:2908  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2909  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2846:2909  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2925:2934  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2944:2952  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2944:2959  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2940:2941  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2940:2959  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3029  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3009:3017  accounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3018:3019  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3009:3020  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3025  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3026:3027  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3022:3028  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3008  balanceOf */\n      tag_15\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2999:3029  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2993  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2994:2995  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2996  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:3029  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2961:2964  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2920:3040  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3057:3070  batchBalances */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2569:3077  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3291  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3272:3280  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3282:3290  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3257  _setApprovalForAll */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3239:3291  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3145:3298  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3598:3993  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3818  from == _msgSender() */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3818  from == _msgSender() */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3798:3858  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3822:3858  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3839:3843  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3365:3531  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3822:3858  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3777:3931  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_77\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3941:3986  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3959:3963  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3965:3967  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3969:3971  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3973:3979  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3981:3985  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3941:3958  _safeTransferFrom */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3941:3986  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6235:7350  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6455:6462  amounts */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6455:6469  amounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6441:6444  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6441:6451  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6441:6469  ids.length == amounts.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6433:6514  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10284:10286   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6433:6514  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10266:10287   */\n      mstore\n        /* \"#utility.yul\":10323:10325   */\n      0x28\n        /* \"#utility.yul\":10303:10321   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10296:10326   */\n      mstore\n        /* \"#utility.yul\":10362:10396   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":10342:10360   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10335:10397   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":10413:10431   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10406:10444   */\n      mstore\n        /* \"#utility.yul\":10461:10480   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6433:6514  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":10082:10486   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6433:6514  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6532:6548  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6524:6590  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_123\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6601:6617  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6714:7125  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6738:6741  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6738:6748  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6734:6735  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6734:6748  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6714:7125  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6769:6779  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6782:6785  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6786:6787  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6782:6788  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_131\n      tag_94\n      jump\t// in\n    tag_131:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6769:6788  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6802:6816  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6819:6826  amounts */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6827:6828  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6819:6829  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_133\n      tag_94\n      jump\t// in\n    tag_133:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6844:6863  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6866:6879  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6866:6885  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6819:6829  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6907:6928  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6899:6975  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_136\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7026  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7030  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7036  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7039:7059  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7059  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7104  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7114  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7039:7059  fromBalance - amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7017:7026  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7114  _balances[id][to] += amount */\n      tag_137\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7039:7059  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7114  _balances[id][to] += amount */\n      tag_138\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6755:7125  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6750:6753  ++i */\n      dup1\n      tag_139\n      swap1\n      tag_100\n      jump\t// in\n    tag_139:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6714:7125  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_127)\n    tag_128:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7170:7172  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7140:7187  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7164:7168  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7140:7187  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7154:7162  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7140:7187  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7174:7177  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7179:7186  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7140:7187  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7268:7343  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7304:7312  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7314:7318  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7320:7322  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7324:7327  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7329:7336  amounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7338:7342  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7268:7303  _doSafeBatchTransferAcceptanceCheck */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7268:7343  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6423:7350  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6235:7350  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12912:13235  function _setApprovalForAll(... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13062:13070  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13053:13070  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13053:13058  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13053:13070  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13045:13116  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12113:12115   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13045:13116  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12095:12116   */\n      mstore\n        /* \"#utility.yul\":12152:12154   */\n      0x29\n        /* \"#utility.yul\":12132:12150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12125:12155   */\n      mstore\n        /* \"#utility.yul\":12191:12225   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12171:12189   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12164:12226   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12242:12260   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12235:12274   */\n      mstore\n        /* \"#utility.yul\":12291:12310   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13045:13116  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":11911:12316   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13045:13116  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13151  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13144  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13151  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13161  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13126:13172  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13187:13228  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13187:13228  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13187:13228  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12912:13235  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4942:5889  function _safeTransferFrom(... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5123:5139  to != address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5115:5181  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_123\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5192:5208  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5256:5277  _asSingletonArray(id) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5274:5276  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5256:5273  _asSingletonArray */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5256:5277  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5233:5277  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5287:5311  uint256[] memory amounts */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5314:5339  _asSingletonArray(amount) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5332:5338  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5314:5331  _asSingletonArray */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5314:5339  _asSingletonArray(amount) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5287:5339  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5421:5440  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5443:5456  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5443:5462  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5480:5501  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5472:5548  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_136\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5591  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5595  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5601  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5604:5624  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5624  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5661  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5671  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5604:5624  fromBalance - amount */\n      dup9\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5582:5591  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5671  _balances[id][to] += amount */\n      tag_161\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5604:5624  fromBalance - amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5644:5671  _balances[id][to] += amount */\n      tag_138\n      jump\t// in\n    tag_161:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5687:5733  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12495:12520   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":12551:12553   */\n      0x20\n        /* \"#utility.yul\":12536:12554   */\n      dup2\n      add\n        /* \"#utility.yul\":12529:12563   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5687:5733  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12468:12486   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5687:5733  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5814:5882  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5845:5853  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5855:5859  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5861:5863  to */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5865:5867  id */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5869:5875  amount */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5877:5881  data */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5814:5844  _doSafeTransferAcceptanceCheck */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5814:5882  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5105:5889  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4942:5889  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16268:17060  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16500:16513  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16496:17054  if (to.isContract()) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16535:16614  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16535:16578  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16535:16614  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_173\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16579:16587  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16589:16593  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16595:16598  ids */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16600:16607  amounts */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16609:16613  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16535:16614  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_173:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_175\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_176\n      swap2\n      dup2\n      add\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      0x01\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16531:17044  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_178\n      jumpi\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n      dup1\n      0x08c379a0\n      sub\n      tag_181\n      jumpi\n      pop\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n      dup1\n      tag_186\n      jumpi\n      pop\n      jump(tag_180)\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16920:16926  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16913:16927  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16531:17044  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_181:\n      pop\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16967:17029  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14722:14724   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16967:17029  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14704:14725   */\n      mstore\n        /* \"#utility.yul\":14761:14763   */\n      0x34\n        /* \"#utility.yul\":14741:14759   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14734:14764   */\n      mstore\n        /* \"#utility.yul\":14800:14834   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":14780:14798   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14773:14835   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":14851:14869   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14844:14894   */\n      mstore\n        /* \"#utility.yul\":14911:14930   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16967:17029  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":14520:14936   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16531:17044  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_178:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16693:16753  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16689:16846  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16777:16827  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_193\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16689:16846  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16615:16860  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16268:17060  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17066:17259  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17185:17201  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17199:17200  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17185:17201  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17132:17148  uint256[] memory */\n      0x60\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17160:17182  uint256[] memory array */\n      0x00\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17185:17201  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17160:17201  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17222:17229  element */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17211:17216  array */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17217:17218  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17211:17219  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_199\n      tag_94\n      jump\t// in\n    tag_199:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17211:17229  array[0] = element */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17247:17252  array */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":17066:17259  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15537:16262  function _doSafeTransferAcceptanceCheck(... */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15744:15757  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15740:16256  if (to.isContract()) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15779:15851  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15779:15817  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15779:15851  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_203\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15818:15826  operator */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15828:15832  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15834:15836  id */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15838:15844  amount */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15846:15850  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15779:15851  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_204\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_205\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_206\n      swap2\n      dup2\n      add\n      swap1\n      tag_177\n      jump\t// in\n    tag_206:\n      0x01\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15775:16246  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_207\n      jumpi\n      tag_182\n      tag_183\n      jump\t// in\n    tag_207:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15900:15955  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15896:16048  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15979:16029  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_193\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_220:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_231:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_14:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_233:\n        /* \"#utility.yul\":360:389   */\n      tag_234\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_220\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_221:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_237:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_20:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_239:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_240\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_221\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_26:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_243:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1868   */\n    tag_222:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_245:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_245)\n    tag_247:\n        /* \"#utility.yul\":1718:1724   */\n      dup2\n        /* \"#utility.yul\":1715:1716   */\n      dup2\n        /* \"#utility.yul\":1712:1725   */\n      gt\n        /* \"#utility.yul\":1709:1796   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":1784:1785   */\n      0x00\n        /* \"#utility.yul\":1777:1781   */\n      0x20\n        /* \"#utility.yul\":1768:1774   */\n      dup4\n        /* \"#utility.yul\":1763:1766   */\n      dup8\n        /* \"#utility.yul\":1759:1775   */\n      add\n        /* \"#utility.yul\":1755:1782   */\n      add\n        /* \"#utility.yul\":1748:1786   */\n      mstore\n        /* \"#utility.yul\":1709:1796   */\n    tag_248:\n      pop\n        /* \"#utility.yul\":1850:1852   */\n      0x1f\n        /* \"#utility.yul\":1829:1844   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1825:1854   */\n      and\n        /* \"#utility.yul\":1816:1855   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1857:1861   */\n      0x20\n        /* \"#utility.yul\":1812:1862   */\n      add\n      swap3\n        /* \"#utility.yul\":1396:1868   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1873:2093   */\n    tag_29:\n        /* \"#utility.yul\":2022:2024   */\n      0x20\n        /* \"#utility.yul\":2011:2020   */\n      dup2\n        /* \"#utility.yul\":2004:2025   */\n      mstore\n        /* \"#utility.yul\":1985:1989   */\n      0x00\n        /* \"#utility.yul\":2042:2087   */\n      tag_240\n        /* \"#utility.yul\":2083:2085   */\n      0x20\n        /* \"#utility.yul\":2072:2081   */\n      dup4\n        /* \"#utility.yul\":2068:2086   */\n      add\n        /* \"#utility.yul\":2060:2066   */\n      dup5\n        /* \"#utility.yul\":2042:2087   */\n      tag_222\n      jump\t// in\n        /* \"#utility.yul\":2098:2225   */\n    tag_86:\n        /* \"#utility.yul\":2159:2169   */\n      0x4e487b71\n        /* \"#utility.yul\":2154:2157   */\n      0xe0\n        /* \"#utility.yul\":2150:2170   */\n      shl\n        /* \"#utility.yul\":2147:2148   */\n      0x00\n        /* \"#utility.yul\":2140:2171   */\n      mstore\n        /* \"#utility.yul\":2190:2194   */\n      0x41\n        /* \"#utility.yul\":2187:2188   */\n      0x04\n        /* \"#utility.yul\":2180:2195   */\n      mstore\n        /* \"#utility.yul\":2214:2218   */\n      0x24\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2204:2219   */\n      revert\n        /* \"#utility.yul\":2230:2479   */\n    tag_223:\n        /* \"#utility.yul\":2340:2342   */\n      0x1f\n        /* \"#utility.yul\":2321:2334   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2317:2344   */\n      and\n        /* \"#utility.yul\":2305:2345   */\n      dup2\n      add\n        /* \"#utility.yul\":2375:2393   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2360:2394   */\n      dup2\n      gt\n        /* \"#utility.yul\":2396:2418   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2357:2419   */\n      or\n        /* \"#utility.yul\":2354:2442   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":2422:2440   */\n      tag_254\n      tag_86\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2458:2460   */\n      0x40\n        /* \"#utility.yul\":2451:2473   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2230:2479   */\n      jump\t// out\n        /* \"#utility.yul\":2484:2667   */\n    tag_224:\n        /* \"#utility.yul\":2544:2548   */\n      0x00\n        /* \"#utility.yul\":2577:2595   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2566:2596   */\n      gt\n        /* \"#utility.yul\":2563:2619   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":2599:2617   */\n      tag_257\n      tag_86\n      jump\t// in\n    tag_257:\n      pop\n        /* \"#utility.yul\":2644:2645   */\n      0x05\n        /* \"#utility.yul\":2640:2654   */\n      shl\n        /* \"#utility.yul\":2656:2660   */\n      0x20\n        /* \"#utility.yul\":2636:2661   */\n      add\n      swap1\n        /* \"#utility.yul\":2484:2667   */\n      jump\t// out\n        /* \"#utility.yul\":2672:3396   */\n    tag_225:\n        /* \"#utility.yul\":2726:2731   */\n      0x00\n        /* \"#utility.yul\":2779:2782   */\n      dup3\n        /* \"#utility.yul\":2772:2776   */\n      0x1f\n        /* \"#utility.yul\":2764:2770   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2756:2783   */\n      slt\n        /* \"#utility.yul\":2746:2801   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":2797:2798   */\n      0x00\n        /* \"#utility.yul\":2794:2795   */\n      dup1\n        /* \"#utility.yul\":2787:2799   */\n      revert\n        /* \"#utility.yul\":2746:2801   */\n    tag_259:\n        /* \"#utility.yul\":2833:2839   */\n      dup2\n        /* \"#utility.yul\":2820:2840   */\n      calldataload\n        /* \"#utility.yul\":2859:2863   */\n      0x20\n        /* \"#utility.yul\":2882:2925   */\n      tag_260\n        /* \"#utility.yul\":2922:2924   */\n      dup3\n        /* \"#utility.yul\":2882:2925   */\n      tag_224\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2954:2956   */\n      0x40\n        /* \"#utility.yul\":2948:2957   */\n      mload\n        /* \"#utility.yul\":2966:2997   */\n      tag_261\n        /* \"#utility.yul\":2994:2996   */\n      dup3\n        /* \"#utility.yul\":2986:2992   */\n      dup3\n        /* \"#utility.yul\":2966:2997   */\n      tag_223\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3032:3050   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3124:3125   */\n      0x05\n        /* \"#utility.yul\":3120:3130   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3108:3131   */\n      dup6\n      add\n        /* \"#utility.yul\":3104:3136   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3066:3081   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3148:3163   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3145:3180   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3176:3177   */\n      0x00\n        /* \"#utility.yul\":3173:3174   */\n      dup1\n        /* \"#utility.yul\":3166:3178   */\n      revert\n        /* \"#utility.yul\":3145:3180   */\n    tag_262:\n        /* \"#utility.yul\":3212:3214   */\n      dup3\n        /* \"#utility.yul\":3204:3210   */\n      dup7\n        /* \"#utility.yul\":3200:3215   */\n      add\n        /* \"#utility.yul\":3224:3366   */\n    tag_263:\n        /* \"#utility.yul\":3240:3246   */\n      dup5\n        /* \"#utility.yul\":3235:3238   */\n      dup2\n        /* \"#utility.yul\":3232:3247   */\n      lt\n        /* \"#utility.yul\":3224:3366   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":3306:3323   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3294:3324   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3344:3356   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3257:3269   */\n      dup4\n      add\n        /* \"#utility.yul\":3224:3366   */\n      jump(tag_263)\n    tag_265:\n      pop\n        /* \"#utility.yul\":3384:3390   */\n      swap7\n        /* \"#utility.yul\":2672:3396   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3401:3956   */\n    tag_226:\n        /* \"#utility.yul\":3443:3448   */\n      0x00\n        /* \"#utility.yul\":3496:3499   */\n      dup3\n        /* \"#utility.yul\":3489:3493   */\n      0x1f\n        /* \"#utility.yul\":3481:3487   */\n      dup4\n        /* \"#utility.yul\":3477:3494   */\n      add\n        /* \"#utility.yul\":3473:3500   */\n      slt\n        /* \"#utility.yul\":3463:3518   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":3514:3515   */\n      0x00\n        /* \"#utility.yul\":3511:3512   */\n      dup1\n        /* \"#utility.yul\":3504:3516   */\n      revert\n        /* \"#utility.yul\":3463:3518   */\n    tag_267:\n        /* \"#utility.yul\":3550:3556   */\n      dup2\n        /* \"#utility.yul\":3537:3557   */\n      calldataload\n        /* \"#utility.yul\":3576:3594   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3572:3574   */\n      dup2\n        /* \"#utility.yul\":3569:3595   */\n      gt\n        /* \"#utility.yul\":3566:3618   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":3598:3616   */\n      tag_269\n      tag_86\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3647:3649   */\n      0x40\n        /* \"#utility.yul\":3641:3650   */\n      mload\n        /* \"#utility.yul\":3659:3726   */\n      tag_270\n        /* \"#utility.yul\":3714:3716   */\n      0x1f\n        /* \"#utility.yul\":3695:3708   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3691:3718   */\n      and\n        /* \"#utility.yul\":3720:3724   */\n      0x20\n        /* \"#utility.yul\":3687:3725   */\n      add\n        /* \"#utility.yul\":3641:3650   */\n      dup3\n        /* \"#utility.yul\":3659:3726   */\n      tag_223\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3750:3752   */\n      dup2\n        /* \"#utility.yul\":3742:3748   */\n      dup2\n        /* \"#utility.yul\":3735:3753   */\n      mstore\n        /* \"#utility.yul\":3796:3799   */\n      dup5\n        /* \"#utility.yul\":3789:3793   */\n      0x20\n        /* \"#utility.yul\":3784:3786   */\n      dup4\n        /* \"#utility.yul\":3776:3782   */\n      dup7\n        /* \"#utility.yul\":3772:3787   */\n      add\n        /* \"#utility.yul\":3768:3794   */\n      add\n        /* \"#utility.yul\":3765:3800   */\n      gt\n        /* \"#utility.yul\":3762:3817   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3762:3817   */\n    tag_271:\n        /* \"#utility.yul\":3877:3879   */\n      dup2\n        /* \"#utility.yul\":3870:3874   */\n      0x20\n        /* \"#utility.yul\":3862:3868   */\n      dup6\n        /* \"#utility.yul\":3858:3875   */\n      add\n        /* \"#utility.yul\":3851:3855   */\n      0x20\n        /* \"#utility.yul\":3843:3849   */\n      dup4\n        /* \"#utility.yul\":3839:3856   */\n      add\n        /* \"#utility.yul\":3826:3880   */\n      calldatacopy\n        /* \"#utility.yul\":3924:3925   */\n      0x00\n        /* \"#utility.yul\":3900:3915   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3917:3921   */\n      0x20\n        /* \"#utility.yul\":3896:3922   */\n      add\n        /* \"#utility.yul\":3889:3926   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3904:3910   */\n      swap4\n        /* \"#utility.yul\":3401:3956   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4904   */\n    tag_32:\n        /* \"#utility.yul\":4115:4121   */\n      0x00\n        /* \"#utility.yul\":4123:4129   */\n      dup1\n        /* \"#utility.yul\":4131:4137   */\n      0x00\n        /* \"#utility.yul\":4139:4145   */\n      dup1\n        /* \"#utility.yul\":4147:4153   */\n      0x00\n        /* \"#utility.yul\":4200:4203   */\n      0xa0\n        /* \"#utility.yul\":4188:4197   */\n      dup7\n        /* \"#utility.yul\":4179:4186   */\n      dup9\n        /* \"#utility.yul\":4175:4198   */\n      sub\n        /* \"#utility.yul\":4171:4204   */\n      slt\n        /* \"#utility.yul\":4168:4221   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4217:4218   */\n      0x00\n        /* \"#utility.yul\":4214:4215   */\n      dup1\n        /* \"#utility.yul\":4207:4219   */\n      revert\n        /* \"#utility.yul\":4168:4221   */\n    tag_273:\n        /* \"#utility.yul\":4240:4269   */\n      tag_274\n        /* \"#utility.yul\":4259:4268   */\n      dup7\n        /* \"#utility.yul\":4240:4269   */\n      tag_220\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4230:4269   */\n      swap5\n      pop\n        /* \"#utility.yul\":4288:4326   */\n      tag_275\n        /* \"#utility.yul\":4322:4324   */\n      0x20\n        /* \"#utility.yul\":4311:4320   */\n      dup8\n        /* \"#utility.yul\":4307:4325   */\n      add\n        /* \"#utility.yul\":4288:4326   */\n      tag_220\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4278:4326   */\n      swap4\n      pop\n        /* \"#utility.yul\":4377:4379   */\n      0x40\n        /* \"#utility.yul\":4366:4375   */\n      dup7\n        /* \"#utility.yul\":4362:4380   */\n      add\n        /* \"#utility.yul\":4349:4381   */\n      calldataload\n        /* \"#utility.yul\":4400:4418   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4441:4443   */\n      dup1\n        /* \"#utility.yul\":4433:4439   */\n      dup3\n        /* \"#utility.yul\":4430:4444   */\n      gt\n        /* \"#utility.yul\":4427:4461   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":4457:4458   */\n      0x00\n        /* \"#utility.yul\":4454:4455   */\n      dup1\n        /* \"#utility.yul\":4447:4459   */\n      revert\n        /* \"#utility.yul\":4427:4461   */\n    tag_276:\n        /* \"#utility.yul\":4480:4541   */\n      tag_277\n        /* \"#utility.yul\":4533:4540   */\n      dup10\n        /* \"#utility.yul\":4524:4530   */\n      dup4\n        /* \"#utility.yul\":4513:4522   */\n      dup11\n        /* \"#utility.yul\":4509:4531   */\n      add\n        /* \"#utility.yul\":4480:4541   */\n      tag_225\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4470:4541   */\n      swap5\n      pop\n        /* \"#utility.yul\":4594:4596   */\n      0x60\n        /* \"#utility.yul\":4583:4592   */\n      dup9\n        /* \"#utility.yul\":4579:4597   */\n      add\n        /* \"#utility.yul\":4566:4598   */\n      calldataload\n        /* \"#utility.yul\":4550:4598   */\n      swap2\n      pop\n        /* \"#utility.yul\":4623:4625   */\n      dup1\n        /* \"#utility.yul\":4613:4621   */\n      dup3\n        /* \"#utility.yul\":4610:4626   */\n      gt\n        /* \"#utility.yul\":4607:4643   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":4639:4640   */\n      0x00\n        /* \"#utility.yul\":4636:4637   */\n      dup1\n        /* \"#utility.yul\":4629:4641   */\n      revert\n        /* \"#utility.yul\":4607:4643   */\n    tag_278:\n        /* \"#utility.yul\":4662:4725   */\n      tag_279\n        /* \"#utility.yul\":4717:4724   */\n      dup10\n        /* \"#utility.yul\":4706:4714   */\n      dup4\n        /* \"#utility.yul\":4695:4704   */\n      dup11\n        /* \"#utility.yul\":4691:4715   */\n      add\n        /* \"#utility.yul\":4662:4725   */\n      tag_225\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4652:4725   */\n      swap4\n      pop\n        /* \"#utility.yul\":4778:4781   */\n      0x80\n        /* \"#utility.yul\":4767:4776   */\n      dup9\n        /* \"#utility.yul\":4763:4782   */\n      add\n        /* \"#utility.yul\":4750:4783   */\n      calldataload\n        /* \"#utility.yul\":4734:4783   */\n      swap2\n      pop\n        /* \"#utility.yul\":4808:4810   */\n      dup1\n        /* \"#utility.yul\":4798:4806   */\n      dup3\n        /* \"#utility.yul\":4795:4811   */\n      gt\n        /* \"#utility.yul\":4792:4828   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":4824:4825   */\n      0x00\n        /* \"#utility.yul\":4821:4822   */\n      dup1\n        /* \"#utility.yul\":4814:4826   */\n      revert\n        /* \"#utility.yul\":4792:4828   */\n    tag_280:\n      pop\n        /* \"#utility.yul\":4847:4898   */\n      tag_281\n        /* \"#utility.yul\":4890:4897   */\n      dup9\n        /* \"#utility.yul\":4879:4887   */\n      dup3\n        /* \"#utility.yul\":4868:4877   */\n      dup10\n        /* \"#utility.yul\":4864:4888   */\n      add\n        /* \"#utility.yul\":4847:4898   */\n      tag_226\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4837:4898   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3961:4904   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4909:6117   */\n    tag_36:\n        /* \"#utility.yul\":5027:5033   */\n      0x00\n        /* \"#utility.yul\":5035:5041   */\n      dup1\n        /* \"#utility.yul\":5088:5090   */\n      0x40\n        /* \"#utility.yul\":5076:5085   */\n      dup4\n        /* \"#utility.yul\":5067:5074   */\n      dup6\n        /* \"#utility.yul\":5063:5086   */\n      sub\n        /* \"#utility.yul\":5059:5091   */\n      slt\n        /* \"#utility.yul\":5056:5108   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":5104:5105   */\n      0x00\n        /* \"#utility.yul\":5101:5102   */\n      dup1\n        /* \"#utility.yul\":5094:5106   */\n      revert\n        /* \"#utility.yul\":5056:5108   */\n    tag_283:\n        /* \"#utility.yul\":5144:5153   */\n      dup3\n        /* \"#utility.yul\":5131:5154   */\n      calldataload\n        /* \"#utility.yul\":5173:5191   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5214:5216   */\n      dup1\n        /* \"#utility.yul\":5206:5212   */\n      dup3\n        /* \"#utility.yul\":5203:5217   */\n      gt\n        /* \"#utility.yul\":5200:5234   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5227:5228   */\n      dup1\n        /* \"#utility.yul\":5220:5232   */\n      revert\n        /* \"#utility.yul\":5200:5234   */\n    tag_284:\n        /* \"#utility.yul\":5268:5274   */\n      dup2\n        /* \"#utility.yul\":5257:5266   */\n      dup6\n        /* \"#utility.yul\":5253:5275   */\n      add\n        /* \"#utility.yul\":5243:5275   */\n      swap2\n      pop\n        /* \"#utility.yul\":5313:5320   */\n      dup6\n        /* \"#utility.yul\":5306:5310   */\n      0x1f\n        /* \"#utility.yul\":5302:5304   */\n      dup4\n        /* \"#utility.yul\":5298:5311   */\n      add\n        /* \"#utility.yul\":5294:5321   */\n      slt\n        /* \"#utility.yul\":5284:5339   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5335:5336   */\n      0x00\n        /* \"#utility.yul\":5332:5333   */\n      dup1\n        /* \"#utility.yul\":5325:5337   */\n      revert\n        /* \"#utility.yul\":5284:5339   */\n    tag_285:\n        /* \"#utility.yul\":5371:5373   */\n      dup2\n        /* \"#utility.yul\":5358:5374   */\n      calldataload\n        /* \"#utility.yul\":5393:5397   */\n      0x20\n        /* \"#utility.yul\":5416:5459   */\n      tag_286\n        /* \"#utility.yul\":5456:5458   */\n      dup3\n        /* \"#utility.yul\":5416:5459   */\n      tag_224\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5488:5490   */\n      0x40\n        /* \"#utility.yul\":5482:5491   */\n      mload\n        /* \"#utility.yul\":5500:5531   */\n      tag_287\n        /* \"#utility.yul\":5528:5530   */\n      dup3\n        /* \"#utility.yul\":5520:5526   */\n      dup3\n        /* \"#utility.yul\":5500:5531   */\n      tag_223\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5566:5584   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5654:5655   */\n      0x05\n        /* \"#utility.yul\":5650:5660   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5642:5661   */\n      dup6\n      add\n        /* \"#utility.yul\":5638:5666   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5600:5615   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5678:5697   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5675:5714   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":5710:5711   */\n      0x00\n        /* \"#utility.yul\":5707:5708   */\n      dup1\n        /* \"#utility.yul\":5700:5712   */\n      revert\n        /* \"#utility.yul\":5675:5714   */\n    tag_288:\n        /* \"#utility.yul\":5734:5745   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5754:5902   */\n    tag_289:\n        /* \"#utility.yul\":5770:5776   */\n      dup4\n        /* \"#utility.yul\":5765:5768   */\n      dup7\n        /* \"#utility.yul\":5762:5777   */\n      lt\n        /* \"#utility.yul\":5754:5902   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":5836:5859   */\n      tag_292\n        /* \"#utility.yul\":5855:5858   */\n      dup7\n        /* \"#utility.yul\":5836:5859   */\n      tag_220\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5824:5860   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5787:5799   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5880:5892   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5754:5902   */\n      jump(tag_289)\n    tag_291:\n        /* \"#utility.yul\":5921:5927   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5965:5983   */\n      dup7\n      add\n        /* \"#utility.yul\":5952:5984   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5996:6012   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5993:6029   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":6025:6026   */\n      0x00\n        /* \"#utility.yul\":6022:6023   */\n      dup1\n        /* \"#utility.yul\":6015:6027   */\n      revert\n        /* \"#utility.yul\":5993:6029   */\n    tag_293:\n      pop\n        /* \"#utility.yul\":6048:6111   */\n      tag_294\n        /* \"#utility.yul\":6103:6110   */\n      dup6\n        /* \"#utility.yul\":6092:6100   */\n      dup3\n        /* \"#utility.yul\":6081:6090   */\n      dup7\n        /* \"#utility.yul\":6077:6101   */\n      add\n        /* \"#utility.yul\":6048:6111   */\n      tag_225\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":6038:6111   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4909:6117   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6557   */\n    tag_227:\n        /* \"#utility.yul\":6175:6178   */\n      0x00\n        /* \"#utility.yul\":6213:6218   */\n      dup2\n        /* \"#utility.yul\":6207:6219   */\n      mload\n        /* \"#utility.yul\":6240:6246   */\n      dup1\n        /* \"#utility.yul\":6235:6238   */\n      dup5\n        /* \"#utility.yul\":6228:6247   */\n      mstore\n        /* \"#utility.yul\":6266:6270   */\n      0x20\n        /* \"#utility.yul\":6295:6297   */\n      dup1\n        /* \"#utility.yul\":6290:6293   */\n      dup6\n        /* \"#utility.yul\":6286:6298   */\n      add\n        /* \"#utility.yul\":6279:6298   */\n      swap5\n      pop\n        /* \"#utility.yul\":6332:6334   */\n      dup1\n        /* \"#utility.yul\":6325:6330   */\n      dup5\n        /* \"#utility.yul\":6321:6335   */\n      add\n        /* \"#utility.yul\":6353:6354   */\n      0x00\n        /* \"#utility.yul\":6363:6532   */\n    tag_296:\n        /* \"#utility.yul\":6377:6383   */\n      dup4\n        /* \"#utility.yul\":6374:6375   */\n      dup2\n        /* \"#utility.yul\":6371:6384   */\n      lt\n        /* \"#utility.yul\":6363:6532   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":6438:6451   */\n      dup2\n      mload\n        /* \"#utility.yul\":6426:6452   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6472:6484   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6507:6522   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6399:6400   */\n      0x01\n        /* \"#utility.yul\":6392:6401   */\n      add\n        /* \"#utility.yul\":6363:6532   */\n      jump(tag_296)\n    tag_298:\n      pop\n        /* \"#utility.yul\":6548:6551   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6122:6557   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6562:6823   */\n    tag_39:\n        /* \"#utility.yul\":6741:6743   */\n      0x20\n        /* \"#utility.yul\":6730:6739   */\n      dup2\n        /* \"#utility.yul\":6723:6744   */\n      mstore\n        /* \"#utility.yul\":6704:6708   */\n      0x00\n        /* \"#utility.yul\":6761:6817   */\n      tag_240\n        /* \"#utility.yul\":6813:6815   */\n      0x20\n        /* \"#utility.yul\":6802:6811   */\n      dup4\n        /* \"#utility.yul\":6798:6816   */\n      add\n        /* \"#utility.yul\":6790:6796   */\n      dup5\n        /* \"#utility.yul\":6761:6817   */\n      tag_227\n      jump\t// in\n        /* \"#utility.yul\":6828:7175   */\n    tag_42:\n        /* \"#utility.yul\":6893:6899   */\n      0x00\n        /* \"#utility.yul\":6901:6907   */\n      dup1\n        /* \"#utility.yul\":6954:6956   */\n      0x40\n        /* \"#utility.yul\":6942:6951   */\n      dup4\n        /* \"#utility.yul\":6933:6940   */\n      dup6\n        /* \"#utility.yul\":6929:6952   */\n      sub\n        /* \"#utility.yul\":6925:6957   */\n      slt\n        /* \"#utility.yul\":6922:6974   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":6970:6971   */\n      0x00\n        /* \"#utility.yul\":6967:6968   */\n      dup1\n        /* \"#utility.yul\":6960:6972   */\n      revert\n        /* \"#utility.yul\":6922:6974   */\n    tag_302:\n        /* \"#utility.yul\":6993:7022   */\n      tag_303\n        /* \"#utility.yul\":7012:7021   */\n      dup4\n        /* \"#utility.yul\":6993:7022   */\n      tag_220\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6983:7022   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7074   */\n      0x20\n        /* \"#utility.yul\":7061:7070   */\n      dup4\n        /* \"#utility.yul\":7057:7075   */\n      add\n        /* \"#utility.yul\":7044:7076   */\n      calldataload\n        /* \"#utility.yul\":7119:7124   */\n      dup1\n        /* \"#utility.yul\":7112:7125   */\n      iszero\n        /* \"#utility.yul\":7105:7126   */\n      iszero\n        /* \"#utility.yul\":7098:7103   */\n      dup2\n        /* \"#utility.yul\":7095:7127   */\n      eq\n        /* \"#utility.yul\":7085:7145   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":7141:7142   */\n      0x00\n        /* \"#utility.yul\":7138:7139   */\n      dup1\n        /* \"#utility.yul\":7131:7143   */\n      revert\n        /* \"#utility.yul\":7085:7145   */\n    tag_304:\n        /* \"#utility.yul\":7164:7169   */\n      dup1\n        /* \"#utility.yul\":7154:7169   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6828:7175   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7180:7440   */\n    tag_46:\n        /* \"#utility.yul\":7248:7254   */\n      0x00\n        /* \"#utility.yul\":7256:7262   */\n      dup1\n        /* \"#utility.yul\":7309:7311   */\n      0x40\n        /* \"#utility.yul\":7297:7306   */\n      dup4\n        /* \"#utility.yul\":7288:7295   */\n      dup6\n        /* \"#utility.yul\":7284:7307   */\n      sub\n        /* \"#utility.yul\":7280:7312   */\n      slt\n        /* \"#utility.yul\":7277:7329   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":7325:7326   */\n      0x00\n        /* \"#utility.yul\":7322:7323   */\n      dup1\n        /* \"#utility.yul\":7315:7327   */\n      revert\n        /* \"#utility.yul\":7277:7329   */\n    tag_306:\n        /* \"#utility.yul\":7348:7377   */\n      tag_307\n        /* \"#utility.yul\":7367:7376   */\n      dup4\n        /* \"#utility.yul\":7348:7377   */\n      tag_220\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7338:7377   */\n      swap2\n      pop\n        /* \"#utility.yul\":7396:7434   */\n      tag_308\n        /* \"#utility.yul\":7430:7432   */\n      0x20\n        /* \"#utility.yul\":7419:7428   */\n      dup5\n        /* \"#utility.yul\":7415:7433   */\n      add\n        /* \"#utility.yul\":7396:7434   */\n      tag_220\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7386:7434   */\n      swap1\n      pop\n        /* \"#utility.yul\":7180:7440   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7445:8051   */\n    tag_51:\n        /* \"#utility.yul\":7549:7555   */\n      0x00\n        /* \"#utility.yul\":7557:7563   */\n      dup1\n        /* \"#utility.yul\":7565:7571   */\n      0x00\n        /* \"#utility.yul\":7573:7579   */\n      dup1\n        /* \"#utility.yul\":7581:7587   */\n      0x00\n        /* \"#utility.yul\":7634:7637   */\n      0xa0\n        /* \"#utility.yul\":7622:7631   */\n      dup7\n        /* \"#utility.yul\":7613:7620   */\n      dup9\n        /* \"#utility.yul\":7609:7632   */\n      sub\n        /* \"#utility.yul\":7605:7638   */\n      slt\n        /* \"#utility.yul\":7602:7655   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":7651:7652   */\n      0x00\n        /* \"#utility.yul\":7648:7649   */\n      dup1\n        /* \"#utility.yul\":7641:7653   */\n      revert\n        /* \"#utility.yul\":7602:7655   */\n    tag_310:\n        /* \"#utility.yul\":7674:7703   */\n      tag_311\n        /* \"#utility.yul\":7693:7702   */\n      dup7\n        /* \"#utility.yul\":7674:7703   */\n      tag_220\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":7664:7703   */\n      swap5\n      pop\n        /* \"#utility.yul\":7722:7760   */\n      tag_312\n        /* \"#utility.yul\":7756:7758   */\n      0x20\n        /* \"#utility.yul\":7745:7754   */\n      dup8\n        /* \"#utility.yul\":7741:7759   */\n      add\n        /* \"#utility.yul\":7722:7760   */\n      tag_220\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7712:7760   */\n      swap4\n      pop\n        /* \"#utility.yul\":7807:7809   */\n      0x40\n        /* \"#utility.yul\":7796:7805   */\n      dup7\n        /* \"#utility.yul\":7792:7810   */\n      add\n        /* \"#utility.yul\":7779:7811   */\n      calldataload\n        /* \"#utility.yul\":7769:7811   */\n      swap3\n      pop\n        /* \"#utility.yul\":7858:7860   */\n      0x60\n        /* \"#utility.yul\":7847:7856   */\n      dup7\n        /* \"#utility.yul\":7843:7861   */\n      add\n        /* \"#utility.yul\":7830:7862   */\n      calldataload\n        /* \"#utility.yul\":7820:7862   */\n      swap2\n      pop\n        /* \"#utility.yul\":7913:7916   */\n      0x80\n        /* \"#utility.yul\":7902:7911   */\n      dup7\n        /* \"#utility.yul\":7898:7917   */\n      add\n        /* \"#utility.yul\":7885:7918   */\n      calldataload\n        /* \"#utility.yul\":7941:7959   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7933:7939   */\n      dup2\n        /* \"#utility.yul\":7930:7960   */\n      gt\n        /* \"#utility.yul\":7927:7977   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":7973:7974   */\n      0x00\n        /* \"#utility.yul\":7970:7971   */\n      dup1\n        /* \"#utility.yul\":7963:7975   */\n      revert\n        /* \"#utility.yul\":7927:7977   */\n    tag_313:\n        /* \"#utility.yul\":7996:8045   */\n      tag_281\n        /* \"#utility.yul\":8037:8044   */\n      dup9\n        /* \"#utility.yul\":8028:8034   */\n      dup3\n        /* \"#utility.yul\":8017:8026   */\n      dup10\n        /* \"#utility.yul\":8013:8035   */\n      add\n        /* \"#utility.yul\":7996:8045   */\n      tag_226\n      jump\t// in\n        /* \"#utility.yul\":8467:8847   */\n    tag_64:\n        /* \"#utility.yul\":8546:8547   */\n      0x01\n        /* \"#utility.yul\":8542:8554   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8589:8601   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8610:8671   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":8664:8668   */\n      0x7f\n        /* \"#utility.yul\":8656:8662   */\n      dup3\n        /* \"#utility.yul\":8652:8669   */\n      and\n        /* \"#utility.yul\":8642:8669   */\n      swap2\n      pop\n        /* \"#utility.yul\":8610:8671   */\n    tag_317:\n        /* \"#utility.yul\":8717:8719   */\n      0x20\n        /* \"#utility.yul\":8709:8715   */\n      dup3\n        /* \"#utility.yul\":8706:8720   */\n      lt\n        /* \"#utility.yul\":8686:8704   */\n      dup2\n        /* \"#utility.yul\":8683:8721   */\n      sub\n        /* \"#utility.yul\":8680:8841   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":8763:8773   */\n      0x4e487b71\n        /* \"#utility.yul\":8758:8761   */\n      0xe0\n        /* \"#utility.yul\":8754:8774   */\n      shl\n        /* \"#utility.yul\":8751:8752   */\n      0x00\n        /* \"#utility.yul\":8744:8775   */\n      mstore\n        /* \"#utility.yul\":8798:8802   */\n      0x22\n        /* \"#utility.yul\":8795:8796   */\n      0x04\n        /* \"#utility.yul\":8788:8803   */\n      mstore\n        /* \"#utility.yul\":8826:8830   */\n      0x24\n        /* \"#utility.yul\":8823:8824   */\n      0x00\n        /* \"#utility.yul\":8816:8831   */\n      revert\n        /* \"#utility.yul\":8680:8841   */\n    tag_318:\n      pop\n        /* \"#utility.yul\":8467:8847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8852:9263   */\n    tag_77:\n        /* \"#utility.yul\":9054:9056   */\n      0x20\n        /* \"#utility.yul\":9036:9057   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9093:9095   */\n      0x2f\n        /* \"#utility.yul\":9073:9091   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9066:9096   */\n      mstore\n        /* \"#utility.yul\":9132:9166   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":9127:9129   */\n      0x40\n        /* \"#utility.yul\":9112:9130   */\n      dup3\n      add\n        /* \"#utility.yul\":9105:9167   */\n      mstore\n      shl(0x8a, 0x195c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9198:9200   */\n      0x60\n        /* \"#utility.yul\":9183:9201   */\n      dup3\n      add\n        /* \"#utility.yul\":9176:9221   */\n      mstore\n        /* \"#utility.yul\":9253:9256   */\n      0x80\n        /* \"#utility.yul\":9238:9257   */\n      add\n      swap1\n        /* \"#utility.yul\":8852:9263   */\n      jump\t// out\n        /* \"#utility.yul\":9678:9805   */\n    tag_94:\n        /* \"#utility.yul\":9739:9749   */\n      0x4e487b71\n        /* \"#utility.yul\":9734:9737   */\n      0xe0\n        /* \"#utility.yul\":9730:9750   */\n      shl\n        /* \"#utility.yul\":9727:9728   */\n      0x00\n        /* \"#utility.yul\":9720:9751   */\n      mstore\n        /* \"#utility.yul\":9770:9774   */\n      0x32\n        /* \"#utility.yul\":9767:9768   */\n      0x04\n        /* \"#utility.yul\":9760:9775   */\n      mstore\n        /* \"#utility.yul\":9794:9798   */\n      0x24\n        /* \"#utility.yul\":9791:9792   */\n      0x00\n        /* \"#utility.yul\":9784:9799   */\n      revert\n        /* \"#utility.yul\":9810:9937   */\n    tag_228:\n        /* \"#utility.yul\":9871:9881   */\n      0x4e487b71\n        /* \"#utility.yul\":9866:9869   */\n      0xe0\n        /* \"#utility.yul\":9862:9882   */\n      shl\n        /* \"#utility.yul\":9859:9860   */\n      0x00\n        /* \"#utility.yul\":9852:9883   */\n      mstore\n        /* \"#utility.yul\":9902:9906   */\n      0x11\n        /* \"#utility.yul\":9899:9900   */\n      0x04\n        /* \"#utility.yul\":9892:9907   */\n      mstore\n        /* \"#utility.yul\":9926:9930   */\n      0x24\n        /* \"#utility.yul\":9923:9924   */\n      0x00\n        /* \"#utility.yul\":9916:9931   */\n      revert\n        /* \"#utility.yul\":9942:10077   */\n    tag_100:\n        /* \"#utility.yul\":9981:9984   */\n      0x00\n        /* \"#utility.yul\":10002:10019   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":9999:10042   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":10022:10040   */\n      tag_325\n      tag_228\n      jump\t// in\n    tag_325:\n      pop\n        /* \"#utility.yul\":10069:10070   */\n      0x01\n        /* \"#utility.yul\":10058:10071   */\n      add\n      swap1\n        /* \"#utility.yul\":9942:10077   */\n      jump\t// out\n        /* \"#utility.yul\":10491:10892   */\n    tag_123:\n        /* \"#utility.yul\":10693:10695   */\n      0x20\n        /* \"#utility.yul\":10675:10696   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10732:10734   */\n      0x25\n        /* \"#utility.yul\":10712:10730   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10705:10735   */\n      mstore\n        /* \"#utility.yul\":10771:10805   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":10766:10768   */\n      0x40\n        /* \"#utility.yul\":10751:10769   */\n      dup3\n      add\n        /* \"#utility.yul\":10744:10806   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":10837:10839   */\n      0x60\n        /* \"#utility.yul\":10822:10840   */\n      dup3\n      add\n        /* \"#utility.yul\":10815:10850   */\n      mstore\n        /* \"#utility.yul\":10882:10885   */\n      0x80\n        /* \"#utility.yul\":10867:10886   */\n      add\n      swap1\n        /* \"#utility.yul\":10491:10892   */\n      jump\t// out\n        /* \"#utility.yul\":10897:11303   */\n    tag_136:\n        /* \"#utility.yul\":11099:11101   */\n      0x20\n        /* \"#utility.yul\":11081:11102   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11138:11140   */\n      0x2a\n        /* \"#utility.yul\":11118:11136   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11111:11141   */\n      mstore\n        /* \"#utility.yul\":11177:11211   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":11172:11174   */\n      0x40\n        /* \"#utility.yul\":11157:11175   */\n      dup3\n      add\n        /* \"#utility.yul\":11150:11212   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":11243:11245   */\n      0x60\n        /* \"#utility.yul\":11228:11246   */\n      dup3\n      add\n        /* \"#utility.yul\":11221:11261   */\n      mstore\n        /* \"#utility.yul\":11293:11296   */\n      0x80\n        /* \"#utility.yul\":11278:11297   */\n      add\n      swap1\n        /* \"#utility.yul\":10897:11303   */\n      jump\t// out\n        /* \"#utility.yul\":11308:11436   */\n    tag_138:\n        /* \"#utility.yul\":11348:11351   */\n      0x00\n        /* \"#utility.yul\":11379:11380   */\n      dup3\n        /* \"#utility.yul\":11375:11381   */\n      not\n        /* \"#utility.yul\":11372:11373   */\n      dup3\n        /* \"#utility.yul\":11369:11382   */\n      gt\n        /* \"#utility.yul\":11366:11405   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":11385:11403   */\n      tag_331\n      tag_228\n      jump\t// in\n    tag_331:\n      pop\n        /* \"#utility.yul\":11421:11430   */\n      add\n      swap1\n        /* \"#utility.yul\":11308:11436   */\n      jump\t// out\n        /* \"#utility.yul\":11441:11906   */\n    tag_141:\n        /* \"#utility.yul\":11698:11700   */\n      0x40\n        /* \"#utility.yul\":11687:11696   */\n      dup2\n        /* \"#utility.yul\":11680:11701   */\n      mstore\n        /* \"#utility.yul\":11661:11665   */\n      0x00\n        /* \"#utility.yul\":11724:11780   */\n      tag_333\n        /* \"#utility.yul\":11776:11778   */\n      0x40\n        /* \"#utility.yul\":11765:11774   */\n      dup4\n        /* \"#utility.yul\":11761:11779   */\n      add\n        /* \"#utility.yul\":11753:11759   */\n      dup6\n        /* \"#utility.yul\":11724:11780   */\n      tag_227\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":11828:11837   */\n      dup3\n        /* \"#utility.yul\":11820:11826   */\n      dup2\n        /* \"#utility.yul\":11816:11838   */\n      sub\n        /* \"#utility.yul\":11811:11813   */\n      0x20\n        /* \"#utility.yul\":11800:11809   */\n      dup5\n        /* \"#utility.yul\":11796:11814   */\n      add\n        /* \"#utility.yul\":11789:11839   */\n      mstore\n        /* \"#utility.yul\":11856:11900   */\n      tag_334\n        /* \"#utility.yul\":11893:11899   */\n      dup2\n        /* \"#utility.yul\":11885:11891   */\n      dup6\n        /* \"#utility.yul\":11856:11900   */\n      tag_227\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":11848:11900   */\n      swap6\n        /* \"#utility.yul\":11441:11906   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12574:13401   */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12971:12986   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":12953:12987   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13023:13038   */\n      dup6\n      and\n        /* \"#utility.yul\":13018:13020   */\n      0x20\n        /* \"#utility.yul\":13003:13021   */\n      dup3\n      add\n        /* \"#utility.yul\":12996:13039   */\n      mstore\n        /* \"#utility.yul\":12933:12936   */\n      0xa0\n        /* \"#utility.yul\":13070:13072   */\n      0x40\n        /* \"#utility.yul\":13055:13073   */\n      dup3\n      add\n        /* \"#utility.yul\":13048:13079   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12896:12900   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13102:13159   */\n      tag_338\n      swap1\n        /* \"#utility.yul\":13139:13158   */\n      dup4\n      add\n        /* \"#utility.yul\":13131:13137   */\n      dup7\n        /* \"#utility.yul\":13102:13159   */\n      tag_227\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":13207:13216   */\n      dup3\n        /* \"#utility.yul\":13199:13205   */\n      dup2\n        /* \"#utility.yul\":13195:13217   */\n      sub\n        /* \"#utility.yul\":13190:13192   */\n      0x60\n        /* \"#utility.yul\":13179:13188   */\n      dup5\n        /* \"#utility.yul\":13175:13193   */\n      add\n        /* \"#utility.yul\":13168:13218   */\n      mstore\n        /* \"#utility.yul\":13241:13285   */\n      tag_339\n        /* \"#utility.yul\":13278:13284   */\n      dup2\n        /* \"#utility.yul\":13270:13276   */\n      dup7\n        /* \"#utility.yul\":13241:13285   */\n      tag_227\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":13227:13285   */\n      swap1\n      pop\n        /* \"#utility.yul\":13334:13343   */\n      dup3\n        /* \"#utility.yul\":13326:13332   */\n      dup2\n        /* \"#utility.yul\":13322:13344   */\n      sub\n        /* \"#utility.yul\":13316:13319   */\n      0x80\n        /* \"#utility.yul\":13305:13314   */\n      dup5\n        /* \"#utility.yul\":13301:13320   */\n      add\n        /* \"#utility.yul\":13294:13345   */\n      mstore\n        /* \"#utility.yul\":13362:13395   */\n      tag_340\n        /* \"#utility.yul\":13388:13394   */\n      dup2\n        /* \"#utility.yul\":13380:13386   */\n      dup6\n        /* \"#utility.yul\":13362:13395   */\n      tag_222\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":13354:13395   */\n      swap9\n        /* \"#utility.yul\":12574:13401   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13406:13655   */\n    tag_177:\n        /* \"#utility.yul\":13475:13481   */\n      0x00\n        /* \"#utility.yul\":13528:13530   */\n      0x20\n        /* \"#utility.yul\":13516:13525   */\n      dup3\n        /* \"#utility.yul\":13507:13514   */\n      dup5\n        /* \"#utility.yul\":13503:13526   */\n      sub\n        /* \"#utility.yul\":13499:13531   */\n      slt\n        /* \"#utility.yul\":13496:13548   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":13544:13545   */\n      0x00\n        /* \"#utility.yul\":13541:13542   */\n      dup1\n        /* \"#utility.yul\":13534:13546   */\n      revert\n        /* \"#utility.yul\":13496:13548   */\n    tag_342:\n        /* \"#utility.yul\":13576:13585   */\n      dup2\n        /* \"#utility.yul\":13570:13586   */\n      mload\n        /* \"#utility.yul\":13595:13625   */\n      tag_240\n        /* \"#utility.yul\":13619:13624   */\n      dup2\n        /* \"#utility.yul\":13595:13625   */\n      tag_221\n      jump\t// in\n        /* \"#utility.yul\":13660:13839   */\n    tag_183:\n        /* \"#utility.yul\":13695:13698   */\n      0x00\n        /* \"#utility.yul\":13737:13738   */\n      0x03\n        /* \"#utility.yul\":13719:13735   */\n      returndatasize\n        /* \"#utility.yul\":13716:13739   */\n      gt\n        /* \"#utility.yul\":13713:13833   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":13783:13784   */\n      0x04\n        /* \"#utility.yul\":13780:13781   */\n      0x00\n        /* \"#utility.yul\":13777:13778   */\n      dup1\n        /* \"#utility.yul\":13762:13785   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":13820:13821   */\n      0x00\n        /* \"#utility.yul\":13814:13822   */\n      mload\n        /* \"#utility.yul\":13809:13812   */\n      0xe0\n        /* \"#utility.yul\":13805:13823   */\n      shr\n        /* \"#utility.yul\":13713:13833   */\n    tag_345:\n        /* \"#utility.yul\":13660:13839   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":13844:14515   */\n    tag_185:\n        /* \"#utility.yul\":13883:13886   */\n      0x00\n        /* \"#utility.yul\":13925:13929   */\n      0x44\n        /* \"#utility.yul\":13907:13923   */\n      returndatasize\n        /* \"#utility.yul\":13904:13930   */\n      lt\n        /* \"#utility.yul\":13901:13940   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":13844:14515   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":13901:13940   */\n    tag_347:\n        /* \"#utility.yul\":13967:13969   */\n      0x40\n        /* \"#utility.yul\":13961:13970   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":14032:14048   */\n      returndatasize\n        /* \"#utility.yul\":14028:14053   */\n      dup2\n      add\n        /* \"#utility.yul\":14025:14026   */\n      0x04\n        /* \"#utility.yul\":13961:13970   */\n      dup4\n        /* \"#utility.yul\":14004:14054   */\n      returndatacopy\n        /* \"#utility.yul\":14083:14087   */\n      dup2\n        /* \"#utility.yul\":14077:14088   */\n      mload\n        /* \"#utility.yul\":14107:14123   */\n      returndatasize\n        /* \"#utility.yul\":14142:14160   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14213:14215   */\n      dup2\n        /* \"#utility.yul\":14206:14210   */\n      0x24\n        /* \"#utility.yul\":14198:14204   */\n      dup5\n        /* \"#utility.yul\":14194:14211   */\n      add\n        /* \"#utility.yul\":14191:14216   */\n      gt\n        /* \"#utility.yul\":14186:14188   */\n      dup2\n        /* \"#utility.yul\":14178:14184   */\n      dup5\n        /* \"#utility.yul\":14175:14189   */\n      gt\n        /* \"#utility.yul\":14172:14217   */\n      or\n        /* \"#utility.yul\":14169:14227   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":14220:14225   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13844:14515   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14169:14227   */\n    tag_348:\n        /* \"#utility.yul\":14257:14263   */\n      dup3\n        /* \"#utility.yul\":14251:14255   */\n      dup6\n        /* \"#utility.yul\":14247:14264   */\n      add\n        /* \"#utility.yul\":14236:14264   */\n      swap2\n      pop\n        /* \"#utility.yul\":14293:14296   */\n      dup2\n        /* \"#utility.yul\":14287:14297   */\n      mload\n        /* \"#utility.yul\":14320:14322   */\n      dup2\n        /* \"#utility.yul\":14312:14318   */\n      dup2\n        /* \"#utility.yul\":14309:14323   */\n      gt\n        /* \"#utility.yul\":14306:14333   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":14326:14331   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13844:14515   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14306:14333   */\n    tag_349:\n        /* \"#utility.yul\":14410:14412   */\n      dup5\n        /* \"#utility.yul\":14391:14407   */\n      returndatasize\n        /* \"#utility.yul\":14385:14389   */\n      dup8\n        /* \"#utility.yul\":14381:14408   */\n      add\n        /* \"#utility.yul\":14377:14413   */\n      add\n        /* \"#utility.yul\":14370:14374   */\n      0x20\n        /* \"#utility.yul\":14361:14367   */\n      dup3\n        /* \"#utility.yul\":14356:14359   */\n      dup6\n        /* \"#utility.yul\":14352:14368   */\n      add\n        /* \"#utility.yul\":14348:14375   */\n      add\n        /* \"#utility.yul\":14345:14414   */\n      gt\n        /* \"#utility.yul\":14342:14424   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":14417:14422   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13844:14515   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14342:14424   */\n    tag_350:\n        /* \"#utility.yul\":14433:14490   */\n      tag_351\n        /* \"#utility.yul\":14484:14488   */\n      0x20\n        /* \"#utility.yul\":14475:14481   */\n      dup3\n        /* \"#utility.yul\":14467:14473   */\n      dup7\n        /* \"#utility.yul\":14463:14482   */\n      add\n        /* \"#utility.yul\":14459:14489   */\n      add\n        /* \"#utility.yul\":14453:14457   */\n      dup8\n        /* \"#utility.yul\":14433:14490   */\n      tag_223\n      jump\t// in\n    tag_351:\n      pop\n        /* \"#utility.yul\":14506:14509   */\n      swap1\n      swap6\n        /* \"#utility.yul\":13844:14515   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14941:15345   */\n    tag_193:\n        /* \"#utility.yul\":15143:15145   */\n      0x20\n        /* \"#utility.yul\":15125:15146   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15182:15184   */\n      0x28\n        /* \"#utility.yul\":15162:15180   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15155:15185   */\n      mstore\n        /* \"#utility.yul\":15221:15255   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":15216:15218   */\n      0x40\n        /* \"#utility.yul\":15201:15219   */\n      dup3\n      add\n        /* \"#utility.yul\":15194:15256   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":15287:15289   */\n      0x60\n        /* \"#utility.yul\":15272:15290   */\n      dup3\n      add\n        /* \"#utility.yul\":15265:15303   */\n      mstore\n        /* \"#utility.yul\":15335:15338   */\n      0x80\n        /* \"#utility.yul\":15320:15339   */\n      add\n      swap1\n        /* \"#utility.yul\":14941:15345   */\n      jump\t// out\n        /* \"#utility.yul\":15350:15911   */\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15647:15662   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":15629:15663   */\n      dup3\n      mstore\n        /* \"#utility.yul\":15699:15714   */\n      dup6\n      and\n        /* \"#utility.yul\":15694:15696   */\n      0x20\n        /* \"#utility.yul\":15679:15697   */\n      dup3\n      add\n        /* \"#utility.yul\":15672:15715   */\n      mstore\n        /* \"#utility.yul\":15746:15748   */\n      0x40\n        /* \"#utility.yul\":15731:15749   */\n      dup2\n      add\n        /* \"#utility.yul\":15724:15758   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":15789:15791   */\n      0x60\n        /* \"#utility.yul\":15774:15792   */\n      dup2\n      add\n        /* \"#utility.yul\":15767:15801   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":15609:15612   */\n      0xa0\n        /* \"#utility.yul\":15832:15835   */\n      0x80\n        /* \"#utility.yul\":15817:15836   */\n      dup3\n      add\n        /* \"#utility.yul\":15810:15842   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15572:15576   */\n      0x00\n      swap1\n        /* \"#utility.yul\":15859:15905   */\n      tag_355\n      swap1\n        /* \"#utility.yul\":15885:15904   */\n      dup4\n      add\n        /* \"#utility.yul\":15877:15883   */\n      dup5\n        /* \"#utility.yul\":15859:15905   */\n      tag_222\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":15851:15905   */\n      swap8\n        /* \"#utility.yul\":15350:15911   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b3c892a77671faacb55c9d0fb43021c61ff68ef5cdc488a4039027a3478b739764736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_191": {
									"entryPoint": null,
									"id": 191,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_702": {
									"entryPoint": 70,
									"id": 702,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 88,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3824:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:996:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "247:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "257:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "251:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "300:2:10"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:10"
															},
															"nodeType": "YulIf",
															"src": "268:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "329:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "343:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "333:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:18:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "372:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "423:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "425:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "425:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "425:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "411:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "408:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:14:10"
															},
															"nodeType": "YulIf",
															"src": "405:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:22:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "528:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "530:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "507:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "511:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "503:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:35:10"
															},
															"nodeType": "YulIf",
															"src": "489:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "553:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "569:2:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "557:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "587:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:10:10"
															},
															"nodeType": "YulIf",
															"src": "581:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:7:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "630:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "656:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "730:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "734:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "726:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "726:13:10"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "741:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:31:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "688:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "816:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "790:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:46:10"
															},
															"nodeType": "YulIf",
															"src": "764:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "856:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "891:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "917:2:10"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "921:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:11:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:20:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "931:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "906:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:33:10"
															},
															"nodeType": "YulIf",
															"src": "903:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "974:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "969:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1030:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1059:6:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1067:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1055:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1055:14:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1071:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1051:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:23:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1090:2:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1094:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1086:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1086:10:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1098:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1076:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1076:26:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1002:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1004:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1013:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1016:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1009:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1004:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "988:3:10",
																"statements": []
															},
															"src": "984:129:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1143:59:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1172:6:10"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1180:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1168:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1168:15:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1185:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1164:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:24:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:35:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:35:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1128:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1131:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1125:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1125:9:10"
															},
															"nodeType": "YulIf",
															"src": "1122:80:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1211:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1221:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:10",
														"type": ""
													}
												],
												"src": "146:1087:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1293:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1303:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1317:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1320:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1313:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1334:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1364:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1370:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1360:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1338:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1411:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1413:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1427:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1435:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1423:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1423:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1413:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1391:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1384:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:26:10"
															},
															"nodeType": "YulIf",
															"src": "1381:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1501:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1522:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1529:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1534:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1525:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1525:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1515:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1515:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1515:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1569:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1559:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1559:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1559:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1597:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1587:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1587:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1587:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1457:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1480:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1488:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1477:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1454:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:38:10"
															},
															"nodeType": "YulIf",
															"src": "1451:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1273:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1282:6:10",
														"type": ""
													}
												],
												"src": "1238:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1679:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1699:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1689:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1689:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1689:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1712:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1730:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1733:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1712:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1662:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1670:4:10",
														"type": ""
													}
												],
												"src": "1623:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1830:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1863:425:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1877:11:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1887:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1881:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1908:2:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1912:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1901:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1901:17:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1901:17:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1931:31:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1953:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1957:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "1943:9:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1943:19:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "1935:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1975:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1998:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2008:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2015:10:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2027:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2011:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2011:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2004:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2004:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1994:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1994:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "1979:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2069:23:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2071:19:10",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2086:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2071:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2051:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2063:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2048:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2048:20:10"
																		},
																		"nodeType": "YulIf",
																		"src": "2045:47:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2105:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2119:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2129:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2136:3:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2141:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2132:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2132:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2125:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2125:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2115:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2115:31:10"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2109:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2159:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2172:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2163:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2257:21:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2266:5:10"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2273:2:10"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2259:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2259:17:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2259:17:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2207:5:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2214:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2204:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2204:13:10"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2218:26:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2220:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2233:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2240:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2229:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2229:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2220:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2200:3:10",
																			"statements": []
																		},
																		"src": "2196:82:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1846:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1843:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:11:10"
															},
															"nodeType": "YulIf",
															"src": "1840:448:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1802:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1809:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "1814:10:10",
														"type": ""
													}
												],
												"src": "1749:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2384:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2394:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2409:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2427:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2430:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2423:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2423:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2440:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2436:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2436:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2419:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2419:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2415:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2415:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2405:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2405:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2451:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2454:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2447:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2402:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2394:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2361:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2367:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2375:4:10",
														"type": ""
													}
												],
												"src": "2299:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2566:1256:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2576:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2596:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2590:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2590:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2580:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2643:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2645:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2645:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2645:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2615:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2631:2:10",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2635:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2627:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2627:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2639:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2623:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2623:18:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2612:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:30:10"
															},
															"nodeType": "YulIf",
															"src": "2609:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2718:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2756:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2750:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2750:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "2724:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2724:38:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2764:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2674:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2674:97:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2674:97:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2780:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2797:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "2784:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2807:23:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2826:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "2811:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2839:24:10",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "2852:11:10"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "2839:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2909:656:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2923:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2942:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2954:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2950:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2950:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2938:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2938:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "2927:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2971:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3015:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "2985:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2985:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "2975:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3033:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3042:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3037:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3120:172:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3145:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3163:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3168:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3159:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3159:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3153:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3153:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3138:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3138:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3138:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3197:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3211:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3219:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3207:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3197:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3238:40:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3255:9:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3266:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3251:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3251:27:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3238:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3067:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3070:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3064:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3064:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3079:28:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3081:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3090:1:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3093:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3086:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3086:19:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3081:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3060:3:10",
																					"statements": []
																				},
																				"src": "3056:236:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3340:166:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3358:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3385:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3390:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3381:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3381:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3375:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3375:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3362:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3425:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3437:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3464:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3467:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3460:3:10"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3460:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3476:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3456:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3456:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3486:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3482:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3482:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3452:3:10"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3452:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3448:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3448:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3433:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3433:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3418:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3418:74:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3418:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3311:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3320:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3308:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3308:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "3305:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3526:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3540:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3543:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3536:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3536:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3552:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3532:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3532:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3519:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3519:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3519:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2902:663:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2907:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3582:234:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3596:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3609:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3600:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3645:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3663:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3682:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3687:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3678:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3678:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3672:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3672:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3663:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3626:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "3623:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3732:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3791:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "3798:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "3738:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3738:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3725:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3725:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3725:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3574:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2882:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2890:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2879:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2879:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "2872:944:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2551:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2557:3:10",
														"type": ""
													}
												],
												"src": "2470:1352:10"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200163e3803806200163e83398101604081905262000034916200006e565b6200003f8162000046565b50620002a5565b6002620000548282620001d9565b5050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200008257600080fd5b82516001600160401b03808211156200009a57600080fd5b818501915085601f830112620000af57600080fd5b815181811115620000c457620000c462000058565b604051601f8201601f19908116603f01168101908382118183101715620000ef57620000ef62000058565b8160405282815288868487010111156200010857600080fd5b600093505b828410156200012c57848401860151818501870152928501926200010d565b828411156200013e5760008684830101525b98975050505050505050565b600181811c908216806200015f57607f821691505b6020821081036200018057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001d457600081815260208120601f850160051c81016020861015620001af5750805b601f850160051c820191505b81811015620001d057828155600101620001bb565b5050505b505050565b81516001600160401b03811115620001f557620001f562000058565b6200020d816200020684546200014a565b8462000186565b602080601f8311600181146200024557600084156200022c5750858301515b600019600386901b1c1916600185901b178555620001d0565b600085815260208120601f198616915b82811015620002765788860151825594840194600190910190840162000255565b5085821015620002955787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61138980620002b56000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610b3f565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610b82565b610222565b60405190151581526020016100a9565b6100e86100e3366004610ba6565b610274565b6040516100a99190610c0c565b610108610103366004610d6b565b610308565b005b61011d610118366004610e15565b610354565b6040516100a99190610f1b565b610108610138366004610f2e565b61047e565b6100c561014b366004610f6a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610f9d565b61048d565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025357506001600160e01b031982166303a24d0760e21b145b8061026e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028390611002565b80601f01602080910402602001604051908101604052809291908181526020018280546102af90611002565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103245750610324853361014b565b6103405760405162461bcd60e51b81526004016101f39061103c565b61034d85858585856104d2565b5050505050565b606081518351146103b95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff8111156103d5576103d5610c1f565b6040519080825280602002602001820160405280156103fe578160200160208202803683370190505b50905060005b8451811015610476576104498582815181106104225761042261108b565b602002602001015185838151811061043c5761043c61108b565b602002602001015161018c565b82828151811061045b5761045b61108b565b602090810291909101015261046f816110b7565b9050610404565b509392505050565b6104893383836106af565b5050565b6001600160a01b0385163314806104a957506104a9853361014b565b6104c55760405162461bcd60e51b81526004016101f39061103c565b61034d858585858561078f565b81518351146105345760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b03841661055a5760405162461bcd60e51b81526004016101f3906110d0565b3360005b845181101561064157600085828151811061057b5761057b61108b565b6020026020010151905060008583815181106105995761059961108b565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156105e95760405162461bcd60e51b81526004016101f390611115565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061062690849061115f565b925050819055505050508061063a906110b7565b905061055e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610691929190611177565b60405180910390a46106a78187878787876108b9565b505050505050565b816001600160a01b0316836001600160a01b0316036107225760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166107b55760405162461bcd60e51b81526004016101f3906110d0565b3360006107c185610a1d565b905060006107ce85610a1d565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156108115760405162461bcd60e51b81526004016101f390611115565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061084e90849061115f565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46108ae848a8a8a8a8a610a68565b505050505050505050565b6001600160a01b0384163b156106a75760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906108fd90899089908890889088906004016111a5565b6020604051808303816000875af1925050508015610938575060408051601f3d908101601f1916820190925261093591810190611203565b60015b6109e457610944611220565b806308c379a00361097d575061095861123c565b80610963575061097f565b8060405162461bcd60e51b81526004016101f39190610c0c565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610a145760405162461bcd60e51b81526004016101f3906112c6565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a5757610a5761108b565b602090810291909101015292915050565b6001600160a01b0384163b156106a75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610aac908990899088908890889060040161130e565b6020604051808303816000875af1925050508015610ae7575060408051601f3d908101601f19168201909252610ae491810190611203565b60015b610af357610944611220565b6001600160e01b0319811663f23a6e6160e01b14610a145760405162461bcd60e51b81526004016101f3906112c6565b80356001600160a01b0381168114610b3a57600080fd5b919050565b60008060408385031215610b5257600080fd5b610b5b83610b23565b946020939093013593505050565b6001600160e01b031981168114610b7f57600080fd5b50565b600060208284031215610b9457600080fd5b8135610b9f81610b69565b9392505050565b600060208284031215610bb857600080fd5b5035919050565b6000815180845260005b81811015610be557602081850181015186830182015201610bc9565b81811115610bf7576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610b9f6020830184610bbf565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610c5b57610c5b610c1f565b6040525050565b600067ffffffffffffffff821115610c7c57610c7c610c1f565b5060051b60200190565b600082601f830112610c9757600080fd5b81356020610ca482610c62565b604051610cb18282610c35565b83815260059390931b8501820192828101915086841115610cd157600080fd5b8286015b84811015610cec5780358352918301918301610cd5565b509695505050505050565b600082601f830112610d0857600080fd5b813567ffffffffffffffff811115610d2257610d22610c1f565b604051610d39601f8301601f191660200182610c35565b818152846020838601011115610d4e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610d8357600080fd5b610d8c86610b23565b9450610d9a60208701610b23565b9350604086013567ffffffffffffffff80821115610db757600080fd5b610dc389838a01610c86565b94506060880135915080821115610dd957600080fd5b610de589838a01610c86565b93506080880135915080821115610dfb57600080fd5b50610e0888828901610cf7565b9150509295509295909350565b60008060408385031215610e2857600080fd5b823567ffffffffffffffff80821115610e4057600080fd5b818501915085601f830112610e5457600080fd5b81356020610e6182610c62565b604051610e6e8282610c35565b83815260059390931b8501820192828101915089841115610e8e57600080fd5b948201945b83861015610eb357610ea486610b23565b82529482019490820190610e93565b96505086013592505080821115610ec957600080fd5b50610ed685828601610c86565b9150509250929050565b600081518084526020808501945080840160005b83811015610f1057815187529582019590820190600101610ef4565b509495945050505050565b602081526000610b9f6020830184610ee0565b60008060408385031215610f4157600080fd5b610f4a83610b23565b915060208301358015158114610f5f57600080fd5b809150509250929050565b60008060408385031215610f7d57600080fd5b610f8683610b23565b9150610f9460208401610b23565b90509250929050565b600080600080600060a08688031215610fb557600080fd5b610fbe86610b23565b9450610fcc60208701610b23565b93506040860135925060608601359150608086013567ffffffffffffffff811115610ff657600080fd5b610e0888828901610cf7565b600181811c9082168061101657607f821691505b60208210810361103657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110c9576110c96110a1565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60008219821115611172576111726110a1565b500190565b60408152600061118a6040830185610ee0565b828103602084015261119c8185610ee0565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111d190830186610ee0565b82810360608401526111e38186610ee0565b905082810360808401526111f78185610bbf565b98975050505050505050565b60006020828403121561121557600080fd5b8151610b9f81610b69565b600060033d11156112395760046000803e5060005160e01c5b90565b600060443d101561124a5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561127a57505050505090565b82850191508151818111156112925750505050505090565b843d87010160208285010111156112ac5750505050505090565b6112bb60208286010187610c35565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061134890830184610bbf565b97965050505050505056fea2646970667358221220b3c892a77671faacb55c9d0fb43021c61ff68ef5cdc488a4039027a3478b739764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x163E CODESIZE SUB DUP1 PUSH3 0x163E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x6E JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x2A5 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x54 DUP3 DUP3 PUSH3 0x1D9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0xC4 JUMPI PUSH3 0xC4 PUSH3 0x58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xEF JUMPI PUSH3 0xEF PUSH3 0x58 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x12C JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x10D JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x13E JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x15F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x180 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1D4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1AF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1D0 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1BB JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1F5 JUMPI PUSH3 0x1F5 PUSH3 0x58 JUMP JUMPDEST PUSH3 0x20D DUP2 PUSH3 0x206 DUP5 SLOAD PUSH3 0x14A JUMP JUMPDEST DUP5 PUSH3 0x186 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x245 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x22C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1D0 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x276 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x255 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x295 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1389 DUP1 PUSH3 0x2B5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6B JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2E JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x253 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x283 SWAP1 PUSH2 0x1002 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AF SWAP1 PUSH2 0x1002 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x324 JUMPI POP PUSH2 0x324 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x34D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4D2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x3D5 PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3FE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x476 JUMPI PUSH2 0x449 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x422 JUMPI PUSH2 0x422 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x43C JUMPI PUSH2 0x43C PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45B JUMPI PUSH2 0x45B PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x46F DUP2 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x404 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x489 CALLER DUP4 DUP4 PUSH2 0x6AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4A9 JUMPI POP PUSH2 0x4A9 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x34D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x78F JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x641 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57B JUMPI PUSH2 0x57B PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x599 JUMPI PUSH2 0x599 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x626 SWAP1 DUP5 SWAP1 PUSH2 0x115F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x63A SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x55E JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x691 SWAP3 SWAP2 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x6A7 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8B9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x722 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x7C1 DUP6 PUSH2 0xA1D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7CE DUP6 PUSH2 0xA1D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x84E SWAP1 DUP5 SWAP1 PUSH2 0x115F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8AE DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA68 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x8FD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x938 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x935 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9E4 JUMPI PUSH2 0x944 PUSH2 0x1220 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x97D JUMPI POP PUSH2 0x958 PUSH2 0x123C JUMP JUMPDEST DUP1 PUSH2 0x963 JUMPI POP PUSH2 0x97F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xC0C JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA57 JUMPI PUSH2 0xA57 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAAC SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x130E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAE7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAE4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAF3 JUMPI PUSH2 0x944 PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5B DUP4 PUSH2 0xB23 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB9F DUP2 PUSH2 0xB69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBC9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBF7 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBBF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC5B JUMPI PUSH2 0xC5B PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC7C JUMPI PUSH2 0xC7C PUSH2 0xC1F JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xCA4 DUP3 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB1 DUP3 DUP3 PUSH2 0xC35 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xCD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCEC JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCD5 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD22 JUMPI PUSH2 0xD22 PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD39 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xC35 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8C DUP7 PUSH2 0xB23 JUMP JUMPDEST SWAP5 POP PUSH2 0xD9A PUSH1 0x20 DUP8 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC3 DUP10 DUP4 DUP11 ADD PUSH2 0xC86 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE5 DUP10 DUP4 DUP11 ADD PUSH2 0xC86 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE08 DUP9 DUP3 DUP10 ADD PUSH2 0xCF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE61 DUP3 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6E DUP3 DUP3 PUSH2 0xC35 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xEA4 DUP7 PUSH2 0xB23 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE93 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xEC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED6 DUP6 DUP3 DUP7 ADD PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF10 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEF4 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4A DUP4 PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF86 DUP4 PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP PUSH2 0xF94 PUSH1 0x20 DUP5 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFBE DUP7 PUSH2 0xB23 JUMP JUMPDEST SWAP5 POP PUSH2 0xFCC PUSH1 0x20 DUP8 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE08 DUP9 DUP3 DUP10 ADD PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1016 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1036 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x195C881B9BDC88185C1C1C9BDD9959 PUSH1 0x8A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10C9 JUMPI PUSH2 0x10C9 PUSH2 0x10A1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x1172 PUSH2 0x10A1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x118A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEE0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x119C DUP2 DUP6 PUSH2 0xEE0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11D1 SWAP1 DUP4 ADD DUP7 PUSH2 0xEE0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x11E3 DUP2 DUP7 PUSH2 0xEE0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x11F7 DUP2 DUP6 PUSH2 0xBBF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB9F DUP2 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1239 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x124A JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x127A JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1292 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12AC JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12BB PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC35 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1348 SWAP1 DUP4 ADD DUP5 PUSH2 0xBBF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xC8 SWAP3 0xA7 PUSH23 0x71FAACB55C9D0FB43021C61FF68EF5CDC488A4039027A3 SELFBALANCE DUP12 PUSH20 0x9764736F6C634300080F00330000000000000000 ",
							"sourceMap": "570:16691:2:-:0;;;1107:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1149:13;1157:4;1149:7;:13::i;:::-;1107:62;570:16691;;8173:86;8239:4;:13;8246:6;8239:4;:13;:::i;:::-;;8173:86;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1087;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:10;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:10;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1131:2;1128:1;1125:9;1122:80;;;1190:1;1185:2;1180;1172:6;1168:15;1164:24;1157:35;1122:80;1221:6;146:1087;-1:-1:-1;;;;;;;;146:1087:10:o;1238:380::-;1317:1;1313:12;;;;1360;;;1381:61;;1435:4;1427:6;1423:17;1413:27;;1381:61;1488:2;1480:6;1477:14;1457:18;1454:38;1451:161;;1534:10;1529:3;1525:20;1522:1;1515:31;1569:4;1566:1;1559:15;1597:4;1594:1;1587:15;1451:161;;1238:380;;;:::o;1749:545::-;1851:2;1846:3;1843:11;1840:448;;;1887:1;1912:5;1908:2;1901:17;1957:4;1953:2;1943:19;2027:2;2015:10;2011:19;2008:1;2004:27;1998:4;1994:38;2063:4;2051:10;2048:20;2045:47;;;-1:-1:-1;2086:4:10;2045:47;2141:2;2136:3;2132:12;2129:1;2125:20;2119:4;2115:31;2105:41;;2196:82;2214:2;2207:5;2204:13;2196:82;;;2259:17;;;2240:1;2229:13;2196:82;;;2200:3;;;1840:448;1749:545;;;:::o;2470:1352::-;2590:10;;-1:-1:-1;;;;;2612:30:10;;2609:56;;;2645:18;;:::i;:::-;2674:97;2764:6;2724:38;2756:4;2750:11;2724:38;:::i;:::-;2718:4;2674:97;:::i;:::-;2826:4;;2890:2;2879:14;;2907:1;2902:663;;;;3609:1;3626:6;3623:89;;;-1:-1:-1;3678:19:10;;;3672:26;3623:89;-1:-1:-1;;2427:1:10;2423:11;;;2419:24;2415:29;2405:40;2451:1;2447:11;;;2402:57;3725:81;;2872:944;;2902:663;1696:1;1689:14;;;1733:4;1720:18;;-1:-1:-1;;2938:20:10;;;3056:236;3070:7;3067:1;3064:14;3056:236;;;3159:19;;;3153:26;3138:42;;3251:27;;;;3219:1;3207:14;;;;3086:19;;3056:236;;;3060:3;3320:6;3311:7;3308:19;3305:201;;;3381:19;;;3375:26;-1:-1:-1;;3464:1:10;3460:14;;;3476:3;3456:24;3452:37;3448:42;3433:58;3418:74;;3305:201;-1:-1:-1;;;;;3552:1:10;3536:14;;;3532:22;3519:36;;-1:-1:-1;2470:1352:10:o;:::-;570:16691:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1212": {
									"entryPoint": null,
									"id": 1212,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1368": {
									"entryPoint": 2589,
									"id": 1368,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1193": {
									"entryPoint": null,
									"id": 1193,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1340": {
									"entryPoint": 2233,
									"id": 1340,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1275": {
									"entryPoint": 2664,
									"id": 1275,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_1854": {
									"entryPoint": null,
									"id": 1854,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_691": {
									"entryPoint": 1234,
									"id": 691,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_556": {
									"entryPoint": 1935,
									"id": 556,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1174": {
									"entryPoint": 1711,
									"id": 1174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_326": {
									"entryPoint": 852,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_262": {
									"entryPoint": 396,
									"id": 262,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_361": {
									"entryPoint": null,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1565": {
									"entryPoint": null,
									"id": 1565,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_439": {
									"entryPoint": 776,
									"id": 439,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_399": {
									"entryPoint": 1165,
									"id": 399,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_343": {
									"entryPoint": 1150,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1887": {
									"entryPoint": null,
									"id": 1887,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_222": {
									"entryPoint": 546,
									"id": 222,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_234": {
									"entryPoint": 628,
									"id": 234,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4517,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4878,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4471,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4235,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4668,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 2921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15913:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:10"
															},
															"nodeType": "YulIf",
															"src": "289:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:10",
														"type": ""
													}
												],
												"src": "192:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:10",
														"type": ""
													}
												],
												"src": "451:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:10"
															},
															"nodeType": "YulIf",
															"src": "687:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:10",
														"type": ""
													}
												],
												"src": "633:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:10"
															},
															"nodeType": "YulIf",
															"src": "848:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:10",
														"type": ""
													}
												],
												"src": "769:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:10",
														"type": ""
													}
												],
												"src": "1019:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:10"
															},
															"nodeType": "YulIf",
															"src": "1291:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:10",
														"type": ""
													}
												],
												"src": "1211:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:422:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:10",
																"statements": []
															},
															"src": "1538:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:62:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1763:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1768:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1759:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1759:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1777:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1755:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1755:27:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1784:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:38:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1715:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1718:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1712:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:13:10"
															},
															"nodeType": "YulIf",
															"src": "1709:87:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1805:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1820:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1833:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1841:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1829:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1829:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1850:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1846:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1846:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1825:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1812:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:10",
														"type": ""
													}
												],
												"src": "1396:472:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2011:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2022:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2004:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2034:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2060:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2072:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2083:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2068:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2068:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2042:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2034:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1963:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1974:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1985:4:10",
														"type": ""
													}
												],
												"src": "1873:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2154:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2159:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2150:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2140:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2098:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2287:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2309:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2325:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2331:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2321:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2321:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2340:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2336:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2336:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2291:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2420:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2422:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2422:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2422:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2363:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2375:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2360:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2399:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2396:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2357:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:62:10"
															},
															"nodeType": "YulIf",
															"src": "2354:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2458:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2462:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2451:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2451:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2259:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2267:4:10",
														"type": ""
													}
												],
												"src": "2230:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2553:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2597:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2599:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2599:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2599:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2566:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:30:10"
															},
															"nodeType": "YulIf",
															"src": "2563:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2628:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2644:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2640:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2656:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2636:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2628:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2533:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2544:4:10",
														"type": ""
													}
												],
												"src": "2484:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:660:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2785:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2794:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2797:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2787:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2787:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2787:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2764:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2772:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2760:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2760:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2779:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2756:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:35:10"
															},
															"nodeType": "YulIf",
															"src": "2746:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2810:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2820:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2820:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2814:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2849:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2859:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2853:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2872:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2922:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2882:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2882:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2876:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2934:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2986:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2994:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2966:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2966:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3006:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3017:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3010:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3039:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3047:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3032:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3032:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3059:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3070:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3078:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3090:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3112:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3124:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3127:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3120:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3120:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:23:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3133:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3104:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:32:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3094:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3164:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3176:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3166:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3166:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3151:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3148:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:15:10"
															},
															"nodeType": "YulIf",
															"src": "3145:35:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3189:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3212:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3193:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3280:86:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3301:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3319:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3306:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3306:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3294:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3294:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3294:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3337:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3348:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3353:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3344:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3344:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3337:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3235:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3240:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3232:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3248:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3250:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3261:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3266:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3257:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3257:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3250:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3228:3:10",
																"statements": []
															},
															"src": "3224:142:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3375:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3384:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3375:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2710:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2718:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2726:5:10",
														"type": ""
													}
												],
												"src": "2672:724:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3453:503:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3502:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3511:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3504:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3481:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3489:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3477:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3477:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3496:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3466:35:10"
															},
															"nodeType": "YulIf",
															"src": "3463:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3527:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3550:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3537:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3531:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3596:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3598:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3598:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3598:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3572:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3569:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:26:10"
															},
															"nodeType": "YulIf",
															"src": "3566:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3627:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3647:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3641:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3631:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3679:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3699:2:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3703:4:10",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3695:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3695:13:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3714:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3710:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3710:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3691:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3691:27:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:38:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3659:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3659:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3742:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3750:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3735:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3735:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3776:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3784:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3772:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3772:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3789:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3768:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3796:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3765:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:35:10"
															},
															"nodeType": "YulIf",
															"src": "3762:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3843:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3851:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3839:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3839:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3862:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3870:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3858:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3858:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3877:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3826:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3826:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3826:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3904:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3912:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3900:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3900:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3917:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3896:26:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3924:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3889:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3889:37:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3935:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3944:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3935:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3427:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3435:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3443:5:10",
														"type": ""
													}
												],
												"src": "3401:555:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4158:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4205:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4214:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4217:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4207:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4207:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4207:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4179:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4188:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4200:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:33:10"
															},
															"nodeType": "YulIf",
															"src": "4168:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4230:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4259:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4240:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4278:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4311:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4322:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4307:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4307:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4288:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4335:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4366:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4377:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4349:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4339:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4390:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4400:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4394:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4445:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4454:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4457:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4447:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4447:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4447:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4433:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4441:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4430:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:14:10"
															},
															"nodeType": "YulIf",
															"src": "4427:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4470:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4513:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4524:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4509:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4509:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4533:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4480:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4470:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4550:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4583:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4594:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4579:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4566:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4554:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4627:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4636:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4639:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4629:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4613:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4623:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4610:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4610:16:10"
															},
															"nodeType": "YulIf",
															"src": "4607:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4652:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4695:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4706:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4691:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4717:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4662:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4734:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4778:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4750:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4738:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4812:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4821:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4824:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4814:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4814:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4814:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4798:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4808:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4795:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:16:10"
															},
															"nodeType": "YulIf",
															"src": "4792:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4837:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4868:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4879:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4864:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4890:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4847:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4092:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4103:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4115:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4123:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4131:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4139:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4147:6:10",
														"type": ""
													}
												],
												"src": "3961:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5046:1071:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5092:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5101:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5094:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5094:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5067:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5076:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5063:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5063:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5088:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5059:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:32:10"
															},
															"nodeType": "YulIf",
															"src": "5056:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5117:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5144:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5131:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5121:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5163:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5173:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5167:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5218:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5227:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5230:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5220:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5220:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5206:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5214:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5203:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:14:10"
															},
															"nodeType": "YulIf",
															"src": "5200:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5243:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5257:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5268:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5253:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5247:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5323:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5332:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5335:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5325:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5325:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5325:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5302:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5306:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5298:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5298:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5313:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5294:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5294:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5287:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:35:10"
															},
															"nodeType": "YulIf",
															"src": "5284:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5348:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5371:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5358:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5352:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5383:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5393:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5387:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5406:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5456:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5416:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5410:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5468:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5488:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5482:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5472:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5520:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5528:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5500:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5540:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5551:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5544:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5573:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5581:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5566:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5566:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5593:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5604:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5612:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5624:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5646:2:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5654:1:10",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5657:2:10"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5650:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5650:10:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:19:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5663:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5638:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:28:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5628:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5698:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5710:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5700:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5700:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5700:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5681:6:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5689:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5678:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:19:10"
															},
															"nodeType": "YulIf",
															"src": "5675:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5723:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5738:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5742:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5734:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5727:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5810:92:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5831:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5855:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5836:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5836:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5873:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5884:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5889:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5880:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5880:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5873:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5765:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5770:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5762:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5778:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5780:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5791:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5796:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5787:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5787:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5780:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5758:3:10",
																"statements": []
															},
															"src": "5754:148:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5911:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5921:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5936:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5969:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5980:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5965:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5965:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5952:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5940:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6013:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6022:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6025:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6015:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6015:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6015:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5999:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6009:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5996:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:16:10"
															},
															"nodeType": "YulIf",
															"src": "5993:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6038:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6081:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6092:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6103:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6048:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5004:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5015:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5027:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5035:6:10",
														"type": ""
													}
												],
												"src": "4909:1208:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6183:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6193:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6213:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6207:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6197:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6235:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6240:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6228:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6256:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6266:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6260:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6279:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6290:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6295:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6286:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6307:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6325:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6332:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6321:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6321:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6311:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6344:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6353:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6348:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6412:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6433:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6444:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6438:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6438:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6426:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6426:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6426:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6465:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6476:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6481:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6472:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6472:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6465:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6497:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6511:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6519:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6507:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6507:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6497:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6374:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6371:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6385:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6387:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6396:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6399:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6392:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6392:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6387:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6367:3:10",
																"statements": []
															},
															"src": "6363:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6541:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6548:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6541:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6160:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6167:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6175:3:10",
														"type": ""
													}
												],
												"src": "6122:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6713:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6730:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6741:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6723:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6753:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6790:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6802:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6813:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6798:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6761:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6753:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6682:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6693:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6704:4:10",
														"type": ""
													}
												],
												"src": "6562:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6912:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6958:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6967:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6970:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6960:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6960:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6960:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6933:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6942:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6929:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6929:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6954:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6925:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:32:10"
															},
															"nodeType": "YulIf",
															"src": "6922:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6983:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7012:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6993:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6993:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6983:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7031:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7061:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7072:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7057:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7044:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7035:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7129:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7138:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7141:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7131:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7131:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7098:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7119:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7112:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7112:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7105:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7105:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7095:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7095:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7088:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7088:40:10"
															},
															"nodeType": "YulIf",
															"src": "7085:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7154:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7164:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6870:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6881:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6893:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6901:6:10",
														"type": ""
													}
												],
												"src": "6828:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7267:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7313:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7322:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7325:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7315:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7315:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7315:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7288:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7284:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7284:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7309:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7280:32:10"
															},
															"nodeType": "YulIf",
															"src": "7277:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7338:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7367:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7348:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7386:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7419:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7430:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7415:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7415:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7396:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7225:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7236:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7248:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7256:6:10",
														"type": ""
													}
												],
												"src": "7180:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7592:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7648:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7651:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7641:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7613:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7622:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7609:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7609:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7634:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7605:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:33:10"
															},
															"nodeType": "YulIf",
															"src": "7602:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7664:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7693:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7674:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7674:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7712:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7745:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7756:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7741:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7741:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7722:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7722:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7712:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7769:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7796:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7807:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7792:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7792:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7779:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7779:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7820:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7847:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7858:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7843:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7843:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7830:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7830:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7820:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7871:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7902:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7913:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7898:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7898:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7885:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7875:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7961:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7970:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7973:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7963:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7963:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7963:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7933:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7941:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7930:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7930:30:10"
															},
															"nodeType": "YulIf",
															"src": "7927:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7986:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8017:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8028:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8013:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8013:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8037:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7996:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7996:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7526:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7537:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7549:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7557:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7565:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7573:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7581:6:10",
														"type": ""
													}
												],
												"src": "7445:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8230:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8247:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8240:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8240:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8281:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8292:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8277:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8277:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8297:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8270:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8270:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8331:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8336:34:10",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8309:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8309:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8391:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8402:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8387:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8387:18:10"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8407:12:10",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8380:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8380:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8429:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8441:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8452:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8437:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8437:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8429:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8207:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8221:4:10",
														"type": ""
													}
												],
												"src": "8056:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8522:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8532:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8546:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8549:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8542:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8542:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8532:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8563:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8593:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8599:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8589:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8589:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8567:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8640:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8642:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8656:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8664:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8652:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8652:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8642:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8620:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8613:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8613:26:10"
															},
															"nodeType": "YulIf",
															"src": "8610:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8730:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8751:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8758:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8763:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8754:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8754:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8744:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8744:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8744:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8795:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8798:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8788:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8788:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8788:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8823:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8826:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8816:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8816:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8816:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8686:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8709:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8717:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8706:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8706:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8683:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8683:38:10"
															},
															"nodeType": "YulIf",
															"src": "8680:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8502:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8511:6:10",
														"type": ""
													}
												],
												"src": "8467:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9026:237:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9043:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9054:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9036:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9036:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9036:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9077:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9088:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9073:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9073:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9093:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9066:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9066:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9066:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9116:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9127:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9112:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9112:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9132:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9105:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9105:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9105:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9187:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9198:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9183:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9183:18:10"
																	},
																	{
																		"hexValue": "6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9203:17:10",
																		"type": "",
																		"value": "er nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9176:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9176:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9176:45:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9230:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9242:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9253:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9238:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9238:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9230:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9003:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9017:4:10",
														"type": ""
													}
												],
												"src": "8852:411:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9442:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9459:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9470:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9452:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9452:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9452:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9493:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9504:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9489:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9489:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9509:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9482:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9482:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9482:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9532:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9543:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9528:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9528:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9548:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9521:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9521:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9521:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9603:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9614:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9599:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9599:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9619:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9592:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9592:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9592:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9640:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9652:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9663:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9648:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9648:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9640:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9419:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9433:4:10",
														"type": ""
													}
												],
												"src": "9268:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9710:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9727:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9734:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9739:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9730:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9730:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9720:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9720:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9720:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9767:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9770:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9760:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9760:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9760:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9791:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9794:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9784:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9784:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9784:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9678:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9842:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9859:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9866:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9871:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9862:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9862:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9852:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9852:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9852:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9899:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9902:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9892:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9892:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9892:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9923:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9926:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9916:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9916:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9916:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9810:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9989:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10020:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10022:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10022:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10022:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10005:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10016:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10012:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10012:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10002:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10002:17:10"
															},
															"nodeType": "YulIf",
															"src": "9999:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10051:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10062:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10069:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10058:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10058:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10051:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9971:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9981:3:10",
														"type": ""
													}
												],
												"src": "9942:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10256:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10273:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10284:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10266:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10266:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10266:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10307:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10318:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10303:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10303:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10323:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10296:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10296:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10296:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10346:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10357:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10342:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10342:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10362:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10335:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10335:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10335:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10417:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10428:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10413:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10413:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10433:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10406:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10406:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10406:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10453:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10465:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10476:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10461:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10461:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10453:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10233:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10247:4:10",
														"type": ""
													}
												],
												"src": "10082:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10665:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10682:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10693:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10675:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10675:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10675:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10716:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10727:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10712:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10712:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10732:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10705:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10705:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10705:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10755:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10766:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10751:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10751:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10771:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10744:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10744:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10744:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10826:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10837:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10822:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10822:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10842:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10815:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10815:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10815:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10859:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10871:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10882:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10867:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10867:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10859:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10642:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10656:4:10",
														"type": ""
													}
												],
												"src": "10491:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11071:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11088:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11099:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11081:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11081:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11081:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11122:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11133:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11118:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11118:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11138:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11111:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11111:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11111:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11161:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11172:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11157:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11157:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11177:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11150:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11150:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11150:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11232:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11243:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11228:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11228:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11248:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11221:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11221:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11221:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11270:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11282:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11293:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11278:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11278:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11270:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11048:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11062:4:10",
														"type": ""
													}
												],
												"src": "10897:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11356:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11383:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11385:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11385:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11385:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11372:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11379:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11375:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11375:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11369:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11369:13:10"
															},
															"nodeType": "YulIf",
															"src": "11366:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11414:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11425:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11428:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11421:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11421:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11414:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11339:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11342:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11348:3:10",
														"type": ""
													}
												],
												"src": "11308:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11670:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11687:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11698:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11680:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11680:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11680:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11710:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11753:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11765:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11776:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11761:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11761:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11724:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11724:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11714:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11800:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11811:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11796:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11796:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "11820:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11828:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11816:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11816:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11789:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11789:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11789:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11848:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11885:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11893:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11856:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11856:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11848:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11631:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11642:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11650:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11661:4:10",
														"type": ""
													}
												],
												"src": "11441:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12085:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12102:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12113:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12095:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12095:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12095:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12136:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12147:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12132:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12132:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12152:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12125:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12125:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12125:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12175:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12186:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12171:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12191:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12164:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12164:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12164:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12246:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12257:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12242:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12242:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12262:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12235:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12235:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12235:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12283:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12295:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12306:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12291:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12291:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12283:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12062:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12076:4:10",
														"type": ""
													}
												],
												"src": "11911:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12450:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12460:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12472:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12483:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12468:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12468:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12460:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12502:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12513:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12495:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12495:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12495:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12540:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12551:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12536:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12536:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12556:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12529:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12529:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12529:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12411:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12422:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12430:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12441:4:10",
														"type": ""
													}
												],
												"src": "12321:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12905:496:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12915:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12933:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12938:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12929:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12929:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12942:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12925:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12925:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12919:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12960:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12975:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12983:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12971:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12971:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12953:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12953:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12953:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13007:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13018:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13003:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13003:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13027:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13035:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13023:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13023:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12996:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12996:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12996:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13059:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13070:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13055:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13055:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13075:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13048:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13048:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13048:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13088:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13131:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13143:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13154:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13139:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13139:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13102:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13102:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13092:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13179:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13190:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13175:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13175:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13199:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13207:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13195:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13195:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13168:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13168:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13168:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13227:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13270:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13278:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13241:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13241:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "13231:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13305:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13316:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13301:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13301:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "13326:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13334:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13322:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13322:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13294:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13294:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13294:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13354:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13380:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "13388:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13362:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13362:33:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13354:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12842:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12853:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12861:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12869:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12877:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12885:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12896:4:10",
														"type": ""
													}
												],
												"src": "12574:827:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13486:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13532:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13541:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13544:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13534:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13534:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13534:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13507:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13516:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13503:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13503:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13528:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13499:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13499:32:10"
															},
															"nodeType": "YulIf",
															"src": "13496:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13557:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13576:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13570:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13570:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13561:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13619:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13595:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13595:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13595:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13634:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13644:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13634:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13452:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13463:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13475:6:10",
														"type": ""
													}
												],
												"src": "13406:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13703:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13748:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13777:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13780:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13783:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "13762:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13762:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13762:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13798:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13809:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13820:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13814:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13814:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "13805:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13805:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "13798:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "13719:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13719:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13737:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13716:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13716:23:10"
															},
															"nodeType": "YulIf",
															"src": "13713:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "13695:3:10",
														"type": ""
													}
												],
												"src": "13660:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13891:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13931:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "13933:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "13907:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13907:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13925:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13904:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13904:26:10"
															},
															"nodeType": "YulIf",
															"src": "13901:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13949:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13967:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13961:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13961:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "13953:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13979:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13993:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "13989:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13989:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13983:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14019:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14025:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "14032:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14032:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14050:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14028:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14028:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "14004:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14004:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14004:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14063:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14083:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14077:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14077:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "14067:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14097:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "14107:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14107:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14101:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14132:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14142:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "14136:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14218:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14220:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14178:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "14186:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14175:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14175:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14198:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14206:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14194:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14194:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14213:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14191:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14191:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14172:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14172:45:10"
															},
															"nodeType": "YulIf",
															"src": "14169:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14236:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14251:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14257:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14247:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14247:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "14240:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14273:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "14293:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14287:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14287:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14277:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14324:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14326:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14312:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "14320:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14309:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14309:14:10"
															},
															"nodeType": "YulIf",
															"src": "14306:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14415:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14417:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "14356:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14361:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14352:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14352:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14370:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14348:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14348:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "14385:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "14391:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14391:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14381:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14381:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14410:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14377:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14377:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14345:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14345:69:10"
															},
															"nodeType": "YulIf",
															"src": "14342:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14453:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14467:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14475:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14463:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14463:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14484:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14459:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14459:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14433:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14433:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14433:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14499:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "14506:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14499:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13883:3:10",
														"type": ""
													}
												],
												"src": "13844:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14694:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14711:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14722:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14704:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14704:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14704:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14745:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14756:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14741:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14741:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14761:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14734:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14734:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14734:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14784:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14795:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14780:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14780:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14800:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14773:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14773:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14773:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14855:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14866:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14851:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14851:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14871:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14844:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14844:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14844:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14903:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14915:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14926:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14911:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14911:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14903:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14671:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14685:4:10",
														"type": ""
													}
												],
												"src": "14520:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15115:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15132:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15143:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15125:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15125:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15125:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15166:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15177:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15162:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15162:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15182:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15155:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15155:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15155:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15205:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15216:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15201:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15201:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15221:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15194:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15194:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15194:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15276:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15287:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15272:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15272:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15292:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15265:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15265:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15265:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15312:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15324:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15335:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15320:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15320:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15312:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15092:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15106:4:10",
														"type": ""
													}
												],
												"src": "14941:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15581:330:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15591:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15609:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15614:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15605:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15605:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15618:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15601:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15601:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15595:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15636:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15651:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15659:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15647:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15647:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15629:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15629:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15629:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15683:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15694:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15679:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15679:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15703:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15711:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15699:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15699:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15672:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15672:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15672:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15735:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15746:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15731:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15731:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15751:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15724:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15724:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15724:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15778:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15789:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15774:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15774:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15794:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15767:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15767:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15767:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15821:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15832:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15817:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15817:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15838:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15810:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15810:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15810:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15851:54:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "15877:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15889:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15900:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15885:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15885:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "15859:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15859:46:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15851:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15518:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15529:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15537:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15545:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15553:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15561:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15572:4:10",
														"type": ""
													}
												],
												"src": "15350:561:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610b3f565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610b82565b610222565b60405190151581526020016100a9565b6100e86100e3366004610ba6565b610274565b6040516100a99190610c0c565b610108610103366004610d6b565b610308565b005b61011d610118366004610e15565b610354565b6040516100a99190610f1b565b610108610138366004610f2e565b61047e565b6100c561014b366004610f6a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610f9d565b61048d565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025357506001600160e01b031982166303a24d0760e21b145b8061026e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028390611002565b80601f01602080910402602001604051908101604052809291908181526020018280546102af90611002565b80156102fc5780601f106102d1576101008083540402835291602001916102fc565b820191906000526020600020905b8154815290600101906020018083116102df57829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103245750610324853361014b565b6103405760405162461bcd60e51b81526004016101f39061103c565b61034d85858585856104d2565b5050505050565b606081518351146103b95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff8111156103d5576103d5610c1f565b6040519080825280602002602001820160405280156103fe578160200160208202803683370190505b50905060005b8451811015610476576104498582815181106104225761042261108b565b602002602001015185838151811061043c5761043c61108b565b602002602001015161018c565b82828151811061045b5761045b61108b565b602090810291909101015261046f816110b7565b9050610404565b509392505050565b6104893383836106af565b5050565b6001600160a01b0385163314806104a957506104a9853361014b565b6104c55760405162461bcd60e51b81526004016101f39061103c565b61034d858585858561078f565b81518351146105345760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b03841661055a5760405162461bcd60e51b81526004016101f3906110d0565b3360005b845181101561064157600085828151811061057b5761057b61108b565b6020026020010151905060008583815181106105995761059961108b565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156105e95760405162461bcd60e51b81526004016101f390611115565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061062690849061115f565b925050819055505050508061063a906110b7565b905061055e565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610691929190611177565b60405180910390a46106a78187878787876108b9565b505050505050565b816001600160a01b0316836001600160a01b0316036107225760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166107b55760405162461bcd60e51b81526004016101f3906110d0565b3360006107c185610a1d565b905060006107ce85610a1d565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156108115760405162461bcd60e51b81526004016101f390611115565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061084e90849061115f565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46108ae848a8a8a8a8a610a68565b505050505050505050565b6001600160a01b0384163b156106a75760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906108fd90899089908890889088906004016111a5565b6020604051808303816000875af1925050508015610938575060408051601f3d908101601f1916820190925261093591810190611203565b60015b6109e457610944611220565b806308c379a00361097d575061095861123c565b80610963575061097f565b8060405162461bcd60e51b81526004016101f39190610c0c565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610a145760405162461bcd60e51b81526004016101f3906112c6565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a5757610a5761108b565b602090810291909101015292915050565b6001600160a01b0384163b156106a75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610aac908990899088908890889060040161130e565b6020604051808303816000875af1925050508015610ae7575060408051601f3d908101601f19168201909252610ae491810190611203565b60015b610af357610944611220565b6001600160e01b0319811663f23a6e6160e01b14610a145760405162461bcd60e51b81526004016101f3906112c6565b80356001600160a01b0381168114610b3a57600080fd5b919050565b60008060408385031215610b5257600080fd5b610b5b83610b23565b946020939093013593505050565b6001600160e01b031981168114610b7f57600080fd5b50565b600060208284031215610b9457600080fd5b8135610b9f81610b69565b9392505050565b600060208284031215610bb857600080fd5b5035919050565b6000815180845260005b81811015610be557602081850181015186830182015201610bc9565b81811115610bf7576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610b9f6020830184610bbf565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610c5b57610c5b610c1f565b6040525050565b600067ffffffffffffffff821115610c7c57610c7c610c1f565b5060051b60200190565b600082601f830112610c9757600080fd5b81356020610ca482610c62565b604051610cb18282610c35565b83815260059390931b8501820192828101915086841115610cd157600080fd5b8286015b84811015610cec5780358352918301918301610cd5565b509695505050505050565b600082601f830112610d0857600080fd5b813567ffffffffffffffff811115610d2257610d22610c1f565b604051610d39601f8301601f191660200182610c35565b818152846020838601011115610d4e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610d8357600080fd5b610d8c86610b23565b9450610d9a60208701610b23565b9350604086013567ffffffffffffffff80821115610db757600080fd5b610dc389838a01610c86565b94506060880135915080821115610dd957600080fd5b610de589838a01610c86565b93506080880135915080821115610dfb57600080fd5b50610e0888828901610cf7565b9150509295509295909350565b60008060408385031215610e2857600080fd5b823567ffffffffffffffff80821115610e4057600080fd5b818501915085601f830112610e5457600080fd5b81356020610e6182610c62565b604051610e6e8282610c35565b83815260059390931b8501820192828101915089841115610e8e57600080fd5b948201945b83861015610eb357610ea486610b23565b82529482019490820190610e93565b96505086013592505080821115610ec957600080fd5b50610ed685828601610c86565b9150509250929050565b600081518084526020808501945080840160005b83811015610f1057815187529582019590820190600101610ef4565b509495945050505050565b602081526000610b9f6020830184610ee0565b60008060408385031215610f4157600080fd5b610f4a83610b23565b915060208301358015158114610f5f57600080fd5b809150509250929050565b60008060408385031215610f7d57600080fd5b610f8683610b23565b9150610f9460208401610b23565b90509250929050565b600080600080600060a08688031215610fb557600080fd5b610fbe86610b23565b9450610fcc60208701610b23565b93506040860135925060608601359150608086013567ffffffffffffffff811115610ff657600080fd5b610e0888828901610cf7565b600181811c9082168061101657607f821691505b60208210810361103657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110c9576110c96110a1565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60008219821115611172576111726110a1565b500190565b60408152600061118a6040830185610ee0565b828103602084015261119c8185610ee0565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111d190830186610ee0565b82810360608401526111e38186610ee0565b905082810360808401526111f78185610bbf565b98975050505050505050565b60006020828403121561121557600080fd5b8151610b9f81610b69565b600060033d11156112395760046000803e5060005160e01c5b90565b600060443d101561124a5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561127a57505050505090565b82850191508151818111156112925750505050505090565b843d87010160208285010111156112ac5750505050505090565b6112bb60208286010187610c35565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061134890830184610bbf565b97965050505050505056fea2646970667358221220b3c892a77671faacb55c9d0fb43021c61ff68ef5cdc488a4039027a3478b739764736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6B JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2E JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x253 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x283 SWAP1 PUSH2 0x1002 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AF SWAP1 PUSH2 0x1002 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x324 JUMPI POP PUSH2 0x324 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x340 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x34D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4D2 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D5 JUMPI PUSH2 0x3D5 PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3FE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x476 JUMPI PUSH2 0x449 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x422 JUMPI PUSH2 0x422 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x43C JUMPI PUSH2 0x43C PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45B JUMPI PUSH2 0x45B PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x46F DUP2 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x404 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x489 CALLER DUP4 DUP4 PUSH2 0x6AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4A9 JUMPI POP PUSH2 0x4A9 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x34D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x78F JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x641 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57B JUMPI PUSH2 0x57B PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x599 JUMPI PUSH2 0x599 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x626 SWAP1 DUP5 SWAP1 PUSH2 0x115F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x63A SWAP1 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x55E JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x691 SWAP3 SWAP2 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x6A7 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8B9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x722 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x7C1 DUP6 PUSH2 0xA1D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7CE DUP6 PUSH2 0xA1D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x84E SWAP1 DUP5 SWAP1 PUSH2 0x115F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8AE DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA68 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x8FD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x938 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x935 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9E4 JUMPI PUSH2 0x944 PUSH2 0x1220 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x97D JUMPI POP PUSH2 0x958 PUSH2 0x123C JUMP JUMPDEST DUP1 PUSH2 0x963 JUMPI POP PUSH2 0x97F JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xC0C JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA57 JUMPI PUSH2 0xA57 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAAC SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x130E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAE7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAE4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAF3 JUMPI PUSH2 0x944 PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5B DUP4 PUSH2 0xB23 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB9F DUP2 PUSH2 0xB69 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBC9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBF7 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBBF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC5B JUMPI PUSH2 0xC5B PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC7C JUMPI PUSH2 0xC7C PUSH2 0xC1F JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xCA4 DUP3 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB1 DUP3 DUP3 PUSH2 0xC35 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xCD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCEC JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCD5 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD22 JUMPI PUSH2 0xD22 PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD39 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xC35 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD8C DUP7 PUSH2 0xB23 JUMP JUMPDEST SWAP5 POP PUSH2 0xD9A PUSH1 0x20 DUP8 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC3 DUP10 DUP4 DUP11 ADD PUSH2 0xC86 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE5 DUP10 DUP4 DUP11 ADD PUSH2 0xC86 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE08 DUP9 DUP3 DUP10 ADD PUSH2 0xCF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE61 DUP3 PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6E DUP3 DUP3 PUSH2 0xC35 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xE8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xEB3 JUMPI PUSH2 0xEA4 DUP7 PUSH2 0xB23 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE93 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xEC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED6 DUP6 DUP3 DUP7 ADD PUSH2 0xC86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF10 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEF4 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB9F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4A DUP4 PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF86 DUP4 PUSH2 0xB23 JUMP JUMPDEST SWAP2 POP PUSH2 0xF94 PUSH1 0x20 DUP5 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFBE DUP7 PUSH2 0xB23 JUMP JUMPDEST SWAP5 POP PUSH2 0xFCC PUSH1 0x20 DUP8 ADD PUSH2 0xB23 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE08 DUP9 DUP3 DUP10 ADD PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1016 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1036 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x195C881B9BDC88185C1C1C9BDD9959 PUSH1 0x8A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10C9 JUMPI PUSH2 0x10C9 PUSH2 0x10A1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x1172 PUSH2 0x10A1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x118A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEE0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x119C DUP2 DUP6 PUSH2 0xEE0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11D1 SWAP1 DUP4 ADD DUP7 PUSH2 0xEE0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x11E3 DUP2 DUP7 PUSH2 0xEE0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x11F7 DUP2 DUP6 PUSH2 0xBBF JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB9F DUP2 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1239 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x124A JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x127A JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1292 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12AC JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12BB PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC35 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1348 SWAP1 DUP4 ADD DUP5 PUSH2 0xBBF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xC8 SWAP3 0xA7 PUSH23 0x71FAACB55C9D0FB43021C61FF68EF5CDC488A4039027A3 SELFBALANCE DUP12 PUSH20 0x9764736F6C634300080F00330000000000000000 ",
							"sourceMap": "570:16691:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:227;;;;;;:::i;:::-;;:::i;:::-;;;597:25:10;;;585:2;570:18;2185:227:2;;;;;;;;1236:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:10;;1177:22;1159:41;;1147:2;1132:18;1236:305:2;1019:187:10;1940:103:2;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4065:427::-;;;;;;:::i;:::-;;:::i;:::-;;2569:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3145:153::-;;;;;;:::i;:::-;;:::i;3365:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3487:27:2;;;3464:4;3487:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3365:166;3598:395;;;;;;:::i;:::-;;:::i;2185:227::-;2271:7;-1:-1:-1;;;;;2298:21:2;;2290:76;;;;-1:-1:-1;;;2290:76:2;;8258:2:10;2290:76:2;;;8240:21:10;8297:2;8277:18;;;8270:30;8336:34;8316:18;;;8309:62;-1:-1:-1;;;8387:18:10;;;8380:40;8437:19;;2290:76:2;;;;;;;;;-1:-1:-1;2383:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2383:22:2;;;;;;;;;;;;2185:227::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:2;;-1:-1:-1;;;1373:41:2;;:109;;-1:-1:-1;;;;;;;1430:52:2;;-1:-1:-1;;;1430:52:2;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1498:36:2;1354:180;1236:305;-1:-1:-1;;1236:305:2:o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4065:427::-;-1:-1:-1;;;;;4290:20:2;;719:10:7;4290:20:2;;:60;;-1:-1:-1;4314:36:2;4331:4;719:10:7;3365:166:2;:::i;4314:36::-;4269:154;;;;-1:-1:-1;;;4269:154:2;;;;;;;:::i;:::-;4433:52;4456:4;4462:2;4466:3;4471:7;4480:4;4433:22;:52::i;:::-;4065:427;;;;;:::o;2569:508::-;2720:16;2779:3;:10;2760:8;:15;:29;2752:83;;;;-1:-1:-1;;;2752:83:2;;9470:2:10;2752:83:2;;;9452:21:10;9509:2;9489:18;;;9482:30;9548:34;9528:18;;;9521:62;-1:-1:-1;;;9599:18:10;;;9592:39;9648:19;;2752:83:2;9268:405:10;2752:83:2;2846:30;2893:8;:15;2879:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2879:30:2;;2846:63;;2925:9;2920:120;2944:8;:15;2940:1;:19;2920:120;;;2999:30;3009:8;3018:1;3009:11;;;;;;;;:::i;:::-;;;;;;;3022:3;3026:1;3022:6;;;;;;;;:::i;:::-;;;;;;;2999:9;:30::i;:::-;2980:13;2994:1;2980:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2961:3;;;:::i;:::-;;;2920:120;;;-1:-1:-1;3057:13:2;2569:508;-1:-1:-1;;;2569:508:2:o;3145:153::-;3239:52;719:10:7;3272:8:2;3282;3239:18;:52::i;:::-;3145:153;;:::o;3598:395::-;-1:-1:-1;;;;;3798:20:2;;719:10:7;3798:20:2;;:60;;-1:-1:-1;3822:36:2;3839:4;719:10:7;3365:166:2;:::i;3822:36::-;3777:154;;;;-1:-1:-1;;;3777:154:2;;;;;;;:::i;:::-;3941:45;3959:4;3965:2;3969;3973:6;3981:4;3941:17;:45::i;6235:1115::-;6455:7;:14;6441:3;:10;:28;6433:81;;;;-1:-1:-1;;;6433:81:2;;10284:2:10;6433:81:2;;;10266:21:10;10323:2;10303:18;;;10296:30;10362:34;10342:18;;;10335:62;-1:-1:-1;;;10413:18:10;;;10406:38;10461:19;;6433:81:2;10082:404:10;6433:81:2;-1:-1:-1;;;;;6532:16:2;;6524:66;;;;-1:-1:-1;;;6524:66:2;;;;;;;:::i;:::-;719:10:7;6601:16:2;6714:411;6738:3;:10;6734:1;:14;6714:411;;;6769:10;6782:3;6786:1;6782:6;;;;;;;;:::i;:::-;;;;;;;6769:19;;6802:14;6819:7;6827:1;6819:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6844:19;6866:13;;;;;;;;;;-1:-1:-1;;;;;6866:19:2;;;;;;;;;;;;6819:10;;-1:-1:-1;6907:21:2;;;;6899:76;;;;-1:-1:-1;;;6899:76:2;;;;;;;:::i;:::-;7017:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7017:19:2;;;;;;;;;;7039:20;;;7017:42;;7087:17;;;;;;;:27;;7039:20;;7017:9;7087:27;;7039:20;;7087:27;:::i;:::-;;;;;;;;6755:370;;;6750:3;;;;:::i;:::-;;;6714:411;;;;7170:2;-1:-1:-1;;;;;7140:47:2;7164:4;-1:-1:-1;;;;;7140:47:2;7154:8;-1:-1:-1;;;;;7140:47:2;;7174:3;7179:7;7140:47;;;;;;;:::i;:::-;;;;;;;;7268:75;7304:8;7314:4;7320:2;7324:3;7329:7;7338:4;7268:35;:75::i;:::-;6423:927;6235:1115;;;;;:::o;12912:323::-;13062:8;-1:-1:-1;;;;;13053:17:2;:5;-1:-1:-1;;;;;13053:17:2;;13045:71;;;;-1:-1:-1;;;13045:71:2;;12113:2:10;13045:71:2;;;12095:21:10;12152:2;12132:18;;;12125:30;12191:34;12171:18;;;12164:62;-1:-1:-1;;;12242:18:10;;;12235:39;12291:19;;13045:71:2;11911:405:10;13045:71:2;-1:-1:-1;;;;;13126:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13126:46:2;;;;;;;;;;13187:41;;1159::10;;;13187::2;;1132:18:10;13187:41:2;;;;;;;12912:323;;;:::o;4942:947::-;-1:-1:-1;;;;;5123:16:2;;5115:66;;;;-1:-1:-1;;;5115:66:2;;;;;;;:::i;:::-;719:10:7;5192:16:2;5256:21;5274:2;5256:17;:21::i;:::-;5233:44;;5287:24;5314:25;5332:6;5314:17;:25::i;:::-;5287:52;;5421:19;5443:13;;;;;;;;;;;-1:-1:-1;;;;;5443:19:2;;;;;;;;;;5480:21;;;;5472:76;;;;-1:-1:-1;;;5472:76:2;;;;;;;:::i;:::-;5582:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5582:19:2;;;;;;;;;;5604:20;;;5582:42;;5644:17;;;;;;;:27;;5604:20;;5582:9;5644:27;;5604:20;;5644:27;:::i;:::-;;;;-1:-1:-1;;5687:46:2;;;12495:25:10;;;12551:2;12536:18;;12529:34;;;-1:-1:-1;;;;;5687:46:2;;;;;;;;;;;;;;12468:18:10;5687:46:2;;;;;;;5814:68;5845:8;5855:4;5861:2;5865;5869:6;5877:4;5814:30;:68::i;:::-;5105:784;;;;4942:947;;;;;:::o;16268:792::-;-1:-1:-1;;;;;16500:13:2;;1465:19:6;:23;16496:558:2;;16535:79;;-1:-1:-1;;;16535:79:2;;-1:-1:-1;;;;;16535:43:2;;;;;:79;;16579:8;;16589:4;;16595:3;;16600:7;;16609:4;;16535:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16535:79:2;;;;;;;;-1:-1:-1;;16535:79:2;;;;;;;;;;;;:::i;:::-;;;16531:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16920:6;16913:14;;-1:-1:-1;;;16913:14:2;;;;;;;;:::i;16531:513::-;;;16967:62;;-1:-1:-1;;;16967:62:2;;14722:2:10;16967:62:2;;;14704:21:10;14761:2;14741:18;;;14734:30;14800:34;14780:18;;;14773:62;-1:-1:-1;;;14851:18:10;;;14844:50;14911:19;;16967:62:2;14520:416:10;16531:513:2;-1:-1:-1;;;;;;16693:60:2;;-1:-1:-1;;;16693:60:2;16689:157;;16777:50;;-1:-1:-1;;;16777:50:2;;;;;;;:::i;16689:157::-;16615:245;16268:792;;;;;;:::o;17066:193::-;17185:16;;;17199:1;17185:16;;;;;;;;;17132;;17160:22;;17185:16;;;;;;;;;;;;-1:-1:-1;17185:16:2;17160:41;;17222:7;17211:5;17217:1;17211:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17247:5;17066:193;-1:-1:-1;;17066:193:2:o;15537:725::-;-1:-1:-1;;;;;15744:13:2;;1465:19:6;:23;15740:516:2;;15779:72;;-1:-1:-1;;;15779:72:2;;-1:-1:-1;;;;;15779:38:2;;;;;:72;;15818:8;;15828:4;;15834:2;;15838:6;;15846:4;;15779:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15779:72:2;;;;;;;;-1:-1:-1;;15779:72:2;;;;;;;;;;;;:::i;:::-;;;15775:471;;;;:::i;:::-;-1:-1:-1;;;;;;15900:55:2;;-1:-1:-1;;;15900:55:2;15896:152;;15979:50;;-1:-1:-1;;;15979:50:2;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:10:o;633:131::-;-1:-1:-1;;;;;;707:32:10;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:10:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:10;;1211:180;-1:-1:-1;1211:180:10:o;1396:472::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1718:6;1715:1;1712:13;1709:87;;;1784:1;1777:4;1768:6;1763:3;1759:16;1755:27;1748:38;1709:87;-1:-1:-1;1850:2:10;1829:15;-1:-1:-1;;1825:29:10;1816:39;;;;1857:4;1812:50;;1396:472;-1:-1:-1;;1396:472:10:o;1873:220::-;2022:2;2011:9;2004:21;1985:4;2042:45;2083:2;2072:9;2068:18;2060:6;2042:45;:::i;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:249;2340:2;2321:13;;-1:-1:-1;;2317:27:10;2305:40;;2375:18;2360:34;;2396:22;;;2357:62;2354:88;;;2422:18;;:::i;:::-;2458:2;2451:22;-1:-1:-1;;2230:249:10:o;2484:183::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:10;2640:14;2656:4;2636:25;;2484:183::o;2672:724::-;2726:5;2779:3;2772:4;2764:6;2760:17;2756:27;2746:55;;2797:1;2794;2787:12;2746:55;2833:6;2820:20;2859:4;2882:43;2922:2;2882:43;:::i;:::-;2954:2;2948:9;2966:31;2994:2;2986:6;2966:31;:::i;:::-;3032:18;;;3124:1;3120:10;;;;3108:23;;3104:32;;;3066:15;;;;-1:-1:-1;3148:15:10;;;3145:35;;;3176:1;3173;3166:12;3145:35;3212:2;3204:6;3200:15;3224:142;3240:6;3235:3;3232:15;3224:142;;;3306:17;;3294:30;;3344:12;;;;3257;;3224:142;;;-1:-1:-1;3384:6:10;2672:724;-1:-1:-1;;;;;;2672:724:10:o;3401:555::-;3443:5;3496:3;3489:4;3481:6;3477:17;3473:27;3463:55;;3514:1;3511;3504:12;3463:55;3550:6;3537:20;3576:18;3572:2;3569:26;3566:52;;;3598:18;;:::i;:::-;3647:2;3641:9;3659:67;3714:2;3695:13;;-1:-1:-1;;3691:27:10;3720:4;3687:38;3641:9;3659:67;:::i;:::-;3750:2;3742:6;3735:18;3796:3;3789:4;3784:2;3776:6;3772:15;3768:26;3765:35;3762:55;;;3813:1;3810;3803:12;3762:55;3877:2;3870:4;3862:6;3858:17;3851:4;3843:6;3839:17;3826:54;3924:1;3900:15;;;3917:4;3896:26;3889:37;;;;3904:6;3401:555;-1:-1:-1;;;3401:555:10:o;3961:943::-;4115:6;4123;4131;4139;4147;4200:3;4188:9;4179:7;4175:23;4171:33;4168:53;;;4217:1;4214;4207:12;4168:53;4240:29;4259:9;4240:29;:::i;:::-;4230:39;;4288:38;4322:2;4311:9;4307:18;4288:38;:::i;:::-;4278:48;;4377:2;4366:9;4362:18;4349:32;4400:18;4441:2;4433:6;4430:14;4427:34;;;4457:1;4454;4447:12;4427:34;4480:61;4533:7;4524:6;4513:9;4509:22;4480:61;:::i;:::-;4470:71;;4594:2;4583:9;4579:18;4566:32;4550:48;;4623:2;4613:8;4610:16;4607:36;;;4639:1;4636;4629:12;4607:36;4662:63;4717:7;4706:8;4695:9;4691:24;4662:63;:::i;:::-;4652:73;;4778:3;4767:9;4763:19;4750:33;4734:49;;4808:2;4798:8;4795:16;4792:36;;;4824:1;4821;4814:12;4792:36;;4847:51;4890:7;4879:8;4868:9;4864:24;4847:51;:::i;:::-;4837:61;;;3961:943;;;;;;;;:::o;4909:1208::-;5027:6;5035;5088:2;5076:9;5067:7;5063:23;5059:32;5056:52;;;5104:1;5101;5094:12;5056:52;5144:9;5131:23;5173:18;5214:2;5206:6;5203:14;5200:34;;;5230:1;5227;5220:12;5200:34;5268:6;5257:9;5253:22;5243:32;;5313:7;5306:4;5302:2;5298:13;5294:27;5284:55;;5335:1;5332;5325:12;5284:55;5371:2;5358:16;5393:4;5416:43;5456:2;5416:43;:::i;:::-;5488:2;5482:9;5500:31;5528:2;5520:6;5500:31;:::i;:::-;5566:18;;;5654:1;5650:10;;;;5642:19;;5638:28;;;5600:15;;;;-1:-1:-1;5678:19:10;;;5675:39;;;5710:1;5707;5700:12;5675:39;5734:11;;;;5754:148;5770:6;5765:3;5762:15;5754:148;;;5836:23;5855:3;5836:23;:::i;:::-;5824:36;;5787:12;;;;5880;;;;5754:148;;;5921:6;-1:-1:-1;;5965:18:10;;5952:32;;-1:-1:-1;;5996:16:10;;;5993:36;;;6025:1;6022;6015:12;5993:36;;6048:63;6103:7;6092:8;6081:9;6077:24;6048:63;:::i;:::-;6038:73;;;4909:1208;;;;;:::o;6122:435::-;6175:3;6213:5;6207:12;6240:6;6235:3;6228:19;6266:4;6295:2;6290:3;6286:12;6279:19;;6332:2;6325:5;6321:14;6353:1;6363:169;6377:6;6374:1;6371:13;6363:169;;;6438:13;;6426:26;;6472:12;;;;6507:15;;;;6399:1;6392:9;6363:169;;;-1:-1:-1;6548:3:10;;6122:435;-1:-1:-1;;;;;6122:435:10:o;6562:261::-;6741:2;6730:9;6723:21;6704:4;6761:56;6813:2;6802:9;6798:18;6790:6;6761:56;:::i;6828:347::-;6893:6;6901;6954:2;6942:9;6933:7;6929:23;6925:32;6922:52;;;6970:1;6967;6960:12;6922:52;6993:29;7012:9;6993:29;:::i;:::-;6983:39;;7072:2;7061:9;7057:18;7044:32;7119:5;7112:13;7105:21;7098:5;7095:32;7085:60;;7141:1;7138;7131:12;7085:60;7164:5;7154:15;;;6828:347;;;;;:::o;7180:260::-;7248:6;7256;7309:2;7297:9;7288:7;7284:23;7280:32;7277:52;;;7325:1;7322;7315:12;7277:52;7348:29;7367:9;7348:29;:::i;:::-;7338:39;;7396:38;7430:2;7419:9;7415:18;7396:38;:::i;:::-;7386:48;;7180:260;;;;;:::o;7445:606::-;7549:6;7557;7565;7573;7581;7634:3;7622:9;7613:7;7609:23;7605:33;7602:53;;;7651:1;7648;7641:12;7602:53;7674:29;7693:9;7674:29;:::i;:::-;7664:39;;7722:38;7756:2;7745:9;7741:18;7722:38;:::i;:::-;7712:48;;7807:2;7796:9;7792:18;7779:32;7769:42;;7858:2;7847:9;7843:18;7830:32;7820:42;;7913:3;7902:9;7898:19;7885:33;7941:18;7933:6;7930:30;7927:50;;;7973:1;7970;7963:12;7927:50;7996:49;8037:7;8028:6;8017:9;8013:22;7996:49;:::i;8467:380::-;8546:1;8542:12;;;;8589;;;8610:61;;8664:4;8656:6;8652:17;8642:27;;8610:61;8717:2;8709:6;8706:14;8686:18;8683:38;8680:161;;8763:10;8758:3;8754:20;8751:1;8744:31;8798:4;8795:1;8788:15;8826:4;8823:1;8816:15;8680:161;;8467:380;;;:::o;8852:411::-;9054:2;9036:21;;;9093:2;9073:18;;;9066:30;9132:34;9127:2;9112:18;;9105:62;-1:-1:-1;;;9198:2:10;9183:18;;9176:45;9253:3;9238:19;;8852:411::o;9678:127::-;9739:10;9734:3;9730:20;9727:1;9720:31;9770:4;9767:1;9760:15;9794:4;9791:1;9784:15;9810:127;9871:10;9866:3;9862:20;9859:1;9852:31;9902:4;9899:1;9892:15;9926:4;9923:1;9916:15;9942:135;9981:3;10002:17;;;9999:43;;10022:18;;:::i;:::-;-1:-1:-1;10069:1:10;10058:13;;9942:135::o;10491:401::-;10693:2;10675:21;;;10732:2;10712:18;;;10705:30;10771:34;10766:2;10751:18;;10744:62;-1:-1:-1;;;10837:2:10;10822:18;;10815:35;10882:3;10867:19;;10491:401::o;10897:406::-;11099:2;11081:21;;;11138:2;11118:18;;;11111:30;11177:34;11172:2;11157:18;;11150:62;-1:-1:-1;;;11243:2:10;11228:18;;11221:40;11293:3;11278:19;;10897:406::o;11308:128::-;11348:3;11379:1;11375:6;11372:1;11369:13;11366:39;;;11385:18;;:::i;:::-;-1:-1:-1;11421:9:10;;11308:128::o;11441:465::-;11698:2;11687:9;11680:21;11661:4;11724:56;11776:2;11765:9;11761:18;11753:6;11724:56;:::i;:::-;11828:9;11820:6;11816:22;11811:2;11800:9;11796:18;11789:50;11856:44;11893:6;11885;11856:44;:::i;:::-;11848:52;11441:465;-1:-1:-1;;;;;11441:465:10:o;12574:827::-;-1:-1:-1;;;;;12971:15:10;;;12953:34;;13023:15;;13018:2;13003:18;;12996:43;12933:3;13070:2;13055:18;;13048:31;;;12896:4;;13102:57;;13139:19;;13131:6;13102:57;:::i;:::-;13207:9;13199:6;13195:22;13190:2;13179:9;13175:18;13168:50;13241:44;13278:6;13270;13241:44;:::i;:::-;13227:58;;13334:9;13326:6;13322:22;13316:3;13305:9;13301:19;13294:51;13362:33;13388:6;13380;13362:33;:::i;:::-;13354:41;12574:827;-1:-1:-1;;;;;;;;12574:827:10:o;13406:249::-;13475:6;13528:2;13516:9;13507:7;13503:23;13499:32;13496:52;;;13544:1;13541;13534:12;13496:52;13576:9;13570:16;13595:30;13619:5;13595:30;:::i;13660:179::-;13695:3;13737:1;13719:16;13716:23;13713:120;;;13783:1;13780;13777;13762:23;-1:-1:-1;13820:1:10;13814:8;13809:3;13805:18;13713:120;13660:179;:::o;13844:671::-;13883:3;13925:4;13907:16;13904:26;13901:39;;;13844:671;:::o;13901:39::-;13967:2;13961:9;-1:-1:-1;;14032:16:10;14028:25;;14025:1;13961:9;14004:50;14083:4;14077:11;14107:16;14142:18;14213:2;14206:4;14198:6;14194:17;14191:25;14186:2;14178:6;14175:14;14172:45;14169:58;;;14220:5;;;;;13844:671;:::o;14169:58::-;14257:6;14251:4;14247:17;14236:28;;14293:3;14287:10;14320:2;14312:6;14309:14;14306:27;;;14326:5;;;;;;13844:671;:::o;14306:27::-;14410:2;14391:16;14385:4;14381:27;14377:36;14370:4;14361:6;14356:3;14352:16;14348:27;14345:69;14342:82;;;14417:5;;;;;;13844:671;:::o;14342:82::-;14433:57;14484:4;14475:6;14467;14463:19;14459:30;14453:4;14433:57;:::i;:::-;-1:-1:-1;14506:3:10;;13844:671;-1:-1:-1;;;;;13844:671:10:o;14941:404::-;15143:2;15125:21;;;15182:2;15162:18;;;15155:30;15221:34;15216:2;15201:18;;15194:62;-1:-1:-1;;;15287:2:10;15272:18;;15265:38;15335:3;15320:19;;14941:404::o;15350:561::-;-1:-1:-1;;;;;15647:15:10;;;15629:34;;15699:15;;15694:2;15679:18;;15672:43;15746:2;15731:18;;15724:34;;;15789:2;15774:18;;15767:34;;;15609:3;15832;15817:19;;15810:32;;;15572:4;;15859:46;;15885:19;;15877:6;15859:46;:::i;:::-;15851:54;15350:561;-1:-1:-1;;;;;;;15350:561:10:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1000200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2672",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "544",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1107,
									"end": 1169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1157,
									"end": 1161,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1149,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1149,
									"end": 1162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1149,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1107,
									"end": 1169,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8173,
									"end": 8259,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8173,
									"end": 8259,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8239,
									"end": 8243,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8246,
									"end": 8252,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8239,
									"end": 8243,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 8239,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8239,
									"end": 8252,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8173,
									"end": 8259,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8173,
									"end": 8259,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 259,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 288,
									"end": 297,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 275,
									"end": 298,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 271,
									"end": 303,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 268,
									"end": 320,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 268,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 306,
									"end": 318,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 268,
									"end": 320,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 343,
									"end": 359,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 343,
									"end": 359,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 408,
									"end": 422,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 405,
									"end": 439,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 405,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 433,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 425,
									"end": 437,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 405,
									"end": 439,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 448,
									"end": 480,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 518,
									"end": 525,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 511,
									"end": 515,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 509,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 503,
									"end": 516,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 499,
									"end": 526,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 489,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 540,
									"end": 541,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 538,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 530,
									"end": 542,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 489,
									"end": 544,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 569,
									"end": 571,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 563,
									"end": 572,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 591,
									"end": 593,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 587,
									"end": 589,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 584,
									"end": 594,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 581,
									"end": 617,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 581,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 581,
									"end": 617,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 597,
									"end": 615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 597,
									"end": 615,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 675,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 726,
									"end": 739,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 722,
									"end": 744,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 722,
									"end": 744,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 746,
									"end": 748,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 714,
									"end": 754,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 702,
									"end": 755,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 702,
									"end": 755,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 702,
									"end": 755,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 790,
									"end": 812,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 767,
									"end": 813,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 764,
									"end": 836,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 764,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 764,
									"end": 836,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 816,
									"end": 834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 816,
									"end": 834,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 856,
									"end": 866,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 845,
									"end": 867,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 891,
									"end": 893,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 883,
									"end": 889,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 876,
									"end": 894,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 931,
									"end": 938,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 913,
									"end": 924,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 909,
									"end": 929,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 906,
									"end": 939,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 903,
									"end": 956,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 903,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 952,
									"end": 953,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 950,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 942,
									"end": 954,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 903,
									"end": 956,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 974,
									"end": 975,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 965,
									"end": 975,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1076,
									"end": 1102,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1044,
									"end": 1103,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1131,
									"end": 1133,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1128,
									"end": 1129,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1125,
									"end": 1134,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1190,
									"end": 1191,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1185,
									"end": 1187,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1172,
									"end": 1178,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1183,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1188,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1157,
									"end": 1192,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1221,
									"end": 1227,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1233,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1317,
									"end": 1318,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1435,
									"end": 1439,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1427,
									"end": 1433,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1423,
									"end": 1440,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1488,
									"end": 1490,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1480,
									"end": 1486,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1491,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1457,
									"end": 1475,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1454,
									"end": 1492,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1534,
									"end": 1544,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1529,
									"end": 1532,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1525,
									"end": 1545,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1522,
									"end": 1523,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1515,
									"end": 1546,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1569,
									"end": 1573,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1559,
									"end": 1574,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1597,
									"end": 1601,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1594,
									"end": 1595,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1602,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1749,
									"end": 2294,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1749,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1851,
									"end": 1853,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1846,
									"end": 1849,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1843,
									"end": 1854,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1840,
									"end": 2288,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1840,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1840,
									"end": 2288,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1912,
									"end": 1917,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1908,
									"end": 1910,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1901,
									"end": 1918,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1953,
									"end": 1955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1943,
									"end": 1962,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2027,
									"end": 2029,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2015,
									"end": 2025,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2011,
									"end": 2030,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2008,
									"end": 2009,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2004,
									"end": 2031,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1998,
									"end": 2002,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1994,
									"end": 2032,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2063,
									"end": 2067,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2051,
									"end": 2061,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2048,
									"end": 2068,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2045,
									"end": 2092,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2045,
									"end": 2092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2045,
									"end": 2092,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2086,
									"end": 2090,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2045,
									"end": 2092,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2045,
									"end": 2092,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2141,
									"end": 2143,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2136,
									"end": 2139,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2132,
									"end": 2144,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2129,
									"end": 2130,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 2125,
									"end": 2145,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2119,
									"end": 2123,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2115,
									"end": 2146,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2105,
									"end": 2146,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2105,
									"end": 2146,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2196,
									"end": 2278,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 2196,
									"end": 2278,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2214,
									"end": 2216,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2207,
									"end": 2212,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2204,
									"end": 2217,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2196,
									"end": 2278,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2196,
									"end": 2278,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 2196,
									"end": 2278,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2259,
									"end": 2276,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2259,
									"end": 2276,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2259,
									"end": 2276,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2240,
									"end": 2241,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2229,
									"end": 2242,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2196,
									"end": 2278,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 2196,
									"end": 2278,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2196,
									"end": 2278,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 2196,
									"end": 2278,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2200,
									"end": 2203,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2200,
									"end": 2203,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2200,
									"end": 2203,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1840,
									"end": 2288,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1840,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1749,
									"end": 2294,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1749,
									"end": 2294,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1749,
									"end": 2294,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1749,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2470,
									"end": 3822,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2470,
									"end": 3822,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2590,
									"end": 2600,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2590,
									"end": 2600,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2612,
									"end": 2642,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2612,
									"end": 2642,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2609,
									"end": 2665,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2609,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2609,
									"end": 2665,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2645,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2645,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2645,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2645,
									"end": 2663,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 2645,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2674,
									"end": 2771,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 2764,
									"end": 2770,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2724,
									"end": 2762,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 2756,
									"end": 2760,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2750,
									"end": 2761,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2724,
									"end": 2762,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2724,
									"end": 2762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2724,
									"end": 2762,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 2724,
									"end": 2762,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2718,
									"end": 2722,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2674,
									"end": 2771,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2674,
									"end": 2771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2674,
									"end": 2771,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 2674,
									"end": 2771,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2826,
									"end": 2830,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2826,
									"end": 2830,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2890,
									"end": 2892,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2879,
									"end": 2893,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2879,
									"end": 2893,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2907,
									"end": 2908,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2902,
									"end": 3565,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2902,
									"end": 3565,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2902,
									"end": 3565,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 2902,
									"end": 3565,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3610,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3626,
									"end": 3632,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3623,
									"end": 3712,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3623,
									"end": 3712,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 3623,
									"end": 3712,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3678,
									"end": 3697,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3678,
									"end": 3697,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3678,
									"end": 3697,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3672,
									"end": 3698,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3623,
									"end": 3712,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 3623,
									"end": 3712,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2427,
									"end": 2428,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2423,
									"end": 2434,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2423,
									"end": 2434,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2423,
									"end": 2434,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2419,
									"end": 2443,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2415,
									"end": 2444,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2405,
									"end": 2445,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2451,
									"end": 2452,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2447,
									"end": 2458,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2447,
									"end": 2458,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2447,
									"end": 2458,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2402,
									"end": 2459,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 3725,
									"end": 3806,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3725,
									"end": 3806,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2872,
									"end": 3816,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 2872,
									"end": 3816,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2902,
									"end": 3565,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 2902,
									"end": 3565,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1696,
									"end": 1697,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1689,
									"end": 1703,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1689,
									"end": 1703,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1689,
									"end": 1703,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1733,
									"end": 1737,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1720,
									"end": 1738,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1720,
									"end": 1738,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2938,
									"end": 2958,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2938,
									"end": 2958,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2938,
									"end": 2958,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3056,
									"end": 3292,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 3056,
									"end": 3292,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3070,
									"end": 3077,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3067,
									"end": 3068,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3064,
									"end": 3078,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3056,
									"end": 3292,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3056,
									"end": 3292,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 3056,
									"end": 3292,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3159,
									"end": 3178,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3159,
									"end": 3178,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3159,
									"end": 3178,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3153,
									"end": 3179,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3138,
									"end": 3180,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3138,
									"end": 3180,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3251,
									"end": 3278,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3251,
									"end": 3278,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3251,
									"end": 3278,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3251,
									"end": 3278,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 3219,
									"end": 3220,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3207,
									"end": 3221,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3207,
									"end": 3221,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3207,
									"end": 3221,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3207,
									"end": 3221,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3086,
									"end": 3105,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3086,
									"end": 3105,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3056,
									"end": 3292,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 3056,
									"end": 3292,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3056,
									"end": 3292,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 3056,
									"end": 3292,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3060,
									"end": 3063,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3320,
									"end": 3326,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3311,
									"end": 3318,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3308,
									"end": 3327,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3305,
									"end": 3506,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3305,
									"end": 3506,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 3305,
									"end": 3506,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3381,
									"end": 3400,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3381,
									"end": 3400,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3381,
									"end": 3400,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3375,
									"end": 3401,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3464,
									"end": 3465,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3460,
									"end": 3474,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 3460,
									"end": 3474,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3460,
									"end": 3474,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3476,
									"end": 3479,
									"name": "PUSH",
									"source": 10,
									"value": "F8"
								},
								{
									"begin": 3456,
									"end": 3480,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3452,
									"end": 3489,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3448,
									"end": 3490,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3433,
									"end": 3491,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3418,
									"end": 3492,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3418,
									"end": 3492,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3305,
									"end": 3506,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 3305,
									"end": 3506,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3552,
									"end": 3553,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3536,
									"end": 3550,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3550,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3550,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 3532,
									"end": 3554,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3519,
									"end": 3555,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3519,
									"end": 3555,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2470,
									"end": 3822,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2470,
									"end": 3822,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2470,
									"end": 3822,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 17261,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3c892a77671faacb55c9d0fb43021c61ff68ef5cdc488a4039027a3478b739764736f6c634300080f0033",
									".code": [
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "F242432A"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "FDD58E"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "2EB2C2D6"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 17261,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 2412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4065,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4065,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2569,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2569,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2569,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3145,
											"end": 3298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3145,
											"end": 3298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3365,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3464,
											"end": 3468,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3514,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3598,
											"end": 3993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3598,
											"end": 3993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8258,
											"end": 8260,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8240,
											"end": 8261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8299,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8270,
											"end": 8300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8336,
											"end": 8370,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8309,
											"end": 8371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8420,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8437,
											"end": 8456,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 8437,
											"end": 8456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2290,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2383,
											"end": 2392,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2383,
											"end": 2405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1414,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1482,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1373,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1373,
											"end": 1534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1498,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1354,
											"end": 1534,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1541,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1236,
											"end": 1541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2013,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2025,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 2043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4290,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4290,
											"end": 4350,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4314,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4331,
											"end": 4335,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3365,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4314,
											"end": 4350,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4314,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4269,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4269,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4456,
											"end": 4460,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4466,
											"end": 4469,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4471,
											"end": 4478,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4480,
											"end": 4484,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4433,
											"end": 4485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2720,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2775,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2789,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9472,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9452,
											"end": 9473,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9509,
											"end": 9511,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9512,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9548,
											"end": 9582,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 9528,
											"end": 9546,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9528,
											"end": 9546,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9528,
											"end": 9546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9521,
											"end": 9583,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9592,
											"end": 9631,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9648,
											"end": 9667,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9648,
											"end": 9667,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 9268,
											"end": 9673,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2752,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2901,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 2908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2879,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 2934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2952,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 2959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2940,
											"end": 2941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2940,
											"end": 2959,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3009,
											"end": 3017,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3009,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3025,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3022,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2999,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2999,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2993,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2994,
											"end": 2995,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2980,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2961,
											"end": 2964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2920,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3057,
											"end": 3070,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2569,
											"end": 3077,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2569,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3280,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3239,
											"end": 3291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3239,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3598,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3798,
											"end": 3858,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3365,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3365,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3822,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3777,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3777,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3959,
											"end": 3963,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3965,
											"end": 3967,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3971,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3973,
											"end": 3979,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3941,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6455,
											"end": 6462,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6455,
											"end": 6469,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6441,
											"end": 6444,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6441,
											"end": 6451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6441,
											"end": 6469,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10286,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10266,
											"end": 10287,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10323,
											"end": 10325,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 10303,
											"end": 10321,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10303,
											"end": 10321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10321,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10296,
											"end": 10326,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10396,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 10342,
											"end": 10360,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10342,
											"end": 10360,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10342,
											"end": 10360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10335,
											"end": 10397,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10406,
											"end": 10444,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10461,
											"end": 10480,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10461,
											"end": 10480,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 10082,
											"end": 10486,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6433,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6532,
											"end": 6548,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6524,
											"end": 6590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6524,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6738,
											"end": 6748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6748,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6785,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6786,
											"end": 6787,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6782,
											"end": 6788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6769,
											"end": 6788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6802,
											"end": 6816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6826,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6827,
											"end": 6828,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6819,
											"end": 6829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6863,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6879,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6885,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6907,
											"end": 6928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6907,
											"end": 6928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6907,
											"end": 6928,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6907,
											"end": 6928,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6899,
											"end": 6975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6899,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7030,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7036,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7059,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7104,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7087,
											"end": 7114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 7125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6750,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6714,
											"end": 7125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7164,
											"end": 7168,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7154,
											"end": 7162,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7174,
											"end": 7177,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7179,
											"end": 7186,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7140,
											"end": 7187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7187,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7268,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7304,
											"end": 7312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7314,
											"end": 7318,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7320,
											"end": 7322,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7329,
											"end": 7336,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7338,
											"end": 7342,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7268,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 7268,
											"end": 7343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7268,
											"end": 7343,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7268,
											"end": 7343,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 7350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6235,
											"end": 7350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13062,
											"end": 13070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13053,
											"end": 13070,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13053,
											"end": 13058,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13053,
											"end": 13070,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13053,
											"end": 13070,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12113,
											"end": 12115,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12095,
											"end": 12116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12152,
											"end": 12154,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 12132,
											"end": 12150,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12132,
											"end": 12150,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12132,
											"end": 12150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12125,
											"end": 12155,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12191,
											"end": 12225,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12164,
											"end": 12226,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12242,
											"end": 12260,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12242,
											"end": 12260,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12242,
											"end": 12260,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12235,
											"end": 12274,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12291,
											"end": 12310,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12291,
											"end": 12310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 11911,
											"end": 12316,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 13045,
											"end": 13116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13144,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13151,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13161,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13126,
											"end": 13172,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13187,
											"end": 13228,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 13235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12912,
											"end": 13235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5123,
											"end": 5139,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5115,
											"end": 5181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5115,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5192,
											"end": 5208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5274,
											"end": 5276,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5256,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5256,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5233,
											"end": 5277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5233,
											"end": 5277,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5332,
											"end": 5338,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5314,
											"end": 5339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5314,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5339,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5421,
											"end": 5440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5443,
											"end": 5462,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5501,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5501,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5501,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5480,
											"end": 5501,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5472,
											"end": 5548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5472,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5661,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 5644,
											"end": 5671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5644,
											"end": 5671,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12520,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12520,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12520,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12551,
											"end": 12553,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12536,
											"end": 12554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12536,
											"end": 12554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12529,
											"end": 12563,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 12529,
											"end": 12563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12529,
											"end": 12563,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12468,
											"end": 12486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5687,
											"end": 5733,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5814,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5845,
											"end": 5853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5855,
											"end": 5859,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5861,
											"end": 5863,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5865,
											"end": 5867,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5869,
											"end": 5875,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5877,
											"end": 5881,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5814,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5814,
											"end": 5882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5814,
											"end": 5882,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5814,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5105,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5105,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5105,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5105,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4942,
											"end": 5889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16500,
											"end": 16513,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16500,
											"end": 16513,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 16496,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 16496,
											"end": 17054,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16535,
											"end": 16578,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16578,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16578,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 16535,
											"end": 16578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16579,
											"end": 16587,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16579,
											"end": 16587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16589,
											"end": 16593,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16589,
											"end": 16593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16595,
											"end": 16598,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16595,
											"end": 16598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16600,
											"end": 16607,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16600,
											"end": 16607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16609,
											"end": 16613,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16609,
											"end": 16613,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 16535,
											"end": 16614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 16535,
											"end": 16614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 16535,
											"end": 16614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 16531,
											"end": 17044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 16531,
											"end": 17044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16920,
											"end": 16926,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16913,
											"end": 16927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 16913,
											"end": 16927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14722,
											"end": 14724,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14704,
											"end": 14725,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14761,
											"end": 14763,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 14741,
											"end": 14759,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14741,
											"end": 14759,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14741,
											"end": 14759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14734,
											"end": 14764,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14800,
											"end": 14834,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 14780,
											"end": 14798,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14780,
											"end": 14798,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14780,
											"end": 14798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14773,
											"end": 14835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14851,
											"end": 14869,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14851,
											"end": 14869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14851,
											"end": 14869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14844,
											"end": 14894,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14911,
											"end": 14930,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14911,
											"end": 14930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16967,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 14520,
											"end": 14936,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 16531,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16693,
											"end": 16753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16693,
											"end": 16753,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16693,
											"end": 16753,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16689,
											"end": 16846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 16689,
											"end": 16846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16777,
											"end": 16827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 16777,
											"end": 16827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16689,
											"end": 16846,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 16689,
											"end": 16846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16615,
											"end": 16860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 17060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16268,
											"end": 17060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17066,
											"end": 17259,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 17066,
											"end": 17259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17199,
											"end": 17200,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17132,
											"end": 17148,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17132,
											"end": 17148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17160,
											"end": 17182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17160,
											"end": 17182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17185,
											"end": 17201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17160,
											"end": 17201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17160,
											"end": 17201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17222,
											"end": 17229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17217,
											"end": 17218,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 17211,
											"end": 17219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17219,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17211,
											"end": 17229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17247,
											"end": 17252,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17066,
											"end": 17259,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17066,
											"end": 17259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15537,
											"end": 16262,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 15537,
											"end": 16262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15744,
											"end": 15757,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15744,
											"end": 15757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15740,
											"end": 16256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 15740,
											"end": 16256,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15779,
											"end": 15817,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15817,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 15779,
											"end": 15817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15818,
											"end": 15826,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15818,
											"end": 15826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15828,
											"end": 15832,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 15828,
											"end": 15832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15834,
											"end": 15836,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15834,
											"end": 15836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15844,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15838,
											"end": 15844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15846,
											"end": 15850,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15846,
											"end": 15850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 15779,
											"end": 15851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 15779,
											"end": 15851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 15779,
											"end": 15851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 15775,
											"end": 16246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 15775,
											"end": 16246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15900,
											"end": 15955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15900,
											"end": 15955,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15900,
											"end": 15955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15896,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 15896,
											"end": 16048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15979,
											"end": 16029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 15979,
											"end": 16029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 633,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1774,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1755,
											"end": 1782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1829,
											"end": 1844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2024,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2004,
											"end": 2025,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 1989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2083,
											"end": 2085,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2042,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2169,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 2154,
											"end": 2157,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2150,
											"end": 2170,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2171,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2340,
											"end": 2342,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2357,
											"end": 2419,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2422,
											"end": 2440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2460,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 2479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2595,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2596,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2599,
											"end": 2617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2640,
											"end": 2654,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2756,
											"end": 2783,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2799,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2882,
											"end": 2925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2957,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2994,
											"end": 2996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2966,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3166,
											"end": 3178,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3212,
											"end": 3214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3200,
											"end": 3215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3240,
											"end": 3246,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3235,
											"end": 3238,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3390,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 3396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3477,
											"end": 3494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3557,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3574,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 3595,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 3598,
											"end": 3616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3714,
											"end": 3716,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3718,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3724,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 3659,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3753,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3796,
											"end": 3799,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3786,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3800,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3858,
											"end": 3875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3880,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3921,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4179,
											"end": 4186,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4175,
											"end": 4198,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4171,
											"end": 4204,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4215,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4259,
											"end": 4268,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4240,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4322,
											"end": 4324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4288,
											"end": 4326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4377,
											"end": 4379,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4349,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4430,
											"end": 4444,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4533,
											"end": 4540,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4530,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4522,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4480,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4594,
											"end": 4596,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4583,
											"end": 4592,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4566,
											"end": 4598,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4623,
											"end": 4625,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4717,
											"end": 4724,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4714,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4662,
											"end": 4725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4778,
											"end": 4781,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4750,
											"end": 4783,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4798,
											"end": 4806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4795,
											"end": 4811,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4826,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4879,
											"end": 4887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4868,
											"end": 4877,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4864,
											"end": 4888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4847,
											"end": 4898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 4904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5090,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5085,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5074,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5059,
											"end": 5091,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5214,
											"end": 5216,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5203,
											"end": 5217,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5253,
											"end": 5275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5320,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5310,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5321,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5325,
											"end": 5337,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5358,
											"end": 5374,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 5416,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5488,
											"end": 5490,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5491,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 5500,
											"end": 5531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5655,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5700,
											"end": 5712,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5770,
											"end": 5776,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 5855,
											"end": 5858,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5836,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5921,
											"end": 5927,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6023,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6092,
											"end": 6100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6101,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 6048,
											"end": 6111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 6117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6240,
											"end": 6246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6238,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6228,
											"end": 6247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6270,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6295,
											"end": 6297,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6286,
											"end": 6298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6325,
											"end": 6330,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6374,
											"end": 6375,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6371,
											"end": 6384,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6122,
											"end": 6557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 6743,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6723,
											"end": 6744,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6704,
											"end": 6708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 6813,
											"end": 6815,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6802,
											"end": 6811,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 6761,
											"end": 6817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6893,
											"end": 6899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6954,
											"end": 6956,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6951,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6940,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6929,
											"end": 6952,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6925,
											"end": 6957,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 6972,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 6993,
											"end": 7022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7072,
											"end": 7074,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7044,
											"end": 7076,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7124,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7125,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7105,
											"end": 7126,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7095,
											"end": 7127,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7141,
											"end": 7142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7131,
											"end": 7143,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 7175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7309,
											"end": 7311,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7295,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7307,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7280,
											"end": 7312,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7315,
											"end": 7327,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7367,
											"end": 7376,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 7348,
											"end": 7377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7430,
											"end": 7432,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7419,
											"end": 7428,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 7396,
											"end": 7434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7563,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7581,
											"end": 7587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7637,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 7622,
											"end": 7631,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7605,
											"end": 7638,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7651,
											"end": 7652,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7641,
											"end": 7653,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 7674,
											"end": 7703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 7756,
											"end": 7758,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7754,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7741,
											"end": 7759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 7722,
											"end": 7760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7807,
											"end": 7809,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7796,
											"end": 7805,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7811,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7858,
											"end": 7860,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 7861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7830,
											"end": 7862,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7913,
											"end": 7916,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7902,
											"end": 7911,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7898,
											"end": 7917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7885,
											"end": 7918,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7933,
											"end": 7939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7963,
											"end": 7975,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 8037,
											"end": 8044,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8017,
											"end": 8026,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8013,
											"end": 8035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 7996,
											"end": 8045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8467,
											"end": 8847,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8467,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8546,
											"end": 8547,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8542,
											"end": 8554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8542,
											"end": 8554,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8542,
											"end": 8554,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 8542,
											"end": 8554,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8589,
											"end": 8601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8589,
											"end": 8601,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8589,
											"end": 8601,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8610,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 8610,
											"end": 8671,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8664,
											"end": 8668,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 8656,
											"end": 8662,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8652,
											"end": 8669,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8642,
											"end": 8669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8642,
											"end": 8669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8610,
											"end": 8671,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 8610,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8717,
											"end": 8719,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8706,
											"end": 8720,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8686,
											"end": 8704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8683,
											"end": 8721,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8680,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 8680,
											"end": 8841,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8763,
											"end": 8773,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 8758,
											"end": 8761,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 8754,
											"end": 8774,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 8751,
											"end": 8752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8775,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8798,
											"end": 8802,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8788,
											"end": 8803,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8826,
											"end": 8830,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8823,
											"end": 8824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8816,
											"end": 8831,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8680,
											"end": 8841,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 8680,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8680,
											"end": 8841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8467,
											"end": 8847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8467,
											"end": 8847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8467,
											"end": 8847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8467,
											"end": 8847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8852,
											"end": 9263,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 8852,
											"end": 9263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9054,
											"end": 9056,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9036,
											"end": 9057,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9057,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9093,
											"end": 9095,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 9073,
											"end": 9091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9073,
											"end": 9091,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9073,
											"end": 9091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9066,
											"end": 9096,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9132,
											"end": 9166,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 9127,
											"end": 9129,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9112,
											"end": 9130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9105,
											"end": 9167,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9198,
											"end": 9200,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9176,
											"end": 9221,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9238,
											"end": 9257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9238,
											"end": 9257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8852,
											"end": 9263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9678,
											"end": 9805,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 9678,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9739,
											"end": 9749,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 9734,
											"end": 9737,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9730,
											"end": 9750,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9727,
											"end": 9728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9720,
											"end": 9751,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9770,
											"end": 9774,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9767,
											"end": 9768,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9760,
											"end": 9775,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9794,
											"end": 9798,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9791,
											"end": 9792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9784,
											"end": 9799,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9810,
											"end": 9937,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 9810,
											"end": 9937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9871,
											"end": 9881,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 9866,
											"end": 9869,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 9862,
											"end": 9882,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 9859,
											"end": 9860,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9852,
											"end": 9883,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9902,
											"end": 9906,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9899,
											"end": 9900,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9892,
											"end": 9907,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9926,
											"end": 9930,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9923,
											"end": 9924,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9916,
											"end": 9931,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9942,
											"end": 10077,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 9942,
											"end": 10077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9981,
											"end": 9984,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10002,
											"end": 10019,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10002,
											"end": 10019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10002,
											"end": 10019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9999,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 9999,
											"end": 10042,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 10022,
											"end": 10040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10069,
											"end": 10070,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10058,
											"end": 10071,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9942,
											"end": 10077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10491,
											"end": 10892,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 10491,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10695,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10675,
											"end": 10696,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10675,
											"end": 10696,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10675,
											"end": 10696,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10732,
											"end": 10734,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 10712,
											"end": 10730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10712,
											"end": 10730,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10712,
											"end": 10730,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10705,
											"end": 10735,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10771,
											"end": 10805,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 10766,
											"end": 10768,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10744,
											"end": 10806,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10837,
											"end": 10839,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10822,
											"end": 10840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10822,
											"end": 10840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10850,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10882,
											"end": 10885,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10867,
											"end": 10886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10867,
											"end": 10886,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10491,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10897,
											"end": 11303,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 10897,
											"end": 11303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11101,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11081,
											"end": 11102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11081,
											"end": 11102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11081,
											"end": 11102,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11138,
											"end": 11140,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 11118,
											"end": 11136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11118,
											"end": 11136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11118,
											"end": 11136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11111,
											"end": 11141,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11177,
											"end": 11211,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 11172,
											"end": 11174,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11157,
											"end": 11175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11157,
											"end": 11175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11150,
											"end": 11212,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11245,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11228,
											"end": 11246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11228,
											"end": 11246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11221,
											"end": 11261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11293,
											"end": 11296,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11278,
											"end": 11297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11278,
											"end": 11297,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10897,
											"end": 11303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11308,
											"end": 11436,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 11308,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11348,
											"end": 11351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11379,
											"end": 11380,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11375,
											"end": 11381,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 11372,
											"end": 11373,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11369,
											"end": 11382,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11366,
											"end": 11405,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11366,
											"end": 11405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 11366,
											"end": 11405,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 11385,
											"end": 11403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11421,
											"end": 11430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11421,
											"end": 11430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11308,
											"end": 11436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11441,
											"end": 11906,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 11441,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11698,
											"end": 11700,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11687,
											"end": 11696,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11680,
											"end": 11701,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11661,
											"end": 11665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11724,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 11776,
											"end": 11778,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11765,
											"end": 11774,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11753,
											"end": 11759,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11724,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 11724,
											"end": 11780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11724,
											"end": 11780,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 11724,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11828,
											"end": 11837,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 11826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11816,
											"end": 11838,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11811,
											"end": 11813,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11800,
											"end": 11809,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11796,
											"end": 11814,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11789,
											"end": 11839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11856,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 11893,
											"end": 11899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11885,
											"end": 11891,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11856,
											"end": 11900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 11856,
											"end": 11900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11856,
											"end": 11900,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 11856,
											"end": 11900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11848,
											"end": 11900,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 11441,
											"end": 11906,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11441,
											"end": 11906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12574,
											"end": 13401,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 12574,
											"end": 13401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12971,
											"end": 12986,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12971,
											"end": 12986,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12971,
											"end": 12986,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12953,
											"end": 12987,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12953,
											"end": 12987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13023,
											"end": 13038,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13023,
											"end": 13038,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13018,
											"end": 13020,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13003,
											"end": 13021,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13003,
											"end": 13021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12996,
											"end": 13039,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12933,
											"end": 12936,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 13070,
											"end": 13072,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13055,
											"end": 13073,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13055,
											"end": 13073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13048,
											"end": 13079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13048,
											"end": 13079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13048,
											"end": 13079,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12896,
											"end": 12900,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12896,
											"end": 12900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13102,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 13102,
											"end": 13159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13139,
											"end": 13158,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13139,
											"end": 13158,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13131,
											"end": 13137,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13102,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 13102,
											"end": 13159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13102,
											"end": 13159,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 13102,
											"end": 13159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13207,
											"end": 13216,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13199,
											"end": 13205,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13195,
											"end": 13217,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13190,
											"end": 13192,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13179,
											"end": 13188,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13175,
											"end": 13193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13168,
											"end": 13218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13241,
											"end": 13285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 13278,
											"end": 13284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13270,
											"end": 13276,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13241,
											"end": 13285,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 13241,
											"end": 13285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13241,
											"end": 13285,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 13241,
											"end": 13285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13227,
											"end": 13285,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13227,
											"end": 13285,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13334,
											"end": 13343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13326,
											"end": 13332,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13322,
											"end": 13344,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13316,
											"end": 13319,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13305,
											"end": 13314,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13301,
											"end": 13320,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13294,
											"end": 13345,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13362,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 13388,
											"end": 13394,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13380,
											"end": 13386,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13362,
											"end": 13395,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 13362,
											"end": 13395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13362,
											"end": 13395,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 13362,
											"end": 13395,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13354,
											"end": 13395,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 12574,
											"end": 13401,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12574,
											"end": 13401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13406,
											"end": 13655,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 13406,
											"end": 13655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13475,
											"end": 13481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13528,
											"end": 13530,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13516,
											"end": 13525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13507,
											"end": 13514,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13503,
											"end": 13526,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13499,
											"end": 13531,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13496,
											"end": 13548,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13496,
											"end": 13548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 13496,
											"end": 13548,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13544,
											"end": 13545,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13541,
											"end": 13542,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13534,
											"end": 13546,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13496,
											"end": 13548,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 13496,
											"end": 13548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13576,
											"end": 13585,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13570,
											"end": 13586,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13595,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13595,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 13595,
											"end": 13625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13660,
											"end": 13839,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 13660,
											"end": 13839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13695,
											"end": 13698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13737,
											"end": 13738,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 13719,
											"end": 13735,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13716,
											"end": 13739,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13833,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 13713,
											"end": 13833,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13783,
											"end": 13784,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13780,
											"end": 13781,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13778,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13762,
											"end": 13785,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13820,
											"end": 13821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13814,
											"end": 13822,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13809,
											"end": 13812,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 13805,
											"end": 13823,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 13713,
											"end": 13833,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 13713,
											"end": 13833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13660,
											"end": 13839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13660,
											"end": 13839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13844,
											"end": 14515,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 13844,
											"end": 14515,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13883,
											"end": 13886,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13925,
											"end": 13929,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13907,
											"end": 13923,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 13904,
											"end": 13930,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13901,
											"end": 13940,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13901,
											"end": 13940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 13901,
											"end": 13940,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13844,
											"end": 14515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13844,
											"end": 14515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13901,
											"end": 13940,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 13901,
											"end": 13940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13961,
											"end": 13970,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14032,
											"end": 14048,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14028,
											"end": 14053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14028,
											"end": 14053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14025,
											"end": 14026,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13961,
											"end": 13970,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14004,
											"end": 14054,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 14083,
											"end": 14087,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14077,
											"end": 14088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14107,
											"end": 14123,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14142,
											"end": 14160,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14213,
											"end": 14215,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14206,
											"end": 14210,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14198,
											"end": 14204,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14211,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14191,
											"end": 14216,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14186,
											"end": 14188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14178,
											"end": 14184,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14175,
											"end": 14189,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14172,
											"end": 14217,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14227,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14227,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 14169,
											"end": 14227,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14220,
											"end": 14225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14220,
											"end": 14225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14220,
											"end": 14225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14220,
											"end": 14225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14220,
											"end": 14225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13844,
											"end": 14515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13844,
											"end": 14515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14227,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 14169,
											"end": 14227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14257,
											"end": 14263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14251,
											"end": 14255,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14247,
											"end": 14264,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14264,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14236,
											"end": 14264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14293,
											"end": 14296,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14287,
											"end": 14297,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14320,
											"end": 14322,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14312,
											"end": 14318,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14309,
											"end": 14323,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14306,
											"end": 14333,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14306,
											"end": 14333,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 14306,
											"end": 14333,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14326,
											"end": 14331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13844,
											"end": 14515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13844,
											"end": 14515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14306,
											"end": 14333,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 14306,
											"end": 14333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14410,
											"end": 14412,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14391,
											"end": 14407,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 14385,
											"end": 14389,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14381,
											"end": 14408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14377,
											"end": 14413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14370,
											"end": 14374,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14361,
											"end": 14367,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14356,
											"end": 14359,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14352,
											"end": 14368,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14348,
											"end": 14375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14345,
											"end": 14414,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14342,
											"end": 14424,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14342,
											"end": 14424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 14342,
											"end": 14424,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14417,
											"end": 14422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14417,
											"end": 14422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14417,
											"end": 14422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14417,
											"end": 14422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14417,
											"end": 14422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14417,
											"end": 14422,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13844,
											"end": 14515,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13844,
											"end": 14515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14342,
											"end": 14424,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 14342,
											"end": 14424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14433,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 14484,
											"end": 14488,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14467,
											"end": 14473,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14463,
											"end": 14482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14459,
											"end": 14489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14453,
											"end": 14457,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 14433,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 14433,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14433,
											"end": 14490,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 14433,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14506,
											"end": 14509,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 13844,
											"end": 14515,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13844,
											"end": 14515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14941,
											"end": 15345,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 14941,
											"end": 15345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15143,
											"end": 15145,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15125,
											"end": 15146,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15125,
											"end": 15146,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15125,
											"end": 15146,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15182,
											"end": 15184,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 15162,
											"end": 15180,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15162,
											"end": 15180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15162,
											"end": 15180,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15155,
											"end": 15185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15221,
											"end": 15255,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 15216,
											"end": 15218,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15201,
											"end": 15219,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15201,
											"end": 15219,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15194,
											"end": 15256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15287,
											"end": 15289,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15272,
											"end": 15290,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15272,
											"end": 15290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15265,
											"end": 15303,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15335,
											"end": 15338,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 15320,
											"end": 15339,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15320,
											"end": 15339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14941,
											"end": 15345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15350,
											"end": 15911,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 15350,
											"end": 15911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15647,
											"end": 15662,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 15662,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 15662,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15629,
											"end": 15663,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15629,
											"end": 15663,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15699,
											"end": 15714,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15699,
											"end": 15714,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 15694,
											"end": 15696,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15679,
											"end": 15697,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15679,
											"end": 15697,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15672,
											"end": 15715,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15746,
											"end": 15748,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15731,
											"end": 15749,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15731,
											"end": 15749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15724,
											"end": 15758,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15724,
											"end": 15758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15724,
											"end": 15758,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15789,
											"end": 15791,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15774,
											"end": 15792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15774,
											"end": 15792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15767,
											"end": 15801,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15767,
											"end": 15801,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15767,
											"end": 15801,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15612,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 15832,
											"end": 15835,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 15817,
											"end": 15836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15817,
											"end": 15836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15810,
											"end": 15842,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15810,
											"end": 15842,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15810,
											"end": 15842,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15572,
											"end": 15576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15572,
											"end": 15576,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15859,
											"end": 15905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 15859,
											"end": 15905,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15885,
											"end": 15904,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15885,
											"end": 15904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15877,
											"end": 15883,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15859,
											"end": 15905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 15859,
											"end": 15905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15859,
											"end": 15905,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 15859,
											"end": 15905,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15851,
											"end": 15905,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 15350,
											"end": 15911,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15350,
											"end": 15911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								".deps/contracts/WOM_Mint.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x447a21c87433c0f11252912313a96f3454629ef88cca7a4eefbb283b3ec409f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67d35750fb5ced798b82b8ab085eb5f71529b0d4f72152d182b5bebdc770b20d\",\"dweb:/ipfs/QmUqmyzRZxaLvSXig87HFZgiUxv9ivc2VqfAbxEw7rx32d\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 172,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 178,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 180,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209c04b831aac689088ded863f1485f0f5f3c68efcc39fd774c35c7d3466935d9164736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c04b831aac689088ded863f1485f0f5f3c68efcc39fd774c35c7d3466935d9164736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 DIV 0xB8 BALANCE 0xAA 0xC6 DUP10 ADDMOD DUP14 0xED DUP7 EXTCODEHASH EQ DUP6 CREATE CREATE2 RETURN 0xC6 DUP15 0xFC 0xC3 SWAP16 0xD7 PUSH21 0xC35C7D3466935D9164736F6C634300080F00330000 ",
							"sourceMap": "194:8111:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c04b831aac689088ded863f1485f0f5f3c68efcc39fd774c35c7d3466935d9164736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 DIV 0xB8 BALANCE 0xAA 0xC6 DUP10 ADDMOD DUP14 0xED DUP7 EXTCODEHASH EQ DUP6 CREATE CREATE2 RETURN 0xC6 DUP15 0xFC 0xC3 SWAP16 0xD7 PUSH21 0xC35C7D3466935D9164736F6C634300080F00330000 ",
							"sourceMap": "194:8111:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209c04b831aac689088ded863f1485f0f5f3c68efcc39fd774c35c7d3466935d9164736f6c634300080f0033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								".deps/contracts/WOM_Mint.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/contracts/WOM_Mint.sol": {
				"ast": {
					"absolutePath": ".deps/contracts/WOM_Mint.sol",
					"exportedSymbols": {
						"Address": [
							1842
						],
						"Context": [
							1864
						],
						"ERC1155": [
							1369
						],
						"ERC165": [
							1888
						],
						"IERC1155": [
							1491
						],
						"IERC1155MetadataURI": [
							1547
						],
						"IERC1155Receiver": [
							1532
						],
						"IERC165": [
							1900
						],
						"Ownable": [
							146
						],
						"WOMNFT": [
							33
						]
					},
					"id": 34,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 34,
							"sourceUnit": 1370,
							"src": "64:59:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 34,
							"sourceUnit": 147,
							"src": "124:52:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1369,
										"src": "197:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "197:7:0"
								},
								{
									"baseName": {
										"id": 6,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 146,
										"src": "206:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "206:7:0"
								}
							],
							"canonicalName": "WOMNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 33,
							"linearizedBaseContracts": [
								33,
								146,
								1369,
								1547,
								1491,
								1888,
								1900,
								1864
							],
							"name": "WOMNFT",
							"nameLocation": "187:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "249:13:0",
										"statements": []
									},
									"id": 14,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "",
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "245:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												}
											],
											"id": 11,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 9,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1369,
												"src": "237:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "237:11:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "234:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "249:0:0"
									},
									"scope": 33,
									"src": "223:39:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "336:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 24,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "352:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "352:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 26,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 27,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "373:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "381:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 23,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "346:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "346:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "346:38:0"
											}
										]
									},
									"functionSelector": "1b2ef1ca",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 21,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 20,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 65,
												"src": "319:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "319:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "281:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "294:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "286:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "311:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "303:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "285:33:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "336:0:0"
									},
									"scope": 33,
									"src": "272:119:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 34,
							"src": "178:215:0",
							"usedErrors": []
						}
					],
					"src": "38:355:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1864
						],
						"Ownable": [
							146
						]
					},
					"id": 147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 35,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 36,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 147,
							"sourceUnit": 1865,
							"src": "127:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 38,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1864,
										"src": "683:7:1"
									},
									"id": 39,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 37,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 146,
							"linearizedBaseContracts": [
								146,
								1864
							],
							"name": "Ownable",
							"nameLocation": "672:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 41,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 146,
									"src": "697:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 40,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 47,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "753:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "784:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:1"
									},
									"src": "726:84:1"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "926:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 52,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "955:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 51,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "936:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "936:32:1"
											}
										]
									},
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 57,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:1"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:1"
									},
									"scope": 146,
									"src": "912:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1084:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 60,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "1094:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:1"
											},
											{
												"id": 63,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:1"
											}
										]
									},
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 65,
									"name": "onlyOwner",
									"nameLocation": "1072:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:1"
									},
									"src": "1063:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1256:30:1",
										"statements": [
											{
												"expression": {
													"id": 71,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 41,
													"src": "1273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "1266:13:1"
											}
										]
									},
									"documentation": {
										"id": 66,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:1"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1247:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:1"
									},
									"scope": 146,
									"src": "1201:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "1404:85:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 79,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "1422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 81,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1854,
																	"src": "1433:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 78,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:1"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:1"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:1"
									},
									"scope": 146,
									"src": "1359:130:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1885:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 95,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 94,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1895:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:1"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 92,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 91,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 65,
												"src": "1875:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:1"
									},
									"scope": 146,
									"src": "1831:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2151:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 111,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "2169:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 112,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 121,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2263:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 120,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2244:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:1"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 108,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 107,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 65,
												"src": "2141:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2108:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:1"
									},
									"scope": 146,
									"src": "2081:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "2496:124:1",
										"statements": [
											{
												"assignments": [
													132
												],
												"declarations": [
													{
														"constant": false,
														"id": 132,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 144,
														"src": "2506:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 131,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 134,
												"initialValue": {
													"id": 133,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 41,
													"src": "2525:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:1"
											},
											{
												"expression": {
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 135,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "2541:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 136,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2550:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 140,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "2594:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 141,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2604:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 139,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "2573:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "EmitStatement",
												"src": "2568:45:1"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2461:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:1"
									},
									"scope": 146,
									"src": "2433:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 147,
							"src": "654:1968:1",
							"usedErrors": []
						}
					],
					"src": "102:2521:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							1842
						],
						"Context": [
							1864
						],
						"ERC1155": [
							1369
						],
						"ERC165": [
							1888
						],
						"IERC1155": [
							1491
						],
						"IERC1155MetadataURI": [
							1547
						],
						"IERC1155Receiver": [
							1532
						],
						"IERC165": [
							1900
						]
					},
					"id": 1370,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1370,
							"sourceUnit": 1492,
							"src": "134:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1370,
							"sourceUnit": 1533,
							"src": "159:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1370,
							"sourceUnit": 1548,
							"src": "192:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 152,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1370,
							"sourceUnit": 1843,
							"src": "239:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1370,
							"sourceUnit": 1865,
							"src": "273:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 154,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1370,
							"sourceUnit": 1889,
							"src": "307:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 156,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1864,
										"src": "590:7:2"
									},
									"id": 157,
									"nodeType": "InheritanceSpecifier",
									"src": "590:7:2"
								},
								{
									"baseName": {
										"id": 158,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1888,
										"src": "599:6:2"
									},
									"id": 159,
									"nodeType": "InheritanceSpecifier",
									"src": "599:6:2"
								},
								{
									"baseName": {
										"id": 160,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1491,
										"src": "607:8:2"
									},
									"id": 161,
									"nodeType": "InheritanceSpecifier",
									"src": "607:8:2"
								},
								{
									"baseName": {
										"id": 162,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1547,
										"src": "617:19:2"
									},
									"id": 163,
									"nodeType": "InheritanceSpecifier",
									"src": "617:19:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 155,
								"nodeType": "StructuredDocumentation",
								"src": "355:214:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1369,
							"linearizedBaseContracts": [
								1369,
								1547,
								1491,
								1888,
								1900,
								1864
							],
							"name": "ERC1155",
							"nameLocation": "579:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 166,
									"libraryName": {
										"id": 164,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1842,
										"src": "649:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "643:26:2",
									"typeName": {
										"id": 165,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 172,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "780:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "724:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 171,
										"keyType": {
											"id": 167,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "724:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 170,
											"keyType": {
												"id": 168,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "751:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "743:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 169,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "762:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 178,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "899:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "846:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 177,
										"keyType": {
											"id": 173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "854:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "846:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 176,
											"keyType": {
												"id": 174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "873:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "865:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 175,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "884:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 180,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1053:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "1038:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 179,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1038:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "1139:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 187,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "1157:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 186,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "1149:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1149:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "1149:13:2"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "1064:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 191,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1133:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1119:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 182,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:20:2"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1139:0:2"
									},
									"scope": 1369,
									"src": "1107:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1887,
										1899
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1344:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 202,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1373:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 204,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1491,
																			"src": "1393:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1491_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1491_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 203,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1388:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1388:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1491",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1388:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1373:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1430:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 210,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "1450:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1547_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1547_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 209,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1445:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1445:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1547",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1445:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1430:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1373:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 217,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1522:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 215,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1498:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1369_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1887,
															"src": "1498:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1498:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1373:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 201,
												"id": 220,
												"nodeType": "Return",
												"src": "1354:180:2"
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "1175:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1245:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 198,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 196,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1888,
												"src": "1312:6:2"
											},
											{
												"id": 197,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1900,
												"src": "1320:7:2"
											}
										],
										"src": "1303:25:2"
									},
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1270:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1263:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 193,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1338:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1338:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:6:2"
									},
									"scope": 1369,
									"src": "1236:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1546
									],
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2015:28:2",
										"statements": [
											{
												"expression": {
													"id": 231,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 180,
													"src": "2032:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 230,
												"id": 232,
												"nodeType": "Return",
												"src": "2025:11:2"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "1547:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1949:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 227,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1982:8:2"
									},
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1953:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:9:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2000:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 228,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2000:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:15:2"
									},
									"scope": 1369,
									"src": "1940:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1429
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "2280:132:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 246,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "2298:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2317:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2309:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 247,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2309:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2309:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2298:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2321:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															},
															"value": "ERC1155: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															}
														],
														"id": 245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2290:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "2290:76:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 255,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "2383:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 257,
														"indexExpression": {
															"id": 256,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "2393:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2383:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 259,
													"indexExpression": {
														"id": 258,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "2397:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2383:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 260,
												"nodeType": "Return",
												"src": "2376:29:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2049:131:2",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2194:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 241,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2253:8:2"
									},
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2204:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:29:2"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2271:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:2"
									},
									"scope": 1369,
									"src": "2185:227:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1442
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2742:335:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 277,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "2760:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2760:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 279,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "2779:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2779:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2760:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2791:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 276,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2752:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2752:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "2752:83:2"
											},
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2863:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "2846:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 287,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2846:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 288,
															"nodeType": "ArrayTypeName",
															"src": "2846:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 293,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "2893:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2893:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2879:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 290,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2883:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 291,
															"nodeType": "ArrayTypeName",
															"src": "2883:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2879:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2846:63:2"
											},
											{
												"body": {
													"id": 321,
													"nodeType": "Block",
													"src": "2966:74:2",
													"statements": [
														{
															"expression": {
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 308,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "2980:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 310,
																	"indexExpression": {
																		"id": 309,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "2994:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2980:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 312,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "3009:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 314,
																			"indexExpression": {
																				"id": 313,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 298,
																				"src": "3018:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3009:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 315,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 269,
																				"src": "3022:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 317,
																			"indexExpression": {
																				"id": 316,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 298,
																				"src": "3026:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3022:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 311,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2999:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2999:30:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2980:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 320,
															"nodeType": "ExpressionStatement",
															"src": "2980:49:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 301,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "2940:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 302,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "2944:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2944:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2940:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 322,
												"initializationExpression": {
													"assignments": [
														298
													],
													"declarations": [
														{
															"constant": false,
															"id": 298,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2933:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 322,
															"src": "2925:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 297,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2925:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 300,
													"initialValue": {
														"hexValue": "30",
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2937:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2925:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2961:3:2",
														"subExpression": {
															"id": 305,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "2963:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 307,
													"nodeType": "ExpressionStatement",
													"src": "2961:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2920:120:2"
											},
											{
												"expression": {
													"id": 323,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "3057:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 275,
												"id": 324,
												"nodeType": "Return",
												"src": "3050:20:2"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "2418:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2578:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 271,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2694:8:2"
									},
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2610:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2593:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 264,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2593:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 265,
													"nodeType": "ArrayTypeName",
													"src": "2593:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2637:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2620:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 267,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2620:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 268,
													"nodeType": "ArrayTypeName",
													"src": "2620:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2592:49:2"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2720:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 272,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2720:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 273,
													"nodeType": "ArrayTypeName",
													"src": "2720:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2719:18:2"
									},
									"scope": 1369,
									"src": "2569:508:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1450
									],
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "3229:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 336,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "3258:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3272:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 339,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3282:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 335,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "3239:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3239:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "3239:52:2"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3083:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3154:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 333,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3220:8:2"
									},
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3180:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3172:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3195:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3190:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3190:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3171:33:2"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3229:0:2"
									},
									"scope": 1369,
									"src": "3145:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1460
									],
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "3470:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 354,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "3487:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 356,
														"indexExpression": {
															"id": 355,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "3506:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3487:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 358,
													"indexExpression": {
														"id": 357,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "3515:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3487:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 353,
												"id": 359,
												"nodeType": "Return",
												"src": "3480:44:2"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "3304:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3374:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 350,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3446:8:2"
									},
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3399:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "3391:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3391:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3416:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "3408:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3390:35:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "3464:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3464:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:6:2"
									},
									"scope": 1369,
									"src": "3365:166:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1474
									],
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "3767:226:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 377,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "3798:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 378,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1854,
																		"src": "3806:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3806:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3798:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 382,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "3839:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 383,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1854,
																			"src": "3845:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3845:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 381,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "3822:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3822:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3798:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564",
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3872:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															},
															"value": "ERC1155: caller is not token owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															}
														],
														"id": 376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3777:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3777:154:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "3777:154:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "3959:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3965:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3969:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 394,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3973:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 395,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3981:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 390,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "3941:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3941:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "3941:45:2"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "3537:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3607:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 374,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3758:8:2"
									},
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3641:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3633:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3633:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3663:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3655:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3683:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3675:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3675:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3703:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3695:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3732:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3719:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3719:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3623:119:2"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3767:0:2"
									},
									"scope": 1369,
									"src": "3598:395:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1490
									],
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "4259:233:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 417,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "4290:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 418,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1854,
																		"src": "4298:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4298:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4290:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 422,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "4331:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 423,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1854,
																			"src": "4337:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4337:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 421,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "4314:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4314:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4290:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4364:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															},
															"value": "ERC1155: caller is not token owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0398ed728bb0e096e3166d2c16e1078c0ca95e6b3fb31971215526318a2e5370",
																"typeString": "literal_string \"ERC1155: caller is not token owner nor approved\""
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4269:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4269:154:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "4269:154:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 431,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "4456:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "4462:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 433,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "4466:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 434,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "4471:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4480:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 430,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "4433:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4433:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "4433:52:2"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "3999:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4074:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 414,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4250:8:2"
									},
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4113:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4105:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4105:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4135:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4127:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4127:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4164:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4147:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 405,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4147:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 406,
													"nodeType": "ArrayTypeName",
													"src": "4147:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4194:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4177:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 408,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4177:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 409,
													"nodeType": "ArrayTypeName",
													"src": "4177:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 411,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4095:139:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4259:0:2"
									},
									"scope": 1369,
									"src": "4065:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "5105:784:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 454,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "5123:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5137:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5129:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 455,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5129:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5129:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5123:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5141:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5115:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5115:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "5115:66:2"
											},
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5200:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "5192:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 463,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5192:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 467,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 465,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "5211:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5211:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5192:31:2"
											},
											{
												"assignments": [
													472
												],
												"declarations": [
													{
														"constant": false,
														"id": 472,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5250:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "5233:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 470,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5233:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 471,
															"nodeType": "ArrayTypeName",
															"src": "5233:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 476,
												"initialValue": {
													"arguments": [
														{
															"id": 474,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "5274:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "5256:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5256:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5233:44:2"
											},
											{
												"assignments": [
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5304:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "5287:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 479,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5287:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 480,
															"nodeType": "ArrayTypeName",
															"src": "5287:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 485,
												"initialValue": {
													"arguments": [
														{
															"id": 483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "5332:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 482,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "5314:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5314:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5287:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 487,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "5371:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 488,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "5381:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "5387:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "5391:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 491,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "5396:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 492,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "5405:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 486,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "5350:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "5350:60:2"
											},
											{
												"assignments": [
													496
												],
												"declarations": [
													{
														"constant": false,
														"id": 496,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5429:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 555,
														"src": "5421:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 495,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5421:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 497,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5443:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 499,
														"indexExpression": {
															"id": 498,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "5453:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5443:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 501,
													"indexExpression": {
														"id": 500,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5443:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5421:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 504,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "5480:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 505,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "5495:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5480:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5472:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5472:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "5472:76:2"
											},
											{
												"id": 520,
												"nodeType": "UncheckedBlock",
												"src": "5558:77:2",
												"statements": [
													{
														"expression": {
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 510,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "5582:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 513,
																	"indexExpression": {
																		"id": 511,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "5592:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5582:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 514,
																"indexExpression": {
																	"id": 512,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "5596:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5582:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 515,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "5604:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 516,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "5618:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5604:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5582:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 519,
														"nodeType": "ExpressionStatement",
														"src": "5582:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 521,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "5644:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 524,
															"indexExpression": {
																"id": 522,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "5654:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5644:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 525,
														"indexExpression": {
															"id": 523,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "5658:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5644:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 526,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "5665:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5644:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "5644:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 530,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "5702:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "5712:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "5718:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "5722:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 534,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "5726:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "5687:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5687:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "EmitStatement",
												"src": "5682:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 538,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "5764:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "5774:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "5780:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "5784:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 542,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "5789:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 543,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "5798:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 537,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "5744:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5744:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "5744:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "5845:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "5855:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "5861:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 550,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "5865:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 551,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "5869:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 552,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "5877:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 546,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "5814:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5814:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "5814:68:2"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "4498:439:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4951:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4986:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4978:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5008:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "5000:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "5020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5048:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "5040:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5040:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5077:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "5064:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5064:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:119:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5105:0:2"
									},
									"scope": 1369,
									"src": "4942:947:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "6423:927:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 573,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "6441:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6441:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 575,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6455:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6455:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6441:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6471:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6433:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6433:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "6433:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 582,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "6532:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6546:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6538:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 583,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6538:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6538:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6532:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6550:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6524:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6524:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "6524:66:2"
											},
											{
												"assignments": [
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6609:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 690,
														"src": "6601:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 591,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6601:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 593,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "6620:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6620:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6601:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 597,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "6664:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "6674:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "6680:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 600,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "6684:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 601,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "6689:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 602,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "6698:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 596,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "6643:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6643:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "6643:60:2"
											},
											{
												"body": {
													"id": 662,
													"nodeType": "Block",
													"src": "6755:370:2",
													"statements": [
														{
															"assignments": [
																617
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 617,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6777:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 662,
																	"src": "6769:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 616,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6769:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 621,
															"initialValue": {
																"baseExpression": {
																	"id": 618,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "6782:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 620,
																"indexExpression": {
																	"id": 619,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "6786:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6782:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6769:19:2"
														},
														{
															"assignments": [
																623
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 623,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6810:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 662,
																	"src": "6802:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 622,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6802:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 627,
															"initialValue": {
																"baseExpression": {
																	"id": 624,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6819:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 626,
																"indexExpression": {
																	"id": 625,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "6827:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6819:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6802:27:2"
														},
														{
															"assignments": [
																629
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 629,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6852:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 662,
																	"src": "6844:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 628,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6844:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 635,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 630,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "6866:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 632,
																	"indexExpression": {
																		"id": 631,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "6876:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6866:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 634,
																"indexExpression": {
																	"id": 633,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6880:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6866:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6844:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 637,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "6907:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 638,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "6922:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6907:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6930:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 636,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6899:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6899:76:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "6899:76:2"
														},
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6989:85:2",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 643,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 172,
																					"src": "7017:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 646,
																				"indexExpression": {
																					"id": 644,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 617,
																					"src": "7027:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7017:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 647,
																			"indexExpression": {
																				"id": 645,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 559,
																				"src": "7031:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7017:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 648,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 629,
																				"src": "7039:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 649,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 623,
																				"src": "7053:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7039:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7017:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "7017:42:2"
																}
															]
														},
														{
															"expression": {
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 654,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "7087:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 657,
																		"indexExpression": {
																			"id": 655,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "7097:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7087:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 658,
																	"indexExpression": {
																		"id": 656,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "7101:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7087:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 659,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "7108:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7087:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 661,
															"nodeType": "ExpressionStatement",
															"src": "7087:27:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 609,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "6734:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 610,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "6738:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6738:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6734:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 663,
												"initializationExpression": {
													"assignments": [
														606
													],
													"declarations": [
														{
															"constant": false,
															"id": 606,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6727:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 663,
															"src": "6719:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 605,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6719:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 608,
													"initialValue": {
														"hexValue": "30",
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6731:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6719:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6750:3:2",
														"subExpression": {
															"id": 613,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "6752:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 615,
													"nodeType": "ExpressionStatement",
													"src": "6750:3:2"
												},
												"nodeType": "ForStatement",
												"src": "6714:411:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "7154:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "7164:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "7170:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "7174:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 669,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "7179:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 664,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "7140:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7140:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "EmitStatement",
												"src": "7135:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "7218:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "7228:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "7234:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 676,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "7238:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 677,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "7243:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 678,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "7252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 672,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "7198:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7198:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "7198:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 682,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "7304:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "7314:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "7320:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "7324:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 686,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "7329:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "7338:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 681,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "7268:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7268:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "7268:75:2"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "5895:335:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6244:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6284:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "6276:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6306:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "6298:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6335:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "6318:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 562,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6318:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 563,
													"nodeType": "ArrayTypeName",
													"src": "6318:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6365:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "6348:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 565,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6348:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 566,
													"nodeType": "ArrayTypeName",
													"src": "6348:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6395:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "6382:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6382:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:139:2"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6423:0:2"
									},
									"scope": 1369,
									"src": "6235:1115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "8229:30:2",
										"statements": [
											{
												"expression": {
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 697,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "8239:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 698,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "8246:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8239:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "8239:13:2"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "7356:812:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8182:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8204:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8190:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 693,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8190:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8189:22:2"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8229:0:2"
									},
									"scope": 1369,
									"src": "8173:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "8761:580:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 715,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "8779:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8793:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8785:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8785:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8785:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8779:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8797:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8771:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8771:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "8771:62:2"
											},
											{
												"assignments": [
													725
												],
												"declarations": [
													{
														"constant": false,
														"id": 725,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8852:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 802,
														"src": "8844:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 724,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8844:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 728,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 726,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "8863:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8863:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8844:31:2"
											},
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8902:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 802,
														"src": "8885:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 731,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8885:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 732,
															"nodeType": "ArrayTypeName",
															"src": "8885:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8926:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 734,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "8908:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8908:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8885:44:2"
											},
											{
												"assignments": [
													742
												],
												"declarations": [
													{
														"constant": false,
														"id": 742,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "8956:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 802,
														"src": "8939:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 740,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8939:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 741,
															"nodeType": "ArrayTypeName",
															"src": "8939:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"arguments": [
														{
															"id": 744,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8984:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 743,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "8966:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8966:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8939:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "9023:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9041:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9033:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 749,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9033:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9033:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 753,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "9045:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 754,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "9049:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 755,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "9054:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 756,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "9063:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 747,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "9002:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9002:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "9002:66:2"
											},
											{
												"expression": {
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 759,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "9079:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 762,
															"indexExpression": {
																"id": 760,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "9089:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9079:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 763,
														"indexExpression": {
															"id": 761,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "9093:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9079:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 764,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "9100:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9079:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "9079:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 768,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "9136:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 773,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "9158:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "9162:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 775,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "9166:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 767,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "9121:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9121:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "EmitStatement",
												"src": "9116:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 779,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "9204:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9222:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9214:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 780,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9214:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9214:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "9226:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 785,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "9230:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 786,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "9235:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 787,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "9244:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 778,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "9184:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9184:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "9184:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "9291:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9309:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9301:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 792,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9301:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9301:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 796,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "9313:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "9317:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 798,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "9321:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 799,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "9329:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 790,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "9260:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9260:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "9260:74:2"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "8265:362:2",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8641:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8664:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "8656:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8656:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8684:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "8676:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8676:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8704:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "8696:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8733:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "8720:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 710,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8720:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:97:2"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8761:0:2"
									},
									"scope": 1369,
									"src": "8632:709:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "9885:637:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 818,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "9903:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9917:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9909:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 819,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9909:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9909:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9903:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9921:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9895:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9895:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "9895:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 828,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "9975:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9975:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 830,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "9989:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9989:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9975:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10005:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9967:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9967:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "9967:81:2"
											},
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10067:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 913,
														"src": "10059:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 836,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10059:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 840,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 838,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "10078:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10078:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10059:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 842,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "10122:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10140:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10132:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 843,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10132:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10132:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "10144:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "10148:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 849,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "10153:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 850,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "10162:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 841,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "10101:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10101:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "10101:66:2"
											},
											{
												"body": {
													"id": 876,
													"nodeType": "Block",
													"src": "10219:60:2",
													"statements": [
														{
															"expression": {
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 864,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "10233:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 869,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 865,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 809,
																				"src": "10243:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 867,
																			"indexExpression": {
																				"id": 866,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 854,
																				"src": "10247:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10243:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10233:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 870,
																	"indexExpression": {
																		"id": 868,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "10251:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10233:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 871,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "10258:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 873,
																	"indexExpression": {
																		"id": 872,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "10266:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10258:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10233:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 875,
															"nodeType": "ExpressionStatement",
															"src": "10233:35:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 857,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "10198:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 858,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "10202:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10202:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10198:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 877,
												"initializationExpression": {
													"assignments": [
														854
													],
													"declarations": [
														{
															"constant": false,
															"id": 854,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10191:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 877,
															"src": "10183:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 853,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10183:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 856,
													"initialValue": {
														"hexValue": "30",
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10195:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10183:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10214:3:2",
														"subExpression": {
															"id": 861,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "10214:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 863,
													"nodeType": "ExpressionStatement",
													"src": "10214:3:2"
												},
												"nodeType": "ForStatement",
												"src": "10178:101:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 879,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "10308:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10326:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10318:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 880,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10318:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10318:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "10330:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "10334:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 886,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "10339:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 878,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "10294:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10294:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "EmitStatement",
												"src": "10289:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 890,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "10378:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10396:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10388:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 891,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10388:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10388:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 895,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "10400:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "10404:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 897,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "10409:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 898,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "10418:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 889,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "10358:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10358:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "10358:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 902,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "10470:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10488:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10480:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 903,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10480:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10480:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "10492:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 908,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "10496:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 909,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "10501:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 910,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "10510:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 901,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "10434:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10434:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "10434:81:2"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "9347:379:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9740:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9768:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "9760:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9797:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "9780:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 807,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9780:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 808,
													"nodeType": "ArrayTypeName",
													"src": "9780:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9827:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "9810:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 810,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9810:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 811,
													"nodeType": "ArrayTypeName",
													"src": "9810:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9857:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "9844:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9844:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9750:117:2"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9885:0:2"
									},
									"scope": 1369,
									"src": "9731:791:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "10912:682:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 925,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "10930:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10946:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10938:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 926,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10938:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10938:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10930:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10950:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 924,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10922:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10922:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "10922:66:2"
											},
											{
												"assignments": [
													935
												],
												"declarations": [
													{
														"constant": false,
														"id": 935,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11007:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "10999:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 934,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10999:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 936,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "11018:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11018:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10999:31:2"
											},
											{
												"assignments": [
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "11057:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "11040:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 941,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11040:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 942,
															"nodeType": "ArrayTypeName",
															"src": "11040:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"arguments": [
														{
															"id": 945,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "11081:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 944,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "11063:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11063:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11040:44:2"
											},
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11111:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "11094:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 950,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11094:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 951,
															"nodeType": "ArrayTypeName",
															"src": "11094:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 956,
												"initialValue": {
													"arguments": [
														{
															"id": 954,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "11139:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 953,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "11121:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11121:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11094:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "11178:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "11188:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11202:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11194:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 960,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11194:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11194:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 964,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "11206:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 965,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11211:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11220:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 957,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "11157:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11157:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "11157:66:2"
											},
											{
												"assignments": [
													970
												],
												"declarations": [
													{
														"constant": false,
														"id": 970,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11242:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "11234:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 969,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11234:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 976,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 971,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "11256:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 973,
														"indexExpression": {
															"id": 972,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "11266:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11256:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 975,
													"indexExpression": {
														"id": 974,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "11270:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11256:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11234:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 978,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "11293:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 979,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "11308:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11293:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11316:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11285:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11285:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "11285:70:2"
											},
											{
												"id": 994,
												"nodeType": "UncheckedBlock",
												"src": "11365:77:2",
												"statements": [
													{
														"expression": {
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 984,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "11389:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 987,
																	"indexExpression": {
																		"id": 985,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 919,
																		"src": "11399:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11389:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 988,
																"indexExpression": {
																	"id": 986,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "11403:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11389:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 989,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "11411:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 990,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "11425:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11411:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11389:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 993,
														"nodeType": "ExpressionStatement",
														"src": "11389:42:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 996,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "11472:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "11482:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11496:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11488:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 998,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11488:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11488:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "11500:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1003,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "11504:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 995,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "11457:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11457:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "EmitStatement",
												"src": "11452:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1007,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "11542:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1008,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "11552:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11566:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11558:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11558:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11558:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "11570:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1014,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11575:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11584:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1006,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "11522:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11522:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "11522:65:2"
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "10528:275:2",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10817:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10840:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "10832:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10832:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10862:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "10854:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10854:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10882:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "10874:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10822:72:2"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10912:0:2"
									},
									"scope": 1369,
									"src": "10808:786:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "11962:814:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1032,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "11980:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11996:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11988:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1033,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11988:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11988:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11980:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12000:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1031,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11972:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11972:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "11972:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1042,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "12056:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12056:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1044,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "12070:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12070:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12056:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12086:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12048:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12048:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "12048:81:2"
											},
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12148:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "12140:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1050,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12140:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1054,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1052,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "12159:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12159:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12140:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1056,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "12203:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1057,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "12213:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12227:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12219:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1058,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12219:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12219:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "12231:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1063,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "12236:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1055,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "12182:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12182:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "12182:66:2"
											},
											{
												"body": {
													"id": 1116,
													"nodeType": "Block",
													"src": "12300:323:2",
													"statements": [
														{
															"assignments": [
																1079
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1079,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12322:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1116,
																	"src": "12314:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1078,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12314:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1083,
															"initialValue": {
																"baseExpression": {
																	"id": 1080,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "12327:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1082,
																"indexExpression": {
																	"id": 1081,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "12331:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12327:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12314:19:2"
														},
														{
															"assignments": [
																1085
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1085,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12355:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1116,
																	"src": "12347:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1084,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12347:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1089,
															"initialValue": {
																"baseExpression": {
																	"id": 1086,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "12364:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1088,
																"indexExpression": {
																	"id": 1087,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "12372:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12364:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12347:27:2"
														},
														{
															"assignments": [
																1091
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1091,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12397:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1116,
																	"src": "12389:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1090,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12389:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1097,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1092,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "12411:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1094,
																	"indexExpression": {
																		"id": 1093,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "12421:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12411:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1096,
																"indexExpression": {
																	"id": 1095,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "12425:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12411:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12389:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1099,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "12452:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1100,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1085,
																			"src": "12467:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12452:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12475:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1098,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12444:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12444:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1104,
															"nodeType": "ExpressionStatement",
															"src": "12444:70:2"
														},
														{
															"id": 1115,
															"nodeType": "UncheckedBlock",
															"src": "12528:85:2",
															"statements": [
																{
																	"expression": {
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1105,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 172,
																					"src": "12556:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1108,
																				"indexExpression": {
																					"id": 1106,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "12566:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12556:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1109,
																			"indexExpression": {
																				"id": 1107,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1022,
																				"src": "12570:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12556:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1110,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1091,
																				"src": "12578:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1111,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "12592:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12578:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12556:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1114,
																	"nodeType": "ExpressionStatement",
																	"src": "12556:42:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1071,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "12279:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1072,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "12283:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12283:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12279:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1117,
												"initializationExpression": {
													"assignments": [
														1068
													],
													"declarations": [
														{
															"constant": false,
															"id": 1068,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12272:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1117,
															"src": "12264:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1067,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12264:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1070,
													"initialValue": {
														"hexValue": "30",
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12276:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12264:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12295:3:2",
														"subExpression": {
															"id": 1075,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "12295:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1077,
													"nodeType": "ExpressionStatement",
													"src": "12295:3:2"
												},
												"nodeType": "ForStatement",
												"src": "12259:364:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1119,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "12652:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1120,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "12662:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12676:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12668:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1121,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12668:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12668:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "12680:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1126,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "12685:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1118,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "12638:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12638:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "EmitStatement",
												"src": "12633:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "12724:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "12734:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12748:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12740:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1132,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12740:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12740:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1136,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "12752:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1137,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "12757:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12766:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1129,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "12704:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12704:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "12704:65:2"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "11600:228:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11842:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11870:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "11862:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11862:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11901:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "11884:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1023,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11884:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1024,
													"nodeType": "ArrayTypeName",
													"src": "11884:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11931:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "11914:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1026,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11914:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1027,
													"nodeType": "ArrayTypeName",
													"src": "11914:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11852:92:2"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11962:0:2"
									},
									"scope": 1369,
									"src": "11833:943:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "13035:200:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1153,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "13053:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1154,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "13062:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13053:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13072:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13045:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13045:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "13045:71:2"
											},
											{
												"expression": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1159,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "13126:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1162,
															"indexExpression": {
																"id": 1160,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "13145:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13126:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1163,
														"indexExpression": {
															"id": 1161,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13152:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13126:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1164,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "13164:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13126:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "13126:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1168,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13202:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13209:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "13219:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1167,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "13187:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13187:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "EmitStatement",
												"src": "13182:46:2"
											}
										]
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "12782:125:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12921:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12957:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "12949:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12949:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12980:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "12972:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13003:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "12998:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12998:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12939:78:2"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13035:0:2"
									},
									"scope": 1369,
									"src": "12912:323:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "14383:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "13241:925:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14180:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14218:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "14210:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14210:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14244:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "14236:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14266:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "14258:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14295:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "14278:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1182,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14278:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1183,
													"nodeType": "ArrayTypeName",
													"src": "14278:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14325:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "14308:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1185,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14308:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1186,
													"nodeType": "ArrayTypeName",
													"src": "14308:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14355:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "14342:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14342:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14200:165:2"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14383:0:2"
									},
									"scope": 1369,
									"src": "14171:214:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "15529:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "14391:922:2",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15327:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15364:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "15356:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15356:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15390:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "15382:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15382:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15412:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "15404:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15441:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "15424:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1201,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15424:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1202,
													"nodeType": "ArrayTypeName",
													"src": "15424:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15471:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "15454:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1204,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15454:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1205,
													"nodeType": "ArrayTypeName",
													"src": "15454:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15501:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "15488:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15488:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15346:165:2"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15529:0:2"
									},
									"scope": 1369,
									"src": "15318:213:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "15730:532:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1227,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "15744:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1565,
														"src": "15744:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15744:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1273,
												"nodeType": "IfStatement",
												"src": "15740:516:2",
												"trueBody": {
													"id": 1272,
													"nodeType": "Block",
													"src": "15761:495:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1254,
																		"nodeType": "Block",
																		"src": "15878:184:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1247,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1243,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1241,
																						"src": "15900:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1244,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1532,
																								"src": "15912:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1532_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1245,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1513,
																							"src": "15912:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1246,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15912:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15900:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1253,
																				"nodeType": "IfStatement",
																				"src": "15896:152:2",
																				"trueBody": {
																					"id": 1252,
																					"nodeType": "Block",
																					"src": "15957:91:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1249,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15986:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1248,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15979:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1250,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15979:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1251,
																							"nodeType": "ExpressionStatement",
																							"src": "15979:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1255,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1242,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1241,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15868:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1255,
																				"src": "15861:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1240,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15861:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15860:17:2"
																	},
																	"src": "15852:210:2"
																},
																{
																	"block": {
																		"id": 1263,
																		"nodeType": "Block",
																		"src": "16097:47:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1260,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1257,
																							"src": "16122:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1259,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16115:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16115:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1262,
																				"nodeType": "ExpressionStatement",
																				"src": "16115:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1264,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1258,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1257,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16089:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1264,
																				"src": "16075:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1256,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16075:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16074:22:2"
																	},
																	"src": "16063:81:2"
																},
																{
																	"block": {
																		"id": 1269,
																		"nodeType": "Block",
																		"src": "16151:95:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1266,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16176:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1265,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16169:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1267,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16169:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1268,
																				"nodeType": "ExpressionStatement",
																				"src": "16169:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1270,
																	"nodeType": "TryCatchClause",
																	"src": "16145:101:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1234,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "15818:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1235,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "15828:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1236,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "15834:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1237,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "15838:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1238,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "15846:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1231,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1218,
																				"src": "15796:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1230,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "15779:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1532_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15779:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1532",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1513,
																	"src": "15779:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15779:72:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1271,
															"nodeType": "TryStatement",
															"src": "15775:471:2"
														}
													]
												}
											}
										]
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15546:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15594:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "15586:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15586:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15620:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "15612:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15612:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15642:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "15634:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "15662:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "15654:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15654:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15682:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "15674:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15674:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15711:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "15698:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15698:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15576:145:2"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15730:0:2"
									},
									"scope": 1369,
									"src": "15537:725:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "16486:574:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1292,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "16500:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1565,
														"src": "16500:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16500:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1338,
												"nodeType": "IfStatement",
												"src": "16496:558:2",
												"trueBody": {
													"id": 1337,
													"nodeType": "Block",
													"src": "16517:537:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1319,
																		"nodeType": "Block",
																		"src": "16671:189:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1312,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1308,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1306,
																						"src": "16693:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1309,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1532,
																								"src": "16705:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1532_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1310,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1531,
																							"src": "16705:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1311,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16705:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16693:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1318,
																				"nodeType": "IfStatement",
																				"src": "16689:157:2",
																				"trueBody": {
																					"id": 1317,
																					"nodeType": "Block",
																					"src": "16755:91:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1314,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16784:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1313,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16777:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1315,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16777:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1316,
																							"nodeType": "ExpressionStatement",
																							"src": "16777:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1320,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1307,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1306,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16648:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1320,
																				"src": "16641:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1305,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16641:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16623:47:2"
																	},
																	"src": "16615:245:2"
																},
																{
																	"block": {
																		"id": 1328,
																		"nodeType": "Block",
																		"src": "16895:47:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1325,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1322,
																							"src": "16920:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1324,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16913:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16913:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1327,
																				"nodeType": "ExpressionStatement",
																				"src": "16913:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1329,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1323,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1322,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16887:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1329,
																				"src": "16873:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1321,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16873:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16872:22:2"
																	},
																	"src": "16861:81:2"
																},
																{
																	"block": {
																		"id": 1334,
																		"nodeType": "Block",
																		"src": "16949:95:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1331,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16974:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1330,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16967:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1332,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16967:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1333,
																				"nodeType": "ExpressionStatement",
																				"src": "16967:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1335,
																	"nodeType": "TryCatchClause",
																	"src": "16943:101:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1299,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1277,
																		"src": "16579:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1300,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1279,
																		"src": "16589:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1301,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "16595:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1302,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "16600:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1303,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1289,
																		"src": "16609:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1296,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "16552:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1295,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "16535:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1532_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16535:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1532",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1531,
																	"src": "16535:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16535:79:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1336,
															"nodeType": "TryStatement",
															"src": "16531:513:2"
														}
													]
												}
											}
										]
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16277:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16330:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "16322:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16322:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16356:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "16348:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16348:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16378:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "16370:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16370:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16407:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "16390:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1282,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16390:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1283,
													"nodeType": "ArrayTypeName",
													"src": "16390:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16437:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "16420:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1285,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16420:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1286,
													"nodeType": "ArrayTypeName",
													"src": "16420:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16467:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "16454:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16454:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16312:165:2"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16486:0:2"
									},
									"scope": 1369,
									"src": "16268:792:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "17150:109:2",
										"statements": [
											{
												"assignments": [
													1352
												],
												"declarations": [
													{
														"constant": false,
														"id": 1352,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17177:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1367,
														"src": "17160:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1350,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17160:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1351,
															"nodeType": "ArrayTypeName",
															"src": "17160:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1358,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17199:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17185:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1353,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17189:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1354,
															"nodeType": "ArrayTypeName",
															"src": "17189:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17185:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17160:41:2"
											},
											{
												"expression": {
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1359,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "17211:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1361,
														"indexExpression": {
															"hexValue": "30",
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17217:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17211:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1362,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "17222:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17211:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1364,
												"nodeType": "ExpressionStatement",
												"src": "17211:18:2"
											},
											{
												"expression": {
													"id": 1365,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1352,
													"src": "17247:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1347,
												"id": 1366,
												"nodeType": "Return",
												"src": "17240:12:2"
											}
										]
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "17075:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "17101:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "17093:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17092:17:2"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "17132:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1344,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17132:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1345,
													"nodeType": "ArrayTypeName",
													"src": "17132:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17131:18:2"
									},
									"scope": 1369,
									"src": "17066:193:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1370,
							"src": "570:16691:2",
							"usedErrors": []
						}
					],
					"src": "109:17153:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1491
						],
						"IERC165": [
							1900
						]
					},
					"id": 1492,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1371,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1492,
							"sourceUnit": 1901,
							"src": "135:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1374,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1900,
										"src": "372:7:3"
									},
									"id": 1375,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1373,
								"nodeType": "StructuredDocumentation",
								"src": "184:165:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1491,
							"linearizedBaseContracts": [
								1491,
								1900
							],
							"name": "IERC1155",
							"nameLocation": "360:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "386:121:3",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1388,
									"name": "TransferSingle",
									"nameLocation": "518:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "549:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "533:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "575:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "559:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "597:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "581:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "609:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "601:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "621:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "613:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:95:3"
									},
									"src": "512:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "634:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1403,
									"name": "TransferBatch",
									"nameLocation": "789:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "828:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "812:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "862:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "846:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "892:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "876:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "914:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "904:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1396,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "904:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1397,
													"nodeType": "ArrayTypeName",
													"src": "904:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "937:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "927:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1399,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "927:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1400,
													"nodeType": "ArrayTypeName",
													"src": "927:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:147:3"
									},
									"src": "783:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "956:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1412,
									"name": "ApprovalForAll",
									"nameLocation": "1114:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1145:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "1129:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1170:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "1154:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1185:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "1180:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1180:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:66:3"
									},
									"src": "1108:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "1201:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1419,
									"name": "URI",
									"nameLocation": "1555:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1566:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "1559:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1414,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1559:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1589:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "1573:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:34:3"
									},
									"src": "1549:44:3"
								},
								{
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "1599:173:3",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1786:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1804:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "1796:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1821:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "1813:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:29:3"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "1848:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:9:3"
									},
									"scope": 1491,
									"src": "1777:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "1863:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2065:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2099:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2080:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1431,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2080:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1432,
													"nodeType": "ArrayTypeName",
													"src": "2080:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2128:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2109:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1434,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2109:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1435,
													"nodeType": "ArrayTypeName",
													"src": "2109:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:53:3"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2180:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1438,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2180:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1439,
													"nodeType": "ArrayTypeName",
													"src": "2180:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:18:3"
									},
									"scope": 1491,
									"src": "2056:142:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "2204:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2466:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2492:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "2484:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2507:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "2502:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1446,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2502:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:33:3"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2525:0:3"
									},
									"scope": 1491,
									"src": "2457:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "2532:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2681:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2706:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "2698:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2723:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "2715:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:35:3"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "2756:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2756:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:6:3"
									},
									"scope": 1491,
									"src": "2672:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "2768:556:3",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3338:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3372:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "3364:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3394:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "3386:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3414:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "3406:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3434:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "3426:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3465:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "3450:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3450:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:121:3"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3484:0:3"
									},
									"scope": 1491,
									"src": "3329:156:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "3491:390:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3895:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3934:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3926:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3956:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3948:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3987:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "3968:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1480,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3968:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1481,
													"nodeType": "ArrayTypeName",
													"src": "3968:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "4000:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1483,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4000:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1484,
													"nodeType": "ArrayTypeName",
													"src": "4000:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4051:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "4036:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4036:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3916:145:3"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4070:0:3"
									},
									"scope": 1491,
									"src": "3886:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1492,
							"src": "350:3723:3",
							"usedErrors": []
						}
					],
					"src": "110:3964:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1532
						],
						"IERC165": [
							1900
						]
					},
					"id": 1533,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1493,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1494,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1533,
							"sourceUnit": 1901,
							"src": "143:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1496,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1900,
										"src": "262:7:4"
									},
									"id": 1497,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1495,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1532,
							"linearizedBaseContracts": [
								1532,
								1900
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:4",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1143:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1169:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1191:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1211:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1234:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:4"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1278:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1510,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:4"
									},
									"scope": 1532,
									"src": "1107:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:4",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1531,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2332:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2358:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2380:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1519,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1520,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2412:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1522,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1523,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2447:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:4"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2491:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1528,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:4"
									},
									"scope": 1532,
									"src": "2291:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1533,
							"src": "232:2269:4",
							"usedErrors": []
						}
					],
					"src": "118:2384:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1491
						],
						"IERC1155MetadataURI": [
							1547
						],
						"IERC165": [
							1900
						]
					},
					"id": 1548,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1534,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1535,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1548,
							"sourceUnit": 1492,
							"src": "142:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1537,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1491,
										"src": "397:8:5"
									},
									"id": 1538,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:5"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1536,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1547,
							"linearizedBaseContracts": [
								1547,
								1491,
								1900
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "622:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:5"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "657:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1543,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:5"
									},
									"scope": 1547,
									"src": "609:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1548,
							"src": "364:310:5",
							"usedErrors": []
						}
					],
					"src": "117:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1842
						]
					},
					"id": 1843,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1549,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1550,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1842,
							"linearizedBaseContracts": [
								1842
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "1241:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1558,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1553,
																"src": "1465:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1557,
												"id": 1563,
												"nodeType": "Return",
												"src": "1458:30:6"
											}
										]
									},
									"documentation": {
										"id": 1551,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "1195:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:6"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "1235:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:6"
									},
									"scope": 1842,
									"src": "1175:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "2483:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1576,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1842",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1842",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1574,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1579,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "2526:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:6"
											},
											{
												"assignments": [
													1585,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1585,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1598,
														"src": "2578:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1584,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1592,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1586,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1568,
																"src": "2596:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1588,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "2618:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1594,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "2647:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:6"
											}
										]
									},
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2431:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2458:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:6"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:6"
									},
									"scope": 1842,
									"src": "2412:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "3555:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1610,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "3585:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1611,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "3593:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1609,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1616,
															1636
														],
														"referencedDeclaration": 1636,
														"src": "3572:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1608,
												"id": 1614,
												"nodeType": "Return",
												"src": "3565:67:6"
											}
										]
									},
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "3488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "3504:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1603,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:6"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "3541:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:6"
									},
									"scope": 1842,
									"src": "3466:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "4008:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1629,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "4047:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1630,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "4055:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1632,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "4064:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1628,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1656,
															1706
														],
														"referencedDeclaration": 1706,
														"src": "4025:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1627,
												"id": 1634,
												"nodeType": "Return",
												"src": "4018:59:6"
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "3892:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "3916:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "3943:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1622,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:6"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "3994:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1625,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:6"
									},
									"scope": 1842,
									"src": "3861:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1655,
										"nodeType": "Block",
										"src": "4589:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1649,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "4628:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1650,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "4636:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1651,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "4642:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1648,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1656,
															1706
														],
														"referencedDeclaration": 1706,
														"src": "4606:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1647,
												"id": 1654,
												"nodeType": "Return",
												"src": "4599:94:6"
											}
										]
									},
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "4486:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "4510:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "4537:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:6"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "4575:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1645,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:6"
									},
									"scope": 1842,
									"src": "4446:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "5127:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1673,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1842",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1842",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1671,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1676,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1663,
																"src": "5170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1683,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1659,
																	"src": "5247:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1682,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "5236:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1681,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:6"
											},
											{
												"assignments": [
													1689,
													1691
												],
												"declarations": [
													{
														"constant": false,
														"id": 1689,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1705,
														"src": "5300:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1688,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1691,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1705,
														"src": "5314:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1690,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1698,
												"initialValue": {
													"arguments": [
														{
															"id": 1696,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "5367:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1692,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "5341:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1694,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1663,
																"src": "5360:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1700,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "5406:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1701,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "5415:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1702,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "5427:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1699,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "5389:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1669,
												"id": 1704,
												"nodeType": "Return",
												"src": "5382:58:6"
											}
										]
									},
									"documentation": {
										"id": 1657,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "4988:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "5012:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1660,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "5039:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "5062:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1664,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:6"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "5113:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:6"
									},
									"scope": 1842,
									"src": "4948:499:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "5724:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1717,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "5760:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1718,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "5768:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1716,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1723,
															1758
														],
														"referencedDeclaration": 1758,
														"src": "5741:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1715,
												"id": 1721,
												"nodeType": "Return",
												"src": "5734:80:6"
											}
										]
									},
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5652:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5668:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1710,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:6"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5710:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:6"
									},
									"scope": 1842,
									"src": "5624:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "6163:228:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1737,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1726,
																	"src": "6192:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1736,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "6181:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:6"
											},
											{
												"assignments": [
													1743,
													1745
												],
												"declarations": [
													{
														"constant": false,
														"id": 1743,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1757,
														"src": "6252:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1742,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1745,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1757,
														"src": "6266:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1744,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"arguments": [
														{
															"id": 1748,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "6311:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1746,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "6293:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1752,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "6350:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1753,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "6359:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1754,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "6371:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1751,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "6333:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1734,
												"id": 1756,
												"nodeType": "Return",
												"src": "6326:58:6"
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "6042:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "6066:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "6093:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:6"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "6149:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:6"
									},
									"scope": 1842,
									"src": "6005:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "6667:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1769,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "6705:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1770,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1763,
															"src": "6713:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1768,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1775,
															1810
														],
														"referencedDeclaration": 1810,
														"src": "6684:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1767,
												"id": 1773,
												"nodeType": "Return",
												"src": "6677:84:6"
											}
										]
									},
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "6600:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1762,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:6"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "6653:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:6"
									},
									"scope": 1842,
									"src": "6570:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1809,
										"nodeType": "Block",
										"src": "7109:232:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1789,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1778,
																	"src": "7138:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1788,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "7127:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:6"
											},
											{
												"assignments": [
													1795,
													1797
												],
												"declarations": [
													{
														"constant": false,
														"id": 1795,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "7200:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1794,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1797,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "7214:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1796,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1802,
												"initialValue": {
													"arguments": [
														{
															"id": 1800,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1780,
															"src": "7261:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1798,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1778,
															"src": "7241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1804,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "7300:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1805,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "7309:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1806,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "7321:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1803,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "7283:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1786,
												"id": 1808,
												"nodeType": "Return",
												"src": "7276:58:6"
											}
										]
									},
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "6993:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "7017:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1779,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "7044:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1781,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:6"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "7095:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1784,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:6"
									},
									"scope": 1842,
									"src": "6954:387:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "7721:582:6",
										"statements": [
											{
												"condition": {
													"id": 1822,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1813,
													"src": "7735:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1838,
													"nodeType": "Block",
													"src": "7792:505:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1826,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1815,
																		"src": "7876:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1836,
																"nodeType": "Block",
																"src": "8234:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1833,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1817,
																					"src": "8259:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1832,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1835,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:6"
																	}
																]
															},
															"id": 1837,
															"nodeType": "IfStatement",
															"src": "7872:415:6",
															"trueBody": {
																"id": 1831,
																"nodeType": "Block",
																"src": "7899:329:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:6"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1815,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1815,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1830,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 1839,
												"nodeType": "IfStatement",
												"src": "7731:566:6",
												"trueBody": {
													"id": 1825,
													"nodeType": "Block",
													"src": "7744:42:6",
													"statements": [
														{
															"expression": {
																"id": 1823,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "7765:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1821,
															"id": 1824,
															"nodeType": "Return",
															"src": "7758:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "7596:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "7618:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1814,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "7651:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1816,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:6"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "7707:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1819,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:6"
									},
									"scope": 1842,
									"src": "7561:742:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1843,
							"src": "194:8111:6",
							"usedErrors": []
						}
					],
					"src": "101:8205:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1864
						]
					},
					"id": 1865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1844,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1845,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1864,
							"linearizedBaseContracts": [
								1864
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1850,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1849,
												"id": 1852,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 1864,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1859,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1858,
												"id": 1861,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1856,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 1864,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1865,
							"src": "608:235:7",
							"usedErrors": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1888
						],
						"IERC165": [
							1900
						]
					},
					"id": 1889,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1867,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1889,
							"sourceUnit": 1901,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1869,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1900,
										"src": "754:7:8"
									},
									"id": 1870,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1868,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1888,
							"linearizedBaseContracts": [
								1888,
								1900
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1899
									],
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1879,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1881,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1900_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1900_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1880,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1900",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1878,
												"id": 1885,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1875,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1872,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1876,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 1888,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1889,
							"src": "726:260:8",
							"usedErrors": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1900
						]
					},
					"id": 1901,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1890,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1891,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1900,
							"linearizedBaseContracts": [
								1900
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1893,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1896,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 1900,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1901,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			}
		}
	}
}
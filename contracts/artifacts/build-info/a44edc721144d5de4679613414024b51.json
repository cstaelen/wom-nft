{
	"id": "a44edc721144d5de4679613414024b51",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/WOM_LAND.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"erc721a/contracts/ERC721A.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\ncontract WomLand is ERC721A, Ownable {\n    string public baseURI;\n    uint256 public maxSupply = 1000;\n    uint256 public publicMaxNFTPerAddress = 1;\n    uint256 public publicPriceMint = 0.04 ether;\n    bool public paused = false;\n    bool public publicMint = false;\n    address public signerAddress = 0x4E99031f4C39cd1AE173Bc32e397dE77ac6D6395;\n    mapping(address => uint256) public alreadyMinted;\n\n    using ECDSA for bytes32;\n\n    constructor() ERC721A(\"Lands of Mythesda\", \"LOM\") {}\n\n    function mint(\n        uint256 quantity,\n        uint256 maxMint,\n        uint256 unitPrice,\n        bytes memory signature\n    ) public payable {\n        require(!paused, \"The contract is paused\");\n        uint256 supply = totalSupply();\n        require(quantity > 0, \"Need to mint at least 1 NFT\");\n        require(supply + quantity <= maxSupply, \"Max NFT limit exceeded\");\n\n        uint256 ownerMintedCount = alreadyMinted[msg.sender];\n\n        if (!publicMint) {\n            verifyCoupon(maxMint, unitPrice, msg.sender, signature);\n            require(\n                ownerMintedCount + quantity <= maxMint,\n                \"Max NFT for address exceeded\"\n            );\n            require(msg.value >= unitPrice * quantity, \"Insufficient founds\");\n        } else {\n            require(\n                ownerMintedCount + quantity <= publicMaxNFTPerAddress,\n                \"Max NFT for address exceeded\"\n            );\n            require(\n                msg.value >= publicPriceMint * quantity,\n                \"Insufficient founds\"\n            );\n        }\n\n        alreadyMinted[msg.sender] = alreadyMinted[msg.sender] + quantity;\n\n        _mint(msg.sender, quantity);\n    }\n\n    function _baseURI() internal view virtual override returns (string memory) {\n        return baseURI;\n    }\n\n    function burn(uint256 tokenId) public onlyOwner {\n        super._burn(tokenId);\n    }\n\n    function setBaseUri(string memory baseuri_) public onlyOwner {\n        baseURI = baseuri_;\n    }\n\n    function ownerMint(address to, uint256 quantity) public onlyOwner {\n        _mint(to, quantity);\n    }\n\n    function setSignerAddress(address signerAddress_) public onlyOwner {\n        signerAddress = signerAddress_;\n    }\n\n    function pause(bool _state) public onlyOwner {\n        paused = _state;\n    }\n\n    function setPublicMint(bool _state) public onlyOwner {\n        publicMint = _state;\n    }\n\n    function setPublicMaxNFTPerAddress(uint256 _state) public onlyOwner {\n        publicMaxNFTPerAddress = _state;\n    }\n\n    function setPublicPrice(uint256 _state) public onlyOwner {\n        publicPriceMint = _state;\n    }\n\n    function verifyCoupon(\n        uint256 maxMint,\n        uint256 unitPrice,\n        address minterAddress,\n        bytes memory signature\n    ) public view virtual {\n        bytes32 inputHash = keccak256(\n            abi.encodePacked(maxMint, unitPrice, minterAddress)\n        );\n\n        bytes32 ethSignedMessageHash = inputHash.toEthSignedMessageHash();\n        address recoveredAddress = ethSignedMessageHash.recover(signature);\n        require(recoveredAddress == signerAddress, \"Bad signature\");\n    }\n\n    function withdraw() public payable onlyOwner {\n        // This will payout the contract balance to the owner.\n        // Do not remove this otherwise you will not be able to withdraw the funds.\n        // =============================================================================\n        (bool os, ) = payable(owner()).call{value: address(this).balance}(\"\");\n        assert(os);\n        // =============================================================================\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n รท 2 + 1, and for v in (302): v โ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"erc721a/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr)\n                if (curr < _currentIndex) {\n                    uint256 packed = _packedOwnerships[curr];\n                    // If not burned.\n                    if (packed & _BITMASK_BURNED == 0) {\n                        // Invariant:\n                        // There will always be an initialized ownership slot\n                        // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                        // before an unintialized ownership slot\n                        // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                        // Hence, `curr` will not underflow.\n                        //\n                        // We can directly compare the packed value.\n                        // If the address is zero, packed will be zero.\n                        while (packed == 0) {\n                            packed = _packedOwnerships[--curr];\n                        }\n                        return packed;\n                    }\n                }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        address owner = ownerOf(tokenId);\n\n        if (_msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                revert ApprovalCallerNotOwnerNorApproved();\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                revert TransferToNonERC721ReceiverImplementer();\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            uint256 toMasked;\n            uint256 end = startTokenId + quantity;\n\n            // Use assembly to loop and emit the `Transfer` event for gas savings.\n            // The duplicated `log4` removes an extra check and reduces stack juggling.\n            // The assembly, together with the surrounding Solidity code, have been\n            // delicately arranged to nudge the compiler into producing optimized opcodes.\n            assembly {\n                // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n                toMasked := and(to, _BITMASK_ADDRESS)\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    startTokenId // `tokenId`.\n                )\n\n                // The `iszero(eq(,))` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n                // The compiler will optimize the `iszero` away for performance.\n                for {\n                    let tokenId := add(startTokenId, 1)\n                } iszero(eq(tokenId, end)) {\n                    tokenId := add(tokenId, 1)\n                } {\n                    // Emit the `Transfer` event. Similar to above.\n                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)\n                }\n            }\n            if (toMasked == 0) revert MintToZeroAddress();\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n}\n"
			},
			"erc721a/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220aeef44b26d2bbc650eaa8906df2621dabb874bbe181c635e5cfbbf8e1ea64ecd64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aeef44b26d2bbc650eaa8906df2621dabb874bbe181c635e5cfbbf8e1ea64ecd64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xEF DIFFICULTY 0xB2 PUSH14 0x2BBC650EAA8906DF2621DABB874B 0xBE XOR SHR PUSH4 0x5E5CFBBF DUP15 0x1E 0xA6 0x4E 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "161:2235:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;161:2235:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aeef44b26d2bbc650eaa8906df2621dabb874bbe181c635e5cfbbf8e1ea64ecd64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xEF DIFFICULTY 0xB2 PUSH14 0x2BBC650EAA8906DF2621DABB874B 0xBE XOR SHR PUSH4 0x5E5CFBBF DUP15 0x1E 0xA6 0x4E 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "161:2235:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aeef44b26d2bbc650eaa8906df2621dabb874bbe181c635e5cfbbf8e1ea64ecd64736f6c63430008110033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"contracts/WOM_LAND.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":369:8537  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":369:8537  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cae02598824796a5cb5e1f02a93cd115012f7db2bd220a54bfa2bb1c66db3a0d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cae02598824796a5cb5e1f02a93cd115012f7db2bd220a54bfa2bb1c66db3a0d64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xE0 0x25 SWAP9 DUP3 SELFBALANCE SWAP7 0xA5 0xCB 0x5E 0x1F MUL 0xA9 EXTCODECOPY 0xD1 ISZERO ADD 0x2F PUSH30 0xB2BD220A54BFA2BB1C66DB3A0D64736F6C63430008110033000000000000 ",
							"sourceMap": "369:8168:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:8168:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cae02598824796a5cb5e1f02a93cd115012f7db2bd220a54bfa2bb1c66db3a0d64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xE0 0x25 SWAP9 DUP3 SELFBALANCE SWAP7 0xA5 0xCB 0x5E 0x1F MUL 0xA9 EXTCODECOPY 0xD1 ISZERO ADD 0x2F PUSH30 0xB2BD220A54BFA2BB1C66DB3A0D64736F6C63430008110033000000000000 ",
							"sourceMap": "369:8168:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 369,
									"end": 8537,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 369,
									"end": 8537,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cae02598824796a5cb5e1f02a93cd115012f7db2bd220a54bfa2bb1c66db3a0d64736f6c63430008110033",
									".code": [
										{
											"begin": 369,
											"end": 8537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 369,
											"end": 8537,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 369,
											"end": 8537,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 369,
											"end": 8537,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 369,
											"end": 8537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 8537,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 369,
											"end": 8537,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 8537,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 369,
											"end": 8537,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"contracts/WOM_LAND.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WOM_LAND.sol": {
				"WomLand": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "alreadyMinted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxMint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unitPrice",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "ownerMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_state",
									"type": "bool"
								}
							],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "publicMaxNFTPerAddress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "publicMint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "publicPriceMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "baseuri_",
									"type": "string"
								}
							],
							"name": "setBaseUri",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_state",
									"type": "uint256"
								}
							],
							"name": "setPublicMaxNFTPerAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_state",
									"type": "bool"
								}
							],
							"name": "setPublicMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_state",
									"type": "uint256"
								}
							],
							"name": "setPublicPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signerAddress_",
									"type": "address"
								}
							],
							"name": "setSignerAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxMint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unitPrice",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "minterAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "verifyCoupon",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/WOM_LAND.sol\":227:3836  contract WomLand is ERC721A, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/WOM_LAND.sol\":324:328  1000 */\n  0x03e8\n    /* \"contracts/WOM_LAND.sol\":297:328  uint256 public maxSupply = 1000 */\n  0x0a\n  sstore\n    /* \"contracts/WOM_LAND.sol\":374:375  1 */\n  0x01\n    /* \"contracts/WOM_LAND.sol\":334:375  uint256 public publicMaxNFTPerAddress = 1 */\n  0x0b\n  sstore\n    /* \"contracts/WOM_LAND.sol\":414:424  0.04 ether */\n  0x8e1bc9bf040000\n    /* \"contracts/WOM_LAND.sol\":381:424  uint256 public publicPriceMint = 0.04 ether */\n  0x0c\n  sstore\n    /* \"contracts/WOM_LAND.sol\":430:456  bool public paused = false */\n  0x0d\n  dup1\n  sload\n  not(sub(shl(0xb0, 0x01), 0x01))\n    /* \"contracts/WOM_LAND.sol\":498:571  address public signerAddress = 0x4E99031f4C39cd1AE173Bc32e397dE77ac6D6395 */\n  and\n  0x4e99031f4c39cd1ae173bc32e397de77ac6d63950000\n  or\n  swap1\n  sstore\n    /* \"contracts/WOM_LAND.sol\":662:714  constructor() ERC721A(\"Lands of Mythesda\", \"LOM\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":4946:5100  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x11\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x78, 0x4c616e6473206f66204d79746865736461)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4c4f4d)\n  dup2\n  mstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":5020:5025  name_ */\n  dup2\n    /* \"erc721a/contracts/ERC721A.sol\":5012:5017  _name */\n  0x02\n    /* \"erc721a/contracts/ERC721A.sol\":5012:5025  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":5035:5042  _symbol */\n  0x03\n    /* \"erc721a/contracts/ERC721A.sol\":5035:5052  _symbol = symbol_ */\n  tag_8\n    /* \"erc721a/contracts/ERC721A.sol\":5045:5052  symbol_ */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":5035:5042  _symbol */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":5035:5052  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":5482:5489  uint256 */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":5062:5093  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"contracts/WOM_LAND.sol\":227:3836  contract WomLand is ERC721A, Ownable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x08\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_22:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_29:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_30:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_24:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_34\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_34:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_35:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_33:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_7:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_41\n  tag_21\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1582:1679   */\n  tag_42\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_43\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_45\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_46\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_46:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_37)\n    /* \"#utility.yul\":1810:2473   */\ntag_45:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_49:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_52:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\ntag_26:\n    /* \"contracts/WOM_LAND.sol\":227:3836  contract WomLand is ERC721A, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/WOM_LAND.sol\":227:3836  contract WomLand is ERC721A, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xc87b56dd\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xceda0dbd\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0xa22cb465\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc48b1fa6\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xc6275255\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x715018a6\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8f9db08c\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa0bcfc7f\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x5c975abb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x6c0360eb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x18160ddd\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x42842e0e\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x484b973c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x4a9eee69\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5b7633d0\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x18160ddd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x26092b83\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x081812fc\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x0a398b88\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x0bab3262\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x0e2d56cf\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x02329a29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x046dc166\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WOM_LAND.sol\":2443:2520  function pause(bool _state) public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/WOM_LAND.sol\":2323:2437  function setSignerAddress(address signerAddress_) public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_53\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":10039:10137  function name() public view virtual override returns (string memory) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2416:2448   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2398:2449   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2386:2388   */\n      0x20\n        /* \"#utility.yul\":2371:2389   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_50\n        /* \"#utility.yul\":2252:2455   */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":15812:16210  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_7:\n      tag_53\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":577:625  mapping(address => uint256) public alreadyMinted */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      tag_80\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_80:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_79:\n      mload(0x40)\n        /* \"#utility.yul\":2865:2890   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2853:2855   */\n      0x20\n        /* \"#utility.yul\":2838:2856   */\n      add\n        /* \"contracts/WOM_LAND.sol\":577:625  mapping(address => uint256) public alreadyMinted */\n      tag_50\n        /* \"#utility.yul\":2719:2896   */\n      jump\n        /* \"contracts/WOM_LAND.sol\":334:375  uint256 public publicMaxNFTPerAddress = 1 */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_79\n      sload(0x0b)\n      dup2\n      jump\n        /* \"contracts/WOM_LAND.sol\":2526:2615  function setPublicMint(bool _state) public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_53\n      tag_90\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6164:6176  _burnCounter */\n      sload(0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":5955:5962  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6148:6161  _currentIndex */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":6148:6176  _currentIndex - _burnCounter */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n      jump(tag_79)\n        /* \"erc721a/contracts/ERC721A.sol\":19903:22667  function transferFrom(... */\n    tag_12:\n      tag_53\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":462:492  bool public publicMint = false */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      sload(0x0d)\n      tag_46\n      swap1\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/WOM_LAND.sol\":3358:3834  function withdraw() public payable onlyOwner {... */\n    tag_14:\n      tag_53\n      tag_105\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":22758:22945  function safeTransferFrom(... */\n    tag_15:\n      tag_53\n      tag_107\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":2022:2107  function burn(uint256 tokenId) public onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_53\n      tag_111\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":2215:2317  function ownerMint(address to, uint256 quantity) public onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_53\n      tag_115\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":720:1904  function mint(... */\n    tag_18:\n      tag_53\n      tag_118\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_118:\n      tag_120\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":498:571  address public signerAddress = 0x4E99031f4C39cd1AE173Bc32e397dE77ac6D6395 */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      sload(0x0d)\n      tag_68\n      swap1\n      0x010000\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/WOM_LAND.sol\":430:456  bool public paused = false */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      sload(0x0d)\n      tag_46\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":11391:11541  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_68\n      tag_131\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":270:291  string public baseURI */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_63\n      tag_136\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":7045:7275  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_79\n      tag_140\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_53\n      tag_145\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_68)\n        /* \"contracts/WOM_LAND.sol\":2847:3352  function verifyCoupon(... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      tag_53\n      tag_152\n      calldatasize\n      0x04\n      tag_153\n      jump\t// in\n    tag_152:\n      tag_154\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":10208:10310  function symbol() public view virtual override returns (string memory) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_63\n      tag_157\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":2113:2209  function setBaseUri(string memory baseuri_) public onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_53\n      tag_161\n      calldatasize\n      0x04\n      tag_162\n      jump\t// in\n    tag_161:\n      tag_163\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":16901:17132  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      tag_53\n      tag_166\n      calldatasize\n      0x04\n      tag_167\n      jump\t// in\n    tag_166:\n      tag_168\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n    tag_30:\n      tag_53\n      tag_170\n      calldatasize\n      0x04\n      tag_171\n      jump\t// in\n    tag_170:\n      tag_172\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":2621:2737  function setPublicMaxNFTPerAddress(uint256 _state) public onlyOwner {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      tag_53\n      tag_175\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_175:\n      tag_176\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":2743:2841  function setPublicPrice(uint256 _state) public onlyOwner {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_53\n      tag_179\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_179:\n      tag_180\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":10411:10724  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      tag_63\n      tag_183\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_183:\n      tag_184\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":381:424  uint256 public publicPriceMint = 0.04 ether */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      tag_79\n      sload(0x0c)\n      dup2\n      jump\n        /* \"contracts/WOM_LAND.sol\":297:328  uint256 public maxSupply = 1000 */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n      tag_79\n      sload(0x0a)\n      dup2\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      pop\n      tag_46\n      tag_196\n      calldatasize\n      0x04\n      tag_197\n      jump\t// in\n    tag_196:\n      tag_198\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      tag_53\n      tag_202\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_202:\n      tag_203\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_49:\n        /* \"erc721a/contracts/ERC721A.sol\":9240:9244  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":9558:9583  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":9558:9659  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_205\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":9634:9659  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":9558:9659  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_205:\n        /* \"erc721a/contracts/ERC721A.sol\":9558:9735  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_206\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":9710:9735  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":9558:9735  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_206:\n        /* \"erc721a/contracts/ERC721A.sol\":9539:9735  return... */\n      swap3\n        /* \"erc721a/contracts/ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WOM_LAND.sol\":2443:2520  function pause(bool _state) public onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/WOM_LAND.sol\":2498:2504  paused */\n      0x0d\n        /* \"contracts/WOM_LAND.sol\":2498:2513  paused = _state */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/WOM_LAND.sol\":2443:2520  function pause(bool _state) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/WOM_LAND.sol\":2323:2437  function setSignerAddress(address signerAddress_) public onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_212:\n        /* \"contracts/WOM_LAND.sol\":2400:2413  signerAddress */\n      0x0d\n        /* \"contracts/WOM_LAND.sol\":2400:2430  signerAddress = signerAddress_ */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      0x010000\n      mul\n      not(sub(shl(0xb0, 0x01), 0x010000))\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/WOM_LAND.sol\":2323:2437  function setSignerAddress(address signerAddress_) public onlyOwner {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10039:10137  function name() public view virtual override returns (string memory) {... */\n    tag_64:\n        /* \"erc721a/contracts/ERC721A.sol\":10093:10106  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":10125:10130  _name */\n      0x02\n        /* \"erc721a/contracts/ERC721A.sol\":10118:10130  return _name */\n      dup1\n      sload\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_217\n      swap1\n      tag_216\n      jump\t// in\n    tag_217:\n      dup1\n      iszero\n      tag_218\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_219\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_218)\n    tag_219:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_220:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_220\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10039:10137  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_71:\n        /* \"erc721a/contracts/ERC721A.sol\":16436:16443  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16460:16476  _exists(tokenId) */\n      tag_222\n        /* \"erc721a/contracts/ERC721A.sol\":16468:16475  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":16460:16467  _exists */\n      tag_223\n        /* \"erc721a/contracts/ERC721A.sol\":16460:16476  _exists(tokenId) */\n      jump\t// in\n    tag_222:\n        /* \"erc721a/contracts/ERC721A.sol\":16455:16519  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_224\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16485:16519  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":16455:16519  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_224:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":16537:16561  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":16537:16552  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":16537:16561  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":16537:16567  _tokenApprovals[tokenId].value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":15812:16210  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_77:\n        /* \"erc721a/contracts/ERC721A.sol\":15900:15913  address owner */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":15916:15932  ownerOf(tokenId) */\n      tag_226\n        /* \"erc721a/contracts/ERC721A.sol\":15924:15931  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":15916:15923  ownerOf */\n      tag_132\n        /* \"erc721a/contracts/ERC721A.sol\":15916:15932  ownerOf(tokenId) */\n      jump\t// in\n    tag_226:\n        /* \"erc721a/contracts/ERC721A.sol\":15900:15932  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":15947:15975  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":15943:16115  if (_msgSenderERC721A() != owner)... */\n      tag_232\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":15994:16038  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_230\n        /* \"erc721a/contracts/ERC721A.sol\":16011:16016  owner */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_198\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":15994:16038  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_230:\n        /* \"erc721a/contracts/ERC721A.sol\":15989:16115  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_232\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16065:16100  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":15989:16115  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_232:\n        /* \"erc721a/contracts/ERC721A.sol\":16125:16149  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":16125:16140  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":16125:16149  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":16125:16160  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":16175:16203  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":16125:16149  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"erc721a/contracts/ERC721A.sol\":16175:16203  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":15890:16210  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15812:16210  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WOM_LAND.sol\":2526:2615  function setPublicMint(bool _state) public onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/WOM_LAND.sol\":2589:2599  publicMint */\n      0x0d\n        /* \"contracts/WOM_LAND.sol\":2589:2608  publicMint = _state */\n      dup1\n      sload\n      swap2\n      iszero\n      iszero\n      0x0100\n      mul\n      not(0xff00)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/WOM_LAND.sol\":2526:2615  function setPublicMint(bool _state) public onlyOwner {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":19903:22667  function transferFrom(... */\n    tag_99:\n        /* \"erc721a/contracts/ERC721A.sol\":20040:20067  uint256 prevOwnershipPacked */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20070:20097  _packedOwnershipOf(tokenId) */\n      tag_240\n        /* \"erc721a/contracts/ERC721A.sol\":20089:20096  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":20070:20088  _packedOwnershipOf */\n      tag_241\n        /* \"erc721a/contracts/ERC721A.sol\":20070:20097  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_240:\n        /* \"erc721a/contracts/ERC721A.sol\":20040:20097  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20153:20157  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":20112:20157  address(uint160(prevOwnershipPacked)) != from */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":20128:20147  prevOwnershipPacked */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":20112:20157  address(uint160(prevOwnershipPacked)) != from */\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":20108:20194  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_242\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":20166:20194  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":20108:20194  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_242:\n        /* \"erc721a/contracts/ERC721A.sol\":20206:20233  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":19036:19060  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":19036:19051  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":19036:19060  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":19260:19286  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":20394:20462  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_245\n        /* \"erc721a/contracts/ERC721A.sol\":19260:19286  sload(approvedAddressSlot) */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":20436:20440  from */\n      dup8\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":20442:20461  _msgSenderERC721A() */\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":18524:18556  and(msgSender, _BITMASK_ADDRESS) */\n      swap1\n      dup2\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":18370:18398  and(owner, _BITMASK_ADDRESS) */\n      swap2\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":18651:18671  eq(msgSender, owner) */\n      dup2\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":18673:18703  eq(msgSender, approvedAddress) */\n      swap2\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":18648:18704  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":18074:18720  function _isSenderApprovedOrOwner(... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":20394:20462  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n    tag_245:\n        /* \"erc721a/contracts/ERC721A.sol\":20389:20568  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_251\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":20481:20524  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_249\n        /* \"erc721a/contracts/ERC721A.sol\":20498:20502  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_198\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":20481:20524  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_249:\n        /* \"erc721a/contracts/ERC721A.sol\":20476:20568  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_251\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":20533:20568  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":20476:20568  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":20583:20599  to == address(0) */\n      dup6\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":20579:20631  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_252\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":20608:20631  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":20579:20631  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_252:\n        /* \"erc721a/contracts/ERC721A.sol\":20774:20789  approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":20771:20928  if approvedAddress {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":20912:20913  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20891:20910  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":20884:20914  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":20771:20928  if approvedAddress {... */\n    tag_255:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":21300:21324  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":21300:21318  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":21300:21324  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":21298:21324  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":21368:21390  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":21366:21390  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":14703:14714  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":14678:14701  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":14674:14715  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":14661:14724  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":21654:21680  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":21654:21671  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":21654:21680  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":21654:21826  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":21943:21990  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21943:21995  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":21939:22556  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_260\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22047:22048  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":22037:22048  tokenId + 1 */\n      dup5\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":22015:22034  uint256 nextTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22168:22198  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":22168:22185  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":22168:22198  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":22168:22203  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":22164:22542  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_262\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22304:22317  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":22289:22300  nextTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":22289:22317  nextTokenId != _currentIndex */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":22285:22524  if (nextTokenId != _currentIndex) {... */\n      tag_262\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22449:22479  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":22449:22466  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":22449:22479  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":22449:22501  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":22285:22524  if (nextTokenId != _currentIndex) {... */\n    tag_262:\n        /* \"erc721a/contracts/ERC721A.sol\":21997:22556  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21939:22556  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_260:\n        /* \"erc721a/contracts/ERC721A.sol\":22600:22607  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":22596:22598  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22581:22608  Transfer(from, to, tokenId) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22590:22594  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22581:22608  Transfer(from, to, tokenId) */\n      and\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":22618:22660  _afterTokenTransfers(from, to, tokenId, 1) */\n    tag_263:\n        /* \"erc721a/contracts/ERC721A.sol\":20030:22667  {... */\n      pop\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":19903:22667  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WOM_LAND.sol\":3358:3834  function withdraw() public payable onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_266:\n        /* \"contracts/WOM_LAND.sol\":3650:3657  bool os */\n      0x00\n        /* \"contracts/WOM_LAND.sol\":3671:3678  owner() */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/WOM_LAND.sol\":3671:3678  owner() */\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WOM_LAND.sol\":3663:3684  payable(owner()).call */\n      and\n        /* \"contracts/WOM_LAND.sol\":3692:3713  address(this).balance */\n      selfbalance\n        /* \"contracts/WOM_LAND.sol\":3663:3718  payable(owner()).call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_273\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_272)\n    tag_273:\n      0x60\n      swap2\n      pop\n    tag_272:\n      pop\n        /* \"contracts/WOM_LAND.sol\":3649:3718  (bool os, ) = payable(owner()).call{value: address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/WOM_LAND.sol\":3735:3737  os */\n      dup1\n        /* \"contracts/WOM_LAND.sol\":3728:3738  assert(os) */\n      tag_275\n      jumpi\n      tag_275\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"contracts/WOM_LAND.sol\":3403:3834  {... */\n      pop\n        /* \"contracts/WOM_LAND.sol\":3358:3834  function withdraw() public payable onlyOwner {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":22758:22945  function safeTransferFrom(... */\n    tag_108:\n        /* \"erc721a/contracts/ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      tag_278\n        /* \"erc721a/contracts/ERC721A.sol\":22916:22920  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":22922:22924  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":22926:22933  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22899:22915  safeTransferFrom */\n      tag_172\n        /* \"erc721a/contracts/ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_278:\n        /* \"erc721a/contracts/ERC721A.sol\":22758:22945  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WOM_LAND.sol\":2022:2107  function burn(uint256 tokenId) public onlyOwner {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_280:\n        /* \"contracts/WOM_LAND.sol\":2080:2100  super._burn(tokenId) */\n      tag_275\n        /* \"contracts/WOM_LAND.sol\":2092:2099  tokenId */\n      dup2\n        /* \"contracts/WOM_LAND.sol\":2080:2091  super._burn */\n      tag_283\n        /* \"contracts/WOM_LAND.sol\":2080:2100  super._burn(tokenId) */\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":2215:2317  function ownerMint(address to, uint256 quantity) public onlyOwner {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_285\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_285:\n        /* \"contracts/WOM_LAND.sol\":2291:2310  _mint(to, quantity) */\n      tag_287\n        /* \"contracts/WOM_LAND.sol\":2297:2299  to */\n      dup3\n        /* \"contracts/WOM_LAND.sol\":2301:2309  quantity */\n      dup3\n        /* \"contracts/WOM_LAND.sol\":2291:2296  _mint */\n      tag_288\n        /* \"contracts/WOM_LAND.sol\":2291:2310  _mint(to, quantity) */\n      jump\t// in\n    tag_287:\n        /* \"contracts/WOM_LAND.sol\":2215:2317  function ownerMint(address to, uint256 quantity) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WOM_LAND.sol\":720:1904  function mint(... */\n    tag_120:\n        /* \"contracts/WOM_LAND.sol\":884:890  paused */\n      and(0xff, sload(0x0d))\n        /* \"contracts/WOM_LAND.sol\":883:890  !paused */\n      iszero\n        /* \"contracts/WOM_LAND.sol\":875:917  require(!paused, \"The contract is paused\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7743:7745   */\n      0x20\n        /* \"contracts/WOM_LAND.sol\":875:917  require(!paused, \"The contract is paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7725:7746   */\n      mstore\n        /* \"#utility.yul\":7782:7784   */\n      0x16\n        /* \"#utility.yul\":7762:7780   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7755:7785   */\n      mstore\n      shl(0x52, 0x151a194818dbdb9d1c9858dd081a5cc81c185d5cd959)\n        /* \"#utility.yul\":7801:7819   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7794:7846   */\n      mstore\n        /* \"#utility.yul\":7863:7881   */\n      0x64\n      add\n        /* \"contracts/WOM_LAND.sol\":875:917  require(!paused, \"The contract is paused\") */\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_290:\n        /* \"contracts/WOM_LAND.sol\":927:941  uint256 supply */\n      0x00\n        /* \"contracts/WOM_LAND.sol\":944:957  totalSupply() */\n      tag_293\n        /* \"erc721a/contracts/ERC721A.sol\":6164:6176  _burnCounter */\n      sload(0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":5955:5962  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6148:6161  _currentIndex */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":6148:6176  _currentIndex - _burnCounter */\n      sub\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/WOM_LAND.sol\":944:957  totalSupply() */\n    tag_293:\n        /* \"contracts/WOM_LAND.sol\":927:957  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/WOM_LAND.sol\":986:987  0 */\n      0x00\n        /* \"contracts/WOM_LAND.sol\":975:983  quantity */\n      dup6\n        /* \"contracts/WOM_LAND.sol\":975:987  quantity > 0 */\n      gt\n        /* \"contracts/WOM_LAND.sol\":967:1019  require(quantity > 0, \"Need to mint at least 1 NFT\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8094:8096   */\n      0x20\n        /* \"contracts/WOM_LAND.sol\":967:1019  require(quantity > 0, \"Need to mint at least 1 NFT\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8076:8097   */\n      mstore\n        /* \"#utility.yul\":8133:8135   */\n      0x1b\n        /* \"#utility.yul\":8113:8131   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8106:8136   */\n      mstore\n        /* \"#utility.yul\":8172:8201   */\n      0x4e65656420746f206d696e74206174206c656173742031204e46540000000000\n        /* \"#utility.yul\":8152:8170   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8145:8202   */\n      mstore\n        /* \"#utility.yul\":8219:8237   */\n      0x64\n      add\n        /* \"contracts/WOM_LAND.sol\":967:1019  require(quantity > 0, \"Need to mint at least 1 NFT\") */\n      tag_291\n        /* \"#utility.yul\":7892:8243   */\n      jump\n        /* \"contracts/WOM_LAND.sol\":967:1019  require(quantity > 0, \"Need to mint at least 1 NFT\") */\n    tag_294:\n        /* \"contracts/WOM_LAND.sol\":1058:1067  maxSupply */\n      sload(0x0a)\n        /* \"contracts/WOM_LAND.sol\":1037:1054  supply + quantity */\n      tag_297\n        /* \"contracts/WOM_LAND.sol\":1046:1054  quantity */\n      dup7\n        /* \"contracts/WOM_LAND.sol\":1037:1043  supply */\n      dup4\n        /* \"contracts/WOM_LAND.sol\":1037:1054  supply + quantity */\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"contracts/WOM_LAND.sol\":1037:1067  supply + quantity <= maxSupply */\n      gt\n      iszero\n        /* \"contracts/WOM_LAND.sol\":1029:1094  require(supply + quantity <= maxSupply, \"Max NFT limit exceeded\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8712:8714   */\n      0x20\n        /* \"contracts/WOM_LAND.sol\":1029:1094  require(supply + quantity <= maxSupply, \"Max NFT limit exceeded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8694:8715   */\n      mstore\n        /* \"#utility.yul\":8751:8753   */\n      0x16\n        /* \"#utility.yul\":8731:8749   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8724:8754   */\n      mstore\n      shl(0x52, 0x13585e08139195081b1a5b5a5d08195e18d959591959)\n        /* \"#utility.yul\":8770:8788   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8763:8815   */\n      mstore\n        /* \"#utility.yul\":8832:8850   */\n      0x64\n      add\n        /* \"contracts/WOM_LAND.sol\":1029:1094  require(supply + quantity <= maxSupply, \"Max NFT limit exceeded\") */\n      tag_291\n        /* \"#utility.yul\":8510:8856   */\n      jump\n        /* \"contracts/WOM_LAND.sol\":1029:1094  require(supply + quantity <= maxSupply, \"Max NFT limit exceeded\") */\n    tag_299:\n        /* \"contracts/WOM_LAND.sol\":1146:1156  msg.sender */\n      caller\n        /* \"contracts/WOM_LAND.sol\":1105:1129  uint256 ownerMintedCount */\n      0x00\n        /* \"contracts/WOM_LAND.sol\":1132:1157  alreadyMinted[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WOM_LAND.sol\":1132:1145  alreadyMinted */\n      0x0e\n        /* \"contracts/WOM_LAND.sol\":1132:1157  alreadyMinted[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/WOM_LAND.sol\":1173:1183  publicMint */\n      sload(0x0d)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/WOM_LAND.sol\":1168:1785  if (!publicMint) {... */\n      tag_302\n      jumpi\n        /* \"contracts/WOM_LAND.sol\":1199:1254  verifyCoupon(maxMint, unitPrice, msg.sender, signature) */\n      tag_303\n        /* \"contracts/WOM_LAND.sol\":1212:1219  maxMint */\n      dup6\n        /* \"contracts/WOM_LAND.sol\":1221:1230  unitPrice */\n      dup6\n        /* \"contracts/WOM_LAND.sol\":1232:1242  msg.sender */\n      caller\n        /* \"contracts/WOM_LAND.sol\":1244:1253  signature */\n      dup7\n        /* \"contracts/WOM_LAND.sol\":1199:1211  verifyCoupon */\n      tag_154\n        /* \"contracts/WOM_LAND.sol\":1199:1254  verifyCoupon(maxMint, unitPrice, msg.sender, signature) */\n      jump\t// in\n    tag_303:\n        /* \"contracts/WOM_LAND.sol\":1324:1331  maxMint */\n      dup5\n        /* \"contracts/WOM_LAND.sol\":1293:1320  ownerMintedCount + quantity */\n      tag_304\n        /* \"contracts/WOM_LAND.sol\":1312:1320  quantity */\n      dup8\n        /* \"contracts/WOM_LAND.sol\":1293:1309  ownerMintedCount */\n      dup4\n        /* \"contracts/WOM_LAND.sol\":1293:1320  ownerMintedCount + quantity */\n      tag_298\n      jump\t// in\n    tag_304:\n        /* \"contracts/WOM_LAND.sol\":1293:1331  ownerMintedCount + quantity <= maxMint */\n      gt\n      iszero\n        /* \"contracts/WOM_LAND.sol\":1268:1393  require(... */\n      tag_305\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9063:9065   */\n      0x20\n        /* \"contracts/WOM_LAND.sol\":1268:1393  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9045:9066   */\n      mstore\n        /* \"#utility.yul\":9102:9104   */\n      0x1c\n        /* \"#utility.yul\":9082:9100   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9075:9105   */\n      mstore\n        /* \"#utility.yul\":9141:9171   */\n      0x4d6178204e465420666f72206164647265737320657863656564656400000000\n        /* \"#utility.yul\":9121:9139   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9114:9172   */\n      mstore\n        /* \"#utility.yul\":9189:9207   */\n      0x64\n      add\n        /* \"contracts/WOM_LAND.sol\":1268:1393  require(... */\n      tag_291\n        /* \"#utility.yul\":8861:9213   */\n      jump\n        /* \"contracts/WOM_LAND.sol\":1268:1393  require(... */\n    tag_305:\n        /* \"contracts/WOM_LAND.sol\":1428:1448  unitPrice * quantity */\n      tag_308\n        /* \"contracts/WOM_LAND.sol\":1440:1448  quantity */\n      dup7\n        /* \"contracts/WOM_LAND.sol\":1428:1437  unitPrice */\n      dup6\n        /* \"contracts/WOM_LAND.sol\":1428:1448  unitPrice * quantity */\n      tag_309\n      jump\t// in\n    tag_308:\n        /* \"contracts/WOM_LAND.sol\":1415:1424  msg.value */\n      callvalue\n        /* \"contracts/WOM_LAND.sol\":1415:1448  msg.value >= unitPrice * quantity */\n      lt\n      iszero\n        /* \"contracts/WOM_LAND.sol\":1407:1472  require(msg.value >= unitPrice * quantity, \"Insufficient founds\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9593:9595   */\n      0x20\n        /* \"contracts/WOM_LAND.sol\":1407:1472  require(msg.value >= unitPrice * quantity, \"Insufficient founds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9575:9596   */\n      mstore\n        /* \"#utility.yul\":9632:9634   */\n      0x13\n        /* \"#utility.yul\":9612:9630   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9605:9635   */\n      mstore\n      shl(0x68, 0x496e73756666696369656e7420666f756e6473)\n        /* \"#utility.yul\":9651:9669   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9644:9693   */\n      mstore\n        /* \"#utility.yul\":9710:9728   */\n      0x64\n      add\n        /* \"contracts/WOM_LAND.sol\":1407:1472  require(msg.value >= unitPrice * quantity, \"Insufficient founds\") */\n      tag_291\n        /* \"#utility.yul\":9391:9734   */\n      jump\n        /* \"contracts/WOM_LAND.sol\":1407:1472  require(msg.value >= unitPrice * quantity, \"Insufficient founds\") */\n    tag_310:\n        /* \"contracts/WOM_LAND.sol\":1168:1785  if (!publicMint) {... */\n      jump(tag_318)\n    tag_302:\n        /* \"contracts/WOM_LAND.sol\":1559:1581  publicMaxNFTPerAddress */\n      sload(0x0b)\n        /* \"contracts/WOM_LAND.sol\":1528:1555  ownerMintedCount + quantity */\n      tag_314\n        /* \"contracts/WOM_LAND.sol\":1547:1555  quantity */\n      dup8\n        /* \"contracts/WOM_LAND.sol\":1528:1544  ownerMintedCount */\n      dup4\n        /* \"contracts/WOM_LAND.sol\":1528:1555  ownerMintedCount + quantity */\n      tag_298\n      jump\t// in\n    tag_314:\n        /* \"contracts/WOM_LAND.sol\":1528:1581  ownerMintedCount + quantity <= publicMaxNFTPerAddress */\n      gt\n      iszero\n        /* \"contracts/WOM_LAND.sol\":1503:1643  require(... */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9063:9065   */\n      0x20\n        /* \"contracts/WOM_LAND.sol\":1503:1643  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9045:9066   */\n      mstore\n        /* \"#utility.yul\":9102:9104   */\n      0x1c\n        /* \"#utility.yul\":9082:9100   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9075:9105   */\n      mstore\n        /* \"#utility.yul\":9141:9171   */\n      0x4d6178204e465420666f72206164647265737320657863656564656400000000\n        /* \"#utility.yul\":9121:9139   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9114:9172   */\n      mstore\n        /* \"#utility.yul\":9189:9207   */\n      0x64\n      add\n        /* \"contracts/WOM_LAND.sol\":1503:1643  require(... */\n      tag_291\n        /* \"#utility.yul\":8861:9213   */\n      jump\n        /* \"contracts/WOM_LAND.sol\":1503:1643  require(... */\n    tag_315:\n        /* \"contracts/WOM_LAND.sol\":1713:1721  quantity */\n      dup6\n        /* \"contracts/WOM_LAND.sol\":1695:1710  publicPriceMint */\n      sload(0x0c)\n        /* \"contracts/WOM_LAND.sol\":1695:1721  publicPriceMint * quantity */\n      tag_317\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_317:\n        /* \"contracts/WOM_LAND.sol\":1682:1691  msg.value */\n      callvalue\n        /* \"contracts/WOM_LAND.sol\":1682:1721  msg.value >= publicPriceMint * quantity */\n      lt\n      iszero\n        /* \"contracts/WOM_LAND.sol\":1657:1774  require(... */\n      tag_318\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9593:9595   */\n      0x20\n        /* \"contracts/WOM_LAND.sol\":1657:1774  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9575:9596   */\n      mstore\n        /* \"#utility.yul\":9632:9634   */\n      0x13\n        /* \"#utility.yul\":9612:9630   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9605:9635   */\n      mstore\n      shl(0x68, 0x496e73756666696369656e7420666f756e6473)\n        /* \"#utility.yul\":9651:9669   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9644:9693   */\n      mstore\n        /* \"#utility.yul\":9710:9728   */\n      0x64\n      add\n        /* \"contracts/WOM_LAND.sol\":1657:1774  require(... */\n      tag_291\n        /* \"#utility.yul\":9391:9734   */\n      jump\n        /* \"contracts/WOM_LAND.sol\":1657:1774  require(... */\n    tag_318:\n        /* \"contracts/WOM_LAND.sol\":1837:1847  msg.sender */\n      caller\n        /* \"contracts/WOM_LAND.sol\":1823:1848  alreadyMinted[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/WOM_LAND.sol\":1823:1836  alreadyMinted */\n      0x0e\n        /* \"contracts/WOM_LAND.sol\":1823:1848  alreadyMinted[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/WOM_LAND.sol\":1823:1859  alreadyMinted[msg.sender] + quantity */\n      tag_320\n      swap1\n        /* \"contracts/WOM_LAND.sol\":1851:1859  quantity */\n      dup8\n      swap1\n        /* \"contracts/WOM_LAND.sol\":1823:1859  alreadyMinted[msg.sender] + quantity */\n      tag_298\n      jump\t// in\n    tag_320:\n        /* \"contracts/WOM_LAND.sol\":1809:1819  msg.sender */\n      caller\n        /* \"contracts/WOM_LAND.sol\":1795:1820  alreadyMinted[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/WOM_LAND.sol\":1795:1808  alreadyMinted */\n      0x0e\n        /* \"contracts/WOM_LAND.sol\":1795:1820  alreadyMinted[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/WOM_LAND.sol\":1795:1859  alreadyMinted[msg.sender] = alreadyMinted[msg.sender] + quantity */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/WOM_LAND.sol\":1870:1897  _mint(msg.sender, quantity) */\n      tag_263\n      swap1\n        /* \"contracts/WOM_LAND.sol\":1888:1896  quantity */\n      dup8\n        /* \"contracts/WOM_LAND.sol\":1870:1875  _mint */\n      tag_288\n        /* \"contracts/WOM_LAND.sol\":1870:1897  _mint(msg.sender, quantity) */\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":11391:11541  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_132:\n        /* \"erc721a/contracts/ERC721A.sol\":11463:11470  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11505:11532  _packedOwnershipOf(tokenId) */\n      tag_206\n        /* \"erc721a/contracts/ERC721A.sol\":11524:11531  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11505:11523  _packedOwnershipOf */\n      tag_241\n        /* \"erc721a/contracts/ERC721A.sol\":11505:11532  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":270:291  string public baseURI */\n    tag_136:\n      0x09\n      dup1\n      sload\n      tag_324\n      swap1\n      tag_216\n      jump\t// in\n    tag_324:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_325\n      swap1\n      tag_216\n      jump\t// in\n    tag_325:\n      dup1\n      iszero\n      tag_326\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_327\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_326)\n    tag_327:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_328:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_328\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_326:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":7045:7275  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_141:\n        /* \"erc721a/contracts/ERC721A.sol\":7117:7124  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":7140:7159  owner == address(0) */\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":7136:7196  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_330\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":7168:7196  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":7136:7196  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_330:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":7213:7238  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":7213:7231  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":7213:7238  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":1360:1373  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":7213:7268  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":7045:7275  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_332\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_334\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/WOM_LAND.sol\":2847:3352  function verifyCoupon(... */\n    tag_154:\n        /* \"contracts/WOM_LAND.sol\":3063:3114  abi.encodePacked(maxMint, unitPrice, minterAddress) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9924:9943   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":9959:9971   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":9952:9980   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":10018:10020   */\n      0x60\n        /* \"#utility.yul\":10014:10029   */\n      dup6\n      dup2\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":10010:10063   */\n      and\n        /* \"#utility.yul\":9996:10008   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":9989:10064   */\n      mstore\n        /* \"contracts/WOM_LAND.sol\":3063:3114  abi.encodePacked(maxMint, unitPrice, minterAddress) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      0x54\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":10080:10092   */\n      0x74\n      dup4\n      add\n        /* \"contracts/WOM_LAND.sol\":3063:3114  abi.encodePacked(maxMint, unitPrice, minterAddress) */\n      dup5\n      mstore\n        /* \"contracts/WOM_LAND.sol\":3040:3124  keccak256(... */\n      dup1\n      mload\n      swap1\n      dup3\n      add\n      keccak256\n        /* \"#utility.yul\":14160:14226   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7455:7513  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash) */\n      0x94\n      dup5\n      add\n        /* \"#utility.yul\":14148:14227   */\n      mstore\n        /* \"#utility.yul\":14243:14255   */\n      0xb0\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":14236:14264   */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7455:7513  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash) */\n      dup5\n      mload\n      dup1\n      dup6\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":14280:14292   */\n      0xd0\n      swap1\n      swap4\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7455:7513  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash) */\n      swap1\n      swap4\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7445:7514  keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash)) */\n      dup2\n      mload\n      swap2\n      add\n      keccak256\n        /* \"contracts/WOM_LAND.sol\":3210:3234  address recoveredAddress */\n      0x00\n        /* \"contracts/WOM_LAND.sol\":3237:3276  ethSignedMessageHash.recover(signature) */\n      tag_342\n        /* \"contracts/WOM_LAND.sol\":3135:3200  bytes32 ethSignedMessageHash = inputHash.toEthSignedMessageHash() */\n      dup3\n        /* \"contracts/WOM_LAND.sol\":3266:3275  signature */\n      dup6\n        /* \"contracts/WOM_LAND.sol\":3237:3265  ethSignedMessageHash.recover */\n      tag_343\n        /* \"contracts/WOM_LAND.sol\":3237:3276  ethSignedMessageHash.recover(signature) */\n      jump\t// in\n    tag_342:\n        /* \"contracts/WOM_LAND.sol\":3314:3327  signerAddress */\n      sload(0x0d)\n        /* \"contracts/WOM_LAND.sol\":3210:3276  address recoveredAddress = ethSignedMessageHash.recover(signature) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/WOM_LAND.sol\":3294:3327  recoveredAddress == signerAddress */\n      dup1\n      dup4\n      and\n        /* \"contracts/WOM_LAND.sol\":3314:3327  signerAddress */\n      0x010000\n      swap1\n      swap3\n      div\n      and\n        /* \"contracts/WOM_LAND.sol\":3294:3327  recoveredAddress == signerAddress */\n      eq\n        /* \"contracts/WOM_LAND.sol\":3286:3345  require(recoveredAddress == signerAddress, \"Bad signature\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10305:10307   */\n      0x20\n        /* \"contracts/WOM_LAND.sol\":3286:3345  require(recoveredAddress == signerAddress, \"Bad signature\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10287:10308   */\n      mstore\n        /* \"#utility.yul\":10344:10346   */\n      0x0d\n        /* \"#utility.yul\":10324:10342   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10317:10347   */\n      mstore\n      shl(0x98, 0x426164207369676e6174757265)\n        /* \"#utility.yul\":10363:10381   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10356:10399   */\n      mstore\n        /* \"#utility.yul\":10416:10434   */\n      0x64\n      add\n        /* \"contracts/WOM_LAND.sol\":3286:3345  require(recoveredAddress == signerAddress, \"Bad signature\") */\n      tag_291\n        /* \"#utility.yul\":10103:10440   */\n      jump\n        /* \"contracts/WOM_LAND.sol\":3286:3345  require(recoveredAddress == signerAddress, \"Bad signature\") */\n    tag_344:\n        /* \"contracts/WOM_LAND.sol\":3010:3352  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/WOM_LAND.sol\":2847:3352  function verifyCoupon(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10208:10310  function symbol() public view virtual override returns (string memory) {... */\n    tag_157:\n        /* \"erc721a/contracts/ERC721A.sol\":10264:10277  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":10296:10303  _symbol */\n      0x03\n        /* \"erc721a/contracts/ERC721A.sol\":10289:10303  return _symbol */\n      dup1\n      sload\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n        /* \"contracts/WOM_LAND.sol\":2113:2209  function setBaseUri(string memory baseuri_) public onlyOwner {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_354\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_354:\n        /* \"contracts/WOM_LAND.sol\":2184:2191  baseURI */\n      0x09\n        /* \"contracts/WOM_LAND.sol\":2184:2202  baseURI = baseuri_ */\n      tag_287\n        /* \"contracts/WOM_LAND.sol\":2194:2202  baseuri_ */\n      dup3\n        /* \"contracts/WOM_LAND.sol\":2184:2191  baseURI */\n      dup3\n        /* \"contracts/WOM_LAND.sol\":2184:2202  baseURI = baseuri_ */\n      tag_357\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":16901:17132  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_168:\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":16995:17034  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":16995:17013  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":16995:17034  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":16995:17044  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":16995:17055  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":16995:17044  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      swap2\n        /* \"erc721a/contracts/ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc721a/contracts/ERC721A.sol\":16901:17132  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n    tag_172:\n        /* \"erc721a/contracts/ERC721A.sol\":23695:23726  transferFrom(from, to, tokenId) */\n      tag_363\n        /* \"erc721a/contracts/ERC721A.sol\":23708:23712  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23714:23716  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23718:23725  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23695:23707  transferFrom */\n      tag_99\n        /* \"erc721a/contracts/ERC721A.sol\":23695:23726  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_363:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":23740:23754  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"erc721a/contracts/ERC721A.sol\":23740:23759  to.code.length != 0 */\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":23736:23916  if (to.code.length != 0)... */\n      tag_367\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":23778:23834  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_365\n        /* \"erc721a/contracts/ERC721A.sol\":23809:23813  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23815:23817  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23819:23826  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23828:23833  _data */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23778:23808  _checkContractOnERC721Received */\n      tag_366\n        /* \"erc721a/contracts/ERC721A.sol\":23778:23834  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_365:\n        /* \"erc721a/contracts/ERC721A.sol\":23773:23916  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_367\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":23861:23901  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":23773:23916  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_367:\n        /* \"erc721a/contracts/ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WOM_LAND.sol\":2621:2737  function setPublicMaxNFTPerAddress(uint256 _state) public onlyOwner {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_369\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_369:\n        /* \"contracts/WOM_LAND.sol\":2699:2721  publicMaxNFTPerAddress */\n      0x0b\n        /* \"contracts/WOM_LAND.sol\":2699:2730  publicMaxNFTPerAddress = _state */\n      sstore\n        /* \"contracts/WOM_LAND.sol\":2621:2737  function setPublicMaxNFTPerAddress(uint256 _state) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/WOM_LAND.sol\":2743:2841  function setPublicPrice(uint256 _state) public onlyOwner {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_372\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_372:\n        /* \"contracts/WOM_LAND.sol\":2810:2825  publicPriceMint */\n      0x0c\n        /* \"contracts/WOM_LAND.sol\":2810:2834  publicPriceMint = _state */\n      sstore\n        /* \"contracts/WOM_LAND.sol\":2743:2841  function setPublicPrice(uint256 _state) public onlyOwner {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10411:10724  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_184:\n        /* \"erc721a/contracts/ERC721A.sol\":10484:10497  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":10514:10530  _exists(tokenId) */\n      tag_375\n        /* \"erc721a/contracts/ERC721A.sol\":10522:10529  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":10514:10521  _exists */\n      tag_223\n        /* \"erc721a/contracts/ERC721A.sol\":10514:10530  _exists(tokenId) */\n      jump\t// in\n    tag_375:\n        /* \"erc721a/contracts/ERC721A.sol\":10509:10568  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_376\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":10539:10568  URIQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe4, 0x0a14c4b5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":10509:10568  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_376:\n        /* \"erc721a/contracts/ERC721A.sol\":10579:10600  string memory baseURI */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":10603:10613  _baseURI() */\n      tag_377\n        /* \"erc721a/contracts/ERC721A.sol\":10603:10611  _baseURI */\n      tag_378\n        /* \"erc721a/contracts/ERC721A.sol\":10603:10613  _baseURI() */\n      jump\t// in\n    tag_377:\n        /* \"erc721a/contracts/ERC721A.sol\":10579:10613  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10636:10643  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":10630:10651  bytes(baseURI).length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":10655:10656  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":10630:10656  bytes(baseURI).length != 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":10630:10717  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_379\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_380)\n    tag_379:\n        /* \"erc721a/contracts/ERC721A.sol\":10683:10690  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":10692:10710  _toString(tokenId) */\n      tag_381\n        /* \"erc721a/contracts/ERC721A.sol\":10702:10709  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":10692:10701  _toString */\n      tag_382\n        /* \"erc721a/contracts/ERC721A.sol\":10692:10710  _toString(tokenId) */\n      jump\t// in\n    tag_381:\n        /* \"erc721a/contracts/ERC721A.sol\":10666:10711  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_383\n      swap3\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":10630:10717  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_380:\n        /* \"erc721a/contracts/ERC721A.sol\":10623:10717  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"erc721a/contracts/ERC721A.sol\":10411:10724  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":17402:17427  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":17379:17383  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17402:17427  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":17402:17420  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":17402:17427  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":17402:17437  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_387\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_387:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_389\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13352:13354   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13334:13355   */\n      mstore\n        /* \"#utility.yul\":13391:13393   */\n      0x26\n        /* \"#utility.yul\":13371:13389   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13364:13394   */\n      mstore\n        /* \"#utility.yul\":13430:13464   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13410:13428   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13403:13465   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":13481:13499   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13474:13510   */\n      mstore\n        /* \"#utility.yul\":13527:13546   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_291\n        /* \"#utility.yul\":13150:13552   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_389:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_275\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_335\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13759:13761   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13741:13762   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13778:13796   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13771:13801   */\n      mstore\n        /* \"#utility.yul\":13837:13871   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13817:13835   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13810:13872   */\n      mstore\n        /* \"#utility.yul\":13889:13907   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_291\n        /* \"#utility.yul\":13557:13913   */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":17693:17970  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_223:\n        /* \"erc721a/contracts/ERC721A.sol\":17758:17762  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17845:17858  _currentIndex */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":17835:17842  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":17835:17858  tokenId < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":17793:17944  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17895:17921  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":17895:17912  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":17895:17921  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":17895:17939  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":17895:17944  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":17693:17970  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12515:13764  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_241:\n        /* \"erc721a/contracts/ERC721A.sol\":12582:12589  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12616:12623  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":12714:12727  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":12707:12711  curr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":12707:12727  curr < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":12703:13700  if (curr < _currentIndex) {... */\n      iszero\n      tag_409\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12751:12765  uint256 packed */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12768:12791  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":12768:12785  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":12768:12791  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n      shl(0xe0, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":12855:12879  packed & _BITMASK_BURNED */\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":12855:12884  packed & _BITMASK_BURNED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":12851:13682  if (packed & _BITMASK_BURNED == 0) {... */\n      tag_410\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13510:13621  while (packed == 0) {... */\n    tag_411:\n        /* \"erc721a/contracts/ERC721A.sol\":13517:13523  packed */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":13527:13528  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13517:13528  packed == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":13510:13621  while (packed == 0) {... */\n      tag_380\n      jumpi\n      pop\n      not(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":13587:13593  --curr */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":13569:13594  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13569:13586  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":13569:13594  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":13510:13621  while (packed == 0) {... */\n      jump(tag_411)\n        /* \"erc721a/contracts/ERC721A.sol\":12851:13682  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_410:\n        /* \"erc721a/contracts/ERC721A.sol\":12729:13700  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12703:13700  if (curr < _currentIndex) {... */\n    tag_409:\n        /* \"erc721a/contracts/ERC721A.sol\":13726:13757  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":33791:33878  function _burn(uint256 tokenId) internal virtual {... */\n    tag_283:\n        /* \"erc721a/contracts/ERC721A.sol\":33850:33871  _burn(tokenId, false) */\n      tag_275\n        /* \"erc721a/contracts/ERC721A.sol\":33856:33863  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":33865:33870  false */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":33850:33855  _burn */\n      tag_423\n        /* \"erc721a/contracts/ERC721A.sol\":33850:33871  _burn(tokenId, false) */\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":27091:29993  function _mint(address to, uint256 quantity) internal virtual {... */\n    tag_288:\n        /* \"erc721a/contracts/ERC721A.sol\":27163:27183  uint256 startTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":27186:27199  _currentIndex */\n      dup1\n      sload\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":27213:27226  quantity == 0 */\n      dup3\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":27209:27253  if (quantity == 0) revert MintZeroQuantity() */\n      tag_425\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":27235:27253  MintZeroQuantity() */\n      mload(0x40)\n      shl(0xe0, 0xb562e8dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":27209:27253  if (quantity == 0) revert MintZeroQuantity() */\n    tag_425:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":27728:27750  _packedAddressData[to] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":27728:27746  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":27728:27750  _packedAddressData[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":1495:1497  64 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":27728:27750  _packedAddressData[to] */\n      dup1\n      dup4\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":27728:27799  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":27766:27798  (1 << _BITPOS_NUMBER_MINTED) | 1 */\n      0x010000000000000001\n        /* \"erc721a/contracts/ERC721A.sol\":27754:27799  quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup9\n      mul\n        /* \"erc721a/contracts/ERC721A.sol\":27728:27799  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":28035:28066  _packedOwnerships[startTokenId] */\n      dup5\n      dup4\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":28035:28052  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":28035:28066  _packedOwnerships[startTokenId] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":15123:15138  eq(quantity, 1) */\n      dup6\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":15097:15121  _BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"erc721a/contracts/ERC721A.sol\":15093:15139  shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":14703:14714  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":14678:14701  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":14674:14715  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":14671:14723  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":14661:14724  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      dup4\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":28035:28205  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":28264:28287  startTokenId + quantity */\n      dup3\n      dup5\n      add\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":28035:28066  _packedOwnerships[startTokenId] */\n      dup4\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":27728:27750  _packedAddressData[to] */\n      dup4\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":28872:29200  log4(... */\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":29520:29521  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":29506:29518  startTokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":29502:29522  add(startTokenId, 1) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":29461:29800  for {... */\n    tag_431:\n        /* \"erc721a/contracts/ERC721A.sol\":29560:29563  end */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29551:29558  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29548:29564  eq(tokenId, end) */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":29461:29800  for {... */\n      tag_433\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":29774:29781  tokenId */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29764:29772  toMasked */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":29761:29762  0 */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":29731:29732  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":29728:29729  0 */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":29723:29782  log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId) */\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":29612:29613  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":29599:29614  add(tokenId, 1) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":29461:29800  for {... */\n      jump(tag_431)\n    tag_433:\n        /* \"erc721a/contracts/ERC721A.sol\":29465:29540  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":29831:29839  toMasked */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":29843:29844  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":29831:29844  toMasked == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":29827:29872  if (toMasked == 0) revert MintToZeroAddress() */\n      tag_434\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":29853:29872  MintToZeroAddress() */\n      mload(0x40)\n      shl(0xe8, 0x2e0763)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":29827:29872  if (toMasked == 0) revert MintToZeroAddress() */\n    tag_434:\n        /* \"erc721a/contracts/ERC721A.sol\":29887:29900  _currentIndex */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":29887:29906  _currentIndex = end */\n      sstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22758:22945  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x08\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3661:3888  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3739:3746  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3759:3776  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3778:3796  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3800:3827  tryRecover(hash, signature) */\n      tag_441\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3811:3815  hash */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3817:3826  signature */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3800:3810  tryRecover */\n      tag_442\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3800:3827  tryRecover(hash, signature) */\n      jump\t// in\n    tag_441:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3758:3827  (address recovered, RecoverError error) = tryRecover(hash, signature) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3837:3855  _throwError(error) */\n      tag_443\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3849:3854  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3837:3848  _throwError */\n      tag_444\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3837:3855  _throwError(error) */\n      jump\t// in\n    tag_443:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3872:3881  recovered */\n      swap4\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3661:3888  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":25948:26645  function _checkContractOnERC721Received(... */\n    tag_366:\n        /* \"erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":26106:26110  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":26126:26171  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_447\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":26193:26197  from */\n      dup10\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":26199:26206  tokenId */\n      dup9\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":26208:26213  _data */\n      dup9\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_448\n      jump\t// in\n    tag_447:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_449\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_450\n      swap2\n      dup2\n      add\n      swap1\n      tag_451\n      jump\t// in\n    tag_450:\n      0x01\n    tag_449:\n        /* \"erc721a/contracts/ERC721A.sol\":26122:26639  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_452\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_457\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_456)\n    tag_457:\n      0x60\n      swap2\n      pop\n    tag_456:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":26404:26410  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":26404:26417  reason.length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":26421:26422  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":26404:26422  reason.length == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":26400:26629  if (reason.length == 0) {... */\n      tag_458\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":26449:26489  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":26400:26629  if (reason.length == 0) {... */\n    tag_458:\n        /* \"erc721a/contracts/ERC721A.sol\":26589:26595  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":26583:26596  mload(reason) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":26574:26580  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":26570:26572  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":26566:26581  add(32, reason) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":26559:26597  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":26122:26639  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_452:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":26282:26346  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":26122:26639  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_460:\n        /* \"erc721a/contracts/ERC721A.sol\":25948:26645  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WOM_LAND.sol\":1910:2016  function _baseURI() internal view virtual override returns (string memory) {... */\n    tag_378:\n        /* \"contracts/WOM_LAND.sol\":1970:1983  string memory */\n      0x60\n        /* \"contracts/WOM_LAND.sol\":2002:2009  baseURI */\n      0x09\n        /* \"contracts/WOM_LAND.sol\":1995:2009  return baseURI */\n      dup1\n      sload\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":39637:41345  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_382:\n        /* \"erc721a/contracts/ERC721A.sol\":39702:39719  string memory str */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":40130:40134  0xa0 */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":40123:40127  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":40117:40128  mload(0x40) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":40113:40135  add(mload(0x40), 0xa0) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":40220:40221  m */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":40214:40218  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":40207:40222  mstore(0x40, m) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":40293:40297  0x20 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":40290:40291  m */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":40286:40298  sub(m, 0x20) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":40279:40298  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":40373:40374  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":40368:40371  str */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":40361:40375  mstore(str, 0) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":40474:40477  str */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":40708:40713  value */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":40690:41109  for { let temp := value } 1 {} {... */\n    tag_468:\n        /* \"erc721a/contracts/ERC721A.sol\":40755:40756  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":40750:40753  str */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":40746:40757  sub(str, 1) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":40739:40757  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":40923:40925  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":40917:40921  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":40913:40926  mod(temp, 10) */\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":40909:40911  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":40905:40927  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":40900:40903  str */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":40892:40928  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":41015:41017  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":41005:41018  div(temp, 10) */\n      swap1\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":41070:41095  if iszero(temp) { break } */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":40690:41109  for { let temp := value } 1 {} {... */\n      tag_468\n        /* \"erc721a/contracts/ERC721A.sol\":41070:41095  if iszero(temp) { break } */\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":41137:41150  sub(end, str) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"erc721a/contracts/ERC721A.sol\":41250:41264  sub(str, 0x20) */\n      swap1\n      swap2\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":41310:41329  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":41250:41264  sub(str, 0x20) */\n      swap2\n        /* \"erc721a/contracts/ERC721A.sol\":39637:41345  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":34095:37110  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n    tag_423:\n        /* \"erc721a/contracts/ERC721A.sol\":34174:34201  uint256 prevOwnershipPacked */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":34204:34231  _packedOwnershipOf(tokenId) */\n      tag_475\n        /* \"erc721a/contracts/ERC721A.sol\":34223:34230  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":34204:34222  _packedOwnershipOf */\n      tag_241\n        /* \"erc721a/contracts/ERC721A.sol\":34204:34231  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_475:\n        /* \"erc721a/contracts/ERC721A.sol\":34174:34231  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34242:34254  address from */\n      0x00\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34362:34397  _getApprovedSlotAndAddress(tokenId) */\n      tag_476\n        /* \"erc721a/contracts/ERC721A.sol\":34389:34396  tokenId */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":18927:18954  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":19036:19060  _tokenApprovals[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":19036:19051  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":19036:19060  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":19260:19286  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":19036:19060  _tokenApprovals[tokenId] */\n      swap1\n      swap2\n        /* \"erc721a/contracts/ERC721A.sol\":18828:19302  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":34362:34397  _getApprovedSlotAndAddress(tokenId) */\n    tag_476:\n        /* \"erc721a/contracts/ERC721A.sol\":34305:34397  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34412:34425  approvalCheck */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":34408:34720  if (approvalCheck) {... */\n      iszero\n      tag_483\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":34531:34599  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_478\n        /* \"erc721a/contracts/ERC721A.sol\":34556:34571  approvedAddress */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":34573:34577  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":34579:34598  _msgSenderERC721A() */\n      tag_246\n        /* \"erc721a/contracts/ERC721A.sol\":39437:39540  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":34531:34599  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n    tag_478:\n        /* \"erc721a/contracts/ERC721A.sol\":34526:34709  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_483\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":34622:34665  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_481\n        /* \"erc721a/contracts/ERC721A.sol\":34639:34643  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_198\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":34622:34665  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_481:\n        /* \"erc721a/contracts/ERC721A.sol\":34617:34709  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_483\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":34674:34709  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":34617:34709  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_483:\n        /* \"erc721a/contracts/ERC721A.sol\":34870:34885  approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":34867:35024  if approvedAddress {... */\n      iszero\n      tag_485\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":35008:35009  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":34987:35006  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":34980:35010  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":34867:35024  if approvedAddress {... */\n    tag_485:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":35613:35637  _packedAddressData[from] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":35613:35631  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":35613:35637  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":35613:35673  _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":35641:35673  (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      0xffffffffffffffffffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":35613:35673  _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1 */\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":14703:14714  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":14678:14701  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":14674:14715  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":14661:14724  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe0, 0x03)\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":35904:35930  _packedOwnerships[tokenId] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":35904:35921  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":35904:35930  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":35904:36106  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":36223:36270  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup6\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":36223:36275  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":36219:36836  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_488\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":36327:36328  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":36317:36328  tokenId + 1 */\n      dup7\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":36295:36314  uint256 nextTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":36448:36478  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":36448:36465  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":36448:36478  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":36448:36483  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":36444:36822  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_490\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":36584:36597  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":36569:36580  nextTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":36569:36597  nextTokenId != _currentIndex */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":36565:36804  if (nextTokenId != _currentIndex) {... */\n      tag_490\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":36729:36759  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":36729:36746  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":36729:36759  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":36729:36781  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup6\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":36565:36804  if (nextTokenId != _currentIndex) {... */\n    tag_490:\n        /* \"erc721a/contracts/ERC721A.sol\":36277:36836  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":36219:36836  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_488:\n        /* \"erc721a/contracts/ERC721A.sol\":36861:36896  Transfer(from, address(0), tokenId) */\n      mload(0x40)\n        /* \"erc721a/contracts/ERC721A.sol\":36888:36895  tokenId */\n      dup7\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":36884:36885  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":36861:36896  Transfer(from, address(0), tokenId) */\n      dup7\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":36884:36885  0 */\n      dup4\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":36861:36896  Transfer(from, address(0), tokenId) */\n      log4\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":37079:37091  _burnCounter */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":37079:37093  _burnCounter++ */\n      dup1\n      sload\n      dup2\n      add\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":34095:37110  function _burn(uint256 tokenId, bool approvalCheck) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2145:2875  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {... */\n    tag_442:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2226:2233  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2235:2247  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2272  signature */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2279  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2283:2285  65 */\n      0x41\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2263:2285  signature.length == 65 */\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2259:2869  if (signature.length == 65) {... */\n      tag_494\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2599:2603  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2584:2604  add(signature, 0x20) */\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2578:2605  mload(add(signature, 0x20)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2648:2652  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2633:2653  add(signature, 0x40) */\n      dup5\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2627:2654  mload(add(signature, 0x40)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2705:2709  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2690:2710  add(signature, 0x60) */\n      dup6\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2684:2711  mload(add(signature, 0x60)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2301:2310  bytes32 r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2676:2712  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2771  tryRecover(hash, v, r, s) */\n      tag_495\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2757:2761  hash */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2676:2712  byte(0, mload(add(signature, 0x60))) */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2578:2605  mload(add(signature, 0x20)) */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2627:2654  mload(add(signature, 0x40)) */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2756  tryRecover */\n      tag_496\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2746:2771  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_495:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2739:2771  return tryRecover(hash, v, r, s) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      jump(tag_497)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2259:2869  if (signature.length == 65) {... */\n    tag_494:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2818:2819  0 */\n      0x00\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2822:2857  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2259:2869  if (signature.length == 65) {... */\n    tag_497:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2145:2875  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":570:1081  function _throwError(RecoverError error) private pure {... */\n    tag_444:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":647:667  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":638:643  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":638:667  error == RecoverError.NoError */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_503\n      jumpi\n      tag_503\n      tag_501\n      jump\t// in\n    tag_503:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":634:1075  if (error == RecoverError.NoError) {... */\n      tag_504\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":570:1081  function _throwError(RecoverError error) private pure {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":634:1075  if (error == RecoverError.NoError) {... */\n    tag_504:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":743:772  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":734:739  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":734:772  error == RecoverError.InvalidSignature */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_509\n      jumpi\n      tag_509\n      tag_501\n      jump\t// in\n    tag_509:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":730:1075  if (error == RecoverError.InvalidSignature) {... */\n      tag_510\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":788:822  revert(\"ECDSA: invalid signature\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15385:15387   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":788:822  revert(\"ECDSA: invalid signature\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15367:15388   */\n      mstore\n        /* \"#utility.yul\":15424:15426   */\n      0x18\n        /* \"#utility.yul\":15404:15422   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15397:15427   */\n      mstore\n        /* \"#utility.yul\":15463:15489   */\n      0x45434453413a20696e76616c6964207369676e61747572650000000000000000\n        /* \"#utility.yul\":15443:15461   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15436:15490   */\n      mstore\n        /* \"#utility.yul\":15507:15525   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":788:822  revert(\"ECDSA: invalid signature\") */\n      tag_291\n        /* \"#utility.yul\":15183:15531   */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":730:1075  if (error == RecoverError.InvalidSignature) {... */\n    tag_510:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":852:887  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":843:848  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":843:887  error == RecoverError.InvalidSignatureLength */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_517\n      jumpi\n      tag_517\n      tag_501\n      jump\t// in\n    tag_517:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":839:1075  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_518\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":903:944  revert(\"ECDSA: invalid signature length\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15738:15740   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":903:944  revert(\"ECDSA: invalid signature length\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15720:15741   */\n      mstore\n        /* \"#utility.yul\":15777:15779   */\n      0x1f\n        /* \"#utility.yul\":15757:15775   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15750:15780   */\n      mstore\n        /* \"#utility.yul\":15816:15849   */\n      0x45434453413a20696e76616c6964207369676e6174757265206c656e67746800\n        /* \"#utility.yul\":15796:15814   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15789:15850   */\n      mstore\n        /* \"#utility.yul\":15867:15885   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":903:944  revert(\"ECDSA: invalid signature length\") */\n      tag_291\n        /* \"#utility.yul\":15536:15891   */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":839:1075  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_518:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":974:1004  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":965:970  error */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":965:1004  error == RecoverError.InvalidSignatureS */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_525\n      jumpi\n      tag_525\n      tag_501\n      jump\t// in\n    tag_525:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":961:1075  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":1020:1064  revert(\"ECDSA: invalid signature 's' value\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16098:16100   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":1020:1064  revert(\"ECDSA: invalid signature 's' value\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16080:16101   */\n      mstore\n        /* \"#utility.yul\":16137:16139   */\n      0x22\n        /* \"#utility.yul\":16117:16135   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16110:16140   */\n      mstore\n        /* \"#utility.yul\":16176:16210   */\n      0x45434453413a20696e76616c6964207369676e6174757265202773272076616c\n        /* \"#utility.yul\":16156:16174   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16149:16211   */\n      mstore\n      shl(0xf0, 0x7565)\n        /* \"#utility.yul\":16227:16245   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16220:16252   */\n      mstore\n        /* \"#utility.yul\":16269:16288   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":1020:1064  revert(\"ECDSA: invalid signature 's' value\") */\n      tag_291\n        /* \"#utility.yul\":15896:16294   */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5069:6563  function tryRecover(... */\n    tag_496:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5195:5202  address */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6119:6185  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6106:6185  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup4\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6102:6263  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_530\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6217:6218  0 */\n      0x00\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6221:6251  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6201:6252  return (address(0), RecoverError.InvalidSignatureS) */\n      jump(tag_529)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6102:6263  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_530:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6374:6398  ecrecover(hash, v, r, s) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6357:6371  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6374:6398  ecrecover(hash, v, r, s) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":16526:16551   */\n      dup10\n      swap1\n      mstore\n        /* \"#utility.yul\":16599:16603   */\n      0xff\n        /* \"#utility.yul\":16587:16604   */\n      dup9\n      and\n        /* \"#utility.yul\":16567:16585   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":16560:16605   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":16621:16639   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":16614:16648   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":16664:16682   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":16657:16691   */\n      dup6\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6374:6398  ecrecover(hash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":16498:16517   */\n      0xa0\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6374:6398  ecrecover(hash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_534\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_534:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6412:6432  signer == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6408:6509  if (signer == address(0)) {... */\n      tag_535\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6464:6465  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6468:6497  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6448:6498  return (address(0), RecoverError.InvalidSignature) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_529)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6408:6509  if (signer == address(0)) {... */\n    tag_535:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6527:6533  signer */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6535:6555  RecoverError.NoError */\n      0x00\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5069:6563  function tryRecover(... */\n    tag_529:\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_536:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_48:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_552:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_380\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_536\n      jump\t// in\n        /* \"#utility.yul\":592:752   */\n    tag_537:\n        /* \"#utility.yul\":657:677   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":713:726   */\n      dup1\n      iszero\n        /* \"#utility.yul\":706:727   */\n      iszero\n        /* \"#utility.yul\":696:728   */\n      dup2\n      eq\n        /* \"#utility.yul\":686:746   */\n      tag_556\n      jumpi\n        /* \"#utility.yul\":742:743   */\n      0x00\n        /* \"#utility.yul\":739:740   */\n      dup1\n        /* \"#utility.yul\":732:744   */\n      revert\n        /* \"#utility.yul\":686:746   */\n    tag_556:\n        /* \"#utility.yul\":592:752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":757:937   */\n    tag_55:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":866:868   */\n      0x20\n        /* \"#utility.yul\":854:863   */\n      dup3\n        /* \"#utility.yul\":845:852   */\n      dup5\n        /* \"#utility.yul\":841:864   */\n      sub\n        /* \"#utility.yul\":837:869   */\n      slt\n        /* \"#utility.yul\":834:886   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":882:883   */\n      0x00\n        /* \"#utility.yul\":879:880   */\n      dup1\n        /* \"#utility.yul\":872:884   */\n      revert\n        /* \"#utility.yul\":834:886   */\n    tag_558:\n        /* \"#utility.yul\":905:931   */\n      tag_380\n        /* \"#utility.yul\":921:930   */\n      dup3\n        /* \"#utility.yul\":905:931   */\n      tag_537\n      jump\t// in\n        /* \"#utility.yul\":942:1115   */\n    tag_538:\n        /* \"#utility.yul\":1010:1030   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1059:1090   */\n      dup2\n      and\n        /* \"#utility.yul\":1049:1091   */\n      dup2\n      eq\n        /* \"#utility.yul\":1039:1109   */\n      tag_556\n      jumpi\n        /* \"#utility.yul\":1105:1106   */\n      0x00\n        /* \"#utility.yul\":1102:1103   */\n      dup1\n        /* \"#utility.yul\":1095:1107   */\n      revert\n        /* \"#utility.yul\":1120:1306   */\n    tag_60:\n        /* \"#utility.yul\":1179:1185   */\n      0x00\n        /* \"#utility.yul\":1232:1234   */\n      0x20\n        /* \"#utility.yul\":1220:1229   */\n      dup3\n        /* \"#utility.yul\":1211:1218   */\n      dup5\n        /* \"#utility.yul\":1207:1230   */\n      sub\n        /* \"#utility.yul\":1203:1235   */\n      slt\n        /* \"#utility.yul\":1200:1252   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":1248:1249   */\n      0x00\n        /* \"#utility.yul\":1245:1246   */\n      dup1\n        /* \"#utility.yul\":1238:1250   */\n      revert\n        /* \"#utility.yul\":1200:1252   */\n    tag_563:\n        /* \"#utility.yul\":1271:1300   */\n      tag_380\n        /* \"#utility.yul\":1290:1299   */\n      dup3\n        /* \"#utility.yul\":1271:1300   */\n      tag_538\n      jump\t// in\n        /* \"#utility.yul\":1311:1561   */\n    tag_539:\n        /* \"#utility.yul\":1396:1397   */\n      0x00\n        /* \"#utility.yul\":1406:1519   */\n    tag_566:\n        /* \"#utility.yul\":1420:1426   */\n      dup4\n        /* \"#utility.yul\":1417:1418   */\n      dup2\n        /* \"#utility.yul\":1414:1427   */\n      lt\n        /* \"#utility.yul\":1406:1519   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":1496:1507   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1490:1508   */\n      mload\n        /* \"#utility.yul\":1477:1488   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1470:1509   */\n      mstore\n        /* \"#utility.yul\":1442:1444   */\n      0x20\n        /* \"#utility.yul\":1435:1445   */\n      add\n        /* \"#utility.yul\":1406:1519   */\n      jump(tag_566)\n    tag_568:\n      pop\n      pop\n        /* \"#utility.yul\":1553:1554   */\n      0x00\n        /* \"#utility.yul\":1535:1551   */\n      swap2\n      add\n        /* \"#utility.yul\":1528:1555   */\n      mstore\n        /* \"#utility.yul\":1311:1561   */\n      jump\t// out\n        /* \"#utility.yul\":1566:1837   */\n    tag_540:\n        /* \"#utility.yul\":1608:1611   */\n      0x00\n        /* \"#utility.yul\":1646:1651   */\n      dup2\n        /* \"#utility.yul\":1640:1652   */\n      mload\n        /* \"#utility.yul\":1673:1679   */\n      dup1\n        /* \"#utility.yul\":1668:1671   */\n      dup5\n        /* \"#utility.yul\":1661:1680   */\n      mstore\n        /* \"#utility.yul\":1689:1765   */\n      tag_570\n        /* \"#utility.yul\":1758:1764   */\n      dup2\n        /* \"#utility.yul\":1751:1755   */\n      0x20\n        /* \"#utility.yul\":1746:1749   */\n      dup7\n        /* \"#utility.yul\":1742:1756   */\n      add\n        /* \"#utility.yul\":1735:1739   */\n      0x20\n        /* \"#utility.yul\":1728:1733   */\n      dup7\n        /* \"#utility.yul\":1724:1740   */\n      add\n        /* \"#utility.yul\":1689:1765   */\n      tag_539\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":1819:1821   */\n      0x1f\n        /* \"#utility.yul\":1798:1813   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1794:1823   */\n      and\n        /* \"#utility.yul\":1785:1824   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1826:1830   */\n      0x20\n        /* \"#utility.yul\":1781:1831   */\n      add\n      swap3\n        /* \"#utility.yul\":1566:1837   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1842:2062   */\n    tag_66:\n        /* \"#utility.yul\":1991:1993   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup2\n        /* \"#utility.yul\":1973:1994   */\n      mstore\n        /* \"#utility.yul\":1954:1958   */\n      0x00\n        /* \"#utility.yul\":2011:2056   */\n      tag_380\n        /* \"#utility.yul\":2052:2054   */\n      0x20\n        /* \"#utility.yul\":2041:2050   */\n      dup4\n        /* \"#utility.yul\":2037:2055   */\n      add\n        /* \"#utility.yul\":2029:2035   */\n      dup5\n        /* \"#utility.yul\":2011:2056   */\n      tag_540\n      jump\t// in\n        /* \"#utility.yul\":2067:2247   */\n    tag_70:\n        /* \"#utility.yul\":2126:2132   */\n      0x00\n        /* \"#utility.yul\":2179:2181   */\n      0x20\n        /* \"#utility.yul\":2167:2176   */\n      dup3\n        /* \"#utility.yul\":2158:2165   */\n      dup5\n        /* \"#utility.yul\":2154:2177   */\n      sub\n        /* \"#utility.yul\":2150:2182   */\n      slt\n        /* \"#utility.yul\":2147:2199   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":2195:2196   */\n      0x00\n        /* \"#utility.yul\":2192:2193   */\n      dup1\n        /* \"#utility.yul\":2185:2197   */\n      revert\n        /* \"#utility.yul\":2147:2199   */\n    tag_574:\n      pop\n        /* \"#utility.yul\":2218:2241   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2067:2247   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2460:2714   */\n    tag_76:\n        /* \"#utility.yul\":2528:2534   */\n      0x00\n        /* \"#utility.yul\":2536:2542   */\n      dup1\n        /* \"#utility.yul\":2589:2591   */\n      0x40\n        /* \"#utility.yul\":2577:2586   */\n      dup4\n        /* \"#utility.yul\":2568:2575   */\n      dup6\n        /* \"#utility.yul\":2564:2587   */\n      sub\n        /* \"#utility.yul\":2560:2592   */\n      slt\n        /* \"#utility.yul\":2557:2609   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":2605:2606   */\n      0x00\n        /* \"#utility.yul\":2602:2603   */\n      dup1\n        /* \"#utility.yul\":2595:2607   */\n      revert\n        /* \"#utility.yul\":2557:2609   */\n    tag_577:\n        /* \"#utility.yul\":2628:2657   */\n      tag_578\n        /* \"#utility.yul\":2647:2656   */\n      dup4\n        /* \"#utility.yul\":2628:2657   */\n      tag_538\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":2618:2657   */\n      swap5\n        /* \"#utility.yul\":2704:2706   */\n      0x20\n        /* \"#utility.yul\":2689:2707   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2676:2708   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2460:2714   */\n      jump\t// out\n        /* \"#utility.yul\":2901:3229   */\n    tag_98:\n        /* \"#utility.yul\":2978:2984   */\n      0x00\n        /* \"#utility.yul\":2986:2992   */\n      dup1\n        /* \"#utility.yul\":2994:3000   */\n      0x00\n        /* \"#utility.yul\":3047:3049   */\n      0x60\n        /* \"#utility.yul\":3035:3044   */\n      dup5\n        /* \"#utility.yul\":3026:3033   */\n      dup7\n        /* \"#utility.yul\":3022:3045   */\n      sub\n        /* \"#utility.yul\":3018:3050   */\n      slt\n        /* \"#utility.yul\":3015:3067   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":3063:3064   */\n      0x00\n        /* \"#utility.yul\":3060:3061   */\n      dup1\n        /* \"#utility.yul\":3053:3065   */\n      revert\n        /* \"#utility.yul\":3015:3067   */\n    tag_581:\n        /* \"#utility.yul\":3086:3115   */\n      tag_582\n        /* \"#utility.yul\":3105:3114   */\n      dup5\n        /* \"#utility.yul\":3086:3115   */\n      tag_538\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":3076:3115   */\n      swap3\n      pop\n        /* \"#utility.yul\":3134:3172   */\n      tag_583\n        /* \"#utility.yul\":3168:3170   */\n      0x20\n        /* \"#utility.yul\":3157:3166   */\n      dup6\n        /* \"#utility.yul\":3153:3171   */\n      add\n        /* \"#utility.yul\":3134:3172   */\n      tag_538\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":3124:3172   */\n      swap2\n      pop\n        /* \"#utility.yul\":3219:3221   */\n      0x40\n        /* \"#utility.yul\":3208:3217   */\n      dup5\n        /* \"#utility.yul\":3204:3222   */\n      add\n        /* \"#utility.yul\":3191:3223   */\n      calldataload\n        /* \"#utility.yul\":3181:3223   */\n      swap1\n      pop\n        /* \"#utility.yul\":2901:3229   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3234:3361   */\n    tag_541:\n        /* \"#utility.yul\":3295:3305   */\n      0x4e487b71\n        /* \"#utility.yul\":3290:3293   */\n      0xe0\n        /* \"#utility.yul\":3286:3306   */\n      shl\n        /* \"#utility.yul\":3283:3284   */\n      0x00\n        /* \"#utility.yul\":3276:3307   */\n      mstore\n        /* \"#utility.yul\":3326:3330   */\n      0x41\n        /* \"#utility.yul\":3323:3324   */\n      0x04\n        /* \"#utility.yul\":3316:3331   */\n      mstore\n        /* \"#utility.yul\":3350:3354   */\n      0x24\n        /* \"#utility.yul\":3347:3348   */\n      0x00\n        /* \"#utility.yul\":3340:3355   */\n      revert\n        /* \"#utility.yul\":3366:3997   */\n    tag_542:\n        /* \"#utility.yul\":3430:3435   */\n      0x00\n        /* \"#utility.yul\":3460:3478   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3501:3503   */\n      dup1\n        /* \"#utility.yul\":3493:3499   */\n      dup5\n        /* \"#utility.yul\":3490:3504   */\n      gt\n        /* \"#utility.yul\":3487:3527   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":3507:3525   */\n      tag_587\n      tag_541\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":3582:3584   */\n      0x40\n        /* \"#utility.yul\":3576:3585   */\n      mload\n        /* \"#utility.yul\":3550:3552   */\n      0x1f\n        /* \"#utility.yul\":3636:3651   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3632:3656   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3658:3660   */\n      0x3f\n        /* \"#utility.yul\":3628:3661   */\n      add\n        /* \"#utility.yul\":3624:3666   */\n      and\n        /* \"#utility.yul\":3612:3667   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3682:3700   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3702:3724   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3679:3725   */\n      or\n        /* \"#utility.yul\":3676:3748   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":3728:3746   */\n      tag_589\n      tag_541\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":3768:3778   */\n      dup2\n        /* \"#utility.yul\":3764:3766   */\n      0x40\n        /* \"#utility.yul\":3757:3779   */\n      mstore\n        /* \"#utility.yul\":3797:3803   */\n      dup1\n        /* \"#utility.yul\":3788:3803   */\n      swap4\n      pop\n        /* \"#utility.yul\":3827:3833   */\n      dup6\n        /* \"#utility.yul\":3819:3825   */\n      dup2\n        /* \"#utility.yul\":3812:3834   */\n      mstore\n        /* \"#utility.yul\":3867:3870   */\n      dup7\n        /* \"#utility.yul\":3858:3864   */\n      dup7\n        /* \"#utility.yul\":3853:3856   */\n      dup7\n        /* \"#utility.yul\":3849:3865   */\n      add\n        /* \"#utility.yul\":3846:3871   */\n      gt\n        /* \"#utility.yul\":3843:3888   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":3884:3885   */\n      0x00\n        /* \"#utility.yul\":3881:3882   */\n      dup1\n        /* \"#utility.yul\":3874:3886   */\n      revert\n        /* \"#utility.yul\":3843:3888   */\n    tag_590:\n        /* \"#utility.yul\":3934:3940   */\n      dup6\n        /* \"#utility.yul\":3929:3932   */\n      dup6\n        /* \"#utility.yul\":3922:3926   */\n      0x20\n        /* \"#utility.yul\":3914:3920   */\n      dup4\n        /* \"#utility.yul\":3910:3927   */\n      add\n        /* \"#utility.yul\":3897:3941   */\n      calldatacopy\n        /* \"#utility.yul\":3989:3990   */\n      0x00\n        /* \"#utility.yul\":3982:3986   */\n      0x20\n        /* \"#utility.yul\":3973:3979   */\n      dup8\n        /* \"#utility.yul\":3965:3971   */\n      dup4\n        /* \"#utility.yul\":3961:3980   */\n      add\n        /* \"#utility.yul\":3957:3987   */\n      add\n        /* \"#utility.yul\":3950:3991   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3366:3997   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4002:4222   */\n    tag_543:\n        /* \"#utility.yul\":4044:4049   */\n      0x00\n        /* \"#utility.yul\":4097:4100   */\n      dup3\n        /* \"#utility.yul\":4090:4094   */\n      0x1f\n        /* \"#utility.yul\":4082:4088   */\n      dup4\n        /* \"#utility.yul\":4078:4095   */\n      add\n        /* \"#utility.yul\":4074:4101   */\n      slt\n        /* \"#utility.yul\":4064:4119   */\n      tag_592\n      jumpi\n        /* \"#utility.yul\":4115:4116   */\n      0x00\n        /* \"#utility.yul\":4112:4113   */\n      dup1\n        /* \"#utility.yul\":4105:4117   */\n      revert\n        /* \"#utility.yul\":4064:4119   */\n    tag_592:\n        /* \"#utility.yul\":4137:4216   */\n      tag_380\n        /* \"#utility.yul\":4212:4215   */\n      dup4\n        /* \"#utility.yul\":4203:4209   */\n      dup4\n        /* \"#utility.yul\":4190:4210   */\n      calldataload\n        /* \"#utility.yul\":4183:4187   */\n      0x20\n        /* \"#utility.yul\":4175:4181   */\n      dup6\n        /* \"#utility.yul\":4171:4188   */\n      add\n        /* \"#utility.yul\":4137:4216   */\n      tag_542\n      jump\t// in\n        /* \"#utility.yul\":4227:4752   */\n    tag_119:\n        /* \"#utility.yul\":4322:4328   */\n      0x00\n        /* \"#utility.yul\":4330:4336   */\n      dup1\n        /* \"#utility.yul\":4338:4344   */\n      0x00\n        /* \"#utility.yul\":4346:4352   */\n      dup1\n        /* \"#utility.yul\":4399:4402   */\n      0x80\n        /* \"#utility.yul\":4387:4396   */\n      dup6\n        /* \"#utility.yul\":4378:4385   */\n      dup8\n        /* \"#utility.yul\":4374:4397   */\n      sub\n        /* \"#utility.yul\":4370:4403   */\n      slt\n        /* \"#utility.yul\":4367:4420   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":4416:4417   */\n      0x00\n        /* \"#utility.yul\":4413:4414   */\n      dup1\n        /* \"#utility.yul\":4406:4418   */\n      revert\n        /* \"#utility.yul\":4367:4420   */\n    tag_595:\n        /* \"#utility.yul\":4452:4461   */\n      dup5\n        /* \"#utility.yul\":4439:4462   */\n      calldataload\n        /* \"#utility.yul\":4429:4462   */\n      swap4\n      pop\n        /* \"#utility.yul\":4509:4511   */\n      0x20\n        /* \"#utility.yul\":4498:4507   */\n      dup6\n        /* \"#utility.yul\":4494:4512   */\n      add\n        /* \"#utility.yul\":4481:4513   */\n      calldataload\n        /* \"#utility.yul\":4471:4513   */\n      swap3\n      pop\n        /* \"#utility.yul\":4560:4562   */\n      0x40\n        /* \"#utility.yul\":4549:4558   */\n      dup6\n        /* \"#utility.yul\":4545:4563   */\n      add\n        /* \"#utility.yul\":4532:4564   */\n      calldataload\n        /* \"#utility.yul\":4522:4564   */\n      swap2\n      pop\n        /* \"#utility.yul\":4615:4617   */\n      0x60\n        /* \"#utility.yul\":4604:4613   */\n      dup6\n        /* \"#utility.yul\":4600:4618   */\n      add\n        /* \"#utility.yul\":4587:4619   */\n      calldataload\n        /* \"#utility.yul\":4642:4660   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4634:4640   */\n      dup2\n        /* \"#utility.yul\":4631:4661   */\n      gt\n        /* \"#utility.yul\":4628:4678   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":4674:4675   */\n      0x00\n        /* \"#utility.yul\":4671:4672   */\n      dup1\n        /* \"#utility.yul\":4664:4676   */\n      revert\n        /* \"#utility.yul\":4628:4678   */\n    tag_596:\n        /* \"#utility.yul\":4697:4746   */\n      tag_597\n        /* \"#utility.yul\":4738:4745   */\n      dup8\n        /* \"#utility.yul\":4729:4735   */\n      dup3\n        /* \"#utility.yul\":4718:4727   */\n      dup9\n        /* \"#utility.yul\":4714:4736   */\n      add\n        /* \"#utility.yul\":4697:4746   */\n      tag_543\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":4687:4746   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4227:4752   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4757:5288   */\n    tag_153:\n        /* \"#utility.yul\":4852:4858   */\n      0x00\n        /* \"#utility.yul\":4860:4866   */\n      dup1\n        /* \"#utility.yul\":4868:4874   */\n      0x00\n        /* \"#utility.yul\":4876:4882   */\n      dup1\n        /* \"#utility.yul\":4929:4932   */\n      0x80\n        /* \"#utility.yul\":4917:4926   */\n      dup6\n        /* \"#utility.yul\":4908:4915   */\n      dup8\n        /* \"#utility.yul\":4904:4927   */\n      sub\n        /* \"#utility.yul\":4900:4933   */\n      slt\n        /* \"#utility.yul\":4897:4950   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":4946:4947   */\n      0x00\n        /* \"#utility.yul\":4943:4944   */\n      dup1\n        /* \"#utility.yul\":4936:4948   */\n      revert\n        /* \"#utility.yul\":4897:4950   */\n    tag_599:\n        /* \"#utility.yul\":4982:4991   */\n      dup5\n        /* \"#utility.yul\":4969:4992   */\n      calldataload\n        /* \"#utility.yul\":4959:4992   */\n      swap4\n      pop\n        /* \"#utility.yul\":5039:5041   */\n      0x20\n        /* \"#utility.yul\":5028:5037   */\n      dup6\n        /* \"#utility.yul\":5024:5042   */\n      add\n        /* \"#utility.yul\":5011:5043   */\n      calldataload\n        /* \"#utility.yul\":5001:5043   */\n      swap3\n      pop\n        /* \"#utility.yul\":5062:5100   */\n      tag_600\n        /* \"#utility.yul\":5096:5098   */\n      0x40\n        /* \"#utility.yul\":5085:5094   */\n      dup7\n        /* \"#utility.yul\":5081:5099   */\n      add\n        /* \"#utility.yul\":5062:5100   */\n      tag_538\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":5052:5100   */\n      swap2\n      pop\n        /* \"#utility.yul\":5151:5153   */\n      0x60\n        /* \"#utility.yul\":5140:5149   */\n      dup6\n        /* \"#utility.yul\":5136:5154   */\n      add\n        /* \"#utility.yul\":5123:5155   */\n      calldataload\n        /* \"#utility.yul\":5178:5196   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5170:5176   */\n      dup2\n        /* \"#utility.yul\":5167:5197   */\n      gt\n        /* \"#utility.yul\":5164:5214   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":5210:5211   */\n      0x00\n        /* \"#utility.yul\":5207:5208   */\n      dup1\n        /* \"#utility.yul\":5200:5212   */\n      revert\n        /* \"#utility.yul\":5293:5743   */\n    tag_162:\n        /* \"#utility.yul\":5362:5368   */\n      0x00\n        /* \"#utility.yul\":5415:5417   */\n      0x20\n        /* \"#utility.yul\":5403:5412   */\n      dup3\n        /* \"#utility.yul\":5394:5401   */\n      dup5\n        /* \"#utility.yul\":5390:5413   */\n      sub\n        /* \"#utility.yul\":5386:5418   */\n      slt\n        /* \"#utility.yul\":5383:5435   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":5431:5432   */\n      0x00\n        /* \"#utility.yul\":5428:5429   */\n      dup1\n        /* \"#utility.yul\":5421:5433   */\n      revert\n        /* \"#utility.yul\":5383:5435   */\n    tag_604:\n        /* \"#utility.yul\":5471:5480   */\n      dup2\n        /* \"#utility.yul\":5458:5481   */\n      calldataload\n        /* \"#utility.yul\":5504:5522   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5496:5502   */\n      dup2\n        /* \"#utility.yul\":5493:5523   */\n      gt\n        /* \"#utility.yul\":5490:5540   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":5536:5537   */\n      0x00\n        /* \"#utility.yul\":5533:5534   */\n      dup1\n        /* \"#utility.yul\":5526:5538   */\n      revert\n        /* \"#utility.yul\":5490:5540   */\n    tag_605:\n        /* \"#utility.yul\":5559:5581   */\n      dup3\n      add\n        /* \"#utility.yul\":5612:5616   */\n      0x1f\n        /* \"#utility.yul\":5604:5617   */\n      dup2\n      add\n        /* \"#utility.yul\":5600:5627   */\n      dup5\n      sgt\n        /* \"#utility.yul\":5590:5645   */\n      tag_606\n      jumpi\n        /* \"#utility.yul\":5641:5642   */\n      0x00\n        /* \"#utility.yul\":5638:5639   */\n      dup1\n        /* \"#utility.yul\":5631:5643   */\n      revert\n        /* \"#utility.yul\":5590:5645   */\n    tag_606:\n        /* \"#utility.yul\":5664:5737   */\n      tag_460\n        /* \"#utility.yul\":5729:5736   */\n      dup5\n        /* \"#utility.yul\":5724:5726   */\n      dup3\n        /* \"#utility.yul\":5711:5727   */\n      calldataload\n        /* \"#utility.yul\":5706:5708   */\n      0x20\n        /* \"#utility.yul\":5702:5704   */\n      dup5\n        /* \"#utility.yul\":5698:5709   */\n      add\n        /* \"#utility.yul\":5664:5737   */\n      tag_542\n      jump\t// in\n        /* \"#utility.yul\":5748:6002   */\n    tag_167:\n        /* \"#utility.yul\":5813:5819   */\n      0x00\n        /* \"#utility.yul\":5821:5827   */\n      dup1\n        /* \"#utility.yul\":5874:5876   */\n      0x40\n        /* \"#utility.yul\":5862:5871   */\n      dup4\n        /* \"#utility.yul\":5853:5860   */\n      dup6\n        /* \"#utility.yul\":5849:5872   */\n      sub\n        /* \"#utility.yul\":5845:5877   */\n      slt\n        /* \"#utility.yul\":5842:5894   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":5890:5891   */\n      0x00\n        /* \"#utility.yul\":5887:5888   */\n      dup1\n        /* \"#utility.yul\":5880:5892   */\n      revert\n        /* \"#utility.yul\":5842:5894   */\n    tag_609:\n        /* \"#utility.yul\":5913:5942   */\n      tag_610\n        /* \"#utility.yul\":5932:5941   */\n      dup4\n        /* \"#utility.yul\":5913:5942   */\n      tag_538\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":5903:5942   */\n      swap2\n      pop\n        /* \"#utility.yul\":5961:5996   */\n      tag_611\n        /* \"#utility.yul\":5992:5994   */\n      0x20\n        /* \"#utility.yul\":5981:5990   */\n      dup5\n        /* \"#utility.yul\":5977:5995   */\n      add\n        /* \"#utility.yul\":5961:5996   */\n      tag_537\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":5951:5996   */\n      swap1\n      pop\n        /* \"#utility.yul\":5748:6002   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6007:6544   */\n    tag_171:\n        /* \"#utility.yul\":6102:6108   */\n      0x00\n        /* \"#utility.yul\":6110:6116   */\n      dup1\n        /* \"#utility.yul\":6118:6124   */\n      0x00\n        /* \"#utility.yul\":6126:6132   */\n      dup1\n        /* \"#utility.yul\":6179:6182   */\n      0x80\n        /* \"#utility.yul\":6167:6176   */\n      dup6\n        /* \"#utility.yul\":6158:6165   */\n      dup8\n        /* \"#utility.yul\":6154:6177   */\n      sub\n        /* \"#utility.yul\":6150:6183   */\n      slt\n        /* \"#utility.yul\":6147:6200   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":6196:6197   */\n      0x00\n        /* \"#utility.yul\":6193:6194   */\n      dup1\n        /* \"#utility.yul\":6186:6198   */\n      revert\n        /* \"#utility.yul\":6147:6200   */\n    tag_613:\n        /* \"#utility.yul\":6219:6248   */\n      tag_614\n        /* \"#utility.yul\":6238:6247   */\n      dup6\n        /* \"#utility.yul\":6219:6248   */\n      tag_538\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":6209:6248   */\n      swap4\n      pop\n        /* \"#utility.yul\":6267:6305   */\n      tag_615\n        /* \"#utility.yul\":6301:6303   */\n      0x20\n        /* \"#utility.yul\":6290:6299   */\n      dup7\n        /* \"#utility.yul\":6286:6304   */\n      add\n        /* \"#utility.yul\":6267:6305   */\n      tag_538\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":6257:6305   */\n      swap3\n      pop\n        /* \"#utility.yul\":6352:6354   */\n      0x40\n        /* \"#utility.yul\":6341:6350   */\n      dup6\n        /* \"#utility.yul\":6337:6355   */\n      add\n        /* \"#utility.yul\":6324:6356   */\n      calldataload\n        /* \"#utility.yul\":6314:6356   */\n      swap2\n      pop\n        /* \"#utility.yul\":6407:6409   */\n      0x60\n        /* \"#utility.yul\":6396:6405   */\n      dup6\n        /* \"#utility.yul\":6392:6410   */\n      add\n        /* \"#utility.yul\":6379:6411   */\n      calldataload\n        /* \"#utility.yul\":6434:6452   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6426:6432   */\n      dup2\n        /* \"#utility.yul\":6423:6453   */\n      gt\n        /* \"#utility.yul\":6420:6470   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":6466:6467   */\n      0x00\n        /* \"#utility.yul\":6463:6464   */\n      dup1\n        /* \"#utility.yul\":6456:6468   */\n      revert\n        /* \"#utility.yul\":6549:6809   */\n    tag_197:\n        /* \"#utility.yul\":6617:6623   */\n      0x00\n        /* \"#utility.yul\":6625:6631   */\n      dup1\n        /* \"#utility.yul\":6678:6680   */\n      0x40\n        /* \"#utility.yul\":6666:6675   */\n      dup4\n        /* \"#utility.yul\":6657:6664   */\n      dup6\n        /* \"#utility.yul\":6653:6676   */\n      sub\n        /* \"#utility.yul\":6649:6681   */\n      slt\n        /* \"#utility.yul\":6646:6698   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":6694:6695   */\n      0x00\n        /* \"#utility.yul\":6691:6692   */\n      dup1\n        /* \"#utility.yul\":6684:6696   */\n      revert\n        /* \"#utility.yul\":6646:6698   */\n    tag_619:\n        /* \"#utility.yul\":6717:6746   */\n      tag_620\n        /* \"#utility.yul\":6736:6745   */\n      dup4\n        /* \"#utility.yul\":6717:6746   */\n      tag_538\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":6707:6746   */\n      swap2\n      pop\n        /* \"#utility.yul\":6765:6803   */\n      tag_611\n        /* \"#utility.yul\":6799:6801   */\n      0x20\n        /* \"#utility.yul\":6788:6797   */\n      dup5\n        /* \"#utility.yul\":6784:6802   */\n      add\n        /* \"#utility.yul\":6765:6803   */\n      tag_538\n      jump\t// in\n        /* \"#utility.yul\":6814:7194   */\n    tag_216:\n        /* \"#utility.yul\":6893:6894   */\n      0x01\n        /* \"#utility.yul\":6889:6901   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6936:6948   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6957:7018   */\n      tag_623\n      jumpi\n        /* \"#utility.yul\":7011:7015   */\n      0x7f\n        /* \"#utility.yul\":7003:7009   */\n      dup3\n        /* \"#utility.yul\":6999:7016   */\n      and\n        /* \"#utility.yul\":6989:7016   */\n      swap2\n      pop\n        /* \"#utility.yul\":6957:7018   */\n    tag_623:\n        /* \"#utility.yul\":7064:7066   */\n      0x20\n        /* \"#utility.yul\":7056:7062   */\n      dup3\n        /* \"#utility.yul\":7053:7067   */\n      lt\n        /* \"#utility.yul\":7033:7051   */\n      dup2\n        /* \"#utility.yul\":7030:7068   */\n      sub\n        /* \"#utility.yul\":7027:7188   */\n      tag_624\n      jumpi\n        /* \"#utility.yul\":7110:7120   */\n      0x4e487b71\n        /* \"#utility.yul\":7105:7108   */\n      0xe0\n        /* \"#utility.yul\":7101:7121   */\n      shl\n        /* \"#utility.yul\":7098:7099   */\n      0x00\n        /* \"#utility.yul\":7091:7122   */\n      mstore\n        /* \"#utility.yul\":7145:7149   */\n      0x22\n        /* \"#utility.yul\":7142:7143   */\n      0x04\n        /* \"#utility.yul\":7135:7150   */\n      mstore\n        /* \"#utility.yul\":7173:7177   */\n      0x24\n        /* \"#utility.yul\":7170:7171   */\n      0x00\n        /* \"#utility.yul\":7163:7178   */\n      revert\n        /* \"#utility.yul\":7027:7188   */\n    tag_624:\n      pop\n        /* \"#utility.yul\":6814:7194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7409:7536   */\n    tag_276:\n        /* \"#utility.yul\":7470:7480   */\n      0x4e487b71\n        /* \"#utility.yul\":7465:7468   */\n      0xe0\n        /* \"#utility.yul\":7461:7481   */\n      shl\n        /* \"#utility.yul\":7458:7459   */\n      0x00\n        /* \"#utility.yul\":7451:7482   */\n      mstore\n        /* \"#utility.yul\":7501:7505   */\n      0x01\n        /* \"#utility.yul\":7498:7499   */\n      0x04\n        /* \"#utility.yul\":7491:7506   */\n      mstore\n        /* \"#utility.yul\":7525:7529   */\n      0x24\n        /* \"#utility.yul\":7522:7523   */\n      0x00\n        /* \"#utility.yul\":7515:7530   */\n      revert\n        /* \"#utility.yul\":8248:8375   */\n    tag_544:\n        /* \"#utility.yul\":8309:8319   */\n      0x4e487b71\n        /* \"#utility.yul\":8304:8307   */\n      0xe0\n        /* \"#utility.yul\":8300:8320   */\n      shl\n        /* \"#utility.yul\":8297:8298   */\n      0x00\n        /* \"#utility.yul\":8290:8321   */\n      mstore\n        /* \"#utility.yul\":8340:8344   */\n      0x11\n        /* \"#utility.yul\":8337:8338   */\n      0x04\n        /* \"#utility.yul\":8330:8345   */\n      mstore\n        /* \"#utility.yul\":8364:8368   */\n      0x24\n        /* \"#utility.yul\":8361:8362   */\n      0x00\n        /* \"#utility.yul\":8354:8369   */\n      revert\n        /* \"#utility.yul\":8380:8505   */\n    tag_298:\n        /* \"#utility.yul\":8445:8454   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8466:8476   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8463:8499   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":8479:8497   */\n      tag_206\n      tag_544\n      jump\t// in\n        /* \"#utility.yul\":9218:9386   */\n    tag_309:\n        /* \"#utility.yul\":9291:9300   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":9322:9331   */\n      dup2\n      iszero\n        /* \"#utility.yul\":9339:9354   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":9333:9355   */\n      dup5\n      eq\n        /* \"#utility.yul\":9319:9356   */\n      or\n        /* \"#utility.yul\":9309:9380   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":9360:9378   */\n      tag_206\n      tag_544\n      jump\t// in\n        /* \"#utility.yul\":10571:11116   */\n    tag_546:\n        /* \"#utility.yul\":10673:10675   */\n      0x1f\n        /* \"#utility.yul\":10668:10671   */\n      dup3\n        /* \"#utility.yul\":10665:10676   */\n      gt\n        /* \"#utility.yul\":10662:11110   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":10709:10710   */\n      0x00\n        /* \"#utility.yul\":10734:10739   */\n      dup2\n        /* \"#utility.yul\":10730:10732   */\n      dup2\n        /* \"#utility.yul\":10723:10740   */\n      mstore\n        /* \"#utility.yul\":10779:10783   */\n      0x20\n        /* \"#utility.yul\":10775:10777   */\n      dup2\n        /* \"#utility.yul\":10765:10784   */\n      keccak256\n        /* \"#utility.yul\":10849:10851   */\n      0x1f\n        /* \"#utility.yul\":10837:10847   */\n      dup6\n        /* \"#utility.yul\":10833:10852   */\n      add\n        /* \"#utility.yul\":10830:10831   */\n      0x05\n        /* \"#utility.yul\":10826:10853   */\n      shr\n        /* \"#utility.yul\":10820:10824   */\n      dup2\n        /* \"#utility.yul\":10816:10854   */\n      add\n        /* \"#utility.yul\":10885:10889   */\n      0x20\n        /* \"#utility.yul\":10873:10883   */\n      dup7\n        /* \"#utility.yul\":10870:10890   */\n      lt\n        /* \"#utility.yul\":10867:10914   */\n      iszero\n      tag_644\n      jumpi\n      pop\n        /* \"#utility.yul\":10908:10912   */\n      dup1\n        /* \"#utility.yul\":10867:10914   */\n    tag_644:\n        /* \"#utility.yul\":10963:10965   */\n      0x1f\n        /* \"#utility.yul\":10958:10961   */\n      dup6\n        /* \"#utility.yul\":10954:10966   */\n      add\n        /* \"#utility.yul\":10951:10952   */\n      0x05\n        /* \"#utility.yul\":10947:10967   */\n      shr\n        /* \"#utility.yul\":10941:10945   */\n      dup3\n        /* \"#utility.yul\":10937:10968   */\n      add\n        /* \"#utility.yul\":10927:10968   */\n      swap2\n      pop\n        /* \"#utility.yul\":11018:11100   */\n    tag_645:\n        /* \"#utility.yul\":11036:11038   */\n      dup2\n        /* \"#utility.yul\":11029:11034   */\n      dup2\n        /* \"#utility.yul\":11026:11039   */\n      lt\n        /* \"#utility.yul\":11018:11100   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":11081:11098   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":11062:11063   */\n      0x01\n        /* \"#utility.yul\":11051:11064   */\n      add\n        /* \"#utility.yul\":11018:11100   */\n      jump(tag_645)\n        /* \"#utility.yul\":11292:12644   */\n    tag_357:\n        /* \"#utility.yul\":11418:11421   */\n      dup2\n        /* \"#utility.yul\":11412:11422   */\n      mload\n        /* \"#utility.yul\":11445:11463   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11437:11443   */\n      dup2\n        /* \"#utility.yul\":11434:11464   */\n      gt\n        /* \"#utility.yul\":11431:11487   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":11467:11485   */\n      tag_651\n      tag_541\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":11496:11593   */\n      tag_652\n        /* \"#utility.yul\":11586:11592   */\n      dup2\n        /* \"#utility.yul\":11546:11584   */\n      tag_653\n        /* \"#utility.yul\":11578:11582   */\n      dup5\n        /* \"#utility.yul\":11572:11583   */\n      sload\n        /* \"#utility.yul\":11546:11584   */\n      tag_216\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":11540:11544   */\n      dup5\n        /* \"#utility.yul\":11496:11593   */\n      tag_546\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":11648:11652   */\n      0x20\n      dup1\n        /* \"#utility.yul\":11712:11714   */\n      0x1f\n        /* \"#utility.yul\":11701:11715   */\n      dup4\n      gt\n        /* \"#utility.yul\":11729:11730   */\n      0x01\n        /* \"#utility.yul\":11724:12387   */\n      dup2\n      eq\n      tag_655\n      jumpi\n        /* \"#utility.yul\":12431:12432   */\n      0x00\n        /* \"#utility.yul\":12448:12454   */\n      dup5\n        /* \"#utility.yul\":12445:12534   */\n      iszero\n      tag_656\n      jumpi\n      pop\n        /* \"#utility.yul\":12500:12519   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":12494:12520   */\n      mload\n        /* \"#utility.yul\":12445:12534   */\n    tag_656:\n      not(0x00)\n        /* \"#utility.yul\":11249:11250   */\n      0x03\n        /* \"#utility.yul\":11245:11256   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":11241:11265   */\n      shr\n        /* \"#utility.yul\":11237:11266   */\n      not\n        /* \"#utility.yul\":11227:11267   */\n      and\n        /* \"#utility.yul\":11273:11274   */\n      0x01\n        /* \"#utility.yul\":11269:11280   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":11224:11281   */\n      or\n        /* \"#utility.yul\":12547:12628   */\n      dup6\n      sstore\n        /* \"#utility.yul\":11694:12638   */\n      jump(tag_263)\n        /* \"#utility.yul\":11724:12387   */\n    tag_655:\n        /* \"#utility.yul\":10518:10519   */\n      0x00\n        /* \"#utility.yul\":10511:10525   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":10555:10559   */\n      0x20\n        /* \"#utility.yul\":10542:10560   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":11760:11780   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":11878:12114   */\n    tag_659:\n        /* \"#utility.yul\":11892:11899   */\n      dup3\n        /* \"#utility.yul\":11889:11890   */\n      dup2\n        /* \"#utility.yul\":11886:11900   */\n      lt\n        /* \"#utility.yul\":11878:12114   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":11981:12000   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":11975:12001   */\n      mload\n        /* \"#utility.yul\":11960:12002   */\n      dup3\n      sstore\n        /* \"#utility.yul\":12073:12100   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":12041:12042   */\n      0x01\n        /* \"#utility.yul\":12029:12043   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":11908:11927   */\n      dup5\n      add\n        /* \"#utility.yul\":11878:12114   */\n      jump(tag_659)\n    tag_661:\n        /* \"#utility.yul\":11882:11885   */\n      pop\n        /* \"#utility.yul\":12142:12148   */\n      dup6\n        /* \"#utility.yul\":12133:12140   */\n      dup3\n        /* \"#utility.yul\":12130:12149   */\n      lt\n        /* \"#utility.yul\":12127:12328   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":12203:12222   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":12197:12223   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":12286:12287   */\n      0x03\n        /* \"#utility.yul\":12282:12296   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":12298:12301   */\n      0xf8\n        /* \"#utility.yul\":12278:12302   */\n      and\n        /* \"#utility.yul\":12274:12311   */\n      shr\n        /* \"#utility.yul\":12270:12312   */\n      not\n        /* \"#utility.yul\":12255:12313   */\n      and\n        /* \"#utility.yul\":12240:12314   */\n      dup2\n      sstore\n        /* \"#utility.yul\":12127:12328   */\n    tag_662:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12374:12375   */\n      0x01\n        /* \"#utility.yul\":12358:12372   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":12354:12376   */\n      add\n        /* \"#utility.yul\":12341:12377   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":11292:12644   */\n      jump\t// out\n        /* \"#utility.yul\":12649:13145   */\n    tag_384:\n        /* \"#utility.yul\":12828:12831   */\n      0x00\n        /* \"#utility.yul\":12866:12872   */\n      dup4\n        /* \"#utility.yul\":12860:12873   */\n      mload\n        /* \"#utility.yul\":12882:12948   */\n      tag_664\n        /* \"#utility.yul\":12941:12947   */\n      dup2\n        /* \"#utility.yul\":12936:12939   */\n      dup5\n        /* \"#utility.yul\":12929:12933   */\n      0x20\n        /* \"#utility.yul\":12921:12927   */\n      dup9\n        /* \"#utility.yul\":12917:12934   */\n      add\n        /* \"#utility.yul\":12882:12948   */\n      tag_539\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":13011:13024   */\n      dup4\n      mload\n        /* \"#utility.yul\":12970:12986   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":13033:13103   */\n      tag_665\n        /* \"#utility.yul\":13011:13024   */\n      dup2\n        /* \"#utility.yul\":12970:12986   */\n      dup4\n        /* \"#utility.yul\":13080:13084   */\n      0x20\n        /* \"#utility.yul\":13068:13085   */\n      dup9\n      add\n        /* \"#utility.yul\":13033:13103   */\n      tag_539\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":13119:13139   */\n      add\n      swap5\n        /* \"#utility.yul\":12649:13145   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14303:14792   */\n    tag_448:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14572:14587   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":14554:14588   */\n      dup3\n      mstore\n        /* \"#utility.yul\":14624:14639   */\n      dup5\n      and\n        /* \"#utility.yul\":14619:14621   */\n      0x20\n        /* \"#utility.yul\":14604:14622   */\n      dup3\n      add\n        /* \"#utility.yul\":14597:14640   */\n      mstore\n        /* \"#utility.yul\":14671:14673   */\n      0x40\n        /* \"#utility.yul\":14656:14674   */\n      dup2\n      add\n        /* \"#utility.yul\":14649:14683   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14719:14722   */\n      0x80\n        /* \"#utility.yul\":14714:14716   */\n      0x60\n        /* \"#utility.yul\":14699:14717   */\n      dup3\n      add\n        /* \"#utility.yul\":14692:14723   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14497:14501   */\n      0x00\n      swap1\n        /* \"#utility.yul\":14740:14786   */\n      tag_670\n      swap1\n        /* \"#utility.yul\":14766:14785   */\n      dup4\n      add\n        /* \"#utility.yul\":14758:14764   */\n      dup5\n        /* \"#utility.yul\":14740:14786   */\n      tag_540\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":14732:14786   */\n      swap7\n        /* \"#utility.yul\":14303:14792   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14797:15046   */\n    tag_451:\n        /* \"#utility.yul\":14866:14872   */\n      0x00\n        /* \"#utility.yul\":14919:14921   */\n      0x20\n        /* \"#utility.yul\":14907:14916   */\n      dup3\n        /* \"#utility.yul\":14898:14905   */\n      dup5\n        /* \"#utility.yul\":14894:14917   */\n      sub\n        /* \"#utility.yul\":14890:14922   */\n      slt\n        /* \"#utility.yul\":14887:14939   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":14935:14936   */\n      0x00\n        /* \"#utility.yul\":14932:14933   */\n      dup1\n        /* \"#utility.yul\":14925:14937   */\n      revert\n        /* \"#utility.yul\":14887:14939   */\n    tag_672:\n        /* \"#utility.yul\":14967:14976   */\n      dup2\n        /* \"#utility.yul\":14961:14977   */\n      mload\n        /* \"#utility.yul\":14986:15016   */\n      tag_380\n        /* \"#utility.yul\":15010:15015   */\n      dup2\n        /* \"#utility.yul\":14986:15016   */\n      tag_536\n      jump\t// in\n        /* \"#utility.yul\":15051:15178   */\n    tag_501:\n        /* \"#utility.yul\":15112:15122   */\n      0x4e487b71\n        /* \"#utility.yul\":15107:15110   */\n      0xe0\n        /* \"#utility.yul\":15103:15123   */\n      shl\n        /* \"#utility.yul\":15100:15101   */\n      0x00\n        /* \"#utility.yul\":15093:15124   */\n      mstore\n        /* \"#utility.yul\":15143:15147   */\n      0x21\n        /* \"#utility.yul\":15140:15141   */\n      0x04\n        /* \"#utility.yul\":15133:15148   */\n      mstore\n        /* \"#utility.yul\":15167:15171   */\n      0x24\n        /* \"#utility.yul\":15164:15165   */\n      0x00\n        /* \"#utility.yul\":15157:15172   */\n      revert\n    stop\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa2646970667358221220cc10ae34f2e47458fc10511041df7aa46d3482c04864dc07b415b87ffe4fc46264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1199": {
									"entryPoint": null,
									"id": 1199,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_765": {
									"entryPoint": null,
									"id": 765,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_1208": {
									"entryPoint": null,
									"id": 1208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 206,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2732:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:7"
															},
															"nodeType": "YulIf",
															"src": "289:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:7"
															},
															"nodeType": "YulIf",
															"src": "359:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:7",
														"type": ""
													}
												],
												"src": "146:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:7",
														"type": ""
													}
												],
												"src": "531:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:7",
																			"statements": []
																		},
																		"src": "1104:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:7"
															},
															"nodeType": "YulIf",
															"src": "748:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:7",
														"type": ""
													}
												],
												"src": "657:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:7",
														"type": ""
													}
												],
												"src": "1207:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:7"
															},
															"nodeType": "YulIf",
															"src": "1517:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:7",
																					"statements": []
																				},
																				"src": "1964:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:7",
														"type": ""
													}
												],
												"src": "1378:1352:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526103e8600a556001600b55668e1bc9bf040000600c55600d80546001600160b01b031916754e99031f4c39cd1ae173bc32e397de77ac6d639500001790553480156200004f57600080fd5b50604051806040016040528060118152602001704c616e6473206f66204d7974686573646160781b815250604051806040016040528060038152602001624c4f4d60e81b8152508160029081620000a79190620001c5565b506003620000b68282620001c5565b50506000805550620000c833620000ce565b62000291565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014b57607f821691505b6020821081036200016c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001c057600081815260208120601f850160051c810160208610156200019b5750805b601f850160051c820191505b81811015620001bc57828155600101620001a7565b5050505b505050565b81516001600160401b03811115620001e157620001e162000120565b620001f981620001f2845462000136565b8462000172565b602080601f831160018114620002315760008415620002185750858301515b600019600386901b1c1916600185901b178555620001bc565b600085815260208120601f198616915b82811015620002625788860151825594840194600190910190840162000241565b5085821015620002815787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611eeb80620002a16000396000f3fe60806040526004361061020f5760003560e01c80635c975abb11610118578063a22cb465116100a0578063c87b56dd1161006f578063c87b56dd146105b2578063ceda0dbd146105d2578063d5abeb01146105e8578063e985e9c5146105fe578063f2fde38b1461061e57600080fd5b8063a22cb4651461053f578063b88d4fde1461055f578063c48b1fa614610572578063c62752551461059257600080fd5b8063715018a6116100e7578063715018a6146104b75780638da5cb5b146104cc5780638f9db08c146104ea57806395d89b411461050a578063a0bcfc7f1461051f57600080fd5b80635c975abb146104485780636352211e146104625780636c0360eb1461048257806370a082311461049757600080fd5b806318160ddd1161019b57806342842e0e1161016a57806342842e0e146103bc57806342966c68146103cf578063484b973c146103ef5780634a9eee691461040f5780635b7633d01461042257600080fd5b806318160ddd1461036957806323b872dd1461038257806326092b83146103955780633ccfd60b146103b457600080fd5b8063081812fc116101e2578063081812fc146102ad578063095ea7b3146102e55780630a398b88146102f85780630bab3262146103335780630e2d56cf1461034957600080fd5b806301ffc9a71461021457806302329a2914610249578063046dc1661461026b57806306fdde031461028b575b600080fd5b34801561022057600080fd5b5061023461022f3660046118ba565b61063e565b60405190151581526020015b60405180910390f35b34801561025557600080fd5b506102696102643660046118ec565b610690565b005b34801561027757600080fd5b5061026961028636600461191e565b6106ab565b34801561029757600080fd5b506102a06106dd565b6040516102409190611989565b3480156102b957600080fd5b506102cd6102c836600461199c565b61076f565b6040516001600160a01b039091168152602001610240565b6102696102f33660046119b5565b6107b3565b34801561030457600080fd5b5061032561031336600461191e565b600e6020526000908152604090205481565b604051908152602001610240565b34801561033f57600080fd5b50610325600b5481565b34801561035557600080fd5b506102696103643660046118ec565b610853565b34801561037557600080fd5b5060015460005403610325565b6102696103903660046119df565b610875565b3480156103a157600080fd5b50600d5461023490610100900460ff1681565b610269610a06565b6102696103ca3660046119df565b610a85565b3480156103db57600080fd5b506102696103ea36600461199c565b610aa5565b3480156103fb57600080fd5b5061026961040a3660046119b5565b610ab6565b61026961041d366004611ac7565b610acc565b34801561042e57600080fd5b50600d546102cd906201000090046001600160a01b031681565b34801561045457600080fd5b50600d546102349060ff1681565b34801561046e57600080fd5b506102cd61047d36600461199c565b610d90565b34801561048e57600080fd5b506102a0610d9b565b3480156104a357600080fd5b506103256104b236600461191e565b610e29565b3480156104c357600080fd5b50610269610e78565b3480156104d857600080fd5b506008546001600160a01b03166102cd565b3480156104f657600080fd5b50610269610505366004611b21565b610e8c565b34801561051657600080fd5b506102a0610f7c565b34801561052b57600080fd5b5061026961053a366004611b6a565b610f8b565b34801561054b57600080fd5b5061026961055a366004611bb3565b610f9f565b61026961056d366004611be6565b61100b565b34801561057e57600080fd5b5061026961058d36600461199c565b611055565b34801561059e57600080fd5b506102696105ad36600461199c565b611062565b3480156105be57600080fd5b506102a06105cd36600461199c565b61106f565b3480156105de57600080fd5b50610325600c5481565b3480156105f457600080fd5b50610325600a5481565b34801561060a57600080fd5b50610234610619366004611c36565b6110f3565b34801561062a57600080fd5b5061026961063936600461191e565b611121565b60006301ffc9a760e01b6001600160e01b03198316148061066f57506380ac58cd60e01b6001600160e01b03198316145b8061068a5750635b5e139f60e01b6001600160e01b03198316145b92915050565b610698611197565b600d805460ff1916911515919091179055565b6106b3611197565b600d80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b6060600280546106ec90611c60565b80601f016020809104026020016040519081016040528092919081815260200182805461071890611c60565b80156107655780601f1061073a57610100808354040283529160200191610765565b820191906000526020600020905b81548152906001019060200180831161074857829003601f168201915b5050505050905090565b600061077a826111f1565b610797576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006107be82610d90565b9050336001600160a01b038216146107f7576107da81336110f3565b6107f7576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61085b611197565b600d80549115156101000261ff0019909216919091179055565b600061088082611218565b9050836001600160a01b0316816001600160a01b0316146108b35760405162a1148160e81b815260040160405180910390fd5b600082815260066020526040902080546108df8187335b6001600160a01b039081169116811491141790565b61090a576108ed86336110f3565b61090a57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661093157604051633a954ecd60e21b815260040160405180910390fd5b801561093c57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b841690036109ce576001840160008181526004602052604081205490036109cc5760005481146109cc5760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b0316600080516020611e9683398151915260405160405180910390a45b505050505050565b610a0e611197565b6000610a226008546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610a6c576040519150601f19603f3d011682016040523d82523d6000602084013e610a71565b606091505b5050905080610a8257610a82611c9a565b50565b610aa08383836040518060200160405280600081525061100b565b505050565b610aad611197565b610a828161127f565b610abe611197565b610ac8828261128a565b5050565b600d5460ff1615610b1d5760405162461bcd60e51b8152602060048201526016602482015275151a194818dbdb9d1c9858dd081a5cc81c185d5cd95960521b60448201526064015b60405180910390fd5b6000610b2c6001546000540390565b905060008511610b7e5760405162461bcd60e51b815260206004820152601b60248201527f4e65656420746f206d696e74206174206c656173742031204e465400000000006044820152606401610b14565b600a54610b8b8683611cc6565b1115610bd25760405162461bcd60e51b815260206004820152601660248201527513585e08139195081b1a5b5a5d08195e18d95959195960521b6044820152606401610b14565b336000908152600e6020526040902054600d54610100900460ff16610caa57610bfd85853386610e8c565b84610c088783611cc6565b1115610c565760405162461bcd60e51b815260206004820152601c60248201527f4d6178204e465420666f722061646472657373206578636565646564000000006044820152606401610b14565b610c608685611cd9565b341015610ca55760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e7420666f756e647360681b6044820152606401610b14565b610d58565b600b54610cb78783611cc6565b1115610d055760405162461bcd60e51b815260206004820152601c60248201527f4d6178204e465420666f722061646472657373206578636565646564000000006044820152606401610b14565b85600c54610d139190611cd9565b341015610d585760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e7420666f756e647360681b6044820152606401610b14565b336000908152600e6020526040902054610d73908790611cc6565b336000818152600e60205260409020919091556109fe908761128a565b600061068a82611218565b60098054610da890611c60565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd490611c60565b8015610e215780601f10610df657610100808354040283529160200191610e21565b820191906000526020600020905b815481529060010190602001808311610e0457829003601f168201915b505050505081565b60006001600160a01b038216610e52576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610e80611197565b610e8a6000611364565b565b604080516020808201879052818301869052606085811b6bffffffffffffffffffffffff191690830152825180830360540181526074830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a333200000000609484015260b08084018290528451808503909101815260d090930190935281519101206000610f1d82856113b6565b600d549091506001600160a01b03808316620100009092041614610f735760405162461bcd60e51b815260206004820152600d60248201526c426164207369676e617475726560981b6044820152606401610b14565b50505050505050565b6060600380546106ec90611c60565b610f93611197565b6009610ac88282611d36565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611016848484610875565b6001600160a01b0383163b1561104f57611032848484846113da565b61104f576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b61105d611197565b600b55565b61106a611197565b600c55565b606061107a826111f1565b61109757604051630a14c4b560e41b815260040160405180910390fd5b60006110a16114c6565b905080516000036110c157604051806020016040528060008152506110ec565b806110cb846114d5565b6040516020016110dc929190611df6565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b611129611197565b6001600160a01b03811661118e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b14565b610a8281611364565b6008546001600160a01b03163314610e8a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b14565b600080548210801561068a575050600090815260046020526040902054600160e01b161590565b6000816000548110156112665760008181526004602052604081205490600160e01b82169003611264575b806000036110ec575060001901600081815260046020526040902054611243565b505b604051636f96cda160e11b815260040160405180910390fd5b610a82816000611519565b60008054908290036112af5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b17831790558284019083908390600080516020611e968339815191528180a4600183015b81811461133a5780836000600080516020611e96833981519152600080a4600101611314565b508160000361135b57604051622e076360e81b815260040160405180910390fd5b60005550505050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008060006113c58585611651565b915091506113d281611696565b509392505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061140f903390899088908890600401611e25565b6020604051808303816000875af192505050801561144a575060408051601f3d908101601f1916820190925261144791810190611e62565b60015b6114a8573d808015611478576040519150601f19603f3d011682016040523d82523d6000602084013e61147d565b606091505b5080516000036114a0576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600980546106ec90611c60565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806114ef5750819003601f19909101908152919050565b600061152483611218565b90508060008061154286600090815260066020526040902080549091565b915091508415611582576115578184336108ca565b6115825761156583336110f3565b61158257604051632ce44b5f60e11b815260040160405180910390fd5b801561158d57600082555b6001600160a01b038316600081815260056020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b17600087815260046020526040812091909155600160e11b8516900361161b576001860160008181526004602052604081205490036116195760005481146116195760008181526004602052604090208590555b505b60405186906000906001600160a01b03861690600080516020611e96833981519152908390a45050600180548101905550505050565b60008082516041036116875760208301516040840151606085015160001a61167b878285856117e0565b9450945050505061168f565b506000905060025b9250929050565b60008160048111156116aa576116aa611e7f565b036116b25750565b60018160048111156116c6576116c6611e7f565b036117135760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610b14565b600281600481111561172757611727611e7f565b036117745760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610b14565b600381600481111561178857611788611e7f565b03610a825760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610b14565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611817575060009050600361189b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561186b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118945760006001925092505061189b565b9150600090505b94509492505050565b6001600160e01b031981168114610a8257600080fd5b6000602082840312156118cc57600080fd5b81356110ec816118a4565b803580151581146118e757600080fd5b919050565b6000602082840312156118fe57600080fd5b6110ec826118d7565b80356001600160a01b03811681146118e757600080fd5b60006020828403121561193057600080fd5b6110ec82611907565b60005b8381101561195457818101518382015260200161193c565b50506000910152565b60008151808452611975816020860160208601611939565b601f01601f19169290920160200192915050565b6020815260006110ec602083018461195d565b6000602082840312156119ae57600080fd5b5035919050565b600080604083850312156119c857600080fd5b6119d183611907565b946020939093013593505050565b6000806000606084860312156119f457600080fd5b6119fd84611907565b9250611a0b60208501611907565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611a4c57611a4c611a1b565b604051601f8501601f19908116603f01168101908282118183101715611a7457611a74611a1b565b81604052809350858152868686011115611a8d57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611ab857600080fd5b6110ec83833560208501611a31565b60008060008060808587031215611add57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115611b0957600080fd5b611b1587828801611aa7565b91505092959194509250565b60008060008060808587031215611b3757600080fd5b8435935060208501359250611b4e60408601611907565b9150606085013567ffffffffffffffff811115611b0957600080fd5b600060208284031215611b7c57600080fd5b813567ffffffffffffffff811115611b9357600080fd5b8201601f81018413611ba457600080fd5b6114be84823560208401611a31565b60008060408385031215611bc657600080fd5b611bcf83611907565b9150611bdd602084016118d7565b90509250929050565b60008060008060808587031215611bfc57600080fd5b611c0585611907565b9350611c1360208601611907565b925060408501359150606085013567ffffffffffffffff811115611b0957600080fd5b60008060408385031215611c4957600080fd5b611c5283611907565b9150611bdd60208401611907565b600181811c90821680611c7457607f821691505b602082108103611c9457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561068a5761068a611cb0565b808202811582820484141761068a5761068a611cb0565b601f821115610aa057600081815260208120601f850160051c81016020861015611d175750805b601f850160051c820191505b818110156109fe57828155600101611d23565b815167ffffffffffffffff811115611d5057611d50611a1b565b611d6481611d5e8454611c60565b84611cf0565b602080601f831160018114611d995760008415611d815750858301515b600019600386901b1c1916600185901b1785556109fe565b600085815260208120601f198616915b82811015611dc857888601518255948401946001909101908401611da9565b5085821015611de65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008351611e08818460208801611939565b835190830190611e1c818360208801611939565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e589083018461195d565b9695505050505050565b600060208284031215611e7457600080fd5b81516110ec816118a4565b634e487b7160e01b600052602160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220cc10ae34f2e47458fc10511041df7aa46d3482c04864dc07b415b87ffe4fc46264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x3E8 PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0xB SSTORE PUSH7 0x8E1BC9BF040000 PUSH1 0xC SSTORE PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND PUSH22 0x4E99031F4C39CD1AE173BC32E397DE77AC6D63950000 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH17 0x4C616E6473206F66204D79746865736461 PUSH1 0x78 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4C4F4D PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xA7 SWAP2 SWAP1 PUSH3 0x1C5 JUMP JUMPDEST POP PUSH1 0x3 PUSH3 0xB6 DUP3 DUP3 PUSH3 0x1C5 JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SSTORE POP PUSH3 0xC8 CALLER PUSH3 0xCE JUMP JUMPDEST PUSH3 0x291 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x14B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x16C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1C0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x19B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1BC JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1A7 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1E1 JUMPI PUSH3 0x1E1 PUSH3 0x120 JUMP JUMPDEST PUSH3 0x1F9 DUP2 PUSH3 0x1F2 DUP5 SLOAD PUSH3 0x136 JUMP JUMPDEST DUP5 PUSH3 0x172 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x231 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x218 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1BC JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x262 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x241 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x281 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1EEB DUP1 PUSH3 0x2A1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0xCEDA0DBD EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0xC48B1FA6 EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xC6275255 EQ PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x8F9DB08C EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xA0BCFC7F EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x484B973C EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x4A9EEE69 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x5B7633D0 EQ PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x26092B83 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xA398B88 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xBAB3262 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xE2D56CF EQ PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x2329A29 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x46DC166 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EC JUMP JUMPDEST PUSH2 0x690 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x191E JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1989 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x199C JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x240 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B5 JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0x191E JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x240 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EC JUMP JUMPDEST PUSH2 0x853 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB PUSH2 0x325 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x234 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x269 PUSH2 0xA06 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x199C JUMP JUMPDEST PUSH2 0xAA5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x19B5 JUMP JUMPDEST PUSH2 0xAB6 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x2CD SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x234 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x47D CALLDATASIZE PUSH1 0x4 PUSH2 0x199C JUMP JUMPDEST PUSH2 0xD90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0xD9B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x191E JUMP JUMPDEST PUSH2 0xE29 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0xE78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x505 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0xF7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x53A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0xF8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x55A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0xF9F JUMP JUMPDEST PUSH2 0x269 PUSH2 0x56D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE6 JUMP JUMPDEST PUSH2 0x100B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x58D CALLDATASIZE PUSH1 0x4 PUSH2 0x199C JUMP JUMPDEST PUSH2 0x1055 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x5AD CALLDATASIZE PUSH1 0x4 PUSH2 0x199C JUMP JUMPDEST PUSH2 0x1062 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x5CD CALLDATASIZE PUSH1 0x4 PUSH2 0x199C JUMP JUMPDEST PUSH2 0x106F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x619 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0x10F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x191E JUMP JUMPDEST PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x66F JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x68A JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x698 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6B3 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH3 0x10000 MUL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x6EC SWAP1 PUSH2 0x1C60 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x718 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x765 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x765 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x748 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77A DUP3 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BE DUP3 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x7F7 JUMPI PUSH2 0x7DA DUP2 CALLER PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x85B PUSH2 0x1197 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x880 DUP3 PUSH2 0x1218 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x8DF DUP2 DUP8 CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP2 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x90A JUMPI PUSH2 0x8ED DUP7 CALLER PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x93C JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x9CE JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9CC JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x9CC JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E96 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA0E PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA22 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFBALANCE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA82 JUMPI PUSH2 0xA82 PUSH2 0x1C9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAA0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x100B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAAD PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xA82 DUP2 PUSH2 0x127F JUMP JUMPDEST PUSH2 0xABE PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xAC8 DUP3 DUP3 PUSH2 0x128A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151A194818DBDB9D1C9858DD081A5CC81C185D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB2C PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 GT PUSH2 0xB7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65656420746F206D696E74206174206C656173742031204E46540000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xB8B DUP7 DUP4 PUSH2 0x1CC6 JUMP JUMPDEST GT ISZERO PUSH2 0xBD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13585E08139195081B1A5B5A5D08195E18D959591959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCAA JUMPI PUSH2 0xBFD DUP6 DUP6 CALLER DUP7 PUSH2 0xE8C JUMP JUMPDEST DUP5 PUSH2 0xC08 DUP8 DUP4 PUSH2 0x1CC6 JUMP JUMPDEST GT ISZERO PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178204E465420666F72206164647265737320657863656564656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xC60 DUP7 DUP6 PUSH2 0x1CD9 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420666F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xD58 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xCB7 DUP8 DUP4 PUSH2 0x1CC6 JUMP JUMPDEST GT ISZERO PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178204E465420666F72206164647265737320657863656564656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST DUP6 PUSH1 0xC SLOAD PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xD58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420666F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD73 SWAP1 DUP8 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x9FE SWAP1 DUP8 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A DUP3 PUSH2 0x1218 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0xDA8 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDD4 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE21 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDF6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE21 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE04 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE52 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0xE80 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xE8A PUSH1 0x0 PUSH2 0x1364 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP6 DUP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP4 ADD MSTORE DUP3 MLOAD DUP1 DUP4 SUB PUSH1 0x54 ADD DUP2 MSTORE PUSH1 0x74 DUP4 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x94 DUP5 ADD MSTORE PUSH1 0xB0 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xD0 SWAP1 SWAP4 ADD SWAP1 SWAP4 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 PUSH2 0xF1D DUP3 DUP6 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH3 0x10000 SWAP1 SWAP3 DIV AND EQ PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x426164207369676E6174757265 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6EC SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0xF93 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x9 PUSH2 0xAC8 DUP3 DUP3 PUSH2 0x1D36 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1016 DUP5 DUP5 DUP5 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x104F JUMPI PUSH2 0x1032 DUP5 DUP5 DUP5 DUP5 PUSH2 0x13DA JUMP JUMPDEST PUSH2 0x104F JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x105D PUSH2 0x1197 JUMP JUMPDEST PUSH1 0xB SSTORE JUMP JUMPDEST PUSH2 0x106A PUSH2 0x1197 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x107A DUP3 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10A1 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x10C1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x10EC JUMP JUMPDEST DUP1 PUSH2 0x10CB DUP5 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10DC SWAP3 SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1129 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xA82 DUP2 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x68A JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x1266 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0x1264 JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x10EC JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1243 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA82 DUP2 PUSH1 0x0 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x12AF JUMPI PUSH1 0x40 MLOAD PUSH4 0xB562E8DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP9 MUL ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 DUP6 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 SSTORE DUP3 DUP5 ADD SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E96 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 DUP4 ADD JUMPDEST DUP2 DUP2 EQ PUSH2 0x133A JUMPI DUP1 DUP4 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E96 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 ADD PUSH2 0x1314 JUMP JUMPDEST POP DUP2 PUSH1 0x0 SUB PUSH2 0x135B JUMPI PUSH1 0x40 MLOAD PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x13C5 DUP6 DUP6 PUSH2 0x1651 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x13D2 DUP2 PUSH2 0x1696 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x140F SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x144A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1447 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14A8 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1478 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x147D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x14A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0x6EC SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x14EF JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1524 DUP4 PUSH2 0x1218 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x1542 DUP7 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0x1582 JUMPI PUSH2 0x1557 DUP2 DUP5 CALLER PUSH2 0x8CA JUMP JUMPDEST PUSH2 0x1582 JUMPI PUSH2 0x1565 DUP4 CALLER PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x158D JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x3 PUSH1 0xE0 SHL OR PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP6 AND SWAP1 SUB PUSH2 0x161B JUMPI PUSH1 0x1 DUP7 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x1619 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x1619 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E96 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x1687 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x167B DUP8 DUP3 DUP6 DUP6 PUSH2 0x17E0 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x168F JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x16AA JUMPI PUSH2 0x16AA PUSH2 0x1E7F JUMP JUMPDEST SUB PUSH2 0x16B2 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x16C6 JUMPI PUSH2 0x16C6 PUSH2 0x1E7F JUMP JUMPDEST SUB PUSH2 0x1713 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1727 JUMPI PUSH2 0x1727 PUSH2 0x1E7F JUMP JUMPDEST SUB PUSH2 0x1774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1788 JUMPI PUSH2 0x1788 PUSH2 0x1E7F JUMP JUMPDEST SUB PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1817 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x186B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1894 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x189B JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10EC DUP2 PUSH2 0x18A4 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10EC DUP3 PUSH2 0x18D7 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10EC DUP3 PUSH2 0x1907 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1954 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x193C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1975 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1939 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x10EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x195D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19D1 DUP4 PUSH2 0x1907 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19FD DUP5 PUSH2 0x1907 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A0B PUSH1 0x20 DUP6 ADD PUSH2 0x1907 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1A4C JUMPI PUSH2 0x1A4C PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1A74 JUMPI PUSH2 0x1A74 PUSH2 0x1A1B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1A8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10EC DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1ADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B15 DUP8 DUP3 DUP9 ADD PUSH2 0x1AA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x1B4E PUSH1 0x40 DUP7 ADD PUSH2 0x1907 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1BA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14BE DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BCF DUP4 PUSH2 0x1907 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BDD PUSH1 0x20 DUP5 ADD PUSH2 0x18D7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C05 DUP6 PUSH2 0x1907 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C13 PUSH1 0x20 DUP7 ADD PUSH2 0x1907 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C52 DUP4 PUSH2 0x1907 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BDD PUSH1 0x20 DUP5 ADD PUSH2 0x1907 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C74 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C94 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x68A JUMPI PUSH2 0x68A PUSH2 0x1CB0 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x68A JUMPI PUSH2 0x68A PUSH2 0x1CB0 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1D17 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9FE JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D23 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D50 JUMPI PUSH2 0x1D50 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x1D64 DUP2 PUSH2 0x1D5E DUP5 SLOAD PUSH2 0x1C60 JUMP JUMPDEST DUP5 PUSH2 0x1CF0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1D99 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1D81 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1DC8 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1DA9 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1DE6 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1E08 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1939 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1E1C DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1939 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1E58 SWAP1 DUP4 ADD DUP5 PUSH2 0x195D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x10EC DUP2 PUSH2 0x18A4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC LT 0xAE CALLVALUE CALLCODE 0xE4 PUSH21 0x58FC10511041DF7AA46D3482C04864DC07B415B87F INVALID 0x4F 0xC4 PUSH3 0x64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "227:3609:4:-:0;;;324:4;297:31;;374:1;334:41;;414:10;381:43;;430:26;;;-1:-1:-1;;;;;;498:73:4;;;;;662:52;;;;;;;;;;4946:154:5;;;;;;;;;;;;;-1:-1:-1;;;4946:154:5;;;;;;;;;;;;;;;;-1:-1:-1;;;4946:154:5;;;5020:5;5012;:13;;;;;;:::i;:::-;-1:-1:-1;5035:7:5;:17;5045:7;5035;:17;:::i;:::-;-1:-1:-1;;5482:7:5;5062:31;;-1:-1:-1;936:32:0;719:10:1;936:18:0;:32::i;:::-;227:3609:4;;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:7:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:7;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:7;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:7;;;2580:26;2531:89;-1:-1:-1;;1335:1:7;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:7;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:7;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:7;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:7:o;:::-;227:3609:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_2069": {
									"entryPoint": null,
									"id": 2069,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_889": {
									"entryPoint": 5318,
									"id": 889,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2056": {
									"entryPoint": null,
									"id": 2056,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_2421": {
									"entryPoint": 4735,
									"id": 2421,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_2573": {
									"entryPoint": 5401,
									"id": 2573,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2124": {
									"entryPoint": 5082,
									"id": 2124,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_54": {
									"entryPoint": 4503,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_exists_1808": {
									"entryPoint": 4593,
									"id": 1808,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2630": {
									"entryPoint": null,
									"id": 2630,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_1841": {
									"entryPoint": null,
									"id": 1841,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_1822": {
									"entryPoint": null,
									"id": 1822,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_2220": {
									"entryPoint": 4746,
									"id": 2220,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_2673": {
									"entryPoint": null,
									"id": 2673,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2663": {
									"entryPoint": null,
									"id": 2663,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_1670": {
									"entryPoint": null,
									"id": 1670,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_1660": {
									"entryPoint": null,
									"id": 1660,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_1594": {
									"entryPoint": 4632,
									"id": 1594,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_1208": {
									"entryPoint": null,
									"id": 1208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_throwError_414": {
									"entryPoint": 5782,
									"id": 414,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_toString_2683": {
									"entryPoint": 5333,
									"id": 2683,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 4964,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@alreadyMinted_754": {
									"entryPoint": null,
									"id": 754,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_1715": {
									"entryPoint": 1971,
									"id": 1715,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1281": {
									"entryPoint": 3625,
									"id": 1281,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@baseURI_732": {
									"entryPoint": 3483,
									"id": 732,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_903": {
									"entryPoint": 2725,
									"id": 903,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getApproved_1738": {
									"entryPoint": 1903,
									"id": 1738,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1782": {
									"entryPoint": 4339,
									"id": 1782,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@maxSupply_735": {
									"entryPoint": null,
									"id": 735,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_880": {
									"entryPoint": 2764,
									"id": 880,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@name_1404": {
									"entryPoint": 1757,
									"id": 1404,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerMint_930": {
									"entryPoint": 2742,
									"id": 930,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@ownerOf_1486": {
									"entryPoint": 3472,
									"id": 1486,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_954": {
									"entryPoint": 1680,
									"id": 954,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@paused_744": {
									"entryPoint": null,
									"id": 744,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@publicMaxNFTPerAddress_738": {
									"entryPoint": null,
									"id": 738,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@publicMint_747": {
									"entryPoint": null,
									"id": 747,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@publicPriceMint_741": {
									"entryPoint": null,
									"id": 741,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@recover_487": {
									"entryPoint": 5046,
									"id": 487,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 3704,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2005": {
									"entryPoint": 2693,
									"id": 2005,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2043": {
									"entryPoint": 4107,
									"id": 2043,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1764": {
									"entryPoint": 3999,
									"id": 1764,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseUri_915": {
									"entryPoint": 3979,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPublicMaxNFTPerAddress_978": {
									"entryPoint": 4181,
									"id": 978,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPublicMint_966": {
									"entryPoint": 2131,
									"id": 966,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPublicPrice_990": {
									"entryPoint": 4194,
									"id": 990,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSignerAddress_942": {
									"entryPoint": 1707,
									"id": 942,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@signerAddress_750": {
									"entryPoint": null,
									"id": 750,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1394": {
									"entryPoint": 1598,
									"id": 1394,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1414": {
									"entryPoint": 3964,
									"id": 1414,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toEthSignedMessageHash_678": {
									"entryPoint": null,
									"id": 678,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1457": {
									"entryPoint": 4207,
									"id": 1457,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1233": {
									"entryPoint": null,
									"id": 1233,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1986": {
									"entryPoint": 2165,
									"id": 1986,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 4385,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tryRecover_460": {
									"entryPoint": 5713,
									"id": 460,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryRecover_628": {
									"entryPoint": 6112,
									"id": 628,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@verifyCoupon_1033": {
									"entryPoint": 3724,
									"id": 1033,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@withdraw_1060": {
									"entryPoint": 2566,
									"id": 1060,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 6705,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 6359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 6823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_addresst_bytes_memory_ptr": {
									"entryPoint": 6945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 6855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_string": {
									"entryPoint": 6493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7670,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7717,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e954ccb096f28acc1183690281054aff136281f5a4d7c64c9abe0ea72fefbed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30564808b3c540a7d4251f4dfeb9dfdf20f528e5263d1014fab504a81ea812b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6fc45765de5cc9e81b48c27eeef759f5aedbc74686e014287e66cedca4232eaa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80456315b946e85d431f073cb6d2c9124b8371a1de03b3caeac844615afb0539__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed37a9aea988433e335e7d86b1c10784ef2ba276d209110134b4b7752da4f226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f334e6d79edc864fed2073d4e5dca33defac3a81d116d8882004993528938044__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 7408,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6457,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 7322,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7344,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 6308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16699:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:7",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:7",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:7"
															},
															"nodeType": "YulIf",
															"src": "68:71:7"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:7",
														"type": ""
													}
												],
												"src": "14:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:7"
															},
															"nodeType": "YulIf",
															"src": "229:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:7",
														"type": ""
													}
												],
												"src": "150:245:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:7",
														"type": ""
													}
												],
												"src": "400:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "638:114:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "670:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "657:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "648:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "730:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "739:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "742:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "732:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "732:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "732:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "699:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "720:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "713:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "713:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "706:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "706:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "696:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "696:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "689:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "689:40:7"
															},
															"nodeType": "YulIf",
															"src": "686:60:7"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "617:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "628:5:7",
														"type": ""
													}
												],
												"src": "592:160:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "824:113:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "870:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "879:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "882:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "872:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "872:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "872:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "845:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "854:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "841:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "841:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "866:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "837:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:32:7"
															},
															"nodeType": "YulIf",
															"src": "834:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "895:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "921:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "905:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:26:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:7",
														"type": ""
													}
												],
												"src": "757:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "991:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1001:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1023:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1001:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1093:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1102:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1105:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1095:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1095:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1095:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1052:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1063:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1078:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1083:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1074:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1074:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1087:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1070:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1070:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1059:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1059:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1049:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1049:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1042:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1042:50:7"
															},
															"nodeType": "YulIf",
															"src": "1039:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "970:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "981:5:7",
														"type": ""
													}
												],
												"src": "942:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1190:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1236:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1245:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1248:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1238:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1238:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1238:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1211:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1220:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1203:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1203:32:7"
															},
															"nodeType": "YulIf",
															"src": "1200:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1261:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1290:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1271:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1271:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1261:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1156:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1167:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1179:6:7",
														"type": ""
													}
												],
												"src": "1120:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1377:184:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1387:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1396:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1391:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1456:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1481:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1486:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1477:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1477:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1500:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1505:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1496:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1496:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1490:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1490:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1470:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1417:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1420:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1414:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1414:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1428:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1430:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1439:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1442:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1435:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1435:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1430:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1410:3:7",
																"statements": []
															},
															"src": "1406:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1539:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1544:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1535:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1553:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1528:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1528:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1528:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1355:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1360:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1365:6:7",
														"type": ""
													}
												],
												"src": "1311:250:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1616:221:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1626:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1646:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1640:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1640:12:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1630:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1668:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1673:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1661:19:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1728:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1735:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1724:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1724:16:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1746:3:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1751:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1742:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1742:14:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1758:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1689:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1689:76:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1689:76:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1774:57:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1789:3:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1802:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1810:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1798:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1798:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1819:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1815:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1815:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1794:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1794:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1785:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1785:39:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1826:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1781:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:50:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1774:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1593:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1600:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1608:3:7",
														"type": ""
													}
												],
												"src": "1566:271:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1963:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1980:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1991:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1973:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1973:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1973:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2003:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2029:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2041:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2052:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2037:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2037:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2011:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:45:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2003:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1932:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1954:4:7",
														"type": ""
													}
												],
												"src": "1842:220:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2137:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2192:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2185:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2185:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2185:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2158:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2167:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2154:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2154:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2179:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2150:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2150:32:7"
															},
															"nodeType": "YulIf",
															"src": "2147:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2208:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2231:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2218:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2218:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2208:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2103:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2114:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2126:6:7",
														"type": ""
													}
												],
												"src": "2067:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2363:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2375:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2386:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2371:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2363:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2405:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2420:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2436:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2441:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2432:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2432:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2445:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2428:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2428:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2416:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2416:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2398:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2398:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2398:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2322:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2333:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2344:4:7",
														"type": ""
													}
												],
												"src": "2252:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2547:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2593:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2605:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2595:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2595:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2595:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2568:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2577:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2564:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2564:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2589:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2560:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2560:32:7"
															},
															"nodeType": "YulIf",
															"src": "2557:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2618:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2647:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2628:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2628:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2618:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2666:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2693:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2704:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2689:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2676:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2676:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2666:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2505:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2516:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2528:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2536:6:7",
														"type": ""
													}
												],
												"src": "2460:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2820:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2830:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2842:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2853:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2838:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2838:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2830:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2872:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2883:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2865:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2865:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2789:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2800:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2811:4:7",
														"type": ""
													}
												],
												"src": "2719:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3005:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3051:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3060:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3063:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3053:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3053:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3053:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3026:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3035:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3022:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3022:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3047:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3018:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3018:32:7"
															},
															"nodeType": "YulIf",
															"src": "3015:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3076:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3105:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3086:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3076:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3124:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3157:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3168:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3153:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3153:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3134:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3134:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3124:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3181:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3208:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3219:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3204:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3204:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3191:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3191:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3181:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2955:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2966:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2978:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2986:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2994:6:7",
														"type": ""
													}
												],
												"src": "2901:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3283:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3290:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3286:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3286:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3276:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3276:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3276:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3326:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3316:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3316:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3347:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3350:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3340:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3340:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3234:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3440:557:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3450:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3460:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3454:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3505:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3507:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3507:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3507:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3493:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3501:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3490:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3490:14:7"
															},
															"nodeType": "YulIf",
															"src": "3487:40:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3536:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3550:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3546:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:7:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3540:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3562:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3582:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3576:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3566:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3594:73:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3616:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "3640:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3648:2:7",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3636:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3636:15:7"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "3653:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3632:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3632:24:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3658:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3628:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3628:33:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3663:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3624:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3624:42:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3612:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3612:55:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3598:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3726:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3728:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3728:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3728:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3685:10:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3697:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3682:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3682:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3705:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3717:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3702:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3702:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3679:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:46:7"
															},
															"nodeType": "YulIf",
															"src": "3676:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3768:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3757:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3757:22:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3788:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3797:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3788:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3812:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3812:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3812:22:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3872:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3881:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3884:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3874:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3874:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3874:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3858:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3849:16:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3846:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3846:25:7"
															},
															"nodeType": "YulIf",
															"src": "3843:45:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3914:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3922:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3910:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3910:17:7"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3929:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3934:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3897:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3897:44:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3897:44:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3965:6:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3973:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3961:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3961:19:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3982:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3957:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3957:30:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3989:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3950:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3950:41:7"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3409:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3414:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3422:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3430:5:7",
														"type": ""
													}
												],
												"src": "3366:631:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4054:168:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4103:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4112:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4115:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4105:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4105:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4105:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4082:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4090:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4078:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4078:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4097:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4074:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:35:7"
															},
															"nodeType": "YulIf",
															"src": "4064:55:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4128:88:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4175:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4183:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4171:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4171:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4203:6:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4190:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:20:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4212:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4137:33:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4137:79:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4128:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4028:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4036:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4044:5:7",
														"type": ""
													}
												],
												"src": "4002:220:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4357:395:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4404:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4413:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4416:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4406:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4406:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4406:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4378:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4387:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4374:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4374:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4399:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4370:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:33:7"
															},
															"nodeType": "YulIf",
															"src": "4367:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4429:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4452:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4439:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4439:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4429:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4471:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4481:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4481:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4471:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4522:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4549:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4560:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4545:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4545:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4532:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4522:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4573:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4604:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4615:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4600:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4600:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4587:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:32:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4577:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4662:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4671:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4674:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4664:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4664:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4664:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4634:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4642:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4631:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:30:7"
															},
															"nodeType": "YulIf",
															"src": "4628:50:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4687:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4718:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4729:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4714:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4714:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4738:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4697:16:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4697:49:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4687:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4299:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4310:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4322:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4330:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4338:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4346:6:7",
														"type": ""
													}
												],
												"src": "4227:525:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4887:401:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4934:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4943:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4946:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4936:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4936:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4936:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4908:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4917:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4904:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4904:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4929:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4900:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4900:33:7"
															},
															"nodeType": "YulIf",
															"src": "4897:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4959:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4982:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4969:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4969:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4959:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5001:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5028:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5039:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5024:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5024:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5011:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5011:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5001:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5052:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5085:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5096:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5081:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5081:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5062:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5062:38:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5052:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5109:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5140:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5151:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5136:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5136:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5123:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5123:32:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5113:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5198:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5207:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5210:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5200:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5200:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5200:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5170:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5178:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5167:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5167:30:7"
															},
															"nodeType": "YulIf",
															"src": "5164:50:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5223:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5254:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5265:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5250:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5250:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5274:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5233:16:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5233:49:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5223:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4829:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4840:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4852:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4860:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4868:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4876:6:7",
														"type": ""
													}
												],
												"src": "4757:531:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5373:370:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5419:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5428:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5431:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5421:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5421:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5421:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5394:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5403:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5390:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5390:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5415:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5386:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5386:32:7"
															},
															"nodeType": "YulIf",
															"src": "5383:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5444:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5471:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5458:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5458:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5448:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5524:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5533:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5536:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5526:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5526:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5526:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5496:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5504:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5493:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5493:30:7"
															},
															"nodeType": "YulIf",
															"src": "5490:50:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5549:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5563:9:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5574:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5559:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5559:22:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5553:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5629:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5638:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5641:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5631:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5631:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5631:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "5608:2:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5612:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5604:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5604:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5619:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5600:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5600:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5593:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:35:7"
															},
															"nodeType": "YulIf",
															"src": "5590:55:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5654:83:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5702:2:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5706:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5698:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5698:11:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5724:2:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5711:12:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5711:16:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5729:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5664:33:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5664:73:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5654:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5339:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5350:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5362:6:7",
														"type": ""
													}
												],
												"src": "5293:450:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5832:170:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5878:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5890:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5880:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5880:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5880:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5853:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5862:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5849:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5874:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5845:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5845:32:7"
															},
															"nodeType": "YulIf",
															"src": "5842:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5903:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5932:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5913:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5913:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5903:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5951:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5981:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5992:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5977:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5977:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5961:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5961:35:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5790:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5801:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5813:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5821:6:7",
														"type": ""
													}
												],
												"src": "5748:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6137:407:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6184:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6193:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6196:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6186:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6186:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6186:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6158:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6167:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6154:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6154:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6179:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6150:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6150:33:7"
															},
															"nodeType": "YulIf",
															"src": "6147:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6209:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6238:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6219:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6219:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6209:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6257:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6290:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6301:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6286:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6286:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6267:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6267:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6257:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6314:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6341:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6352:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6337:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6337:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6324:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6314:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6365:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6396:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6407:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6392:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6392:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6379:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6379:32:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6369:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6454:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6463:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6466:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6456:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6456:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6456:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6426:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6434:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6423:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6423:30:7"
															},
															"nodeType": "YulIf",
															"src": "6420:50:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6479:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6510:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6521:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6506:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6506:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6530:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6489:16:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6489:49:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6479:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6079:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6090:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6102:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6110:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6118:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6126:6:7",
														"type": ""
													}
												],
												"src": "6007:537:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6636:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6682:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6691:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6694:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6684:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6684:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6684:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6657:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6666:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6653:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6653:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6678:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6649:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:32:7"
															},
															"nodeType": "YulIf",
															"src": "6646:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6707:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6736:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6717:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6717:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6707:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6755:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6788:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6799:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6784:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6784:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6765:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6765:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6755:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6594:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6605:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6617:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6625:6:7",
														"type": ""
													}
												],
												"src": "6549:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6869:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6879:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6893:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6896:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6889:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6889:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6879:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6910:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6940:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6946:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6936:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6936:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6914:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6987:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6989:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7003:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7011:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6999:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6999:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6989:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6967:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6960:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6960:26:7"
															},
															"nodeType": "YulIf",
															"src": "6957:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7077:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7098:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7105:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7110:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7101:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7101:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7091:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7091:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7091:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7142:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7145:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7135:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7135:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7135:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7170:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7173:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7163:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7163:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7163:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7033:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7056:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7064:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7053:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7053:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7030:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7030:38:7"
															},
															"nodeType": "YulIf",
															"src": "7027:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6849:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6858:6:7",
														"type": ""
													}
												],
												"src": "6814:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7390:14:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7392:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7399:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7392:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7374:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7382:3:7",
														"type": ""
													}
												],
												"src": "7199:205:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7441:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7458:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7465:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7470:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7461:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7461:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7451:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7451:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7451:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7498:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7501:4:7",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7491:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7491:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7491:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7522:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7525:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7515:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7515:15:7"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "7409:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7715:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7732:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7743:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7725:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7725:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7725:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7766:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7777:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7762:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7762:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7782:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7755:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7755:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7805:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7816:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7801:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7801:18:7"
																	},
																	{
																		"hexValue": "54686520636f6e747261637420697320706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7821:24:7",
																		"type": "",
																		"value": "The contract is paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7794:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7794:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7855:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7867:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7878:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7863:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7863:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7855:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e954ccb096f28acc1183690281054aff136281f5a4d7c64c9abe0ea72fefbed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7692:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7706:4:7",
														"type": ""
													}
												],
												"src": "7541:346:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8066:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8083:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8094:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8076:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8076:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8117:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8128:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8113:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8113:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8133:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8106:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8106:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8106:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8156:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8167:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8152:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8152:18:7"
																	},
																	{
																		"hexValue": "4e65656420746f206d696e74206174206c656173742031204e4654",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8172:29:7",
																		"type": "",
																		"value": "Need to mint at least 1 NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8145:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8145:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8145:57:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8211:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8223:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8234:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8219:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8219:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8211:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed37a9aea988433e335e7d86b1c10784ef2ba276d209110134b4b7752da4f226__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8043:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8057:4:7",
														"type": ""
													}
												],
												"src": "7892:351:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8280:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8297:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8304:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8309:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8300:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8300:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8290:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8290:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8337:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8340:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8330:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8330:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8330:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8361:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8364:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8354:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8354:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8354:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8248:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8428:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8438:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8449:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8452:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8445:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8445:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8438:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8477:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8479:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8479:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8479:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8469:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8472:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8466:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8466:10:7"
															},
															"nodeType": "YulIf",
															"src": "8463:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8411:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8414:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8420:3:7",
														"type": ""
													}
												],
												"src": "8380:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8684:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8701:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8712:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8694:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8694:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8694:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8735:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8746:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8731:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8731:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8751:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8724:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8724:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8724:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8774:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8785:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8770:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8770:18:7"
																	},
																	{
																		"hexValue": "4d6178204e4654206c696d6974206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8790:24:7",
																		"type": "",
																		"value": "Max NFT limit exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8763:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8763:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8763:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8824:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8836:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8847:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8832:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8832:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8824:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80456315b946e85d431f073cb6d2c9124b8371a1de03b3caeac844615afb0539__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8661:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8675:4:7",
														"type": ""
													}
												],
												"src": "8510:346:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9035:178:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9052:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9063:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9045:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9045:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9045:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9086:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9097:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9082:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9082:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9102:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9075:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9075:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9075:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9125:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9136:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9121:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9121:18:7"
																	},
																	{
																		"hexValue": "4d6178204e465420666f722061646472657373206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9141:30:7",
																		"type": "",
																		"value": "Max NFT for address exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9114:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9114:58:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9181:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9193:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9204:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9189:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9189:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9181:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6fc45765de5cc9e81b48c27eeef759f5aedbc74686e014287e66cedca4232eaa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9012:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9026:4:7",
														"type": ""
													}
												],
												"src": "8861:352:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9270:116:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9280:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9295:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9298:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9291:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9291:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9280:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9358:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9360:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9360:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9360:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9329:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9322:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9322:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9336:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9343:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9352:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "9339:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9339:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9333:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9333:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9319:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9319:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9312:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9312:45:7"
															},
															"nodeType": "YulIf",
															"src": "9309:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9249:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9252:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9258:7:7",
														"type": ""
													}
												],
												"src": "9218:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9565:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9582:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9593:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9575:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9575:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9575:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9616:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9627:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9612:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9612:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9632:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9605:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9605:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9605:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9655:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9666:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9651:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9651:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420666f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9671:21:7",
																		"type": "",
																		"value": "Insufficient founds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9644:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9644:49:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9644:49:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9702:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9714:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9725:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9710:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9710:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9702:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30564808b3c540a7d4251f4dfeb9dfdf20f528e5263d1014fab504a81ea812b4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9542:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9556:4:7",
														"type": ""
													}
												],
												"src": "9391:343:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9914:184:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9931:3:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9936:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9924:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9924:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9924:19:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9963:3:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9968:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9959:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9959:12:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9973:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9952:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9952:28:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9952:28:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10000:3:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10005:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9996:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9996:12:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10018:2:7",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "10022:6:7"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "10014:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10014:15:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10035:26:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "10031:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10031:31:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10010:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10010:53:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9989:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9989:75:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9989:75:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10073:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10084:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10089:2:7",
																		"type": "",
																		"value": "84"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10080:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10080:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10073:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9874:3:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9879:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9887:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9895:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9906:3:7",
														"type": ""
													}
												],
												"src": "9739:359:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10277:163:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10294:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10305:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10287:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10287:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10287:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10328:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10339:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10324:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10324:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10344:2:7",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10317:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10317:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10317:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10367:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10378:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10363:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10363:18:7"
																	},
																	{
																		"hexValue": "426164207369676e6174757265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10383:15:7",
																		"type": "",
																		"value": "Bad signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10356:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10356:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10356:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10408:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10420:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10431:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10416:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10416:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10408:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f334e6d79edc864fed2073d4e5dca33defac3a81d116d8882004993528938044__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10254:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10268:4:7",
														"type": ""
													}
												],
												"src": "10103:337:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10501:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10518:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "10521:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10511:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10511:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10511:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10534:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10555:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "10542:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10542:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "10534:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "10484:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10492:4:7",
														"type": ""
													}
												],
												"src": "10445:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10652:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10685:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10699:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10709:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "10703:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10730:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "10734:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10723:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10723:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10723:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10753:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10775:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10779:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "10765:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10765:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "10757:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10797:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "10820:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10830:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "10837:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10849:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10833:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10833:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "10826:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10826:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10816:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10816:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "10801:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "10891:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "10893:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "10908:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "10893:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "10873:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10885:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "10870:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10870:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "10867:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10927:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "10941:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "10951:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "10958:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10963:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10954:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10954:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "10947:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10947:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10937:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10937:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "10931:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10981:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "10994:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "10985:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "11079:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "11088:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "11095:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "11081:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11081:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11081:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "11029:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "11036:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "11026:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11026:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "11040:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "11042:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "11055:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11062:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "11051:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11051:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "11042:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "11022:3:7",
																			"statements": []
																		},
																		"src": "11018:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "10668:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10673:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10665:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10665:11:7"
															},
															"nodeType": "YulIf",
															"src": "10662:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10624:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "10631:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "10636:10:7",
														"type": ""
													}
												],
												"src": "10571:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11206:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11216:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "11231:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11249:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "11252:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "11245:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11245:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11262:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "11258:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11258:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "11241:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11241:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "11237:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11237:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11227:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11227:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11273:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "11276:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11269:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11269:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11224:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11224:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "11216:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11183:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "11189:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "11197:4:7",
														"type": ""
													}
												],
												"src": "11121:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11388:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11398:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "11418:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11412:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11412:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "11402:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11465:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "11467:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11467:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11467:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "11437:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11445:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11434:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11434:30:7"
															},
															"nodeType": "YulIf",
															"src": "11431:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "11540:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "11578:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "11572:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11572:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "11546:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11546:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "11586:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "11496:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11496:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11496:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11602:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11619:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "11606:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11629:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11648:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "11633:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11661:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "11674:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "11661:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11731:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "11745:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "11764:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "11776:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "11772:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11772:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "11760:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11760:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "11749:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "11793:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "11837:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "11807:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11807:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "11797:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "11855:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11864:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "11859:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "11942:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "11967:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "11985:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "11990:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "11981:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "11981:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "11975:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "11975:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "11960:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11960:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "11960:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "12019:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "12033:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12041:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12029:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12029:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "12019:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "12060:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "12077:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "12088:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12073:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12073:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "12060:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11889:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "11892:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "11886:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11886:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "11901:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "11903:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "11912:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "11915:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "11908:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11908:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11903:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "11882:3:7",
																					"statements": []
																				},
																				"src": "11878:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12162:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "12180:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "12207:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "12212:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "12203:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12203:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12197:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12197:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "12184:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "12247:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "12259:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "12286:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "12289:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "12282:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "12282:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "12298:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "12278:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "12278:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "12308:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "12304:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "12304:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "12274:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "12274:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "12270:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "12270:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "12255:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12255:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "12240:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12240:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "12240:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "12133:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "12142:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "12130:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12130:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "12127:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "12348:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "12362:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "12365:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "12358:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12358:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12374:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12354:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12354:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "12341:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12341:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12341:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "11724:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11729:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "12404:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "12418:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12431:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "12422:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "12467:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "12485:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "12504:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "12509:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "12500:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "12500:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12494:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12494:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "12485:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "12448:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "12445:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "12554:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "12613:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "12620:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "12560:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12560:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "12547:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12547:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "12547:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "12396:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "11704:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11712:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11701:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11701:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "11694:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "11373:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11379:3:7",
														"type": ""
													}
												],
												"src": "11292:1352:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12836:309:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12846:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12866:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12860:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12860:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12850:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12921:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12929:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12917:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12917:17:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12936:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12941:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "12882:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12882:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12882:66:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12957:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12974:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12979:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12970:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12970:16:7"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "12961:5:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12995:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13017:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13011:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13011:13:7"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "12999:8:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13072:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13080:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13068:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13068:17:7"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "13087:5:7"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "13094:8:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13033:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13033:70:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13033:70:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13112:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "13123:5:7"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "13130:8:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13119:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13119:20:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13112:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12804:3:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12809:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12817:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12828:3:7",
														"type": ""
													}
												],
												"src": "12649:496:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13324:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13341:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13352:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13334:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13334:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13334:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13375:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13386:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13371:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13371:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13391:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13364:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13364:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13364:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13414:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13425:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13410:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13410:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13430:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13403:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13403:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13403:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13485:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13496:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13481:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13481:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13501:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13474:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13474:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13474:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13519:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13531:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13542:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13527:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13527:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13519:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13301:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13315:4:7",
														"type": ""
													}
												],
												"src": "13150:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13731:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13748:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13759:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13741:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13741:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13741:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13782:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13793:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13778:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13778:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13798:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13771:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13771:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13771:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13821:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13832:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13817:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13817:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13837:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13810:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13810:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13810:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13881:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13893:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13904:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13889:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13889:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13881:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13708:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13722:4:7",
														"type": ""
													}
												],
												"src": "13557:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14138:160:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14155:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14160:66:7",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14148:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14148:79:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14148:79:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14247:3:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14252:2:7",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14243:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14243:12:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14257:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14236:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14236:28:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14236:28:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14273:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14284:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14289:2:7",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14280:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14280:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14273:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14114:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14119:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14130:3:7",
														"type": ""
													}
												],
												"src": "13918:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14506:286:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14516:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14534:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14539:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14530:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14530:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14543:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14526:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14526:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14520:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14561:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14576:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14584:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14572:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14572:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14554:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14554:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14554:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14608:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14619:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14604:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14604:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14628:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14636:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14624:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14624:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14597:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14597:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14597:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14660:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14671:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14656:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14656:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14676:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14649:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14649:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14649:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14703:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14714:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14699:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14699:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14719:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14692:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14692:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14692:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14732:54:7",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14758:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14770:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14781:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14766:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14766:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14740:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14740:46:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14732:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14451:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14462:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14470:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14478:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14486:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14497:4:7",
														"type": ""
													}
												],
												"src": "14303:489:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14877:169:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14923:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14932:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14935:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14925:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14925:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14925:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14898:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14907:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14894:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14894:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14919:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14890:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14890:32:7"
															},
															"nodeType": "YulIf",
															"src": "14887:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14948:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14967:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14961:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14961:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14952:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15010:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14986:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14986:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14986:30:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15025:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15035:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "15025:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14843:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14854:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14866:6:7",
														"type": ""
													}
												],
												"src": "14797:249:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15083:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15100:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15107:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15112:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15103:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15103:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15093:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15093:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15093:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15140:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15143:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15133:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15133:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15133:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15164:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15167:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15157:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15157:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15157:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "15051:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15357:174:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15374:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15385:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15367:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15367:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15367:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15408:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15419:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15404:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15404:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15424:2:7",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15397:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15397:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15397:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15447:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15458:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15443:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15443:18:7"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15463:26:7",
																		"type": "",
																		"value": "ECDSA: invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15436:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15436:54:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15436:54:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15499:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15511:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15522:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15507:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15507:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15499:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15334:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15348:4:7",
														"type": ""
													}
												],
												"src": "15183:348:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15710:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15727:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15738:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15720:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15720:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15720:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15761:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15772:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15757:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15757:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15777:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15750:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15750:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15750:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15800:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15811:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15796:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15796:18:7"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15816:33:7",
																		"type": "",
																		"value": "ECDSA: invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15789:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15789:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15789:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15859:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15871:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15882:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15867:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15867:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15859:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15687:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15701:4:7",
														"type": ""
													}
												],
												"src": "15536:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16070:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16087:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16098:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16080:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16080:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16080:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16121:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16132:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16117:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16117:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16137:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16110:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16110:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16110:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16160:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16171:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16156:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16156:18:7"
																	},
																	{
																		"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16176:34:7",
																		"type": "",
																		"value": "ECDSA: invalid signature 's' val"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16149:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16149:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16149:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16231:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16242:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16227:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16227:18:7"
																	},
																	{
																		"hexValue": "7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16247:4:7",
																		"type": "",
																		"value": "ue"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16220:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16220:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16220:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16261:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16273:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16284:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16269:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16269:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16261:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16047:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16061:4:7",
														"type": ""
													}
												],
												"src": "15896:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16480:217:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16490:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16502:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16513:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16498:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16498:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16490:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16533:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16544:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16526:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16526:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16526:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16571:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16582:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16567:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16567:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16591:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16599:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16587:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16587:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16560:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16560:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16560:45:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16625:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16636:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16621:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16621:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16641:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16614:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16614:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16614:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16668:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16679:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16664:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16664:18:7"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16684:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16657:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "16657:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16657:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16425:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16436:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16444:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16452:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16460:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16471:4:7",
														"type": ""
													}
												],
												"src": "16299:398:7"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_1e954ccb096f28acc1183690281054aff136281f5a4d7c64c9abe0ea72fefbed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"The contract is paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ed37a9aea988433e335e7d86b1c10784ef2ba276d209110134b4b7752da4f226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Need to mint at least 1 NFT\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_80456315b946e85d431f073cb6d2c9124b8371a1de03b3caeac844615afb0539__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Max NFT limit exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6fc45765de5cc9e81b48c27eeef759f5aedbc74686e014287e66cedca4232eaa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Max NFT for address exceeded\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_30564808b3c540a7d4251f4dfeb9dfdf20f528e5263d1014fab504a81ea812b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Insufficient founds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 84)\n    }\n    function abi_encode_tuple_t_stringliteral_f334e6d79edc864fed2073d4e5dca33defac3a81d116d8882004993528938044__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Bad signature\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061020f5760003560e01c80635c975abb11610118578063a22cb465116100a0578063c87b56dd1161006f578063c87b56dd146105b2578063ceda0dbd146105d2578063d5abeb01146105e8578063e985e9c5146105fe578063f2fde38b1461061e57600080fd5b8063a22cb4651461053f578063b88d4fde1461055f578063c48b1fa614610572578063c62752551461059257600080fd5b8063715018a6116100e7578063715018a6146104b75780638da5cb5b146104cc5780638f9db08c146104ea57806395d89b411461050a578063a0bcfc7f1461051f57600080fd5b80635c975abb146104485780636352211e146104625780636c0360eb1461048257806370a082311461049757600080fd5b806318160ddd1161019b57806342842e0e1161016a57806342842e0e146103bc57806342966c68146103cf578063484b973c146103ef5780634a9eee691461040f5780635b7633d01461042257600080fd5b806318160ddd1461036957806323b872dd1461038257806326092b83146103955780633ccfd60b146103b457600080fd5b8063081812fc116101e2578063081812fc146102ad578063095ea7b3146102e55780630a398b88146102f85780630bab3262146103335780630e2d56cf1461034957600080fd5b806301ffc9a71461021457806302329a2914610249578063046dc1661461026b57806306fdde031461028b575b600080fd5b34801561022057600080fd5b5061023461022f3660046118ba565b61063e565b60405190151581526020015b60405180910390f35b34801561025557600080fd5b506102696102643660046118ec565b610690565b005b34801561027757600080fd5b5061026961028636600461191e565b6106ab565b34801561029757600080fd5b506102a06106dd565b6040516102409190611989565b3480156102b957600080fd5b506102cd6102c836600461199c565b61076f565b6040516001600160a01b039091168152602001610240565b6102696102f33660046119b5565b6107b3565b34801561030457600080fd5b5061032561031336600461191e565b600e6020526000908152604090205481565b604051908152602001610240565b34801561033f57600080fd5b50610325600b5481565b34801561035557600080fd5b506102696103643660046118ec565b610853565b34801561037557600080fd5b5060015460005403610325565b6102696103903660046119df565b610875565b3480156103a157600080fd5b50600d5461023490610100900460ff1681565b610269610a06565b6102696103ca3660046119df565b610a85565b3480156103db57600080fd5b506102696103ea36600461199c565b610aa5565b3480156103fb57600080fd5b5061026961040a3660046119b5565b610ab6565b61026961041d366004611ac7565b610acc565b34801561042e57600080fd5b50600d546102cd906201000090046001600160a01b031681565b34801561045457600080fd5b50600d546102349060ff1681565b34801561046e57600080fd5b506102cd61047d36600461199c565b610d90565b34801561048e57600080fd5b506102a0610d9b565b3480156104a357600080fd5b506103256104b236600461191e565b610e29565b3480156104c357600080fd5b50610269610e78565b3480156104d857600080fd5b506008546001600160a01b03166102cd565b3480156104f657600080fd5b50610269610505366004611b21565b610e8c565b34801561051657600080fd5b506102a0610f7c565b34801561052b57600080fd5b5061026961053a366004611b6a565b610f8b565b34801561054b57600080fd5b5061026961055a366004611bb3565b610f9f565b61026961056d366004611be6565b61100b565b34801561057e57600080fd5b5061026961058d36600461199c565b611055565b34801561059e57600080fd5b506102696105ad36600461199c565b611062565b3480156105be57600080fd5b506102a06105cd36600461199c565b61106f565b3480156105de57600080fd5b50610325600c5481565b3480156105f457600080fd5b50610325600a5481565b34801561060a57600080fd5b50610234610619366004611c36565b6110f3565b34801561062a57600080fd5b5061026961063936600461191e565b611121565b60006301ffc9a760e01b6001600160e01b03198316148061066f57506380ac58cd60e01b6001600160e01b03198316145b8061068a5750635b5e139f60e01b6001600160e01b03198316145b92915050565b610698611197565b600d805460ff1916911515919091179055565b6106b3611197565b600d80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b6060600280546106ec90611c60565b80601f016020809104026020016040519081016040528092919081815260200182805461071890611c60565b80156107655780601f1061073a57610100808354040283529160200191610765565b820191906000526020600020905b81548152906001019060200180831161074857829003601f168201915b5050505050905090565b600061077a826111f1565b610797576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006107be82610d90565b9050336001600160a01b038216146107f7576107da81336110f3565b6107f7576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61085b611197565b600d80549115156101000261ff0019909216919091179055565b600061088082611218565b9050836001600160a01b0316816001600160a01b0316146108b35760405162a1148160e81b815260040160405180910390fd5b600082815260066020526040902080546108df8187335b6001600160a01b039081169116811491141790565b61090a576108ed86336110f3565b61090a57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661093157604051633a954ecd60e21b815260040160405180910390fd5b801561093c57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b841690036109ce576001840160008181526004602052604081205490036109cc5760005481146109cc5760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b0316600080516020611e9683398151915260405160405180910390a45b505050505050565b610a0e611197565b6000610a226008546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610a6c576040519150601f19603f3d011682016040523d82523d6000602084013e610a71565b606091505b5050905080610a8257610a82611c9a565b50565b610aa08383836040518060200160405280600081525061100b565b505050565b610aad611197565b610a828161127f565b610abe611197565b610ac8828261128a565b5050565b600d5460ff1615610b1d5760405162461bcd60e51b8152602060048201526016602482015275151a194818dbdb9d1c9858dd081a5cc81c185d5cd95960521b60448201526064015b60405180910390fd5b6000610b2c6001546000540390565b905060008511610b7e5760405162461bcd60e51b815260206004820152601b60248201527f4e65656420746f206d696e74206174206c656173742031204e465400000000006044820152606401610b14565b600a54610b8b8683611cc6565b1115610bd25760405162461bcd60e51b815260206004820152601660248201527513585e08139195081b1a5b5a5d08195e18d95959195960521b6044820152606401610b14565b336000908152600e6020526040902054600d54610100900460ff16610caa57610bfd85853386610e8c565b84610c088783611cc6565b1115610c565760405162461bcd60e51b815260206004820152601c60248201527f4d6178204e465420666f722061646472657373206578636565646564000000006044820152606401610b14565b610c608685611cd9565b341015610ca55760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e7420666f756e647360681b6044820152606401610b14565b610d58565b600b54610cb78783611cc6565b1115610d055760405162461bcd60e51b815260206004820152601c60248201527f4d6178204e465420666f722061646472657373206578636565646564000000006044820152606401610b14565b85600c54610d139190611cd9565b341015610d585760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e7420666f756e647360681b6044820152606401610b14565b336000908152600e6020526040902054610d73908790611cc6565b336000818152600e60205260409020919091556109fe908761128a565b600061068a82611218565b60098054610da890611c60565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd490611c60565b8015610e215780601f10610df657610100808354040283529160200191610e21565b820191906000526020600020905b815481529060010190602001808311610e0457829003601f168201915b505050505081565b60006001600160a01b038216610e52576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b610e80611197565b610e8a6000611364565b565b604080516020808201879052818301869052606085811b6bffffffffffffffffffffffff191690830152825180830360540181526074830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a333200000000609484015260b08084018290528451808503909101815260d090930190935281519101206000610f1d82856113b6565b600d549091506001600160a01b03808316620100009092041614610f735760405162461bcd60e51b815260206004820152600d60248201526c426164207369676e617475726560981b6044820152606401610b14565b50505050505050565b6060600380546106ec90611c60565b610f93611197565b6009610ac88282611d36565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611016848484610875565b6001600160a01b0383163b1561104f57611032848484846113da565b61104f576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b61105d611197565b600b55565b61106a611197565b600c55565b606061107a826111f1565b61109757604051630a14c4b560e41b815260040160405180910390fd5b60006110a16114c6565b905080516000036110c157604051806020016040528060008152506110ec565b806110cb846114d5565b6040516020016110dc929190611df6565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b611129611197565b6001600160a01b03811661118e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b14565b610a8281611364565b6008546001600160a01b03163314610e8a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b14565b600080548210801561068a575050600090815260046020526040902054600160e01b161590565b6000816000548110156112665760008181526004602052604081205490600160e01b82169003611264575b806000036110ec575060001901600081815260046020526040902054611243565b505b604051636f96cda160e11b815260040160405180910390fd5b610a82816000611519565b60008054908290036112af5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b17831790558284019083908390600080516020611e968339815191528180a4600183015b81811461133a5780836000600080516020611e96833981519152600080a4600101611314565b508160000361135b57604051622e076360e81b815260040160405180910390fd5b60005550505050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008060006113c58585611651565b915091506113d281611696565b509392505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061140f903390899088908890600401611e25565b6020604051808303816000875af192505050801561144a575060408051601f3d908101601f1916820190925261144791810190611e62565b60015b6114a8573d808015611478576040519150601f19603f3d011682016040523d82523d6000602084013e61147d565b606091505b5080516000036114a0576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600980546106ec90611c60565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806114ef5750819003601f19909101908152919050565b600061152483611218565b90508060008061154286600090815260066020526040902080549091565b915091508415611582576115578184336108ca565b6115825761156583336110f3565b61158257604051632ce44b5f60e11b815260040160405180910390fd5b801561158d57600082555b6001600160a01b038316600081815260056020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b17600087815260046020526040812091909155600160e11b8516900361161b576001860160008181526004602052604081205490036116195760005481146116195760008181526004602052604090208590555b505b60405186906000906001600160a01b03861690600080516020611e96833981519152908390a45050600180548101905550505050565b60008082516041036116875760208301516040840151606085015160001a61167b878285856117e0565b9450945050505061168f565b506000905060025b9250929050565b60008160048111156116aa576116aa611e7f565b036116b25750565b60018160048111156116c6576116c6611e7f565b036117135760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610b14565b600281600481111561172757611727611e7f565b036117745760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610b14565b600381600481111561178857611788611e7f565b03610a825760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610b14565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611817575060009050600361189b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561186b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166118945760006001925092505061189b565b9150600090505b94509492505050565b6001600160e01b031981168114610a8257600080fd5b6000602082840312156118cc57600080fd5b81356110ec816118a4565b803580151581146118e757600080fd5b919050565b6000602082840312156118fe57600080fd5b6110ec826118d7565b80356001600160a01b03811681146118e757600080fd5b60006020828403121561193057600080fd5b6110ec82611907565b60005b8381101561195457818101518382015260200161193c565b50506000910152565b60008151808452611975816020860160208601611939565b601f01601f19169290920160200192915050565b6020815260006110ec602083018461195d565b6000602082840312156119ae57600080fd5b5035919050565b600080604083850312156119c857600080fd5b6119d183611907565b946020939093013593505050565b6000806000606084860312156119f457600080fd5b6119fd84611907565b9250611a0b60208501611907565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611a4c57611a4c611a1b565b604051601f8501601f19908116603f01168101908282118183101715611a7457611a74611a1b565b81604052809350858152868686011115611a8d57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611ab857600080fd5b6110ec83833560208501611a31565b60008060008060808587031215611add57600080fd5b843593506020850135925060408501359150606085013567ffffffffffffffff811115611b0957600080fd5b611b1587828801611aa7565b91505092959194509250565b60008060008060808587031215611b3757600080fd5b8435935060208501359250611b4e60408601611907565b9150606085013567ffffffffffffffff811115611b0957600080fd5b600060208284031215611b7c57600080fd5b813567ffffffffffffffff811115611b9357600080fd5b8201601f81018413611ba457600080fd5b6114be84823560208401611a31565b60008060408385031215611bc657600080fd5b611bcf83611907565b9150611bdd602084016118d7565b90509250929050565b60008060008060808587031215611bfc57600080fd5b611c0585611907565b9350611c1360208601611907565b925060408501359150606085013567ffffffffffffffff811115611b0957600080fd5b60008060408385031215611c4957600080fd5b611c5283611907565b9150611bdd60208401611907565b600181811c90821680611c7457607f821691505b602082108103611c9457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561068a5761068a611cb0565b808202811582820484141761068a5761068a611cb0565b601f821115610aa057600081815260208120601f850160051c81016020861015611d175750805b601f850160051c820191505b818110156109fe57828155600101611d23565b815167ffffffffffffffff811115611d5057611d50611a1b565b611d6481611d5e8454611c60565b84611cf0565b602080601f831160018114611d995760008415611d815750858301515b600019600386901b1c1916600185901b1785556109fe565b600085815260208120601f198616915b82811015611dc857888601518255948401946001909101908401611da9565b5085821015611de65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008351611e08818460208801611939565b835190830190611e1c818360208801611939565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e589083018461195d565b9695505050505050565b600060208284031215611e7457600080fd5b81516110ec816118a4565b634e487b7160e01b600052602160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220cc10ae34f2e47458fc10511041df7aa46d3482c04864dc07b415b87ffe4fc46264736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0xCEDA0DBD EQ PUSH2 0x5D2 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0xC48B1FA6 EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xC6275255 EQ PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x8F9DB08C EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xA0BCFC7F EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x484B973C EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x4A9EEE69 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x5B7633D0 EQ PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x26092B83 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xA398B88 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xBAB3262 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xE2D56CF EQ PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x2329A29 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x46DC166 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EC JUMP JUMPDEST PUSH2 0x690 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x191E JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1989 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x199C JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x240 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B5 JUMP JUMPDEST PUSH2 0x7B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0x191E JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x240 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x364 CALLDATASIZE PUSH1 0x4 PUSH2 0x18EC JUMP JUMPDEST PUSH2 0x853 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB PUSH2 0x325 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x234 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x269 PUSH2 0xA06 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x19DF JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x199C JUMP JUMPDEST PUSH2 0xAA5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x19B5 JUMP JUMPDEST PUSH2 0xAB6 JUMP JUMPDEST PUSH2 0x269 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x2CD SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x234 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD PUSH2 0x47D CALLDATASIZE PUSH1 0x4 PUSH2 0x199C JUMP JUMPDEST PUSH2 0xD90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0xD9B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x191E JUMP JUMPDEST PUSH2 0xE29 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0xE78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x505 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0xE8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0xF7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x53A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6A JUMP JUMPDEST PUSH2 0xF8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x55A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0xF9F JUMP JUMPDEST PUSH2 0x269 PUSH2 0x56D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE6 JUMP JUMPDEST PUSH2 0x100B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x58D CALLDATASIZE PUSH1 0x4 PUSH2 0x199C JUMP JUMPDEST PUSH2 0x1055 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x5AD CALLDATASIZE PUSH1 0x4 PUSH2 0x199C JUMP JUMPDEST PUSH2 0x1062 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x5CD CALLDATASIZE PUSH1 0x4 PUSH2 0x199C JUMP JUMPDEST PUSH2 0x106F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x325 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x619 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C36 JUMP JUMPDEST PUSH2 0x10F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x191E JUMP JUMPDEST PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x66F JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x68A JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x698 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6B3 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH3 0x10000 MUL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x6EC SWAP1 PUSH2 0x1C60 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x718 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x765 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x765 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x748 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77A DUP3 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BE DUP3 PUSH2 0xD90 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x7F7 JUMPI PUSH2 0x7DA DUP2 CALLER PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x7F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x85B PUSH2 0x1197 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x880 DUP3 PUSH2 0x1218 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x8DF DUP2 DUP8 CALLER JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP2 EQ SWAP2 EQ OR SWAP1 JUMP JUMPDEST PUSH2 0x90A JUMPI PUSH2 0x8ED DUP7 CALLER PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x93C JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x9CE JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9CC JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x9CC JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E96 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA0E PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA22 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFBALANCE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA82 JUMPI PUSH2 0xA82 PUSH2 0x1C9A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAA0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x100B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAAD PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xA82 DUP2 PUSH2 0x127F JUMP JUMPDEST PUSH2 0xABE PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xAC8 DUP3 DUP3 PUSH2 0x128A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151A194818DBDB9D1C9858DD081A5CC81C185D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB2C PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 GT PUSH2 0xB7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65656420746F206D696E74206174206C656173742031204E46540000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xB8B DUP7 DUP4 PUSH2 0x1CC6 JUMP JUMPDEST GT ISZERO PUSH2 0xBD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13585E08139195081B1A5B5A5D08195E18D959591959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCAA JUMPI PUSH2 0xBFD DUP6 DUP6 CALLER DUP7 PUSH2 0xE8C JUMP JUMPDEST DUP5 PUSH2 0xC08 DUP8 DUP4 PUSH2 0x1CC6 JUMP JUMPDEST GT ISZERO PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178204E465420666F72206164647265737320657863656564656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xC60 DUP7 DUP6 PUSH2 0x1CD9 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xCA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420666F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xD58 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xCB7 DUP8 DUP4 PUSH2 0x1CC6 JUMP JUMPDEST GT ISZERO PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178204E465420666F72206164647265737320657863656564656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST DUP6 PUSH1 0xC SLOAD PUSH2 0xD13 SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xD58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E73756666696369656E7420666F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD73 SWAP1 DUP8 SWAP1 PUSH2 0x1CC6 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x9FE SWAP1 DUP8 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A DUP3 PUSH2 0x1218 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0xDA8 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDD4 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE21 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDF6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE21 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE04 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE52 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0xE80 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xE8A PUSH1 0x0 PUSH2 0x1364 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP6 DUP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP4 ADD MSTORE DUP3 MLOAD DUP1 DUP4 SUB PUSH1 0x54 ADD DUP2 MSTORE PUSH1 0x74 DUP4 ADD DUP5 MSTORE DUP1 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x94 DUP5 ADD MSTORE PUSH1 0xB0 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xD0 SWAP1 SWAP4 ADD SWAP1 SWAP4 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 PUSH2 0xF1D DUP3 DUP6 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH3 0x10000 SWAP1 SWAP3 DIV AND EQ PUSH2 0xF73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x426164207369676E6174757265 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6EC SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0xF93 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x9 PUSH2 0xAC8 DUP3 DUP3 PUSH2 0x1D36 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1016 DUP5 DUP5 DUP5 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x104F JUMPI PUSH2 0x1032 DUP5 DUP5 DUP5 DUP5 PUSH2 0x13DA JUMP JUMPDEST PUSH2 0x104F JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x105D PUSH2 0x1197 JUMP JUMPDEST PUSH1 0xB SSTORE JUMP JUMPDEST PUSH2 0x106A PUSH2 0x1197 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x107A DUP3 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x1097 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10A1 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x10C1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x10EC JUMP JUMPDEST DUP1 PUSH2 0x10CB DUP5 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10DC SWAP3 SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1129 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x118E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH2 0xA82 DUP2 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x68A JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x1266 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0x1264 JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x10EC JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1243 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA82 DUP2 PUSH1 0x0 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x12AF JUMPI PUSH1 0x40 MLOAD PUSH4 0xB562E8DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP9 MUL ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 DUP6 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 SSTORE DUP3 DUP5 ADD SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E96 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 DUP4 ADD JUMPDEST DUP2 DUP2 EQ PUSH2 0x133A JUMPI DUP1 DUP4 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E96 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 ADD PUSH2 0x1314 JUMP JUMPDEST POP DUP2 PUSH1 0x0 SUB PUSH2 0x135B JUMPI PUSH1 0x40 MLOAD PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x13C5 DUP6 DUP6 PUSH2 0x1651 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x13D2 DUP2 PUSH2 0x1696 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x140F SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x144A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1447 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14A8 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1478 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x147D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x14A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0x6EC SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x14EF JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1524 DUP4 PUSH2 0x1218 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x1542 DUP7 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 ISZERO PUSH2 0x1582 JUMPI PUSH2 0x1557 DUP2 DUP5 CALLER PUSH2 0x8CA JUMP JUMPDEST PUSH2 0x1582 JUMPI PUSH2 0x1565 DUP4 CALLER PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x158D JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x3 PUSH1 0xE0 SHL OR PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP6 AND SWAP1 SUB PUSH2 0x161B JUMPI PUSH1 0x1 DUP7 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x1619 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x1619 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E96 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0x1687 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x167B DUP8 DUP3 DUP6 DUP6 PUSH2 0x17E0 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x168F JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x16AA JUMPI PUSH2 0x16AA PUSH2 0x1E7F JUMP JUMPDEST SUB PUSH2 0x16B2 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x16C6 JUMPI PUSH2 0x16C6 PUSH2 0x1E7F JUMP JUMPDEST SUB PUSH2 0x1713 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1727 JUMPI PUSH2 0x1727 PUSH2 0x1E7F JUMP JUMPDEST SUB PUSH2 0x1774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1788 JUMPI PUSH2 0x1788 PUSH2 0x1E7F JUMP JUMPDEST SUB PUSH2 0xA82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1817 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x186B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1894 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x189B JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10EC DUP2 PUSH2 0x18A4 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10EC DUP3 PUSH2 0x18D7 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10EC DUP3 PUSH2 0x1907 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1954 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x193C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1975 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1939 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x10EC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x195D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19D1 DUP4 PUSH2 0x1907 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19FD DUP5 PUSH2 0x1907 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A0B PUSH1 0x20 DUP6 ADD PUSH2 0x1907 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1A4C JUMPI PUSH2 0x1A4C PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1A74 JUMPI PUSH2 0x1A74 PUSH2 0x1A1B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1A8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10EC DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1ADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B15 DUP8 DUP3 DUP9 ADD PUSH2 0x1AA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x1B4E PUSH1 0x40 DUP7 ADD PUSH2 0x1907 JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1BA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14BE DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BCF DUP4 PUSH2 0x1907 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BDD PUSH1 0x20 DUP5 ADD PUSH2 0x18D7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C05 DUP6 PUSH2 0x1907 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C13 PUSH1 0x20 DUP7 ADD PUSH2 0x1907 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C52 DUP4 PUSH2 0x1907 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BDD PUSH1 0x20 DUP5 ADD PUSH2 0x1907 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C74 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C94 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x68A JUMPI PUSH2 0x68A PUSH2 0x1CB0 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x68A JUMPI PUSH2 0x68A PUSH2 0x1CB0 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1D17 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9FE JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D23 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D50 JUMPI PUSH2 0x1D50 PUSH2 0x1A1B JUMP JUMPDEST PUSH2 0x1D64 DUP2 PUSH2 0x1D5E DUP5 SLOAD PUSH2 0x1C60 JUMP JUMPDEST DUP5 PUSH2 0x1CF0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1D99 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1D81 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1DC8 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1DA9 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1DE6 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1E08 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1939 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1E1C DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1939 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1E58 SWAP1 DUP4 ADD DUP5 PUSH2 0x195D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x10EC DUP2 PUSH2 0x18A4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC LT 0xAE CALLVALUE CALLCODE 0xE4 PUSH21 0x58FC10511041DF7AA46D3482C04864DC07B415B87F INVALID 0x4F 0xC4 PUSH3 0x64736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "227:3609:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9155:630:5;;;;;;;;;;-1:-1:-1;9155:630:5;;;;;:::i;:::-;;:::i;:::-;;;565:14:7;;558:22;540:41;;528:2;513:18;9155:630:5;;;;;;;;2443:77:4;;;;;;;;;;-1:-1:-1;2443:77:4;;;;;:::i;:::-;;:::i;:::-;;2323:114;;;;;;;;;;-1:-1:-1;2323:114:4;;;;;:::i;:::-;;:::i;10039:98:5:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16360:214::-;;;;;;;;;;-1:-1:-1;16360:214:5;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2416:32:7;;;2398:51;;2386:2;2371:18;16360:214:5;2252:203:7;15812:398:5;;;;;;:::i;:::-;;:::i;577:48:4:-;;;;;;;;;;-1:-1:-1;577:48:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2865:25:7;;;2853:2;2838:18;577:48:4;2719:177:7;334:41:4;;;;;;;;;;;;;;;;2526:89;;;;;;;;;;-1:-1:-1;2526:89:4;;;;;:::i;:::-;;:::i;5894:317:5:-;;;;;;;;;;-1:-1:-1;6164:12:5;;5955:7;6148:13;:28;5894:317;;19903:2764;;;;;;:::i;:::-;;:::i;462:30:4:-;;;;;;;;;;-1:-1:-1;462:30:4;;;;;;;;;;;3358:476;;;:::i;22758:187:5:-;;;;;;:::i;:::-;;:::i;2022:85:4:-;;;;;;;;;;-1:-1:-1;2022:85:4;;;;;:::i;:::-;;:::i;2215:102::-;;;;;;;;;;-1:-1:-1;2215:102:4;;;;;:::i;:::-;;:::i;720:1184::-;;;;;;:::i;:::-;;:::i;498:73::-;;;;;;;;;;-1:-1:-1;498:73:4;;;;;;;-1:-1:-1;;;;;498:73:4;;;430:26;;;;;;;;;;-1:-1:-1;430:26:4;;;;;;;;11391:150:5;;;;;;;;;;-1:-1:-1;11391:150:5;;;;;:::i;:::-;;:::i;270:21:4:-;;;;;;;;;;;;;:::i;7045:230:5:-;;;;;;;;;;-1:-1:-1;7045:230:5;;;;;:::i;:::-;;:::i;1831:101:0:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1273:6:0;;-1:-1:-1;;;;;1273:6:0;1201:85;;2847:505:4;;;;;;;;;;-1:-1:-1;2847:505:4;;;;;:::i;:::-;;:::i;10208:102:5:-;;;;;;;;;;;;;:::i;2113:96:4:-;;;;;;;;;;-1:-1:-1;2113:96:4;;;;;:::i;:::-;;:::i;16901:231:5:-;;;;;;;;;;-1:-1:-1;16901:231:5;;;;;:::i;:::-;;:::i;23526:396::-;;;;;;:::i;:::-;;:::i;2621:116:4:-;;;;;;;;;;-1:-1:-1;2621:116:4;;;;;:::i;:::-;;:::i;2743:98::-;;;;;;;;;;-1:-1:-1;2743:98:4;;;;;:::i;:::-;;:::i;10411:313:5:-;;;;;;;;;;-1:-1:-1;10411:313:5;;;;;:::i;:::-;;:::i;381:43:4:-;;;;;;;;;;;;;;;;297:31;;;;;;;;;;;;;;;;17282:162:5;;;;;;;;;;-1:-1:-1;17282:162:5;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;9155:630:5:-;9240:4;-1:-1:-1;;;;;;;;;9558:25:5;;;;:101;;-1:-1:-1;;;;;;;;;;9634:25:5;;;9558:101;:177;;;-1:-1:-1;;;;;;;;;;9710:25:5;;;9558:177;9539:196;9155:630;-1:-1:-1;;9155:630:5:o;2443:77:4:-;1094:13:0;:11;:13::i;:::-;2498:6:4::1;:15:::0;;-1:-1:-1;;2498:15:4::1;::::0;::::1;;::::0;;;::::1;::::0;;2443:77::o;2323:114::-;1094:13:0;:11;:13::i;:::-;2400::4::1;:30:::0;;-1:-1:-1;;;;;2400:30:4;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;2400:30:4;;::::1;::::0;;;::::1;::::0;;2323:114::o;10039:98:5:-;10093:13;10125:5;10118:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10039:98;:::o;16360:214::-;16436:7;16460:16;16468:7;16460;:16::i;:::-;16455:64;;16485:34;;-1:-1:-1;;;16485:34:5;;;;;;;;;;;16455:64;-1:-1:-1;16537:24:5;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;16537:30:5;;16360:214::o;15812:398::-;15900:13;15916:16;15924:7;15916;:16::i;:::-;15900:32;-1:-1:-1;39523:10:5;-1:-1:-1;;;;;15947:28:5;;;15943:172;;15994:44;16011:5;39523:10;17282:162;:::i;15994:44::-;15989:126;;16065:35;;-1:-1:-1;;;16065:35:5;;;;;;;;;;;15989:126;16125:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;16125:35:5;-1:-1:-1;;;;;16125:35:5;;;;;;;;;16175:28;;16125:24;;16175:28;;;;;;;15890:320;15812:398;;:::o;2526:89:4:-;1094:13:0;:11;:13::i;:::-;2589:10:4::1;:19:::0;;;::::1;;;;-1:-1:-1::0;;2589:19:4;;::::1;::::0;;;::::1;::::0;;2526:89::o;19903:2764:5:-;20040:27;20070;20089:7;20070:18;:27::i;:::-;20040:57;;20153:4;-1:-1:-1;;;;;20112:45:5;20128:19;-1:-1:-1;;;;;20112:45:5;;20108:86;;20166:28;;-1:-1:-1;;;20166:28:5;;;;;;;;;;;20108:86;20206:27;19036:24;;;:15;:24;;;;;19260:26;;20394:68;19260:26;20436:4;39523:10;20442:19;-1:-1:-1;;;;;18524:32:5;;;18370:28;;18651:20;;18673:30;;18648:56;;18074:646;20394:68;20389:179;;20481:43;20498:4;39523:10;17282:162;:::i;20481:43::-;20476:92;;20533:35;;-1:-1:-1;;;20533:35:5;;;;;;;;;;;20476:92;-1:-1:-1;;;;;20583:16:5;;20579:52;;20608:23;;-1:-1:-1;;;20608:23:5;;;;;;;;;;;20579:52;20774:15;20771:157;;;20912:1;20891:19;20884:30;20771:157;-1:-1:-1;;;;;21300:24:5;;;;;;;:18;:24;;;;;;21298:26;;-1:-1:-1;;21298:26:5;;;21368:22;;;;;;;;;21366:24;;-1:-1:-1;21366:24:5;;;14703:11;14678:23;14674:41;14661:63;-1:-1:-1;;;14661:63:5;21654:26;;;;:17;:26;;;;;:172;;;;-1:-1:-1;;;21943:47:5;;:52;;21939:617;;22047:1;22037:11;;22015:19;22168:30;;;:17;:30;;;;;;:35;;22164:378;;22304:13;;22289:11;:28;22285:239;;22449:30;;;;:17;:30;;;;;:52;;;22285:239;21997:559;21939:617;22600:7;22596:2;-1:-1:-1;;;;;22581:27:5;22590:4;-1:-1:-1;;;;;22581:27:5;-1:-1:-1;;;;;;;;;;;22581:27:5;;;;;;;;;22618:42;20030:2637;;;19903:2764;;;:::o;3358:476:4:-;1094:13:0;:11;:13::i;:::-;3650:7:4::1;3671;1273:6:0::0;;-1:-1:-1;;;;;1273:6:0;;1201:85;3671:7:4::1;-1:-1:-1::0;;;;;3663:21:4::1;3692;3663:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3649:69;;;3735:2;3728:10;;;;:::i;:::-;3403:431;3358:476::o:0;22758:187:5:-;22899:39;22916:4;22922:2;22926:7;22899:39;;;;;;;;;;;;:16;:39::i;:::-;22758:187;;;:::o;2022:85:4:-;1094:13:0;:11;:13::i;:::-;2080:20:4::1;2092:7;2080:11;:20::i;2215:102::-:0;1094:13:0;:11;:13::i;:::-;2291:19:4::1;2297:2;2301:8;2291:5;:19::i;:::-;2215:102:::0;;:::o;720:1184::-;884:6;;;;883:7;875:42;;;;-1:-1:-1;;;875:42:4;;7743:2:7;875:42:4;;;7725:21:7;7782:2;7762:18;;;7755:30;-1:-1:-1;;;7801:18:7;;;7794:52;7863:18;;875:42:4;;;;;;;;;927:14;944:13;6164:12:5;;5955:7;6148:13;:28;;5894:317;944:13:4;927:30;;986:1;975:8;:12;967:52;;;;-1:-1:-1;;;967:52:4;;8094:2:7;967:52:4;;;8076:21:7;8133:2;8113:18;;;8106:30;8172:29;8152:18;;;8145:57;8219:18;;967:52:4;7892:351:7;967:52:4;1058:9;;1037:17;1046:8;1037:6;:17;:::i;:::-;:30;;1029:65;;;;-1:-1:-1;;;1029:65:4;;8712:2:7;1029:65:4;;;8694:21:7;8751:2;8731:18;;;8724:30;-1:-1:-1;;;8770:18:7;;;8763:52;8832:18;;1029:65:4;8510:346:7;1029:65:4;1146:10;1105:24;1132:25;;;:13;:25;;;;;;1173:10;;;;;;;1168:617;;1199:55;1212:7;1221:9;1232:10;1244:9;1199:12;:55::i;:::-;1324:7;1293:27;1312:8;1293:16;:27;:::i;:::-;:38;;1268:125;;;;-1:-1:-1;;;1268:125:4;;9063:2:7;1268:125:4;;;9045:21:7;9102:2;9082:18;;;9075:30;9141;9121:18;;;9114:58;9189:18;;1268:125:4;8861:352:7;1268:125:4;1428:20;1440:8;1428:9;:20;:::i;:::-;1415:9;:33;;1407:65;;;;-1:-1:-1;;;1407:65:4;;9593:2:7;1407:65:4;;;9575:21:7;9632:2;9612:18;;;9605:30;-1:-1:-1;;;9651:18:7;;;9644:49;9710:18;;1407:65:4;9391:343:7;1407:65:4;1168:617;;;1559:22;;1528:27;1547:8;1528:16;:27;:::i;:::-;:53;;1503:140;;;;-1:-1:-1;;;1503:140:4;;9063:2:7;1503:140:4;;;9045:21:7;9102:2;9082:18;;;9075:30;9141;9121:18;;;9114:58;9189:18;;1503:140:4;8861:352:7;1503:140:4;1713:8;1695:15;;:26;;;;:::i;:::-;1682:9;:39;;1657:117;;;;-1:-1:-1;;;1657:117:4;;9593:2:7;1657:117:4;;;9575:21:7;9632:2;9612:18;;;9605:30;-1:-1:-1;;;9651:18:7;;;9644:49;9710:18;;1657:117:4;9391:343:7;1657:117:4;1837:10;1823:25;;;;:13;:25;;;;;;:36;;1851:8;;1823:36;:::i;:::-;1809:10;1795:25;;;;:13;:25;;;;;:64;;;;1870:27;;1888:8;1870:5;:27::i;11391:150:5:-;11463:7;11505:27;11524:7;11505:18;:27::i;270:21:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7045:230:5:-;7117:7;-1:-1:-1;;;;;7140:19:5;;7136:60;;7168:28;;-1:-1:-1;;;7168:28:5;;;;;;;;;;;7136:60;-1:-1:-1;;;;;;7213:25:5;;;;;:18;:25;;;;;;1360:13;7213:55;;7045:230::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2847:505:4:-;3063:51;;;;;;;9924:19:7;;;9959:12;;;9952:28;;;10018:2;10014:15;;;-1:-1:-1;;10010:53:7;9996:12;;;9989:75;3063:51:4;;;;;;;;;10080:12:7;;;3063:51:4;;3040:84;;;;;;14160:66:7;7455:58:3;;;14148:79:7;14243:12;;;;14236:28;;;7455:58:3;;;;;;;;;;14280:12:7;;;;7455:58:3;;;7445:69;;;;;3210:24:4;3237:39;3135:65;3266:9;3237:28;:39::i;:::-;3314:13;;3210:66;;-1:-1:-1;;;;;;3294:33:4;;;3314:13;;;;;3294:33;3286:59;;;;-1:-1:-1;;;3286:59:4;;10305:2:7;3286:59:4;;;10287:21:7;10344:2;10324:18;;;10317:30;-1:-1:-1;;;10363:18:7;;;10356:43;10416:18;;3286:59:4;10103:337:7;3286:59:4;3010:342;;;2847:505;;;;:::o;10208:102:5:-;10264:13;10296:7;10289:14;;;;;:::i;2113:96:4:-;1094:13:0;:11;:13::i;:::-;2184:7:4::1;:18;2194:8:::0;2184:7;:18:::1;:::i;16901:231:5:-:0;39523:10;16995:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;16995:49:5;;;;;;;;;;;;:60;;-1:-1:-1;;16995:60:5;;;;;;;;;;17070:55;;540:41:7;;;16995:49:5;;39523:10;17070:55;;513:18:7;17070:55:5;;;;;;;16901:231;;:::o;23526:396::-;23695:31;23708:4;23714:2;23718:7;23695:12;:31::i;:::-;-1:-1:-1;;;;;23740:14:5;;;:19;23736:180;;23778:56;23809:4;23815:2;23819:7;23828:5;23778:30;:56::i;:::-;23773:143;;23861:40;;-1:-1:-1;;;23861:40:5;;;;;;;;;;;23773:143;23526:396;;;;:::o;2621:116:4:-;1094:13:0;:11;:13::i;:::-;2699:22:4::1;:31:::0;2621:116::o;2743:98::-;1094:13:0;:11;:13::i;:::-;2810:15:4::1;:24:::0;2743:98::o;10411:313:5:-;10484:13;10514:16;10522:7;10514;:16::i;:::-;10509:59;;10539:29;;-1:-1:-1;;;10539:29:5;;;;;;;;;;;10509:59;10579:21;10603:10;:8;:10::i;:::-;10579:34;;10636:7;10630:21;10655:1;10630:26;:87;;;;;;;;;;;;;;;;;10683:7;10692:18;10702:7;10692:9;:18::i;:::-;10666:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10630:87;10623:94;10411:313;-1:-1:-1;;;10411:313:5:o;17282:162::-;-1:-1:-1;;;;;17402:25:5;;;17379:4;17402:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17282:162::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;13352:2:7;2161:73:0::1;::::0;::::1;13334:21:7::0;13391:2;13371:18;;;13364:30;13430:34;13410:18;;;13403:62;-1:-1:-1;;;13481:18:7;;;13474:36;13527:19;;2161:73:0::1;13150:402:7::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1273:6;;-1:-1:-1;;;;;1273:6:0;39523:10:5;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;13759:2:7;1414:68:0;;;13741:21:7;;;13778:18;;;13771:30;13837:34;13817:18;;;13810:62;13889:18;;1414:68:0;13557:356:7;17693:277:5;17758:4;17845:13;;17835:7;:23;17793:151;;;;-1:-1:-1;;17895:26:5;;;;:17;:26;;;;;;-1:-1:-1;;;17895:44:5;:49;;17693:277::o;12515:1249::-;12582:7;12616;12714:13;;12707:4;:20;12703:997;;;12751:14;12768:23;;;:17;:23;;;;;;;-1:-1:-1;;;12855:24:5;;:29;;12851:831;;13510:111;13517:6;13527:1;13517:11;13510:111;;-1:-1:-1;;;13587:6:5;13569:25;;;;:17;:25;;;;;;13510:111;;12851:831;12729:971;12703:997;13726:31;;-1:-1:-1;;;13726:31:5;;;;;;;;;;;33791:87;33850:21;33856:7;33865:5;33850;:21::i;27091:2902::-;27163:20;27186:13;;;27213;;;27209:44;;27235:18;;-1:-1:-1;;;27235:18:5;;;;;;;;;;;27209:44;-1:-1:-1;;;;;27728:22:5;;;;;;:18;:22;;;;1495:2;27728:22;;;:71;;27766:32;27754:45;;27728:71;;;28035:31;;;:17;:31;;;;;-1:-1:-1;15123:15:5;;15097:24;15093:46;14703:11;14678:23;14674:41;14671:52;14661:63;;28035:170;;28264:23;;;;28035:31;;27728:22;;-1:-1:-1;;;;;;;;;;;27728:22:5;;28872:328;29520:1;29506:12;29502:20;29461:339;29560:3;29551:7;29548:16;29461:339;;29774:7;29764:8;29761:1;-1:-1:-1;;;;;;;;;;;29731:1:5;29728;29723:59;29612:1;29599:15;29461:339;;;29465:75;29831:8;29843:1;29831:13;29827:45;;29853:19;;-1:-1:-1;;;29853:19:5;;;;;;;;;;;29827:45;29887:13;:19;-1:-1:-1;22758:187:5;;;:::o;2433::0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;3661:227:3:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:3;3661:227;-1:-1:-1;;;3661:227:3:o;25948:697:5:-;26126:88;;-1:-1:-1;;;26126:88:5;;26106:4;;-1:-1:-1;;;;;26126:45:5;;;;;:88;;39523:10;;26193:4;;26199:7;;26208:5;;26126:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26126:88:5;;;;;;;;-1:-1:-1;;26126:88:5;;;;;;;;;;;;:::i;:::-;;;26122:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26404:6;:13;26421:1;26404:18;26400:229;;26449:40;;-1:-1:-1;;;26449:40:5;;;;;;;;;;;26400:229;26589:6;26583:13;26574:6;26570:2;26566:15;26559:38;26122:517;-1:-1:-1;;;;;;26282:64:5;-1:-1:-1;;;26282:64:5;;-1:-1:-1;26122:517:5;25948:697;;;;;;:::o;1910:106:4:-;1970:13;2002:7;1995:14;;;;;:::i;39637:1708:5:-;39702:17;40130:4;40123;40117:11;40113:22;40220:1;40214:4;40207:15;40293:4;40290:1;40286:12;40279:19;;;40373:1;40368:3;40361:14;40474:3;40708:5;40690:419;40755:1;40750:3;40746:11;40739:18;;40923:2;40917:4;40913:13;40909:2;40905:22;40900:3;40892:36;41015:2;41005:13;;41070:25;40690:419;41070:25;-1:-1:-1;41137:13:5;;;-1:-1:-1;;41250:14:5;;;41310:19;;;41250:14;39637:1708;-1:-1:-1;39637:1708:5:o;34095:3015::-;34174:27;34204;34223:7;34204:18;:27::i;:::-;34174:57;-1:-1:-1;34174:57:5;34242:12;;34362:35;34389:7;18927:27;19036:24;;;:15;:24;;;;;19260:26;;19036:24;;18828:474;34362:35;34305:92;;;;34412:13;34408:312;;;34531:68;34556:15;34573:4;39523:10;34579:19;39437:103;34531:68;34526:183;;34622:43;34639:4;39523:10;17282:162;:::i;34622:43::-;34617:92;;34674:35;;-1:-1:-1;;;34674:35:5;;;;;;;;;;;34617:92;34870:15;34867:157;;;35008:1;34987:19;34980:30;34867:157;-1:-1:-1;;;;;35613:24:5;;;;;;:18;:24;;;;;:60;;35641:32;35613:60;;;14703:11;14678:23;14674:41;14661:63;-1:-1:-1;;;14661:63:5;35904:26;;;;:17;:26;;;;;:202;;;;-1:-1:-1;;;36223:47:5;;:52;;36219:617;;36327:1;36317:11;;36295:19;36448:30;;;:17;:30;;;;;;:35;;36444:378;;36584:13;;36569:11;:28;36565:239;;36729:30;;;;:17;:30;;;;;:52;;;36565:239;36277:559;36219:617;36861:35;;36888:7;;36884:1;;-1:-1:-1;;;;;36861:35:5;;;-1:-1:-1;;;;;;;;;;;36861:35:5;36884:1;;36861:35;-1:-1:-1;;37079:12:5;:14;;;;;;-1:-1:-1;;;;34095:3015:5:o;2145:730:3:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:3;;-1:-1:-1;2822:35:3;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:3;;15385:2:7;788:34:3;;;15367:21:7;15424:2;15404:18;;;15397:30;15463:26;15443:18;;;15436:54;15507:18;;788:34:3;15183:348:7;730:345:3;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:3;;15738:2:7;903:41:3;;;15720:21:7;15777:2;15757:18;;;15750:30;15816:33;15796:18;;;15789:61;15867:18;;903:41:3;15536:355:7;839:236:3;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:3;;16098:2:7;1020:44:3;;;16080:21:7;16137:2;16117:18;;;16110:30;16176:34;16156:18;;;16149:62;-1:-1:-1;;;16227:18:7;;;16220:32;16269:19;;1020:44:3;15896:398:7;5069:1494:3;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:3;;-1:-1:-1;6221:30:3;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;16526:25:7;;;16599:4;16587:17;;16567:18;;;16560:45;;;;16621:18;;;16614:34;;;16664:18;;;16657:34;;;6374:24:3;;16498:19:7;;6374:24:3;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:3;;-1:-1:-1;;6374:24:3;;;-1:-1:-1;;;;;;;6412:20:3;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:3;;-1:-1:-1;5069:1494:3;;;;;;;;:::o;14:131:7:-;-1:-1:-1;;;;;;88:32:7;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:160::-;657:20;;713:13;;706:21;696:32;;686:60;;742:1;739;732:12;686:60;592:160;;;:::o;757:180::-;813:6;866:2;854:9;845:7;841:23;837:32;834:52;;;882:1;879;872:12;834:52;905:26;921:9;905:26;:::i;942:173::-;1010:20;;-1:-1:-1;;;;;1059:31:7;;1049:42;;1039:70;;1105:1;1102;1095:12;1120:186;1179:6;1232:2;1220:9;1211:7;1207:23;1203:32;1200:52;;;1248:1;1245;1238:12;1200:52;1271:29;1290:9;1271:29;:::i;1311:250::-;1396:1;1406:113;1420:6;1417:1;1414:13;1406:113;;;1496:11;;;1490:18;1477:11;;;1470:39;1442:2;1435:10;1406:113;;;-1:-1:-1;;1553:1:7;1535:16;;1528:27;1311:250::o;1566:271::-;1608:3;1646:5;1640:12;1673:6;1668:3;1661:19;1689:76;1758:6;1751:4;1746:3;1742:14;1735:4;1728:5;1724:16;1689:76;:::i;:::-;1819:2;1798:15;-1:-1:-1;;1794:29:7;1785:39;;;;1826:4;1781:50;;1566:271;-1:-1:-1;;1566:271:7:o;1842:220::-;1991:2;1980:9;1973:21;1954:4;2011:45;2052:2;2041:9;2037:18;2029:6;2011:45;:::i;2067:180::-;2126:6;2179:2;2167:9;2158:7;2154:23;2150:32;2147:52;;;2195:1;2192;2185:12;2147:52;-1:-1:-1;2218:23:7;;2067:180;-1:-1:-1;2067:180:7:o;2460:254::-;2528:6;2536;2589:2;2577:9;2568:7;2564:23;2560:32;2557:52;;;2605:1;2602;2595:12;2557:52;2628:29;2647:9;2628:29;:::i;:::-;2618:39;2704:2;2689:18;;;;2676:32;;-1:-1:-1;;;2460:254:7:o;2901:328::-;2978:6;2986;2994;3047:2;3035:9;3026:7;3022:23;3018:32;3015:52;;;3063:1;3060;3053:12;3015:52;3086:29;3105:9;3086:29;:::i;:::-;3076:39;;3134:38;3168:2;3157:9;3153:18;3134:38;:::i;:::-;3124:48;;3219:2;3208:9;3204:18;3191:32;3181:42;;2901:328;;;;;:::o;3234:127::-;3295:10;3290:3;3286:20;3283:1;3276:31;3326:4;3323:1;3316:15;3350:4;3347:1;3340:15;3366:631;3430:5;3460:18;3501:2;3493:6;3490:14;3487:40;;;3507:18;;:::i;:::-;3582:2;3576:9;3550:2;3636:15;;-1:-1:-1;;3632:24:7;;;3658:2;3628:33;3624:42;3612:55;;;3682:18;;;3702:22;;;3679:46;3676:72;;;3728:18;;:::i;:::-;3768:10;3764:2;3757:22;3797:6;3788:15;;3827:6;3819;3812:22;3867:3;3858:6;3853:3;3849:16;3846:25;3843:45;;;3884:1;3881;3874:12;3843:45;3934:6;3929:3;3922:4;3914:6;3910:17;3897:44;3989:1;3982:4;3973:6;3965;3961:19;3957:30;3950:41;;;;3366:631;;;;;:::o;4002:220::-;4044:5;4097:3;4090:4;4082:6;4078:17;4074:27;4064:55;;4115:1;4112;4105:12;4064:55;4137:79;4212:3;4203:6;4190:20;4183:4;4175:6;4171:17;4137:79;:::i;4227:525::-;4322:6;4330;4338;4346;4399:3;4387:9;4378:7;4374:23;4370:33;4367:53;;;4416:1;4413;4406:12;4367:53;4452:9;4439:23;4429:33;;4509:2;4498:9;4494:18;4481:32;4471:42;;4560:2;4549:9;4545:18;4532:32;4522:42;;4615:2;4604:9;4600:18;4587:32;4642:18;4634:6;4631:30;4628:50;;;4674:1;4671;4664:12;4628:50;4697:49;4738:7;4729:6;4718:9;4714:22;4697:49;:::i;:::-;4687:59;;;4227:525;;;;;;;:::o;4757:531::-;4852:6;4860;4868;4876;4929:3;4917:9;4908:7;4904:23;4900:33;4897:53;;;4946:1;4943;4936:12;4897:53;4982:9;4969:23;4959:33;;5039:2;5028:9;5024:18;5011:32;5001:42;;5062:38;5096:2;5085:9;5081:18;5062:38;:::i;:::-;5052:48;;5151:2;5140:9;5136:18;5123:32;5178:18;5170:6;5167:30;5164:50;;;5210:1;5207;5200:12;5293:450;5362:6;5415:2;5403:9;5394:7;5390:23;5386:32;5383:52;;;5431:1;5428;5421:12;5383:52;5471:9;5458:23;5504:18;5496:6;5493:30;5490:50;;;5536:1;5533;5526:12;5490:50;5559:22;;5612:4;5604:13;;5600:27;-1:-1:-1;5590:55:7;;5641:1;5638;5631:12;5590:55;5664:73;5729:7;5724:2;5711:16;5706:2;5702;5698:11;5664:73;:::i;5748:254::-;5813:6;5821;5874:2;5862:9;5853:7;5849:23;5845:32;5842:52;;;5890:1;5887;5880:12;5842:52;5913:29;5932:9;5913:29;:::i;:::-;5903:39;;5961:35;5992:2;5981:9;5977:18;5961:35;:::i;:::-;5951:45;;5748:254;;;;;:::o;6007:537::-;6102:6;6110;6118;6126;6179:3;6167:9;6158:7;6154:23;6150:33;6147:53;;;6196:1;6193;6186:12;6147:53;6219:29;6238:9;6219:29;:::i;:::-;6209:39;;6267:38;6301:2;6290:9;6286:18;6267:38;:::i;:::-;6257:48;;6352:2;6341:9;6337:18;6324:32;6314:42;;6407:2;6396:9;6392:18;6379:32;6434:18;6426:6;6423:30;6420:50;;;6466:1;6463;6456:12;6549:260;6617:6;6625;6678:2;6666:9;6657:7;6653:23;6649:32;6646:52;;;6694:1;6691;6684:12;6646:52;6717:29;6736:9;6717:29;:::i;:::-;6707:39;;6765:38;6799:2;6788:9;6784:18;6765:38;:::i;6814:380::-;6893:1;6889:12;;;;6936;;;6957:61;;7011:4;7003:6;6999:17;6989:27;;6957:61;7064:2;7056:6;7053:14;7033:18;7030:38;7027:161;;7110:10;7105:3;7101:20;7098:1;7091:31;7145:4;7142:1;7135:15;7173:4;7170:1;7163:15;7027:161;;6814:380;;;:::o;7409:127::-;7470:10;7465:3;7461:20;7458:1;7451:31;7501:4;7498:1;7491:15;7525:4;7522:1;7515:15;8248:127;8309:10;8304:3;8300:20;8297:1;8290:31;8340:4;8337:1;8330:15;8364:4;8361:1;8354:15;8380:125;8445:9;;;8466:10;;;8463:36;;;8479:18;;:::i;9218:168::-;9291:9;;;9322;;9339:15;;;9333:22;;9319:37;9309:71;;9360:18;;:::i;10571:545::-;10673:2;10668:3;10665:11;10662:448;;;10709:1;10734:5;10730:2;10723:17;10779:4;10775:2;10765:19;10849:2;10837:10;10833:19;10830:1;10826:27;10820:4;10816:38;10885:4;10873:10;10870:20;10867:47;;;-1:-1:-1;10908:4:7;10867:47;10963:2;10958:3;10954:12;10951:1;10947:20;10941:4;10937:31;10927:41;;11018:82;11036:2;11029:5;11026:13;11018:82;;;11081:17;;;11062:1;11051:13;11018:82;;11292:1352;11418:3;11412:10;11445:18;11437:6;11434:30;11431:56;;;11467:18;;:::i;:::-;11496:97;11586:6;11546:38;11578:4;11572:11;11546:38;:::i;:::-;11540:4;11496:97;:::i;:::-;11648:4;;11712:2;11701:14;;11729:1;11724:663;;;;12431:1;12448:6;12445:89;;;-1:-1:-1;12500:19:7;;;12494:26;12445:89;-1:-1:-1;;11249:1:7;11245:11;;;11241:24;11237:29;11227:40;11273:1;11269:11;;;11224:57;12547:81;;11694:944;;11724:663;10518:1;10511:14;;;10555:4;10542:18;;-1:-1:-1;;11760:20:7;;;11878:236;11892:7;11889:1;11886:14;11878:236;;;11981:19;;;11975:26;11960:42;;12073:27;;;;12041:1;12029:14;;;;11908:19;;11878:236;;;11882:3;12142:6;12133:7;12130:19;12127:201;;;12203:19;;;12197:26;-1:-1:-1;;12286:1:7;12282:14;;;12298:3;12278:24;12274:37;12270:42;12255:58;12240:74;;12127:201;-1:-1:-1;;;;;12374:1:7;12358:14;;;12354:22;12341:36;;-1:-1:-1;11292:1352:7:o;12649:496::-;12828:3;12866:6;12860:13;12882:66;12941:6;12936:3;12929:4;12921:6;12917:17;12882:66;:::i;:::-;13011:13;;12970:16;;;;13033:70;13011:13;12970:16;13080:4;13068:17;;13033:70;:::i;:::-;13119:20;;12649:496;-1:-1:-1;;;;12649:496:7:o;14303:489::-;-1:-1:-1;;;;;14572:15:7;;;14554:34;;14624:15;;14619:2;14604:18;;14597:43;14671:2;14656:18;;14649:34;;;14719:3;14714:2;14699:18;;14692:31;;;14497:4;;14740:46;;14766:19;;14758:6;14740:46;:::i;:::-;14732:54;14303:489;-1:-1:-1;;;;;;14303:489:7:o;14797:249::-;14866:6;14919:2;14907:9;14898:7;14894:23;14890:32;14887:52;;;14935:1;14932;14925:12;14887:52;14967:9;14961:16;14986:30;15010:5;14986:30;:::i;15051:127::-;15112:10;15107:3;15103:20;15100:1;15093:31;15143:4;15140:1;15133:15;15167:4;15164:1;15157:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1583000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"alreadyMinted(address)": "2609",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2707",
								"baseURI()": "infinite",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "6903",
								"isApprovedForAll(address,address)": "infinite",
								"maxSupply()": "2383",
								"mint(uint256,uint256,uint256,bytes)": "infinite",
								"name()": "infinite",
								"owner()": "2398",
								"ownerMint(address,uint256)": "infinite",
								"ownerOf(uint256)": "infinite",
								"pause(bool)": "26762",
								"paused()": "2345",
								"publicMaxNFTPerAddress()": "2407",
								"publicMint()": "2400",
								"publicPriceMint()": "2361",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setBaseUri(string)": "infinite",
								"setPublicMaxNFTPerAddress(uint256)": "24577",
								"setPublicMint(bool)": "26841",
								"setPublicPrice(uint256)": "24599",
								"setSignerAddress(address)": "26837",
								"signerAddress()": "2481",
								"supportsInterface(bytes4)": "557",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4444",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28468",
								"verifyCoupon(uint256,uint256,address,bytes)": "infinite",
								"withdraw()": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 227,
									"end": 3836,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 227,
									"end": 3836,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 227,
									"end": 3836,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 324,
									"end": 328,
									"name": "PUSH",
									"source": 4,
									"value": "3E8"
								},
								{
									"begin": 297,
									"end": 328,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 297,
									"end": 328,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 374,
									"end": 375,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 375,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 334,
									"end": 375,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 414,
									"end": 424,
									"name": "PUSH",
									"source": 4,
									"value": "8E1BC9BF040000"
								},
								{
									"begin": 381,
									"end": 424,
									"name": "PUSH",
									"source": 4,
									"value": "C"
								},
								{
									"begin": 381,
									"end": 424,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 430,
									"end": 456,
									"name": "PUSH",
									"source": 4,
									"value": "D"
								},
								{
									"begin": 430,
									"end": 456,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 430,
									"end": 456,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 498,
									"end": 571,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 498,
									"end": 571,
									"name": "PUSH",
									"source": 4,
									"value": "4E99031F4C39CD1AE173BC32E397DE77AC6D63950000"
								},
								{
									"begin": 498,
									"end": 571,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 498,
									"end": 571,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 498,
									"end": 571,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 714,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 662,
									"end": 714,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 662,
									"end": 714,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 714,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 662,
									"end": 714,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 662,
									"end": 714,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 662,
									"end": 714,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 714,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 662,
									"end": 714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C616E6473206F66204D79746865736461"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "78"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C4F4D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5020,
									"end": 5025,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5012,
									"end": 5017,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 5012,
									"end": 5025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5035,
									"end": 5042,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5045,
									"end": 5052,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5035,
									"end": 5042,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 5035,
									"end": 5052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5482,
									"end": 5489,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 227,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 227,
									"end": 3836,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 227,
									"end": 3836,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 3836,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 227,
									"end": 3836,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 3836,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 3836,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 227,
									"end": 3836,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 3836,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc10ae34f2e47458fc10511041df7aa46d3482c04864dc07b415b87ffe4fc46264736f6c63430008110033",
									".code": [
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "5C975ABB"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "A22CB465"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "C87B56DD"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "C87B56DD"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "CEDA0DBD"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "D5ABEB01"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "E985E9C5"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "A22CB465"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "B88D4FDE"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "C48B1FA6"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "C6275255"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "8F9DB08C"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "A0BCFC7F"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "5C975ABB"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "6C0360EB"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "42842E0E"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "42842E0E"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "42966C68"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "484B973C"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "4A9EEE69"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "5B7633D0"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "26092B83"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "3CCFD60B"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "81812FC"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "81812FC"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "A398B88"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "BAB3262"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "E2D56CF"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "2329A29"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "46DC166"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 9155,
											"end": 9785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 9155,
											"end": 9785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2443,
											"end": 2520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2443,
											"end": 2520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2323,
											"end": 2437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2323,
											"end": 2437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10039,
											"end": 10137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 10039,
											"end": 10137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 16360,
											"end": 16574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 16360,
											"end": 16574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2416,
											"end": 2448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2416,
											"end": 2448,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2449,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2388,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2371,
											"end": 2389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2252,
											"end": 2455,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 15812,
											"end": 16210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 15812,
											"end": 16210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 577,
											"end": 625,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 577,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 577,
											"end": 625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 577,
											"end": 625,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 625,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2890,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2855,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 577,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2719,
											"end": 2896,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 375,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 334,
											"end": 375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 334,
											"end": 375,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 334,
											"end": 375,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 334,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 334,
											"end": 375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 334,
											"end": 375,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 375,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 375,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 375,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 334,
											"end": 375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 334,
											"end": 375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 334,
											"end": 375,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 334,
											"end": 375,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 334,
											"end": 375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 375,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2526,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2526,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 5962,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6176,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 19903,
											"end": 22667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 19903,
											"end": 22667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 462,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 462,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 462,
											"end": 492,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 462,
											"end": 492,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 462,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 462,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 462,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 462,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 492,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 462,
											"end": 492,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 462,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 462,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 462,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 462,
											"end": 492,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 462,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 462,
											"end": 492,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 462,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 462,
											"end": 492,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 462,
											"end": 492,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 462,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 462,
											"end": 492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 462,
											"end": 492,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 462,
											"end": 492,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3358,
											"end": 3834,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3358,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3358,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3358,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3358,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 22758,
											"end": 22945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 22758,
											"end": 22945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2022,
											"end": 2107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2022,
											"end": 2107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2215,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2215,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 720,
											"end": 1904,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 720,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 720,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 720,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 720,
											"end": 1904,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 720,
											"end": 1904,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 720,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 720,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 720,
											"end": 1904,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 720,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 720,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 720,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 571,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 498,
											"end": 571,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 571,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 498,
											"end": 571,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 571,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 498,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 498,
											"end": 571,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 498,
											"end": 571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 571,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 571,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 498,
											"end": 571,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 498,
											"end": 571,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 498,
											"end": 571,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 498,
											"end": 571,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 498,
											"end": 571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 571,
											"name": "PUSH",
											"source": 4,
											"value": "10000"
										},
										{
											"begin": 498,
											"end": 571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 571,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 498,
											"end": 571,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 498,
											"end": 571,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 571,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 430,
											"end": 456,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 430,
											"end": 456,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 430,
											"end": 456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 430,
											"end": 456,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 430,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 430,
											"end": 456,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 430,
											"end": 456,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 456,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 430,
											"end": 456,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 430,
											"end": 456,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 430,
											"end": 456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 430,
											"end": 456,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 430,
											"end": 456,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 430,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 430,
											"end": 456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 430,
											"end": 456,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 430,
											"end": 456,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 430,
											"end": 456,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 430,
											"end": 456,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 11391,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 11391,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 270,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 270,
											"end": 291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7045,
											"end": 7275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 7045,
											"end": 7275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2847,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2847,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 10208,
											"end": 10310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2113,
											"end": 2209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2113,
											"end": 2209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 16901,
											"end": 17132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 16901,
											"end": 17132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 23526,
											"end": 23922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 23526,
											"end": 23922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2621,
											"end": 2737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2621,
											"end": 2737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2743,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2743,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 10411,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 10411,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 381,
											"end": 424,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 381,
											"end": 424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 381,
											"end": 424,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 381,
											"end": 424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 381,
											"end": 424,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 381,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 381,
											"end": 424,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 381,
											"end": 424,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 424,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 381,
											"end": 424,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 381,
											"end": 424,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 381,
											"end": 424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 381,
											"end": 424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 381,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 381,
											"end": 424,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 381,
											"end": 424,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 381,
											"end": 424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 381,
											"end": 424,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 297,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 297,
											"end": 328,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 297,
											"end": 328,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 297,
											"end": 328,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 297,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 297,
											"end": 328,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 297,
											"end": 328,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 328,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 297,
											"end": 328,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 297,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 297,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 297,
											"end": 328,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 297,
											"end": 328,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 297,
											"end": 328,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 297,
											"end": 328,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 328,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 17282,
											"end": 17444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 17282,
											"end": 17444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9240,
											"end": 9244,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9735,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9155,
											"end": 9785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2443,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 2498,
											"end": 2513,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2513,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2498,
											"end": 2513,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2513,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2513,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2513,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2513,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2513,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2513,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2498,
											"end": 2513,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2323,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2400,
											"end": 2413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 2400,
											"end": 2430,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2430,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2400,
											"end": 2430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2430,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2430,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2430,
											"name": "PUSH",
											"source": 4,
											"value": "10000"
										},
										{
											"begin": 2400,
											"end": 2430,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2400,
											"end": 2430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2430,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2430,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2430,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2430,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2430,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2430,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10093,
											"end": 10106,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10125,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 10118,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 10118,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16436,
											"end": 16443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 16468,
											"end": 16475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16460,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 16460,
											"end": 16476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16552,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15900,
											"end": 15913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 15924,
											"end": 15931,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15916,
											"end": 15923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 15916,
											"end": 15932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15900,
											"end": 15932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 16011,
											"end": 16016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 17282,
											"end": 17444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16140,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15890,
											"end": 16210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2526,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 2599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 2589,
											"end": 2608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2608,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2608,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2608,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2589,
											"end": 2608,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2589,
											"end": 2608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2608,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2608,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2608,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2608,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20040,
											"end": 20067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 20089,
											"end": 20096,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 20070,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 20070,
											"end": 20097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20040,
											"end": 20097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20040,
											"end": 20097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20153,
											"end": 20157,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20128,
											"end": 20147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20206,
											"end": 20233,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19051,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 19260,
											"end": 19286,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19260,
											"end": 19286,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 20394,
											"end": 20462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 19260,
											"end": 19286,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20436,
											"end": 20440,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 20442,
											"end": 20461,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 20442,
											"end": 20461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18524,
											"end": 18556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18524,
											"end": 18556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18524,
											"end": 18556,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 18370,
											"end": 18398,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18370,
											"end": 18398,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 18651,
											"end": 18671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18651,
											"end": 18671,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 18673,
											"end": 18703,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18673,
											"end": 18703,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 18648,
											"end": 18704,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 18648,
											"end": 18704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18074,
											"end": 18720,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 20394,
											"end": 20462,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 20394,
											"end": 20462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 20498,
											"end": 20502,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 17282,
											"end": 17444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20774,
											"end": 20789,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20912,
											"end": 20913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 20891,
											"end": 20910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 20884,
											"end": 20914,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21318,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14703,
											"end": 14714,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14701,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 14674,
											"end": 14715,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 14661,
											"end": 14724,
											"name": "OR",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14661,
											"end": 14724,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21671,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21943,
											"end": 21990,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 21943,
											"end": 21990,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21943,
											"end": 21995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21943,
											"end": 21995,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22047,
											"end": 22048,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 22037,
											"end": 22048,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 22037,
											"end": 22048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 22015,
											"end": 22034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22185,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22203,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22304,
											"end": 22317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22304,
											"end": 22317,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22289,
											"end": 22300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22289,
											"end": 22317,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22466,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21997,
											"end": 22556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22600,
											"end": 22607,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 22596,
											"end": 22598,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 22590,
											"end": 22594,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 22618,
											"end": 22660,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 22618,
											"end": 22660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20030,
											"end": 22667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20030,
											"end": 22667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20030,
											"end": 22667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3358,
											"end": 3834,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3358,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3650,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3671,
											"end": 3678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3671,
											"end": 3678,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 3671,
											"end": 3678,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3663,
											"end": 3684,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3692,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3649,
											"end": 3718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3649,
											"end": 3718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3649,
											"end": 3718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3728,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 3728,
											"end": 3738,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3728,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 3728,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 3728,
											"end": 3738,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3728,
											"end": 3738,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 3728,
											"end": 3738,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3403,
											"end": 3834,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3358,
											"end": 3834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 22916,
											"end": 22920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 22922,
											"end": 22924,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 22926,
											"end": 22933,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 22899,
											"end": 22938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2022,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 2092,
											"end": 2099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 2080,
											"end": 2100,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 2297,
											"end": 2299,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2309,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 2291,
											"end": 2310,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 2291,
											"end": 2310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 720,
											"end": 1904,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 720,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 884,
											"end": 890,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 884,
											"end": 890,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 883,
											"end": 890,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 875,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 875,
											"end": 917,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 875,
											"end": 917,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 875,
											"end": 917,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 875,
											"end": 917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 875,
											"end": 917,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7743,
											"end": 7745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 875,
											"end": 917,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 875,
											"end": 917,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 875,
											"end": 917,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7746,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 7784,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A194818DBDB9D1C9858DD081A5CC81C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7801,
											"end": 7819,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7801,
											"end": 7819,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7801,
											"end": 7819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7846,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7863,
											"end": 7881,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7863,
											"end": 7881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 875,
											"end": 917,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 875,
											"end": 917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 875,
											"end": 917,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 875,
											"end": 917,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 875,
											"end": 917,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 875,
											"end": 917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 875,
											"end": 917,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 875,
											"end": 917,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 875,
											"end": 917,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 875,
											"end": 917,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 875,
											"end": 917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 927,
											"end": 941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 5962,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6176,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 957,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 944,
											"end": 957,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 927,
											"end": 957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 927,
											"end": 957,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 986,
											"end": 987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 983,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 975,
											"end": 987,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8094,
											"end": 8096,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8076,
											"end": 8097,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8133,
											"end": 8135,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8106,
											"end": 8136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8172,
											"end": 8201,
											"name": "PUSH",
											"source": 7,
											"value": "4E65656420746F206D696E74206174206C656173742031204E46540000000000"
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8145,
											"end": 8202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 8237,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8219,
											"end": 8237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 7892,
											"end": 8243,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 967,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1067,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1058,
											"end": 1067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 1046,
											"end": 1054,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1043,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 1037,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1054,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 1037,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8712,
											"end": 8714,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8694,
											"end": 8715,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8751,
											"end": 8753,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 8731,
											"end": 8749,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8731,
											"end": 8749,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8731,
											"end": 8749,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8754,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585E08139195081B1A5B5A5D08195E18D959591959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8770,
											"end": 8788,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8770,
											"end": 8788,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8770,
											"end": 8788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8763,
											"end": 8815,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 8850,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8832,
											"end": 8850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 8510,
											"end": 8856,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 1029,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1129,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1157,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1157,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1132,
											"end": 1157,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1157,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1157,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1157,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1157,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1157,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1173,
											"end": 1183,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1173,
											"end": 1183,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1173,
											"end": 1183,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1173,
											"end": 1183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1173,
											"end": 1183,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1173,
											"end": 1183,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1173,
											"end": 1183,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1168,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 1168,
											"end": 1785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1199,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 1212,
											"end": 1219,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1244,
											"end": 1253,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1199,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1199,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1199,
											"end": 1254,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 1199,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1324,
											"end": 1331,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 1312,
											"end": 1320,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1309,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 1293,
											"end": 1320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1320,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 1293,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1331,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1331,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 1268,
											"end": 1393,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1393,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1393,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1268,
											"end": 1393,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1393,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9063,
											"end": 9065,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1268,
											"end": 1393,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1268,
											"end": 1393,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1393,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9104,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9075,
											"end": 9105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9141,
											"end": 9171,
											"name": "PUSH",
											"source": 7,
											"value": "4D6178204E465420666F72206164647265737320657863656564656400000000"
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9172,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9189,
											"end": 9207,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9189,
											"end": 9207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 8861,
											"end": 9213,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1393,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 1268,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 1440,
											"end": 1448,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 1428,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1448,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1448,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9593,
											"end": 9595,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9575,
											"end": 9596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9632,
											"end": 9634,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 9612,
											"end": 9630,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9612,
											"end": 9630,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9612,
											"end": 9630,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 9635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E7420666F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9651,
											"end": 9669,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9651,
											"end": 9669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9669,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9644,
											"end": 9693,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9728,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9710,
											"end": 9728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 9391,
											"end": 9734,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1168,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 1168,
											"end": 1785,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1168,
											"end": 1785,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 1168,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 1559,
											"end": 1581,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 1547,
											"end": 1555,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1544,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 1528,
											"end": 1555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1581,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1581,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9063,
											"end": 9065,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9102,
											"end": 9104,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9075,
											"end": 9105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9141,
											"end": 9171,
											"name": "PUSH",
											"source": 7,
											"value": "4D6178204E465420666F72206164647265737320657863656564656400000000"
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9114,
											"end": 9172,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9189,
											"end": 9207,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9189,
											"end": 9207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 8861,
											"end": 9213,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 1503,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1721,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 1695,
											"end": 1721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 1695,
											"end": 1721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1721,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 1695,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1691,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1721,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1721,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 1657,
											"end": 1774,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1657,
											"end": 1774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1657,
											"end": 1774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1774,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9593,
											"end": 9595,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1774,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1657,
											"end": 1774,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9575,
											"end": 9596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9632,
											"end": 9634,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 9612,
											"end": 9630,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9612,
											"end": 9630,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9612,
											"end": 9630,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 9635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E7420666F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9651,
											"end": 9669,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9651,
											"end": 9669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9669,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9644,
											"end": 9693,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9728,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9710,
											"end": 9728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 9391,
											"end": 9734,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1774,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 1657,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1847,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1848,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1848,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1848,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1836,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1823,
											"end": 1848,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1823,
											"end": 1848,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1848,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1823,
											"end": 1848,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1848,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1848,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 1823,
											"end": 1859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1859,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 1823,
											"end": 1859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1823,
											"end": 1859,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 1823,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1809,
											"end": 1819,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1808,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1820,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1859,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1859,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1795,
											"end": 1859,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1870,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 1870,
											"end": 1897,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1896,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1870,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 1870,
											"end": 1897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11463,
											"end": 11470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 11524,
											"end": 11531,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11505,
											"end": 11523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 11505,
											"end": 11532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 270,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 270,
											"end": 291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 270,
											"end": 291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 270,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 270,
											"end": 291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1373,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 7268,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7268,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9924,
											"end": 9943,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9924,
											"end": 9943,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9924,
											"end": 9943,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9959,
											"end": 9971,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9959,
											"end": 9971,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9959,
											"end": 9971,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9952,
											"end": 9980,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9952,
											"end": 9980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9952,
											"end": 9980,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10018,
											"end": 10020,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10014,
											"end": 10029,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10014,
											"end": 10029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10014,
											"end": 10029,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10010,
											"end": 10063,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9996,
											"end": 10008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9996,
											"end": 10008,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9996,
											"end": 10008,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9989,
											"end": 10064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10080,
											"end": 10092,
											"name": "PUSH",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 10080,
											"end": 10092,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3040,
											"end": 3124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3040,
											"end": 3124,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3040,
											"end": 3124,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3040,
											"end": 3124,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3040,
											"end": 3124,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3040,
											"end": 3124,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 14160,
											"end": 14226,
											"name": "PUSH",
											"source": 7,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "PUSH",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14148,
											"end": 14227,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "PUSH",
											"source": 7,
											"value": "B0"
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14243,
											"end": 14255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14236,
											"end": 14264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14236,
											"end": 14264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14236,
											"end": 14264,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14280,
											"end": 14292,
											"name": "PUSH",
											"source": 7,
											"value": "D0"
										},
										{
											"begin": 14280,
											"end": 14292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14280,
											"end": 14292,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14280,
											"end": 14292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7513,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7514,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7514,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7514,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7514,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7445,
											"end": 7514,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3210,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3275,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 3237,
											"end": 3276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 3314,
											"end": 3327,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3210,
											"end": 3276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3210,
											"end": 3276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3294,
											"end": 3327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 3327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 3327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "10000"
										},
										{
											"begin": 3314,
											"end": 3327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3327,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3327,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 3327,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3286,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 3286,
											"end": 3345,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3286,
											"end": 3345,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3286,
											"end": 3345,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3286,
											"end": 3345,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3286,
											"end": 3345,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10305,
											"end": 10307,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3286,
											"end": 3345,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3286,
											"end": 3345,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3286,
											"end": 3345,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10308,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10344,
											"end": 10346,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 10324,
											"end": 10342,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10324,
											"end": 10342,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10324,
											"end": 10342,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10317,
											"end": 10347,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "426164207369676E6174757265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 10399,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10416,
											"end": 10434,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10416,
											"end": 10434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3286,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10103,
											"end": 10440,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3286,
											"end": 3345,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 3286,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 3352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10264,
											"end": 10277,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10296,
											"end": 10303,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 10289,
											"end": 10303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2113,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2184,
											"end": 2202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 2194,
											"end": 2202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 2184,
											"end": 2202,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17013,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 23708,
											"end": 23712,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23714,
											"end": 23716,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23718,
											"end": 23725,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23695,
											"end": 23707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 23695,
											"end": 23726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 23740,
											"end": 23759,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 23809,
											"end": 23813,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23815,
											"end": 23817,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23819,
											"end": 23826,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23828,
											"end": 23833,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23778,
											"end": 23808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 23778,
											"end": 23834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2621,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2621,
											"end": 2737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2743,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10484,
											"end": 10497,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 10522,
											"end": 10529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 10514,
											"end": 10530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10579,
											"end": 10600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 10603,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 10603,
											"end": 10613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10579,
											"end": 10613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10579,
											"end": 10613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 10643,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10655,
											"end": 10656,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10656,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10690,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 10702,
											"end": 10709,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10692,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 10692,
											"end": 10710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 10666,
											"end": 10711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10623,
											"end": 10717,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10411,
											"end": 10724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17379,
											"end": 17383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17420,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13352,
											"end": 13354,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13391,
											"end": 13393,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13371,
											"end": 13389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13364,
											"end": 13394,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13430,
											"end": 13464,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13410,
											"end": 13428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13474,
											"end": 13510,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13527,
											"end": 13546,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 13527,
											"end": 13546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 13150,
											"end": 13552,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13759,
											"end": 13761,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13741,
											"end": 13762,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 13762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 13762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13778,
											"end": 13796,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13771,
											"end": 13801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13837,
											"end": 13871,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13817,
											"end": 13835,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13817,
											"end": 13835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13817,
											"end": 13835,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13810,
											"end": 13872,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13889,
											"end": 13907,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 13889,
											"end": 13907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 13557,
											"end": 13913,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17758,
											"end": 17762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17845,
											"end": 17858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17845,
											"end": 17858,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 17835,
											"end": 17842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17835,
											"end": 17858,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17912,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17895,
											"end": 17939,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17944,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17693,
											"end": 17970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12582,
											"end": 12589,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12616,
											"end": 12623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12714,
											"end": 12727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12714,
											"end": 12727,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12707,
											"end": 12711,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12707,
											"end": 12727,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12751,
											"end": 12765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12785,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12855,
											"end": 12879,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 12879,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 12884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 12884,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "tag",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13517,
											"end": 13523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13527,
											"end": 13528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13517,
											"end": 13528,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13586,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12729,
											"end": 13700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 33791,
											"end": 33878,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 33791,
											"end": 33878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 33850,
											"end": 33871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 33856,
											"end": 33863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 33865,
											"end": 33870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 33850,
											"end": 33855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 33850,
											"end": 33871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 27091,
											"end": 29993,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 27091,
											"end": 29993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 27163,
											"end": 27183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 27186,
											"end": 27199,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27186,
											"end": 27199,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 27186,
											"end": 27199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 27213,
											"end": 27226,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 27213,
											"end": 27226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 27213,
											"end": 27226,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 27209,
											"end": 27253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 27209,
											"end": 27253,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B562E8DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 27235,
											"end": 27253,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 27209,
											"end": 27253,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 27209,
											"end": 27253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27746,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 27766,
											"end": 27798,
											"name": "PUSH",
											"source": 5,
											"value": "10000000000000001"
										},
										{
											"begin": 27754,
											"end": 27799,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 27754,
											"end": 27799,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27799,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 28035,
											"end": 28052,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 15123,
											"end": 15138,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15123,
											"end": 15138,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15097,
											"end": 15121,
											"name": "PUSH",
											"source": 5,
											"value": "E1"
										},
										{
											"begin": 15093,
											"end": 15139,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 14703,
											"end": 14714,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14701,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 14674,
											"end": 14715,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 14671,
											"end": 14723,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 14661,
											"end": 14724,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14661,
											"end": 14724,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 28035,
											"end": 28205,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28035,
											"end": 28205,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 28264,
											"end": 28287,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 28264,
											"end": 28287,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 28264,
											"end": 28287,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 28264,
											"end": 28287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 28035,
											"end": 28066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27728,
											"end": 27750,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 28872,
											"end": 29200,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 29520,
											"end": 29521,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 29506,
											"end": 29518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 29502,
											"end": 29522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 29560,
											"end": 29563,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 29551,
											"end": 29558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 29548,
											"end": 29564,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 29774,
											"end": 29781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 29764,
											"end": 29772,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 29761,
											"end": 29762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 29731,
											"end": 29732,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 29728,
											"end": 29729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 29723,
											"end": 29782,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 29612,
											"end": 29613,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 29599,
											"end": 29614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 29461,
											"end": 29800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 29465,
											"end": 29540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 29831,
											"end": 29839,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 29843,
											"end": 29844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 29831,
											"end": 29844,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 29827,
											"end": 29872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 29827,
											"end": 29872,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E0763"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 29853,
											"end": 29872,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 29827,
											"end": 29872,
											"name": "tag",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 29827,
											"end": 29872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 29887,
											"end": 29900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 29887,
											"end": 29906,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3739,
											"end": 3746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3776,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3778,
											"end": 3796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3817,
											"end": 3826,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 3800,
											"end": 3827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3800,
											"end": 3827,
											"name": "tag",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 3800,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 3849,
											"end": 3854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 3837,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "tag",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3872,
											"end": 3881,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3661,
											"end": 3888,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3661,
											"end": 3888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26106,
											"end": 26110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26106,
											"end": 26110,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26193,
											"end": 26197,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 26193,
											"end": 26197,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26199,
											"end": 26206,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 26199,
											"end": 26206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26208,
											"end": 26213,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 26208,
											"end": 26213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 26126,
											"end": 26214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "449"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "451"
										},
										{
											"begin": 26126,
											"end": 26214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 5,
											"value": "450"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 5,
											"value": "449"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "457"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 5,
											"value": "457"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26404,
											"end": 26410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26404,
											"end": 26417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26421,
											"end": 26422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26404,
											"end": 26422,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "tag",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26589,
											"end": 26595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26583,
											"end": 26596,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26574,
											"end": 26580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26570,
											"end": 26572,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26566,
											"end": 26581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26559,
											"end": 26597,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 5,
											"value": "452"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 2016,
											"name": "tag",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 1910,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1970,
											"end": 1983,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2002,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1995,
											"end": 2009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2009,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1995,
											"end": 2009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1995,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 1995,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 39702,
											"end": 39719,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 40130,
											"end": 40134,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 40123,
											"end": 40127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 40117,
											"end": 40128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 40113,
											"end": 40135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 40220,
											"end": 40221,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 40214,
											"end": 40218,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 40207,
											"end": 40222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 40293,
											"end": 40297,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 40290,
											"end": 40291,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 40286,
											"end": 40298,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 40279,
											"end": 40298,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 40279,
											"end": 40298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 40279,
											"end": 40298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 40373,
											"end": 40374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 40368,
											"end": 40371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 40361,
											"end": 40375,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 40474,
											"end": 40477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 40708,
											"end": 40713,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "tag",
											"source": 5,
											"value": "468"
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 40755,
											"end": 40756,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 40750,
											"end": 40753,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 40746,
											"end": 40757,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 40739,
											"end": 40757,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 40739,
											"end": 40757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 40923,
											"end": 40925,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 40917,
											"end": 40921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 40913,
											"end": 40926,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 40909,
											"end": 40911,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 40905,
											"end": 40927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 40900,
											"end": 40903,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 40892,
											"end": 40928,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 41015,
											"end": 41017,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 41005,
											"end": 41018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 41005,
											"end": 41018,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 41070,
											"end": 41095,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "468"
										},
										{
											"begin": 41070,
											"end": 41095,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41137,
											"end": 41150,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 41137,
											"end": 41150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 41137,
											"end": 41150,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 41250,
											"end": 41264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 41250,
											"end": 41264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 41250,
											"end": 41264,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 41310,
											"end": 41329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 41310,
											"end": 41329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 41310,
											"end": 41329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 41250,
											"end": 41264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39637,
											"end": 41345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 34095,
											"end": 37110,
											"name": "tag",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 34095,
											"end": 37110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 34174,
											"end": 34201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 34204,
											"end": 34231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 34223,
											"end": 34230,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 34204,
											"end": 34222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 34204,
											"end": 34231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 34204,
											"end": 34231,
											"name": "tag",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 34204,
											"end": 34231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 34174,
											"end": 34231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34174,
											"end": 34231,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 34242,
											"end": 34254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 34242,
											"end": 34254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 34362,
											"end": 34397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "476"
										},
										{
											"begin": 34389,
											"end": 34396,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 18927,
											"end": 18954,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19051,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 19260,
											"end": 19286,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19260,
											"end": 19286,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18828,
											"end": 19302,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 34362,
											"end": 34397,
											"name": "tag",
											"source": 5,
											"value": "476"
										},
										{
											"begin": 34362,
											"end": 34397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 34305,
											"end": 34397,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 34305,
											"end": 34397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 34305,
											"end": 34397,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 34305,
											"end": 34397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 34412,
											"end": 34425,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 34408,
											"end": 34720,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 34408,
											"end": 34720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "483"
										},
										{
											"begin": 34408,
											"end": 34720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 34531,
											"end": 34599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 34556,
											"end": 34571,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 34573,
											"end": 34577,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 34579,
											"end": 34598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 39437,
											"end": 39540,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 34531,
											"end": 34599,
											"name": "tag",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 34531,
											"end": 34599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 34526,
											"end": 34709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "483"
										},
										{
											"begin": 34526,
											"end": 34709,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 34622,
											"end": 34665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "481"
										},
										{
											"begin": 34639,
											"end": 34643,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 17282,
											"end": 17444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 34622,
											"end": 34665,
											"name": "tag",
											"source": 5,
											"value": "481"
										},
										{
											"begin": 34622,
											"end": 34665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 34617,
											"end": 34709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "483"
										},
										{
											"begin": 34617,
											"end": 34709,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 34674,
											"end": 34709,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 34617,
											"end": 34709,
											"name": "tag",
											"source": 5,
											"value": "483"
										},
										{
											"begin": 34617,
											"end": 34709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 34870,
											"end": 34885,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 34867,
											"end": 35024,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 34867,
											"end": 35024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "485"
										},
										{
											"begin": 34867,
											"end": 35024,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 35008,
											"end": 35009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 34987,
											"end": 35006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 34980,
											"end": 35010,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 34867,
											"end": 35024,
											"name": "tag",
											"source": 5,
											"value": "485"
										},
										{
											"begin": 34867,
											"end": 35024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 35613,
											"end": 35631,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 35613,
											"end": 35637,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 35641,
											"end": 35673,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 35613,
											"end": 35673,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14703,
											"end": 14714,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14701,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 14674,
											"end": 14715,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 14661,
											"end": 14724,
											"name": "OR",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14661,
											"end": 14724,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 35904,
											"end": 35921,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 35904,
											"end": 35930,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 35904,
											"end": 36106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 35904,
											"end": 36106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 35904,
											"end": 36106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 35904,
											"end": 36106,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36223,
											"end": 36270,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 36223,
											"end": 36270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 36223,
											"end": 36275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 36223,
											"end": 36275,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 36219,
											"end": 36836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "488"
										},
										{
											"begin": 36219,
											"end": 36836,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 36327,
											"end": 36328,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 36317,
											"end": 36328,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 36317,
											"end": 36328,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 36295,
											"end": 36314,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 36448,
											"end": 36465,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 36448,
											"end": 36478,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 36448,
											"end": 36483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 36448,
											"end": 36483,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 36444,
											"end": 36822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "490"
										},
										{
											"begin": 36444,
											"end": 36822,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 36584,
											"end": 36597,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 36584,
											"end": 36597,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 36569,
											"end": 36580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 36569,
											"end": 36597,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 36565,
											"end": 36804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "490"
										},
										{
											"begin": 36565,
											"end": 36804,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 36729,
											"end": 36746,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 36729,
											"end": 36759,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 36729,
											"end": 36781,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 36729,
											"end": 36781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 36729,
											"end": 36781,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 36565,
											"end": 36804,
											"name": "tag",
											"source": 5,
											"value": "490"
										},
										{
											"begin": 36565,
											"end": 36804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 36277,
											"end": 36836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 36219,
											"end": 36836,
											"name": "tag",
											"source": 5,
											"value": "488"
										},
										{
											"begin": 36219,
											"end": 36836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 36888,
											"end": 36895,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 36888,
											"end": 36895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 36884,
											"end": 36885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 36884,
											"end": 36885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 36884,
											"end": 36885,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 36884,
											"end": 36885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 36861,
											"end": 36896,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37079,
											"end": 37091,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 37079,
											"end": 37093,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34095,
											"end": 37110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "tag",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2226,
											"end": 2233,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2279,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2283,
											"end": 2285,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2263,
											"end": 2285,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "494"
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2599,
											"end": 2603,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2584,
											"end": 2604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2653,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2654,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2709,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2710,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2711,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2712,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "495"
										},
										{
											"begin": 2757,
											"end": 2761,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2676,
											"end": 2712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2605,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2654,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "496"
										},
										{
											"begin": 2746,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "tag",
											"source": 3,
											"value": "495"
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "497"
										},
										{
											"begin": 2739,
											"end": 2771,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "tag",
											"source": 3,
											"value": "494"
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2822,
											"end": 2857,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "tag",
											"source": 3,
											"value": "497"
										},
										{
											"begin": 2259,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2145,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "tag",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 647,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 638,
											"end": 667,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 638,
											"end": 667,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "503"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "503"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "501"
										},
										{
											"begin": 638,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 638,
											"end": 667,
											"name": "tag",
											"source": 3,
											"value": "503"
										},
										{
											"begin": 638,
											"end": 667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 638,
											"end": 667,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 634,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "504"
										},
										{
											"begin": 634,
											"end": 1075,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 570,
											"end": 1081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 570,
											"end": 1081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 634,
											"end": 1075,
											"name": "tag",
											"source": 3,
											"value": "504"
										},
										{
											"begin": 634,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 743,
											"end": 772,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 734,
											"end": 739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 734,
											"end": 772,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 734,
											"end": 772,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "509"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "509"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "501"
										},
										{
											"begin": 734,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 734,
											"end": 772,
											"name": "tag",
											"source": 3,
											"value": "509"
										},
										{
											"begin": 734,
											"end": 772,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 734,
											"end": 772,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "510"
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 788,
											"end": 822,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 788,
											"end": 822,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15385,
											"end": 15387,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 788,
											"end": 822,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 788,
											"end": 822,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15367,
											"end": 15388,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15424,
											"end": 15426,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15397,
											"end": 15427,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15463,
											"end": 15489,
											"name": "PUSH",
											"source": 7,
											"value": "45434453413A20696E76616C6964207369676E61747572650000000000000000"
										},
										{
											"begin": 15443,
											"end": 15461,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 15443,
											"end": 15461,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15443,
											"end": 15461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15436,
											"end": 15490,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15507,
											"end": 15525,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 15507,
											"end": 15525,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 788,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 15183,
											"end": 15531,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "tag",
											"source": 3,
											"value": "510"
										},
										{
											"begin": 730,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 852,
											"end": 887,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 843,
											"end": 848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 843,
											"end": 887,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 843,
											"end": 887,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "517"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "517"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "501"
										},
										{
											"begin": 843,
											"end": 887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 843,
											"end": 887,
											"name": "tag",
											"source": 3,
											"value": "517"
										},
										{
											"begin": 843,
											"end": 887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 843,
											"end": 887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 903,
											"end": 944,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 903,
											"end": 944,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15738,
											"end": 15740,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 903,
											"end": 944,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 903,
											"end": 944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15720,
											"end": 15741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15777,
											"end": 15779,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 15757,
											"end": 15775,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15757,
											"end": 15775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15757,
											"end": 15775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15750,
											"end": 15780,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15816,
											"end": 15849,
											"name": "PUSH",
											"source": 7,
											"value": "45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
										},
										{
											"begin": 15796,
											"end": 15814,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 15796,
											"end": 15814,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15796,
											"end": 15814,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15789,
											"end": 15850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15867,
											"end": 15885,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 15867,
											"end": 15885,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 903,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 15536,
											"end": 15891,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "tag",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 839,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1004,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 965,
											"end": 970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "525"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "525"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "501"
										},
										{
											"begin": 965,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "tag",
											"source": 3,
											"value": "525"
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 965,
											"end": 1004,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 961,
											"end": 1075,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16098,
											"end": 16100,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16080,
											"end": 16101,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16137,
											"end": 16139,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 16117,
											"end": 16135,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 16117,
											"end": 16135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16117,
											"end": 16135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16110,
											"end": 16140,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16176,
											"end": 16210,
											"name": "PUSH",
											"source": 7,
											"value": "45434453413A20696E76616C6964207369676E6174757265202773272076616C"
										},
										{
											"begin": 16156,
											"end": 16174,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 16156,
											"end": 16174,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16156,
											"end": 16174,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16149,
											"end": 16211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16227,
											"end": 16245,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 16227,
											"end": 16245,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16227,
											"end": 16245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16220,
											"end": 16252,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16269,
											"end": 16288,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 16269,
											"end": 16288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1020,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 15896,
											"end": 16294,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "tag",
											"source": 3,
											"value": "496"
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5195,
											"end": 5202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5195,
											"end": 5202,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6119,
											"end": 6185,
											"name": "PUSH",
											"source": 3,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6106,
											"end": 6185,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6106,
											"end": 6185,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6263,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "530"
										},
										{
											"begin": 6102,
											"end": 6263,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6217,
											"end": 6218,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6217,
											"end": 6218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6221,
											"end": 6251,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 6201,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "529"
										},
										{
											"begin": 6201,
											"end": 6252,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6263,
											"name": "tag",
											"source": 3,
											"value": "530"
										},
										{
											"begin": 6102,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6357,
											"end": 6371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16526,
											"end": 16551,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 16526,
											"end": 16551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16526,
											"end": 16551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16599,
											"end": 16603,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 16587,
											"end": 16604,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 16587,
											"end": 16604,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16567,
											"end": 16585,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16567,
											"end": 16585,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16567,
											"end": 16585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16560,
											"end": 16605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16560,
											"end": 16605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16560,
											"end": 16605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16560,
											"end": 16605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16621,
											"end": 16639,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 16621,
											"end": 16639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16621,
											"end": 16639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16614,
											"end": 16648,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16614,
											"end": 16648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16614,
											"end": 16648,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16664,
											"end": 16682,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 16664,
											"end": 16682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16664,
											"end": 16682,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16657,
											"end": 16691,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16657,
											"end": 16691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16657,
											"end": 16691,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 16498,
											"end": 16517,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 16498,
											"end": 16517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "534"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "tag",
											"source": 3,
											"value": "534"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6374,
											"end": 6398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6412,
											"end": 6432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6412,
											"end": 6432,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6408,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "535"
										},
										{
											"begin": 6408,
											"end": 6509,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6464,
											"end": 6465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6497,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "529"
										},
										{
											"begin": 6448,
											"end": 6498,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6408,
											"end": 6509,
											"name": "tag",
											"source": 3,
											"value": "535"
										},
										{
											"begin": 6408,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6535,
											"end": 6555,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6535,
											"end": 6555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "tag",
											"source": 3,
											"value": "529"
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5069,
											"end": 6563,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5069,
											"end": 6563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 592,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 592,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 657,
											"end": 677,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 657,
											"end": 677,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 713,
											"end": 726,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 713,
											"end": 726,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 706,
											"end": 727,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 696,
											"end": 728,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 728,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 686,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 686,
											"end": 746,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 742,
											"end": 743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 740,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 732,
											"end": 744,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 686,
											"end": 746,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 686,
											"end": 746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 592,
											"end": 752,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 592,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 592,
											"end": 752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 592,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 757,
											"end": 937,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 757,
											"end": 937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 854,
											"end": 863,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 845,
											"end": 852,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 841,
											"end": 864,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 837,
											"end": 869,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 834,
											"end": 886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 834,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 834,
											"end": 886,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 882,
											"end": 883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 880,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 872,
											"end": 884,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 834,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 834,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 905,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 921,
											"end": 930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 905,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 905,
											"end": 931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 942,
											"end": 1115,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 942,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1030,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1030,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1090,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1049,
											"end": 1091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1049,
											"end": 1091,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1039,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 1039,
											"end": 1109,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1105,
											"end": 1106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1103,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1095,
											"end": 1107,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1306,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1120,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1218,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1235,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1246,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1250,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 1290,
											"end": 1299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 1271,
											"end": 1300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1561,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 1311,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1396,
											"end": 1397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 1406,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 1426,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1417,
											"end": 1418,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1414,
											"end": 1427,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1406,
											"end": 1519,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1406,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 1406,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1496,
											"end": 1507,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1496,
											"end": 1507,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1496,
											"end": 1507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1508,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1488,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1488,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1509,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1442,
											"end": 1444,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1435,
											"end": 1445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1406,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 1406,
											"end": 1519,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1406,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 1406,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1554,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1551,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1551,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1528,
											"end": 1555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1566,
											"end": 1837,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 1566,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1651,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1652,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1671,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1689,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 1758,
											"end": 1764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1751,
											"end": 1755,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1749,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1739,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1733,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1724,
											"end": 1740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1689,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 1689,
											"end": 1765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1689,
											"end": 1765,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 1689,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1821,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1798,
											"end": 1813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1794,
											"end": 1823,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1824,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1824,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1781,
											"end": 1831,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1566,
											"end": 1837,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1566,
											"end": 1837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 2062,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 1842,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 1993,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1954,
											"end": 1958,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 2052,
											"end": 2054,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2037,
											"end": 2055,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2035,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 2011,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2247,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 2067,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2181,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2176,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2177,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2147,
											"end": 2199,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2147,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 2147,
											"end": 2199,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2193,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2197,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2147,
											"end": 2199,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 2147,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2067,
											"end": 2247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2714,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2460,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2534,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2542,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2591,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2586,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2575,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2587,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2592,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2609,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 2557,
											"end": 2609,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2606,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2607,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2609,
											"name": "tag",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 2557,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 2647,
											"end": 2656,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 2628,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "tag",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 2628,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2657,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2704,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2708,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2708,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2984,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2994,
											"end": 3000,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3049,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3033,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3045,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3061,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3065,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "tag",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 3086,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "tag",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3115,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 3168,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3166,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 3134,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3172,
											"name": "tag",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 3134,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3172,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3219,
											"end": 3221,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3217,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3223,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3223,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3361,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 3234,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3290,
											"end": 3293,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3286,
											"end": 3306,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3307,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3330,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3316,
											"end": 3331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3354,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3355,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3997,
											"name": "tag",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 3366,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3430,
											"end": 3435,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3478,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3501,
											"end": 3503,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3493,
											"end": 3499,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3490,
											"end": 3504,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3527,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 3487,
											"end": 3527,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3507,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 3507,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 3507,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3507,
											"end": 3525,
											"name": "tag",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 3507,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3582,
											"end": 3584,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3576,
											"end": 3585,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3552,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3636,
											"end": 3651,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3651,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3632,
											"end": 3656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3632,
											"end": 3656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3632,
											"end": 3656,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3658,
											"end": 3660,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 3628,
											"end": 3661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3666,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3667,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3667,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3724,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3724,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3724,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3725,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3748,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 3676,
											"end": 3748,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 3728,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 3728,
											"end": 3746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3746,
											"name": "tag",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 3728,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3778,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3766,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3757,
											"end": 3779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3797,
											"end": 3803,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3803,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3833,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3834,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3853,
											"end": 3856,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3849,
											"end": 3865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3871,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3888,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 3843,
											"end": 3888,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3882,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3874,
											"end": 3886,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3843,
											"end": 3888,
											"name": "tag",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 3843,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3940,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3929,
											"end": 3932,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3926,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3914,
											"end": 3920,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 3927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3941,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3979,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3965,
											"end": 3971,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3961,
											"end": 3980,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3957,
											"end": 3987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 3991,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 3991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 3991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 3991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3997,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3997,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4002,
											"end": 4222,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 4002,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4049,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4094,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4078,
											"end": 4095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4101,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4064,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 4064,
											"end": 4119,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4115,
											"end": 4116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4105,
											"end": 4117,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4064,
											"end": 4119,
											"name": "tag",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 4064,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 4212,
											"end": 4215,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4203,
											"end": 4209,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4210,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4183,
											"end": 4187,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4188,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 4137,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4752,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 4227,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4336,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4399,
											"end": 4402,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4387,
											"end": 4396,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4378,
											"end": 4385,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4397,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4370,
											"end": 4403,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4420,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 4367,
											"end": 4420,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4416,
											"end": 4417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4413,
											"end": 4414,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4418,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4420,
											"name": "tag",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 4367,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4461,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4439,
											"end": 4462,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4498,
											"end": 4507,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4481,
											"end": 4513,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4513,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4471,
											"end": 4513,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4560,
											"end": 4562,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4549,
											"end": 4558,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4545,
											"end": 4563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4564,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4522,
											"end": 4564,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4522,
											"end": 4564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4617,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4619,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4660,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4634,
											"end": 4640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4661,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4678,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 4628,
											"end": 4678,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 4675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4672,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4664,
											"end": 4676,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4678,
											"name": "tag",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 4628,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 4738,
											"end": 4745,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4729,
											"end": 4735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4718,
											"end": 4727,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 4736,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 4697,
											"end": 4746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4746,
											"name": "tag",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 4697,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4752,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4752,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4752,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 5288,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4757,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4917,
											"end": 4926,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4908,
											"end": 4915,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 4927,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4933,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4946,
											"end": 4947,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4943,
											"end": 4944,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4936,
											"end": 4948,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "tag",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 4897,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 4991,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4992,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4959,
											"end": 4992,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4959,
											"end": 4992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5041,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5028,
											"end": 5037,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5043,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5043,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 5096,
											"end": 5098,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5085,
											"end": 5094,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5099,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 5062,
											"end": 5100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "tag",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5100,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5100,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5140,
											"end": 5149,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5154,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5123,
											"end": 5155,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5196,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5170,
											"end": 5176,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5167,
											"end": 5197,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5214,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5164,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 5164,
											"end": 5214,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5200,
											"end": 5212,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5743,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 5293,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5368,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5415,
											"end": 5417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5403,
											"end": 5412,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5401,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5390,
											"end": 5413,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5386,
											"end": 5418,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5383,
											"end": 5435,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5383,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 5383,
											"end": 5435,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5431,
											"end": 5432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 5429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5433,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5383,
											"end": 5435,
											"name": "tag",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 5383,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5471,
											"end": 5480,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5458,
											"end": 5481,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5522,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5496,
											"end": 5502,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5493,
											"end": 5523,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5540,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "605"
										},
										{
											"begin": 5490,
											"end": 5540,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5533,
											"end": 5534,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5538,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5540,
											"name": "tag",
											"source": 7,
											"value": "605"
										},
										{
											"begin": 5490,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5612,
											"end": 5616,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5604,
											"end": 5617,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5600,
											"end": 5627,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 5590,
											"end": 5645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5641,
											"end": 5642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5639,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5631,
											"end": 5643,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5645,
											"name": "tag",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 5590,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 5729,
											"end": 5736,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5724,
											"end": 5726,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5727,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 5708,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5702,
											"end": 5704,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5698,
											"end": 5709,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 5664,
											"end": 5737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 6002,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 5748,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5813,
											"end": 5819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5827,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 5876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5853,
											"end": 5860,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5849,
											"end": 5872,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5877,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5842,
											"end": 5894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5842,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 5842,
											"end": 5894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5890,
											"end": 5891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5887,
											"end": 5888,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5842,
											"end": 5894,
											"name": "tag",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 5842,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 5932,
											"end": 5941,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 5913,
											"end": 5942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5942,
											"name": "tag",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 5913,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5903,
											"end": 5942,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5903,
											"end": 5942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "611"
										},
										{
											"begin": 5992,
											"end": 5994,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5981,
											"end": 5990,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 5961,
											"end": 5996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 5996,
											"name": "tag",
											"source": 7,
											"value": "611"
										},
										{
											"begin": 5961,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5951,
											"end": 5996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 6002,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 6002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 6002,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 6002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 6002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 6002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6544,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 6007,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6110,
											"end": 6116,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6118,
											"end": 6124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6132,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6167,
											"end": 6176,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6158,
											"end": 6165,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6154,
											"end": 6177,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6183,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6200,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "613"
										},
										{
											"begin": 6147,
											"end": 6200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6193,
											"end": 6194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6186,
											"end": 6198,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6200,
											"name": "tag",
											"source": 7,
											"value": "613"
										},
										{
											"begin": 6147,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 6238,
											"end": 6247,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 6219,
											"end": 6248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6219,
											"end": 6248,
											"name": "tag",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 6219,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6209,
											"end": 6248,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6209,
											"end": 6248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "615"
										},
										{
											"begin": 6301,
											"end": 6303,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6290,
											"end": 6299,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6286,
											"end": 6304,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 6267,
											"end": 6305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6267,
											"end": 6305,
											"name": "tag",
											"source": 7,
											"value": "615"
										},
										{
											"begin": 6267,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6305,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6341,
											"end": 6350,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6337,
											"end": 6355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6356,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6314,
											"end": 6356,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6314,
											"end": 6356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6409,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6396,
											"end": 6405,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6392,
											"end": 6410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6411,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6426,
											"end": 6432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6453,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6470,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 6420,
											"end": 6470,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6464,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6456,
											"end": 6468,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6809,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 6549,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6678,
											"end": 6680,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6657,
											"end": 6664,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6676,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6681,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6646,
											"end": 6698,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6646,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 6646,
											"end": 6698,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6694,
											"end": 6695,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6696,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6646,
											"end": 6698,
											"name": "tag",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 6646,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "620"
										},
										{
											"begin": 6736,
											"end": 6745,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 6717,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6717,
											"end": 6746,
											"name": "tag",
											"source": 7,
											"value": "620"
										},
										{
											"begin": 6717,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6707,
											"end": 6746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "611"
										},
										{
											"begin": 6799,
											"end": 6801,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6788,
											"end": 6797,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6784,
											"end": 6802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 6765,
											"end": 6803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 7194,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 6814,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6894,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6936,
											"end": 6948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6936,
											"end": 6948,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6936,
											"end": 6948,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6957,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "623"
										},
										{
											"begin": 6957,
											"end": 7018,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7011,
											"end": 7015,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 7003,
											"end": 7009,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6999,
											"end": 7016,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6989,
											"end": 7016,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6989,
											"end": 7016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6957,
											"end": 7018,
											"name": "tag",
											"source": 7,
											"value": "623"
										},
										{
											"begin": 6957,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7053,
											"end": 7067,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7033,
											"end": 7051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7068,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7027,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 7027,
											"end": 7188,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7110,
											"end": 7120,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 7105,
											"end": 7108,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7101,
											"end": 7121,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7091,
											"end": 7122,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7149,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 7142,
											"end": 7143,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7135,
											"end": 7150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7177,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7178,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7027,
											"end": 7188,
											"name": "tag",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 7027,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7027,
											"end": 7188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 7194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 7194,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 7194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6814,
											"end": 7194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7409,
											"end": 7536,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 7409,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7470,
											"end": 7480,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 7465,
											"end": 7468,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7461,
											"end": 7481,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7459,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7451,
											"end": 7482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7501,
											"end": 7505,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7491,
											"end": 7506,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7529,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7522,
											"end": 7523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7515,
											"end": 7530,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8248,
											"end": 8375,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 8248,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8319,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 8304,
											"end": 8307,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8300,
											"end": 8320,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 8297,
											"end": 8298,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8290,
											"end": 8321,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8340,
											"end": 8344,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8337,
											"end": 8338,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8330,
											"end": 8345,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8368,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8380,
											"end": 8505,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 8380,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8445,
											"end": 8454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8445,
											"end": 8454,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8445,
											"end": 8454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8466,
											"end": 8476,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8466,
											"end": 8476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8466,
											"end": 8476,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8463,
											"end": 8499,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8463,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 8463,
											"end": 8499,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 8479,
											"end": 8497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9218,
											"end": 9386,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 9218,
											"end": 9386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9300,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9300,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9291,
											"end": 9300,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9331,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9322,
											"end": 9331,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9339,
											"end": 9354,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9339,
											"end": 9354,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9339,
											"end": 9354,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9333,
											"end": 9355,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9333,
											"end": 9355,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9319,
											"end": 9356,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9309,
											"end": 9380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 9309,
											"end": 9380,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9360,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 9360,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 9360,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10571,
											"end": 11116,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 10571,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10673,
											"end": 10675,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10668,
											"end": 10671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10665,
											"end": 10676,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11110,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 10662,
											"end": 11110,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10709,
											"end": 10710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10734,
											"end": 10739,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10730,
											"end": 10732,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10723,
											"end": 10740,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10775,
											"end": 10777,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10765,
											"end": 10784,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10849,
											"end": 10851,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10837,
											"end": 10847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10833,
											"end": 10852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10830,
											"end": 10831,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 10826,
											"end": 10853,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10824,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10816,
											"end": 10854,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10885,
											"end": 10889,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10873,
											"end": 10883,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10870,
											"end": 10890,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10867,
											"end": 10914,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10867,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "644"
										},
										{
											"begin": 10867,
											"end": 10914,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10908,
											"end": 10912,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10867,
											"end": 10914,
											"name": "tag",
											"source": 7,
											"value": "644"
										},
										{
											"begin": 10867,
											"end": 10914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10963,
											"end": 10965,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10958,
											"end": 10961,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10954,
											"end": 10966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10951,
											"end": 10952,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 10947,
											"end": 10967,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 10941,
											"end": 10945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10937,
											"end": 10968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10927,
											"end": 10968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10927,
											"end": 10968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11018,
											"end": 11100,
											"name": "tag",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 11018,
											"end": 11100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11036,
											"end": 11038,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11029,
											"end": 11034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11026,
											"end": 11039,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11018,
											"end": 11100,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11018,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 11018,
											"end": 11100,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11081,
											"end": 11098,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11081,
											"end": 11098,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11081,
											"end": 11098,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11062,
											"end": 11063,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11051,
											"end": 11064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11018,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 11018,
											"end": 11100,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11292,
											"end": 12644,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 11292,
											"end": 12644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11418,
											"end": 11421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11412,
											"end": 11422,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11445,
											"end": 11463,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11437,
											"end": 11443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11434,
											"end": 11464,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11431,
											"end": 11487,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11431,
											"end": 11487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 11431,
											"end": 11487,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11467,
											"end": 11485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 11467,
											"end": 11485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 11467,
											"end": 11485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11467,
											"end": 11485,
											"name": "tag",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 11467,
											"end": 11485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11496,
											"end": 11593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "652"
										},
										{
											"begin": 11586,
											"end": 11592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11546,
											"end": 11584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 11578,
											"end": 11582,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11572,
											"end": 11583,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11546,
											"end": 11584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 11546,
											"end": 11584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11546,
											"end": 11584,
											"name": "tag",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 11546,
											"end": 11584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11540,
											"end": 11544,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11496,
											"end": 11593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 11496,
											"end": 11593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11496,
											"end": 11593,
											"name": "tag",
											"source": 7,
											"value": "652"
										},
										{
											"begin": 11496,
											"end": 11593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11648,
											"end": 11652,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11648,
											"end": 11652,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11712,
											"end": 11714,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11701,
											"end": 11715,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11701,
											"end": 11715,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11729,
											"end": 11730,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11724,
											"end": 12387,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11724,
											"end": 12387,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11724,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "655"
										},
										{
											"begin": 11724,
											"end": 12387,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12431,
											"end": 12432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12448,
											"end": 12454,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12445,
											"end": 12534,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12445,
											"end": 12534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 12445,
											"end": 12534,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12500,
											"end": 12519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12500,
											"end": 12519,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12500,
											"end": 12519,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12494,
											"end": 12520,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12445,
											"end": 12534,
											"name": "tag",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 12445,
											"end": 12534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11249,
											"end": 11250,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 11245,
											"end": 11256,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11245,
											"end": 11256,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11245,
											"end": 11256,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 11241,
											"end": 11265,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 11237,
											"end": 11266,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 11227,
											"end": 11267,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11273,
											"end": 11274,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11269,
											"end": 11280,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11269,
											"end": 11280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11269,
											"end": 11280,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 11224,
											"end": 11281,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 12547,
											"end": 12628,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12547,
											"end": 12628,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11694,
											"end": 12638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 11694,
											"end": 12638,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11724,
											"end": 12387,
											"name": "tag",
											"source": 7,
											"value": "655"
										},
										{
											"begin": 11724,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10518,
											"end": 10519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10511,
											"end": 10525,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10511,
											"end": 10525,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10511,
											"end": 10525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10555,
											"end": 10559,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10542,
											"end": 10560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10542,
											"end": 10560,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11760,
											"end": 11780,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11760,
											"end": 11780,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11760,
											"end": 11780,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 12114,
											"name": "tag",
											"source": 7,
											"value": "659"
										},
										{
											"begin": 11878,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11892,
											"end": 11899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11889,
											"end": 11890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11886,
											"end": 11900,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 12114,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "661"
										},
										{
											"begin": 11878,
											"end": 12114,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11981,
											"end": 12000,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11981,
											"end": 12000,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11981,
											"end": 12000,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11975,
											"end": 12001,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11960,
											"end": 12002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11960,
											"end": 12002,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12073,
											"end": 12100,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 12073,
											"end": 12100,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12073,
											"end": 12100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12073,
											"end": 12100,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 12041,
											"end": 12042,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12029,
											"end": 12043,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12029,
											"end": 12043,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12029,
											"end": 12043,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12029,
											"end": 12043,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11908,
											"end": 11927,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11908,
											"end": 11927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "659"
										},
										{
											"begin": 11878,
											"end": 12114,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 12114,
											"name": "tag",
											"source": 7,
											"value": "661"
										},
										{
											"begin": 11878,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11882,
											"end": 11885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12142,
											"end": 12148,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12133,
											"end": 12140,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12130,
											"end": 12149,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12127,
											"end": 12328,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12127,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "662"
										},
										{
											"begin": 12127,
											"end": 12328,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12203,
											"end": 12222,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 12203,
											"end": 12222,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12203,
											"end": 12222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12197,
											"end": 12223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12286,
											"end": 12287,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 12282,
											"end": 12296,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 12282,
											"end": 12296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12282,
											"end": 12296,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 12298,
											"end": 12301,
											"name": "PUSH",
											"source": 7,
											"value": "F8"
										},
										{
											"begin": 12278,
											"end": 12302,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12274,
											"end": 12311,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 12270,
											"end": 12312,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 12255,
											"end": 12313,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12240,
											"end": 12314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12240,
											"end": 12314,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 12127,
											"end": 12328,
											"name": "tag",
											"source": 7,
											"value": "662"
										},
										{
											"begin": 12127,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12374,
											"end": 12375,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12358,
											"end": 12372,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12358,
											"end": 12372,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12358,
											"end": 12372,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 12354,
											"end": 12376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12341,
											"end": 12377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12341,
											"end": 12377,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11292,
											"end": 12644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12649,
											"end": 13145,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 12649,
											"end": 13145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12828,
											"end": 12831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12866,
											"end": 12872,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12860,
											"end": 12873,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12882,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "664"
										},
										{
											"begin": 12941,
											"end": 12947,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12936,
											"end": 12939,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12929,
											"end": 12933,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12921,
											"end": 12927,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 12917,
											"end": 12934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12882,
											"end": 12948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 12882,
											"end": 12948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12882,
											"end": 12948,
											"name": "tag",
											"source": 7,
											"value": "664"
										},
										{
											"begin": 12882,
											"end": 12948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12970,
											"end": 12986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12970,
											"end": 12986,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12970,
											"end": 12986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12970,
											"end": 12986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13033,
											"end": 13103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "665"
										},
										{
											"begin": 13011,
											"end": 13024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12970,
											"end": 12986,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13080,
											"end": 13084,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13068,
											"end": 13085,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 13068,
											"end": 13085,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13033,
											"end": 13103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 13033,
											"end": 13103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13033,
											"end": 13103,
											"name": "tag",
											"source": 7,
											"value": "665"
										},
										{
											"begin": 13033,
											"end": 13103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13119,
											"end": 13139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13119,
											"end": 13139,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 12649,
											"end": 13145,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12649,
											"end": 13145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14303,
											"end": 14792,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 14303,
											"end": 14792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14572,
											"end": 14587,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14572,
											"end": 14587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14572,
											"end": 14587,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14554,
											"end": 14588,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14554,
											"end": 14588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14624,
											"end": 14639,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14624,
											"end": 14639,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14619,
											"end": 14621,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14604,
											"end": 14622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14604,
											"end": 14622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14597,
											"end": 14640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14671,
											"end": 14673,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14656,
											"end": 14674,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14656,
											"end": 14674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14649,
											"end": 14683,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14649,
											"end": 14683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14649,
											"end": 14683,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14719,
											"end": 14722,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 14714,
											"end": 14716,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 14699,
											"end": 14717,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14699,
											"end": 14717,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14692,
											"end": 14723,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14692,
											"end": 14723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14692,
											"end": 14723,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14497,
											"end": 14501,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14497,
											"end": 14501,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14740,
											"end": 14786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "670"
										},
										{
											"begin": 14740,
											"end": 14786,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14766,
											"end": 14785,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14766,
											"end": 14785,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14758,
											"end": 14764,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14740,
											"end": 14786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 14740,
											"end": 14786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14740,
											"end": 14786,
											"name": "tag",
											"source": 7,
											"value": "670"
										},
										{
											"begin": 14740,
											"end": 14786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14732,
											"end": 14786,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 14303,
											"end": 14792,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14303,
											"end": 14792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14797,
											"end": 15046,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 14797,
											"end": 15046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14866,
											"end": 14872,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14919,
											"end": 14921,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14907,
											"end": 14916,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14898,
											"end": 14905,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14894,
											"end": 14917,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14890,
											"end": 14922,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 14887,
											"end": 14939,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14887,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "672"
										},
										{
											"begin": 14887,
											"end": 14939,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14935,
											"end": 14936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14932,
											"end": 14933,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14925,
											"end": 14937,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14887,
											"end": 14939,
											"name": "tag",
											"source": 7,
											"value": "672"
										},
										{
											"begin": 14887,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14967,
											"end": 14976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14961,
											"end": 14977,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 14986,
											"end": 15016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 15010,
											"end": 15015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14986,
											"end": 15016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 14986,
											"end": 15016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15051,
											"end": 15178,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 15051,
											"end": 15178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15112,
											"end": 15122,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 15107,
											"end": 15110,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 15103,
											"end": 15123,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 15100,
											"end": 15101,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15124,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15143,
											"end": 15147,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 15140,
											"end": 15141,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15133,
											"end": 15148,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15167,
											"end": 15171,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15164,
											"end": 15165,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15157,
											"end": 15172,
											"name": "REVERT",
											"source": 7
										}
									],
									".data": {
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"contracts/WOM_LAND.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"alreadyMinted(address)": "0a398b88",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"baseURI()": "6c0360eb",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"maxSupply()": "d5abeb01",
							"mint(uint256,uint256,uint256,bytes)": "4a9eee69",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerMint(address,uint256)": "484b973c",
							"ownerOf(uint256)": "6352211e",
							"pause(bool)": "02329a29",
							"paused()": "5c975abb",
							"publicMaxNFTPerAddress()": "0bab3262",
							"publicMint()": "26092b83",
							"publicPriceMint()": "ceda0dbd",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseUri(string)": "a0bcfc7f",
							"setPublicMaxNFTPerAddress(uint256)": "c48b1fa6",
							"setPublicMint(bool)": "0e2d56cf",
							"setPublicPrice(uint256)": "c6275255",
							"setSignerAddress(address)": "046dc166",
							"signerAddress()": "5b7633d0",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"verifyCoupon(uint256,uint256,address,bytes)": "8f9db08c",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"alreadyMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"ownerMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMaxNFTPerAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicPriceMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseuri_\",\"type\":\"string\"}],\"name\":\"setBaseUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_state\",\"type\":\"uint256\"}],\"name\":\"setPublicMaxNFTPerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setPublicMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_state\",\"type\":\"uint256\"}],\"name\":\"setPublicPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signerAddress_\",\"type\":\"address\"}],\"name\":\"setSignerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"minterAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verifyCoupon\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WOM_LAND.sol\":\"WomLand\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"contracts/WOM_LAND.sol\":{\"keccak256\":\"0x2701035a8da80a6f1d1527f4e031a6b9df4f8c1499061ef19fbcc3ce17855c6f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8aa4b88d93c92284de4a8cb3289492a82d9a49603d64781a7229c472986ea26c\",\"dweb:/ipfs/QmcNXqgdwh8JnLDcDEisuTYr9QQFBQhvfVC6KDMNn7461X\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1153,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1155,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1157,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1159,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1163,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1167,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1172,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)1085_storage)"
							},
							{
								"astId": 1178,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 7,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 732,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "baseURI",
								"offset": 0,
								"slot": "9",
								"type": "t_string_storage"
							},
							{
								"astId": 735,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "maxSupply",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 738,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "publicMaxNFTPerAddress",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 741,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "publicPriceMint",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 744,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "paused",
								"offset": 0,
								"slot": "13",
								"type": "t_bool"
							},
							{
								"astId": 747,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "publicMint",
								"offset": 1,
								"slot": "13",
								"type": "t_bool"
							},
							{
								"astId": 750,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "signerAddress",
								"offset": 2,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 754,
								"contract": "contracts/WOM_LAND.sol:WomLand",
								"label": "alreadyMinted",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)1085_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)1085_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)1085_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 1084,
										"contract": "contracts/WOM_LAND.sol:WomLand",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"erc721a/contracts/ERC721A.sol\":4946:5100  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"erc721a/contracts/ERC721A.sol\":5012:5017  _name */\n  0x02\n    /* \"erc721a/contracts/ERC721A.sol\":5012:5025  _name = name_ */\n  tag_6\n    /* \"erc721a/contracts/ERC721A.sol\":5020:5025  name_ */\n  dup4\n    /* \"erc721a/contracts/ERC721A.sol\":5012:5017  _name */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":5012:5025  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":5035:5042  _symbol */\n  0x03\n    /* \"erc721a/contracts/ERC721A.sol\":5035:5052  _symbol = symbol_ */\n  tag_8\n    /* \"erc721a/contracts/ERC721A.sol\":5045:5052  symbol_ */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":5035:5042  _symbol */\n  dup3\n    /* \"erc721a/contracts/ERC721A.sol\":5035:5052  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":5482:5489  uint256 */\n  0x00\n    /* \"erc721a/contracts/ERC721A.sol\":5062:5093  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_13:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_14:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_22:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_24\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_26\n  tag_13\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_27:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_28:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_28)\ntag_30:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_32:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_33:\n    /* \"#utility.yul\":1309:1370   */\n  tag_34\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_14\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_35:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_36\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_14\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_15:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_38:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_17:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_43:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_44:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_44)\ntag_46:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_42:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_50\n  tag_13\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2994:3091   */\n  tag_51\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_52\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_15\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_17\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_55:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_46)\n    /* \"#utility.yul\":3222:3885   */\ntag_54:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_58:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_61:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_19:\n    /* \"erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc721a/contracts/ERC721A.sol\":895:41347  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc721a/contracts/ERC721A.sol\":10039:10137  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":15812:16210  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"erc721a/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":6164:6176  _burnCounter */\n      sload(0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":5955:5962  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":6148:6161  _currentIndex */\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":6148:6176  _currentIndex - _burnCounter */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":2324:2349   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2297:2315   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":5894:6211  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":2178:2355   */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":19903:22667  function transferFrom(... */\n    tag_7:\n      tag_38\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":22758:22945  function safeTransferFrom(... */\n    tag_8:\n      tag_38\n      tag_52\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":11391:11541  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_32\n      tag_56\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":7045:7275  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_43\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":10208:10310  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_27\n      tag_67\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":16901:17132  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_38\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n    tag_13:\n      tag_38\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":10411:10724  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_27\n      tag_80\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_20\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":17402:17427  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":17379:17383  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17402:17427  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":17402:17420  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":17402:17427  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":17402:17437  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"erc721a/contracts/ERC721A.sol\":9240:9244  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":9558:9583  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":9558:9659  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_90\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":9634:9659  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":9558:9659  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"erc721a/contracts/ERC721A.sol\":9558:9735  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":9710:9735  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":9558:9735  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"erc721a/contracts/ERC721A.sol\":9539:9735  return... */\n      swap3\n        /* \"erc721a/contracts/ERC721A.sol\":9155:9785  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10039:10137  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"erc721a/contracts/ERC721A.sol\":10093:10106  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":10125:10130  _name */\n      0x02\n        /* \"erc721a/contracts/ERC721A.sol\":10118:10130  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10039:10137  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"erc721a/contracts/ERC721A.sol\":16436:16443  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":16460:16476  _exists(tokenId) */\n      tag_100\n        /* \"erc721a/contracts/ERC721A.sol\":16468:16475  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":16460:16467  _exists */\n      tag_101\n        /* \"erc721a/contracts/ERC721A.sol\":16460:16476  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"erc721a/contracts/ERC721A.sol\":16455:16519  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_102\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16485:16519  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":16455:16519  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_102:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":16537:16561  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":16537:16552  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":16537:16561  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":16537:16567  _tokenApprovals[tokenId].value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":16360:16574  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":15812:16210  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"erc721a/contracts/ERC721A.sol\":15900:15913  address owner */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":15916:15932  ownerOf(tokenId) */\n      tag_104\n        /* \"erc721a/contracts/ERC721A.sol\":15924:15931  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":15916:15923  ownerOf */\n      tag_57\n        /* \"erc721a/contracts/ERC721A.sol\":15916:15932  ownerOf(tokenId) */\n      jump\t// in\n    tag_104:\n        /* \"erc721a/contracts/ERC721A.sol\":15900:15932  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":15947:15975  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":15943:16115  if (_msgSenderERC721A() != owner)... */\n      tag_110\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":15994:16038  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_108\n        /* \"erc721a/contracts/ERC721A.sol\":16011:16016  owner */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":15994:16038  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_108:\n        /* \"erc721a/contracts/ERC721A.sol\":15989:16115  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_110\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":16065:16100  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":15989:16115  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_110:\n        /* \"erc721a/contracts/ERC721A.sol\":16125:16149  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":16125:16140  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":16125:16149  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":16125:16160  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":16175:16203  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":16125:16149  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"erc721a/contracts/ERC721A.sol\":16175:16203  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":15890:16210  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":15812:16210  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":19903:22667  function transferFrom(... */\n    tag_50:\n        /* \"erc721a/contracts/ERC721A.sol\":20040:20067  uint256 prevOwnershipPacked */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20070:20097  _packedOwnershipOf(tokenId) */\n      tag_115\n        /* \"erc721a/contracts/ERC721A.sol\":20089:20096  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":20070:20088  _packedOwnershipOf */\n      tag_116\n        /* \"erc721a/contracts/ERC721A.sol\":20070:20097  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_115:\n        /* \"erc721a/contracts/ERC721A.sol\":20040:20097  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":20153:20157  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":20112:20157  address(uint160(prevOwnershipPacked)) != from */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":20128:20147  prevOwnershipPacked */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":20112:20157  address(uint160(prevOwnershipPacked)) != from */\n      and\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":20108:20194  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_117\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":20166:20194  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":20108:20194  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_117:\n        /* \"erc721a/contracts/ERC721A.sol\":20206:20233  uint256 approvedAddressSlot */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":19036:19060  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":19036:19051  _tokenApprovals */\n      0x06\n        /* \"erc721a/contracts/ERC721A.sol\":19036:19060  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":19260:19286  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":18673:18703  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":18370:18398  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":18651:18671  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":18648:18704  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":20389:20568  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_126\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":20481:20524  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_124\n        /* \"erc721a/contracts/ERC721A.sol\":20498:20502  from */\n      dup7\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":17282:17444  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":20481:20524  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_124:\n        /* \"erc721a/contracts/ERC721A.sol\":20476:20568  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_126\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":20533:20568  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":20476:20568  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":20583:20599  to == address(0) */\n      dup6\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":20579:20631  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_127\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":20608:20631  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":20579:20631  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_127:\n        /* \"erc721a/contracts/ERC721A.sol\":20774:20789  approvedAddress */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":20771:20928  if approvedAddress {... */\n      iszero\n      tag_130\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":20912:20913  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":20891:20910  approvedAddressSlot */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":20884:20914  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":20771:20928  if approvedAddress {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":21300:21324  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":21300:21318  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":21300:21324  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":21298:21324  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":21368:21390  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":21366:21390  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":14703:14714  timestamp() */\n      timestamp\n        /* \"erc721a/contracts/ERC721A.sol\":14678:14701  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":14674:14715  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"erc721a/contracts/ERC721A.sol\":14661:14724  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"erc721a/contracts/ERC721A.sol\":21654:21680  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":21654:21671  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":21654:21680  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":21654:21826  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n      shl(0xe1, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":21943:21990  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":21943:21995  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":21939:22556  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_135\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22047:22048  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":22037:22048  tokenId + 1 */\n      dup5\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":22015:22034  uint256 nextTokenId */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":22168:22198  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":22168:22185  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":22168:22198  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":22168:22203  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":22164:22542  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_137\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22304:22317  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":22289:22300  nextTokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":22289:22317  nextTokenId != _currentIndex */\n      eq\n        /* \"erc721a/contracts/ERC721A.sol\":22285:22524  if (nextTokenId != _currentIndex) {... */\n      tag_137\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":22449:22479  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":22449:22466  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":22449:22479  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":22449:22501  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":22285:22524  if (nextTokenId != _currentIndex) {... */\n    tag_137:\n        /* \"erc721a/contracts/ERC721A.sol\":21997:22556  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":21939:22556  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_135:\n        /* \"erc721a/contracts/ERC721A.sol\":22600:22607  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":22596:22598  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22581:22608  Transfer(from, to, tokenId) */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":22590:22594  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":22581:22608  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"erc721a/contracts/ERC721A.sol\":20030:22667  {... */\n      pop\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":19903:22667  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":22758:22945  function safeTransferFrom(... */\n    tag_53:\n        /* \"erc721a/contracts/ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      tag_141\n        /* \"erc721a/contracts/ERC721A.sol\":22916:22920  from */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":22922:22924  to */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":22926:22933  tokenId */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":22899:22915  safeTransferFrom */\n      tag_77\n        /* \"erc721a/contracts/ERC721A.sol\":22899:22938  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_141:\n        /* \"erc721a/contracts/ERC721A.sol\":22758:22945  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":11391:11541  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"erc721a/contracts/ERC721A.sol\":11463:11470  address */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":11505:11532  _packedOwnershipOf(tokenId) */\n      tag_91\n        /* \"erc721a/contracts/ERC721A.sol\":11524:11531  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":11505:11523  _packedOwnershipOf */\n      tag_116\n        /* \"erc721a/contracts/ERC721A.sol\":11505:11532  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":7045:7275  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"erc721a/contracts/ERC721A.sol\":7117:7124  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":7140:7159  owner == address(0) */\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":7136:7196  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_145\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":7168:7196  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":7136:7196  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_145:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":7213:7238  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":7213:7231  _packedAddressData */\n      0x05\n        /* \"erc721a/contracts/ERC721A.sol\":7213:7238  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":1360:1373  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"erc721a/contracts/ERC721A.sol\":7213:7268  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":7045:7275  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10208:10310  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"erc721a/contracts/ERC721A.sol\":10264:10277  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":10296:10303  _symbol */\n      0x03\n        /* \"erc721a/contracts/ERC721A.sol\":10289:10303  return _symbol */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n        /* \"erc721a/contracts/ERC721A.sol\":16901:17132  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n        /* \"erc721a/contracts/ERC721A.sol\":16995:17034  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":16995:17013  _operatorApprovals */\n      0x07\n        /* \"erc721a/contracts/ERC721A.sol\":16995:17034  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":16995:17044  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"erc721a/contracts/ERC721A.sol\":16995:17055  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"erc721a/contracts/ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":16995:17044  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      swap2\n        /* \"erc721a/contracts/ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":17070:17125  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"erc721a/contracts/ERC721A.sol\":16901:17132  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n    tag_77:\n        /* \"erc721a/contracts/ERC721A.sol\":23695:23726  transferFrom(from, to, tokenId) */\n      tag_157\n        /* \"erc721a/contracts/ERC721A.sol\":23708:23712  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23714:23716  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23718:23725  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23695:23707  transferFrom */\n      tag_50\n        /* \"erc721a/contracts/ERC721A.sol\":23695:23726  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_157:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":23740:23754  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"erc721a/contracts/ERC721A.sol\":23740:23759  to.code.length != 0 */\n      iszero\n        /* \"erc721a/contracts/ERC721A.sol\":23736:23916  if (to.code.length != 0)... */\n      tag_161\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":23778:23834  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_159\n        /* \"erc721a/contracts/ERC721A.sol\":23809:23813  from */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23815:23817  to */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23819:23826  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23828:23833  _data */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":23778:23808  _checkContractOnERC721Received */\n      tag_160\n        /* \"erc721a/contracts/ERC721A.sol\":23778:23834  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_159:\n        /* \"erc721a/contracts/ERC721A.sol\":23773:23916  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_161\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":23861:23901  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":23773:23916  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_161:\n        /* \"erc721a/contracts/ERC721A.sol\":23526:23922  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":10411:10724  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"erc721a/contracts/ERC721A.sol\":10484:10497  string memory */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":10514:10530  _exists(tokenId) */\n      tag_163\n        /* \"erc721a/contracts/ERC721A.sol\":10522:10529  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":10514:10521  _exists */\n      tag_101\n        /* \"erc721a/contracts/ERC721A.sol\":10514:10530  _exists(tokenId) */\n      jump\t// in\n    tag_163:\n        /* \"erc721a/contracts/ERC721A.sol\":10509:10568  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_164\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":10539:10568  URIQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe4, 0x0a14c4b5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":10509:10568  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_164:\n        /* \"erc721a/contracts/ERC721A.sol\":10579:10600  string memory baseURI */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":10603:10613  _baseURI() */\n      tag_165\n        /* \"erc721a/contracts/ERC721A.sol\":11045:11054  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":10969:11061  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"erc721a/contracts/ERC721A.sol\":10603:10613  _baseURI() */\n    tag_165:\n        /* \"erc721a/contracts/ERC721A.sol\":10579:10613  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":10636:10643  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":10630:10651  bytes(baseURI).length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":10655:10656  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":10630:10656  bytes(baseURI).length != 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":10630:10717  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_167\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_168)\n    tag_167:\n        /* \"erc721a/contracts/ERC721A.sol\":10683:10690  baseURI */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":10692:10710  _toString(tokenId) */\n      tag_169\n        /* \"erc721a/contracts/ERC721A.sol\":10702:10709  tokenId */\n      dup5\n        /* \"erc721a/contracts/ERC721A.sol\":10692:10701  _toString */\n      tag_170\n        /* \"erc721a/contracts/ERC721A.sol\":10692:10710  _toString(tokenId) */\n      jump\t// in\n    tag_169:\n        /* \"erc721a/contracts/ERC721A.sol\":10666:10711  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":10630:10717  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_168:\n        /* \"erc721a/contracts/ERC721A.sol\":10623:10717  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"erc721a/contracts/ERC721A.sol\":10411:10724  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":17693:17970  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_101:\n        /* \"erc721a/contracts/ERC721A.sol\":17758:17762  bool */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":17845:17858  _currentIndex */\n      dup1\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":17835:17842  tokenId */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":17835:17858  tokenId < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":17793:17944  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":17895:17921  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":17895:17912  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":17895:17921  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":17895:17939  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":17895:17944  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":17693:17970  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":12515:13764  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {... */\n    tag_116:\n        /* \"erc721a/contracts/ERC721A.sol\":12582:12589  uint256 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12616:12623  tokenId */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":12714:12727  _currentIndex */\n      sload(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":12707:12711  curr */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":12707:12727  curr < _currentIndex */\n      lt\n        /* \"erc721a/contracts/ERC721A.sol\":12703:13700  if (curr < _currentIndex) {... */\n      iszero\n      tag_183\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":12751:12765  uint256 packed */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":12768:12791  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":12768:12785  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":12768:12791  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n      shl(0xe0, 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":12855:12879  packed & _BITMASK_BURNED */\n      dup3\n      and\n        /* \"erc721a/contracts/ERC721A.sol\":12855:12884  packed & _BITMASK_BURNED == 0 */\n      swap1\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":12851:13682  if (packed & _BITMASK_BURNED == 0) {... */\n      tag_184\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":13510:13621  while (packed == 0) {... */\n    tag_185:\n        /* \"erc721a/contracts/ERC721A.sol\":13517:13523  packed */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":13527:13528  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":13517:13528  packed == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":13510:13621  while (packed == 0) {... */\n      tag_168\n      jumpi\n      pop\n      not(0x00)\n        /* \"erc721a/contracts/ERC721A.sol\":13587:13593  --curr */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":13569:13594  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":13569:13586  _packedOwnerships */\n      0x04\n        /* \"erc721a/contracts/ERC721A.sol\":13569:13594  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"erc721a/contracts/ERC721A.sol\":13510:13621  while (packed == 0) {... */\n      jump(tag_185)\n        /* \"erc721a/contracts/ERC721A.sol\":12851:13682  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_184:\n        /* \"erc721a/contracts/ERC721A.sol\":12729:13700  {... */\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":12703:13700  if (curr < _currentIndex) {... */\n    tag_183:\n        /* \"erc721a/contracts/ERC721A.sol\":13726:13757  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":25948:26645  function _checkContractOnERC721Received(... */\n    tag_160:\n        /* \"erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":26106:26110  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc721a/contracts/ERC721A.sol\":26126:26171  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_197\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":39523:39533  msg.sender */\n      caller\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":26193:26197  from */\n      dup10\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":26199:26206  tokenId */\n      dup9\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":26208:26213  _data */\n      dup9\n      swap1\n        /* \"erc721a/contracts/ERC721A.sol\":26126:26214  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_199\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_200\n      swap2\n      dup2\n      add\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      0x01\n    tag_199:\n        /* \"erc721a/contracts/ERC721A.sol\":26122:26639  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_202\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_207\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_206)\n    tag_207:\n      0x60\n      swap2\n      pop\n    tag_206:\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":26404:26410  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":26404:26417  reason.length */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":26421:26422  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":26404:26422  reason.length == 0 */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":26400:26629  if (reason.length == 0) {... */\n      tag_208\n      jumpi\n        /* \"erc721a/contracts/ERC721A.sol\":26449:26489  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":26400:26629  if (reason.length == 0) {... */\n    tag_208:\n        /* \"erc721a/contracts/ERC721A.sol\":26589:26595  reason */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":26583:26596  mload(reason) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":26574:26580  reason */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":26570:26572  32 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":26566:26581  add(32, reason) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":26559:26597  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"erc721a/contracts/ERC721A.sol\":26122:26639  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_202:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"erc721a/contracts/ERC721A.sol\":26282:26346  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":25948:26645  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc721a/contracts/ERC721A.sol\":39637:41345  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_170:\n        /* \"erc721a/contracts/ERC721A.sol\":39702:39719  string memory str */\n      0x60\n        /* \"erc721a/contracts/ERC721A.sol\":40130:40134  0xa0 */\n      0xa0\n        /* \"erc721a/contracts/ERC721A.sol\":40123:40127  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":40117:40128  mload(0x40) */\n      mload\n        /* \"erc721a/contracts/ERC721A.sol\":40113:40135  add(mload(0x40), 0xa0) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":40220:40221  m */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":40214:40218  0x40 */\n      0x40\n        /* \"erc721a/contracts/ERC721A.sol\":40207:40222  mstore(0x40, m) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":40293:40297  0x20 */\n      0x20\n        /* \"erc721a/contracts/ERC721A.sol\":40290:40291  m */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":40286:40298  sub(m, 0x20) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":40279:40298  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":40373:40374  0 */\n      0x00\n        /* \"erc721a/contracts/ERC721A.sol\":40368:40371  str */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":40361:40375  mstore(str, 0) */\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":40474:40477  str */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":40708:40713  value */\n      dup3\n        /* \"erc721a/contracts/ERC721A.sol\":40690:41109  for { let temp := value } 1 {} {... */\n    tag_213:\n        /* \"erc721a/contracts/ERC721A.sol\":40755:40756  1 */\n      0x01\n        /* \"erc721a/contracts/ERC721A.sol\":40750:40753  str */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":40746:40757  sub(str, 1) */\n      sub\n        /* \"erc721a/contracts/ERC721A.sol\":40739:40757  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":40923:40925  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":40917:40921  temp */\n      dup2\n        /* \"erc721a/contracts/ERC721A.sol\":40913:40926  mod(temp, 10) */\n      mod\n        /* \"erc721a/contracts/ERC721A.sol\":40909:40911  48 */\n      0x30\n        /* \"erc721a/contracts/ERC721A.sol\":40905:40927  add(48, mod(temp, 10)) */\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":40900:40903  str */\n      dup4\n        /* \"erc721a/contracts/ERC721A.sol\":40892:40928  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"erc721a/contracts/ERC721A.sol\":41015:41017  10 */\n      0x0a\n        /* \"erc721a/contracts/ERC721A.sol\":41005:41018  div(temp, 10) */\n      swap1\n      div\n        /* \"erc721a/contracts/ERC721A.sol\":41070:41095  if iszero(temp) { break } */\n      dup1\n        /* \"erc721a/contracts/ERC721A.sol\":40690:41109  for { let temp := value } 1 {} {... */\n      tag_213\n        /* \"erc721a/contracts/ERC721A.sol\":41070:41095  if iszero(temp) { break } */\n      jumpi\n      pop\n        /* \"erc721a/contracts/ERC721A.sol\":41137:41150  sub(end, str) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"erc721a/contracts/ERC721A.sol\":41250:41264  sub(str, 0x20) */\n      swap1\n      swap2\n      add\n        /* \"erc721a/contracts/ERC721A.sol\":41310:41329  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"erc721a/contracts/ERC721A.sol\":41250:41264  sub(str, 0x20) */\n      swap2\n        /* \"erc721a/contracts/ERC721A.sol\":39637:41345  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_218:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_225:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_22:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_227:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_168\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_218\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_219:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_231:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_231)\n    tag_233:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_220:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_235\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_219\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_30:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_168\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_220\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_34:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_239:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_221:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_242:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_40:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_244:\n        /* \"#utility.yul\":2087:2116   */\n      tag_245\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_221\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2360:2688   */\n    tag_49:\n        /* \"#utility.yul\":2437:2443   */\n      0x00\n        /* \"#utility.yul\":2445:2451   */\n      dup1\n        /* \"#utility.yul\":2453:2459   */\n      0x00\n        /* \"#utility.yul\":2506:2508   */\n      0x60\n        /* \"#utility.yul\":2494:2503   */\n      dup5\n        /* \"#utility.yul\":2485:2492   */\n      dup7\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2526   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":2522:2523   */\n      0x00\n        /* \"#utility.yul\":2519:2520   */\n      dup1\n        /* \"#utility.yul\":2512:2524   */\n      revert\n        /* \"#utility.yul\":2474:2526   */\n    tag_248:\n        /* \"#utility.yul\":2545:2574   */\n      tag_249\n        /* \"#utility.yul\":2564:2573   */\n      dup5\n        /* \"#utility.yul\":2545:2574   */\n      tag_221\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2535:2574   */\n      swap3\n      pop\n        /* \"#utility.yul\":2593:2631   */\n      tag_250\n        /* \"#utility.yul\":2627:2629   */\n      0x20\n        /* \"#utility.yul\":2616:2625   */\n      dup6\n        /* \"#utility.yul\":2612:2630   */\n      add\n        /* \"#utility.yul\":2593:2631   */\n      tag_221\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2583:2631   */\n      swap2\n      pop\n        /* \"#utility.yul\":2678:2680   */\n      0x40\n        /* \"#utility.yul\":2667:2676   */\n      dup5\n        /* \"#utility.yul\":2663:2681   */\n      add\n        /* \"#utility.yul\":2650:2682   */\n      calldataload\n        /* \"#utility.yul\":2640:2682   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2688   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2693:2879   */\n    tag_62:\n        /* \"#utility.yul\":2752:2758   */\n      0x00\n        /* \"#utility.yul\":2805:2807   */\n      0x20\n        /* \"#utility.yul\":2793:2802   */\n      dup3\n        /* \"#utility.yul\":2784:2791   */\n      dup5\n        /* \"#utility.yul\":2780:2803   */\n      sub\n        /* \"#utility.yul\":2776:2808   */\n      slt\n        /* \"#utility.yul\":2773:2825   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":2821:2822   */\n      0x00\n        /* \"#utility.yul\":2818:2819   */\n      dup1\n        /* \"#utility.yul\":2811:2823   */\n      revert\n        /* \"#utility.yul\":2773:2825   */\n    tag_252:\n        /* \"#utility.yul\":2844:2873   */\n      tag_168\n        /* \"#utility.yul\":2863:2872   */\n      dup3\n        /* \"#utility.yul\":2844:2873   */\n      tag_221\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_72:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_255:\n        /* \"#utility.yul\":3049:3078   */\n      tag_256\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_221\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_257:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_222:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:4506   */\n    tag_76:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup1\n        /* \"#utility.yul\":3479:3485   */\n      0x00\n        /* \"#utility.yul\":3487:3493   */\n      dup1\n        /* \"#utility.yul\":3540:3543   */\n      0x80\n        /* \"#utility.yul\":3528:3537   */\n      dup6\n        /* \"#utility.yul\":3519:3526   */\n      dup8\n        /* \"#utility.yul\":3515:3538   */\n      sub\n        /* \"#utility.yul\":3511:3544   */\n      slt\n        /* \"#utility.yul\":3508:3561   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3554:3555   */\n      dup1\n        /* \"#utility.yul\":3547:3559   */\n      revert\n        /* \"#utility.yul\":3508:3561   */\n    tag_260:\n        /* \"#utility.yul\":3580:3609   */\n      tag_261\n        /* \"#utility.yul\":3599:3608   */\n      dup6\n        /* \"#utility.yul\":3580:3609   */\n      tag_221\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3570:3609   */\n      swap4\n      pop\n        /* \"#utility.yul\":3628:3666   */\n      tag_262\n        /* \"#utility.yul\":3662:3664   */\n      0x20\n        /* \"#utility.yul\":3651:3660   */\n      dup7\n        /* \"#utility.yul\":3647:3665   */\n      add\n        /* \"#utility.yul\":3628:3666   */\n      tag_221\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3618:3666   */\n      swap3\n      pop\n        /* \"#utility.yul\":3713:3715   */\n      0x40\n        /* \"#utility.yul\":3702:3711   */\n      dup6\n        /* \"#utility.yul\":3698:3716   */\n      add\n        /* \"#utility.yul\":3685:3717   */\n      calldataload\n        /* \"#utility.yul\":3675:3717   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3770   */\n      0x60\n        /* \"#utility.yul\":3757:3766   */\n      dup6\n        /* \"#utility.yul\":3753:3771   */\n      add\n        /* \"#utility.yul\":3740:3772   */\n      calldataload\n        /* \"#utility.yul\":3791:3809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3832:3834   */\n      dup1\n        /* \"#utility.yul\":3824:3830   */\n      dup3\n        /* \"#utility.yul\":3821:3835   */\n      gt\n        /* \"#utility.yul\":3818:3852   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3845:3846   */\n      dup1\n        /* \"#utility.yul\":3838:3850   */\n      revert\n        /* \"#utility.yul\":3818:3852   */\n    tag_263:\n        /* \"#utility.yul\":3886:3892   */\n      dup2\n        /* \"#utility.yul\":3875:3884   */\n      dup8\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3861:3893   */\n      swap2\n      pop\n        /* \"#utility.yul\":3931:3938   */\n      dup8\n        /* \"#utility.yul\":3924:3928   */\n      0x1f\n        /* \"#utility.yul\":3920:3922   */\n      dup4\n        /* \"#utility.yul\":3916:3929   */\n      add\n        /* \"#utility.yul\":3912:3939   */\n      slt\n        /* \"#utility.yul\":3902:3957   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3950:3951   */\n      dup1\n        /* \"#utility.yul\":3943:3955   */\n      revert\n        /* \"#utility.yul\":3902:3957   */\n    tag_264:\n        /* \"#utility.yul\":3989:3991   */\n      dup2\n        /* \"#utility.yul\":3976:3992   */\n      calldataload\n        /* \"#utility.yul\":4011:4013   */\n      dup2\n        /* \"#utility.yul\":4007:4009   */\n      dup2\n        /* \"#utility.yul\":4004:4014   */\n      gt\n        /* \"#utility.yul\":4001:4037   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":4017:4035   */\n      tag_266\n      tag_222\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4092:4094   */\n      0x40\n        /* \"#utility.yul\":4086:4095   */\n      mload\n        /* \"#utility.yul\":4060:4062   */\n      0x1f\n        /* \"#utility.yul\":4146:4159   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4142:4164   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4166:4168   */\n      0x3f\n        /* \"#utility.yul\":4138:4169   */\n      add\n        /* \"#utility.yul\":4134:4174   */\n      and\n        /* \"#utility.yul\":4122:4175   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4190:4208   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4210:4232   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4187:4233   */\n      or\n        /* \"#utility.yul\":4184:4256   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":4236:4254   */\n      tag_268\n      tag_222\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":4276:4286   */\n      dup2\n        /* \"#utility.yul\":4272:4274   */\n      0x40\n        /* \"#utility.yul\":4265:4287   */\n      mstore\n        /* \"#utility.yul\":4311:4313   */\n      dup3\n        /* \"#utility.yul\":4303:4309   */\n      dup2\n        /* \"#utility.yul\":4296:4314   */\n      mstore\n        /* \"#utility.yul\":4351:4358   */\n      dup11\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4343   */\n      dup5\n        /* \"#utility.yul\":4337:4339   */\n      dup8\n        /* \"#utility.yul\":4333:4344   */\n      add\n        /* \"#utility.yul\":4329:4349   */\n      add\n        /* \"#utility.yul\":4326:4359   */\n      gt\n        /* \"#utility.yul\":4323:4376   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4369:4370   */\n      dup1\n        /* \"#utility.yul\":4362:4374   */\n      revert\n        /* \"#utility.yul\":4323:4376   */\n    tag_269:\n        /* \"#utility.yul\":4428:4430   */\n      dup3\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4419:4421   */\n      dup7\n        /* \"#utility.yul\":4415:4426   */\n      add\n        /* \"#utility.yul\":4410:4412   */\n      0x20\n        /* \"#utility.yul\":4402:4408   */\n      dup4\n        /* \"#utility.yul\":4398:4413   */\n      add\n        /* \"#utility.yul\":4385:4431   */\n      calldatacopy\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4463:4465   */\n      dup5\n        /* \"#utility.yul\":4455:4461   */\n      dup4\n        /* \"#utility.yul\":4451:4466   */\n      add\n        /* \"#utility.yul\":4447:4471   */\n      add\n        /* \"#utility.yul\":4440:4475   */\n      mstore\n        /* \"#utility.yul\":4494:4500   */\n      dup1\n        /* \"#utility.yul\":4484:4500   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:4506   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4511:4771   */\n    tag_86:\n        /* \"#utility.yul\":4579:4585   */\n      0x00\n        /* \"#utility.yul\":4587:4593   */\n      dup1\n        /* \"#utility.yul\":4640:4642   */\n      0x40\n        /* \"#utility.yul\":4628:4637   */\n      dup4\n        /* \"#utility.yul\":4619:4626   */\n      dup6\n        /* \"#utility.yul\":4615:4638   */\n      sub\n        /* \"#utility.yul\":4611:4643   */\n      slt\n        /* \"#utility.yul\":4608:4660   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":4656:4657   */\n      0x00\n        /* \"#utility.yul\":4653:4654   */\n      dup1\n        /* \"#utility.yul\":4646:4658   */\n      revert\n        /* \"#utility.yul\":4608:4660   */\n    tag_271:\n        /* \"#utility.yul\":4679:4708   */\n      tag_272\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4679:4708   */\n      tag_221\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4669:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4727:4765   */\n      tag_273\n        /* \"#utility.yul\":4761:4763   */\n      0x20\n        /* \"#utility.yul\":4750:4759   */\n      dup5\n        /* \"#utility.yul\":4746:4764   */\n      add\n        /* \"#utility.yul\":4727:4765   */\n      tag_221\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4717:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4511:4771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5156   */\n    tag_94:\n        /* \"#utility.yul\":4855:4856   */\n      0x01\n        /* \"#utility.yul\":4851:4863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4898:4910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4919:4980   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4973:4977   */\n      0x7f\n        /* \"#utility.yul\":4965:4971   */\n      dup3\n        /* \"#utility.yul\":4961:4978   */\n      and\n        /* \"#utility.yul\":4951:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:4980   */\n    tag_275:\n        /* \"#utility.yul\":5026:5028   */\n      0x20\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5015:5029   */\n      lt\n        /* \"#utility.yul\":4995:5013   */\n      dup2\n        /* \"#utility.yul\":4992:5030   */\n      sub\n        /* \"#utility.yul\":4989:5150   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":5072:5082   */\n      0x4e487b71\n        /* \"#utility.yul\":5067:5070   */\n      0xe0\n        /* \"#utility.yul\":5063:5083   */\n      shl\n        /* \"#utility.yul\":5060:5061   */\n      0x00\n        /* \"#utility.yul\":5053:5084   */\n      mstore\n        /* \"#utility.yul\":5107:5111   */\n      0x22\n        /* \"#utility.yul\":5104:5105   */\n      0x04\n        /* \"#utility.yul\":5097:5112   */\n      mstore\n        /* \"#utility.yul\":5135:5139   */\n      0x24\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5140   */\n      revert\n        /* \"#utility.yul\":4989:5150   */\n    tag_276:\n      pop\n        /* \"#utility.yul\":4776:5156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5161:5657   */\n    tag_172:\n        /* \"#utility.yul\":5340:5343   */\n      0x00\n        /* \"#utility.yul\":5378:5384   */\n      dup4\n        /* \"#utility.yul\":5372:5385   */\n      mload\n        /* \"#utility.yul\":5394:5460   */\n      tag_278\n        /* \"#utility.yul\":5453:5459   */\n      dup2\n        /* \"#utility.yul\":5448:5451   */\n      dup5\n        /* \"#utility.yul\":5441:5445   */\n      0x20\n        /* \"#utility.yul\":5433:5439   */\n      dup9\n        /* \"#utility.yul\":5429:5446   */\n      add\n        /* \"#utility.yul\":5394:5460   */\n      tag_219\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":5523:5536   */\n      dup4\n      mload\n        /* \"#utility.yul\":5482:5498   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":5545:5615   */\n      tag_279\n        /* \"#utility.yul\":5523:5536   */\n      dup2\n        /* \"#utility.yul\":5482:5498   */\n      dup4\n        /* \"#utility.yul\":5592:5596   */\n      0x20\n        /* \"#utility.yul\":5580:5597   */\n      dup9\n      add\n        /* \"#utility.yul\":5545:5615   */\n      tag_219\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5631:5651   */\n      add\n      swap5\n        /* \"#utility.yul\":5161:5657   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5662:6151   */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5931:5946   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":5913:5947   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5983:5998   */\n      dup5\n      and\n        /* \"#utility.yul\":5978:5980   */\n      0x20\n        /* \"#utility.yul\":5963:5981   */\n      dup3\n      add\n        /* \"#utility.yul\":5956:5999   */\n      mstore\n        /* \"#utility.yul\":6030:6032   */\n      0x40\n        /* \"#utility.yul\":6015:6033   */\n      dup2\n      add\n        /* \"#utility.yul\":6008:6042   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6078:6081   */\n      0x80\n        /* \"#utility.yul\":6073:6075   */\n      0x60\n        /* \"#utility.yul\":6058:6076   */\n      dup3\n      add\n        /* \"#utility.yul\":6051:6082   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5856:5860   */\n      0x00\n      swap1\n        /* \"#utility.yul\":6099:6145   */\n      tag_281\n      swap1\n        /* \"#utility.yul\":6125:6144   */\n      dup4\n      add\n        /* \"#utility.yul\":6117:6123   */\n      dup5\n        /* \"#utility.yul\":6099:6145   */\n      tag_220\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":6091:6145   */\n      swap7\n        /* \"#utility.yul\":5662:6151   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6156:6405   */\n    tag_201:\n        /* \"#utility.yul\":6225:6231   */\n      0x00\n        /* \"#utility.yul\":6278:6280   */\n      0x20\n        /* \"#utility.yul\":6266:6275   */\n      dup3\n        /* \"#utility.yul\":6257:6264   */\n      dup5\n        /* \"#utility.yul\":6253:6276   */\n      sub\n        /* \"#utility.yul\":6249:6281   */\n      slt\n        /* \"#utility.yul\":6246:6298   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":6294:6295   */\n      0x00\n        /* \"#utility.yul\":6291:6292   */\n      dup1\n        /* \"#utility.yul\":6284:6296   */\n      revert\n        /* \"#utility.yul\":6246:6298   */\n    tag_283:\n        /* \"#utility.yul\":6326:6335   */\n      dup2\n        /* \"#utility.yul\":6320:6336   */\n      mload\n        /* \"#utility.yul\":6345:6375   */\n      tag_168\n        /* \"#utility.yul\":6369:6374   */\n      dup2\n        /* \"#utility.yul\":6345:6375   */\n      tag_218\n      jump\t// in\n\n    auxdata: 0xa264697066735822122034e6ff40276c3c53ad57530091ce6a881c5a48055451d5bc3ec0894be82c005464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1199": {
									"entryPoint": null,
									"id": 1199,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_1208": {
									"entryPoint": null,
									"id": 1208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 94,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:7"
															},
															"nodeType": "YulIf",
															"src": "220:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:7"
															},
															"nodeType": "YulIf",
															"src": "353:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:7"
															},
															"nodeType": "YulIf",
															"src": "536:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:7"
															},
															"nodeType": "YulIf",
															"src": "698:53:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:7"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:7",
																"statements": []
															},
															"src": "779:133:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:7",
														"type": ""
													}
												],
												"src": "146:840:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:7"
															},
															"nodeType": "YulIf",
															"src": "1119:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:7"
															},
															"nodeType": "YulIf",
															"src": "1256:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:7"
															},
															"nodeType": "YulIf",
															"src": "1429:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:7",
														"type": ""
													}
												],
												"src": "991:562:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:7"
															},
															"nodeType": "YulIf",
															"src": "1701:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:7"
															},
															"nodeType": "YulIf",
															"src": "1771:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:7",
														"type": ""
													}
												],
												"src": "1558:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:7",
														"type": ""
													}
												],
												"src": "1943:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:7",
																			"statements": []
																		},
																		"src": "2516:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:7"
															},
															"nodeType": "YulIf",
															"src": "2160:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:7",
														"type": ""
													}
												],
												"src": "2069:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:7",
														"type": ""
													}
												],
												"src": "2619:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:7"
															},
															"nodeType": "YulIf",
															"src": "2929:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:7",
																					"statements": []
																				},
																				"src": "3376:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:7",
														"type": ""
													}
												],
												"src": "2790:1352:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200104e3803806200104e833981016040819052620000349162000123565b60026200004283826200021c565b5060036200005182826200021c565b50506000805550620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d5680620002f86000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb46514610224578063b88d4fde14610244578063c87b56dd14610257578063e985e9c51461027757600080fd5b80636352211e146101cf57806370a08231146101ef57806395d89b411461020f57600080fd5b8063095ea7b3116100bb578063095ea7b31461017157806318160ddd1461018657806323b872dd146101a957806342842e0e146101bc57600080fd5b806301ffc9a7146100e257806306fdde0314610117578063081812fc14610139575b600080fd5b3480156100ee57600080fd5b506101026100fd3660046109c6565b6102c0565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b5061012c610312565b60405161010e9190610a33565b34801561014557600080fd5b50610159610154366004610a46565b6103a4565b6040516001600160a01b03909116815260200161010e565b61018461017f366004610a7b565b6103e8565b005b34801561019257600080fd5b50600154600054035b60405190815260200161010e565b6101846101b7366004610aa5565b610488565b6101846101ca366004610aa5565b610620565b3480156101db57600080fd5b506101596101ea366004610a46565b610640565b3480156101fb57600080fd5b5061019b61020a366004610ae1565b61064b565b34801561021b57600080fd5b5061012c61069a565b34801561023057600080fd5b5061018461023f366004610afc565b6106a9565b610184610252366004610b4e565b610715565b34801561026357600080fd5b5061012c610272366004610a46565b61075f565b34801561028357600080fd5b50610102610292366004610c2a565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b0319831614806102f157506380ac58cd60e01b6001600160e01b03198316145b8061030c5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461032190610c5d565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90610c5d565b801561039a5780601f1061036f5761010080835404028352916020019161039a565b820191906000526020600020905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b60006103af826107f0565b6103cc576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006103f382610640565b9050336001600160a01b0382161461042c5761040f8133610292565b61042c576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061049382610817565b9050836001600160a01b0316816001600160a01b0316146104c65760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b03881690911417610513576104f68633610292565b61051357604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661053a57604051633a954ecd60e21b815260040160405180910390fd5b801561054557600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b841690036105d7576001840160008181526004602052604081205490036105d55760005481146105d55760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b61063b83838360405180602001604052806000815250610715565b505050565b600061030c82610817565b60006001600160a01b038216610674576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b60606003805461032190610c5d565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610720848484610488565b6001600160a01b0383163b156107595761073c8484848461087e565b610759576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061076a826107f0565b61078757604051630a14c4b560e41b815260040160405180910390fd5b600061079e60408051602081019091526000815290565b905080516000036107be57604051806020016040528060008152506107e9565b806107c884610969565b6040516020016107d9929190610c97565b6040516020818303038152906040525b9392505050565b600080548210801561030c575050600090815260046020526040902054600160e01b161590565b6000816000548110156108655760008181526004602052604081205490600160e01b82169003610863575b806000036107e9575060001901600081815260046020526040902054610842565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906108b3903390899088908890600401610cc6565b6020604051808303816000875af19250505080156108ee575060408051601f3d908101601f191682019092526108eb91810190610d03565b60015b61094c573d80801561091c576040519150601f19603f3d011682016040523d82523d6000602084013e610921565b606091505b508051600003610944576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806109835750819003601f19909101908152919050565b6001600160e01b0319811681146109c357600080fd5b50565b6000602082840312156109d857600080fd5b81356107e9816109ad565b60005b838110156109fe5781810151838201526020016109e6565b50506000910152565b60008151808452610a1f8160208601602086016109e3565b601f01601f19169290920160200192915050565b6020815260006107e96020830184610a07565b600060208284031215610a5857600080fd5b5035919050565b80356001600160a01b0381168114610a7657600080fd5b919050565b60008060408385031215610a8e57600080fd5b610a9783610a5f565b946020939093013593505050565b600080600060608486031215610aba57600080fd5b610ac384610a5f565b9250610ad160208501610a5f565b9150604084013590509250925092565b600060208284031215610af357600080fd5b6107e982610a5f565b60008060408385031215610b0f57600080fd5b610b1883610a5f565b915060208301358015158114610b2d57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610b6457600080fd5b610b6d85610a5f565b9350610b7b60208601610a5f565b925060408501359150606085013567ffffffffffffffff80821115610b9f57600080fd5b818701915087601f830112610bb357600080fd5b813581811115610bc557610bc5610b38565b604051601f8201601f19908116603f01168101908382118183101715610bed57610bed610b38565b816040528281528a6020848701011115610c0657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610c3d57600080fd5b610c4683610a5f565b9150610c5460208401610a5f565b90509250929050565b600181811c90821680610c7157607f821691505b602082108103610c9157634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610ca98184602088016109e3565b835190830190610cbd8183602088016109e3565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610cf990830184610a07565b9695505050505050565b600060208284031215610d1557600080fd5b81516107e9816109ad56fea264697066735822122034e6ff40276c3c53ad57530091ce6a881c5a48055451d5bc3ec0894be82c005464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x104E CODESIZE SUB DUP1 PUSH3 0x104E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x123 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x42 DUP4 DUP3 PUSH3 0x21C JUMP JUMPDEST POP PUSH1 0x3 PUSH3 0x51 DUP3 DUP3 PUSH3 0x21C JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SSTORE POP PUSH3 0x2E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xA3 JUMPI PUSH3 0xA3 PUSH3 0x5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCE JUMPI PUSH3 0xCE PUSH3 0x5E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10F JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xF0 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15D DUP7 DUP4 DUP8 ADD PUSH3 0x74 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x183 DUP6 DUP3 DUP7 ADD PUSH3 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1C3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x217 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1F2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x213 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FE JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x238 JUMPI PUSH3 0x238 PUSH3 0x5E JUMP JUMPDEST PUSH3 0x250 DUP2 PUSH3 0x249 DUP5 SLOAD PUSH3 0x18D JUMP JUMPDEST DUP5 PUSH3 0x1C9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x288 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x213 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x298 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D8 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD56 DUP1 PUSH3 0x2F8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x69A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x2F1 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x30C JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0xC5D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0xC5D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x39A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x39A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF DUP3 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x3CC JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 DUP3 PUSH2 0x640 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x42C JUMPI PUSH2 0x40F DUP2 CALLER PUSH2 0x292 JUMP JUMPDEST PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x493 DUP3 PUSH2 0x817 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x513 JUMPI PUSH2 0x4F6 DUP7 CALLER PUSH2 0x292 JUMP JUMPDEST PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x545 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x5D7 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x5D5 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x63B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x715 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C DUP3 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0xC5D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x720 DUP5 DUP5 DUP5 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x759 JUMPI PUSH2 0x73C DUP5 DUP5 DUP5 DUP5 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x76A DUP3 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x79E PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7E9 JUMP JUMPDEST DUP1 PUSH2 0x7C8 DUP5 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7D9 SWAP3 SWAP2 SWAP1 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x30C JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x865 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0x863 JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x7E9 JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x842 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x8B3 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8EE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x8EB SWAP2 DUP2 ADD SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x94C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x921 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x983 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x9C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7E9 DUP2 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9FE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9E6 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xA1F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7E9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA97 DUP4 PUSH2 0xA5F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC3 DUP5 PUSH2 0xA5F JUMP JUMPDEST SWAP3 POP PUSH2 0xAD1 PUSH1 0x20 DUP6 ADD PUSH2 0xA5F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E9 DUP3 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB18 DUP4 PUSH2 0xA5F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6D DUP6 PUSH2 0xA5F JUMP JUMPDEST SWAP4 POP PUSH2 0xB7B PUSH1 0x20 DUP7 ADD PUSH2 0xA5F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xBC5 JUMPI PUSH2 0xBC5 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xBED JUMPI PUSH2 0xBED PUSH2 0xB38 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC46 DUP4 PUSH2 0xA5F JUMP JUMPDEST SWAP2 POP PUSH2 0xC54 PUSH1 0x20 DUP5 ADD PUSH2 0xA5F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC71 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC91 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xCA9 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x9E3 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xCBD DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9E3 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xCF9 SWAP1 DUP4 ADD DUP5 PUSH2 0xA07 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7E9 DUP2 PUSH2 0x9AD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xE6 SELFDESTRUCT BLOCKHASH 0x27 PUSH13 0x3C53AD57530091CE6A881C5A48 SDIV SLOAD MLOAD 0xD5 0xBC RETURNDATACOPY 0xC0 DUP10 0x4B 0xE8 0x2C STOP SLOAD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "895:40452:5:-:0;;;4946:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5012:5;:13;5020:5;5012;:13;:::i;:::-;-1:-1:-1;5035:7:5;:17;5045:7;5035;:17;:::i;:::-;-1:-1:-1;;5482:7:5;5062:31;;-1:-1:-1;895:40452:5;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:7;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:7;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:7:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:7;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:7;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:7;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:7;;;3992:26;3943:89;-1:-1:-1;;2747:1:7;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:7;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:7;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:7;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:7:o;:::-;895:40452:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_2069": {
									"entryPoint": null,
									"id": 2069,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_1466": {
									"entryPoint": null,
									"id": 1466,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_2056": {
									"entryPoint": null,
									"id": 2056,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_2124": {
									"entryPoint": 2174,
									"id": 2124,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1808": {
									"entryPoint": 2032,
									"id": 1808,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2630": {
									"entryPoint": null,
									"id": 2630,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_1841": {
									"entryPoint": null,
									"id": 1841,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_1822": {
									"entryPoint": null,
									"id": 1822,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_2673": {
									"entryPoint": null,
									"id": 2673,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2663": {
									"entryPoint": null,
									"id": 2663,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_1660": {
									"entryPoint": null,
									"id": 1660,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_1594": {
									"entryPoint": 2071,
									"id": 1594,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_1208": {
									"entryPoint": null,
									"id": 1208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_2683": {
									"entryPoint": 2409,
									"id": 2683,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_1715": {
									"entryPoint": 1000,
									"id": 1715,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1281": {
									"entryPoint": 1611,
									"id": 1281,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1738": {
									"entryPoint": 932,
									"id": 1738,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1782": {
									"entryPoint": null,
									"id": 1782,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1404": {
									"entryPoint": 786,
									"id": 1404,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1486": {
									"entryPoint": 1600,
									"id": 1486,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_2005": {
									"entryPoint": 1568,
									"id": 2005,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2043": {
									"entryPoint": 1813,
									"id": 2043,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1764": {
									"entryPoint": 1705,
									"id": 1764,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1394": {
									"entryPoint": 704,
									"id": 1394,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1414": {
									"entryPoint": 1690,
									"id": 1414,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_1457": {
									"entryPoint": 1887,
									"id": 1457,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1233": {
									"entryPoint": null,
									"id": 1233,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1986": {
									"entryPoint": 1160,
									"id": 1986,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 2894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3223,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3270,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2531,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2872,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6407:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:7",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:7",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:7"
															},
															"nodeType": "YulIf",
															"src": "68:71:7"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:7",
														"type": ""
													}
												],
												"src": "14:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:7"
															},
															"nodeType": "YulIf",
															"src": "229:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:7",
														"type": ""
													}
												],
												"src": "150:245:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:7",
														"type": ""
													}
												],
												"src": "400:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:7",
																"statements": []
															},
															"src": "687:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:7",
														"type": ""
													}
												],
												"src": "592:250:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:7",
														"type": ""
													}
												],
												"src": "847:271:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:7",
														"type": ""
													}
												],
												"src": "1123:220:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:7"
															},
															"nodeType": "YulIf",
															"src": "1428:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:7",
														"type": ""
													}
												],
												"src": "1348:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:7",
														"type": ""
													}
												],
												"src": "1533:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:7"
															},
															"nodeType": "YulIf",
															"src": "1838:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:7",
														"type": ""
													}
												],
												"src": "1741:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:7"
															},
															"nodeType": "YulIf",
															"src": "2016:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:7",
														"type": ""
													}
												],
												"src": "1919:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2289:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2297:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2297:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2289:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2342:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2324:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2248:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2259:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2270:4:7",
														"type": ""
													}
												],
												"src": "2178:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2464:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2510:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2519:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2522:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2512:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2512:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:32:7"
															},
															"nodeType": "YulIf",
															"src": "2474:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2535:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2564:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2545:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2583:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2616:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2627:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2612:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2612:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2593:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2593:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2583:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2640:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2667:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2678:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2663:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2650:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2640:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2414:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2425:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2437:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2445:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2453:6:7",
														"type": ""
													}
												],
												"src": "2360:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2763:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2809:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2818:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2821:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2811:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2811:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2811:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2784:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2793:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2780:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2780:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:32:7"
															},
															"nodeType": "YulIf",
															"src": "2773:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2834:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2863:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2844:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2729:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2740:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2752:6:7",
														"type": ""
													}
												],
												"src": "2693:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3014:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:32:7"
															},
															"nodeType": "YulIf",
															"src": "2978:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3039:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3100:32:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3185:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:40:7"
															},
															"nodeType": "YulIf",
															"src": "3141:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3210:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3220:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2926:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2937:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2949:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2957:6:7",
														"type": ""
													}
												],
												"src": "2884:347:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3268:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3498:1008:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3545:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3547:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3519:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3511:33:7"
															},
															"nodeType": "YulIf",
															"src": "3508:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3570:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3580:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3628:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3675:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3702:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3713:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3698:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3726:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:32:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3730:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3781:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3791:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3836:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3845:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3848:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3838:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3838:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3832:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3821:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3821:14:7"
															},
															"nodeType": "YulIf",
															"src": "3818:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3861:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:22:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3865:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3941:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3953:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3943:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3943:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3920:2:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3924:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3916:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3916:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3931:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:35:7"
															},
															"nodeType": "YulIf",
															"src": "3902:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3966:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3989:2:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3976:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:16:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3970:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4015:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4007:2:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4011:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4004:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:10:7"
															},
															"nodeType": "YulIf",
															"src": "4001:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4046:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:7:7"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4050:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4072:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4076:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4150:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4154:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4146:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4146:13:7"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4161:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4142:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4166:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4138:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4138:31:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4171:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4134:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4134:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4108:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4234:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4236:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4236:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4193:10:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4205:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4213:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4225:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4210:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4210:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:46:7"
															},
															"nodeType": "YulIf",
															"src": "4184:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4276:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4265:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4311:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4296:18:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4360:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4369:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4362:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4362:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4337:2:7"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4341:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4333:11:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4329:20:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4351:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4326:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4326:33:7"
															},
															"nodeType": "YulIf",
															"src": "4323:53:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4402:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4398:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4419:2:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4415:11:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4428:2:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4385:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4385:46:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4385:46:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4455:6:7"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4463:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4451:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4451:15:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4468:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4447:24:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4440:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4484:16:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4494:6:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3440:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3451:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3463:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3471:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3479:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3487:6:7",
														"type": ""
													}
												],
												"src": "3368:1138:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4598:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4644:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4656:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4646:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4619:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4615:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:32:7"
															},
															"nodeType": "YulIf",
															"src": "4608:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4669:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4698:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4679:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4717:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4746:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4727:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4556:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4567:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4579:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4587:6:7",
														"type": ""
													}
												],
												"src": "4511:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4831:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4841:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4858:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4851:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4872:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4902:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4898:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4876:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4949:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4951:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4965:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4973:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4961:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4961:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4951:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:26:7"
															},
															"nodeType": "YulIf",
															"src": "4919:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5039:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5060:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5072:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5063:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5063:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5053:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5107:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5097:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5097:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5135:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5125:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4995:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5015:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5015:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:38:7"
															},
															"nodeType": "YulIf",
															"src": "4989:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4811:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4820:6:7",
														"type": ""
													}
												],
												"src": "4776:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5348:309:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5358:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5378:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5372:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5362:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5433:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5441:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5429:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5429:17:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5448:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5453:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5394:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5394:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5394:66:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5469:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5486:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5491:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5482:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:16:7"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "5473:5:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5507:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5529:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5523:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5523:13:7"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "5511:8:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5584:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5592:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5580:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5580:17:7"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5599:5:7"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5606:8:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5545:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5545:70:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5545:70:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5624:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5635:5:7"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5642:8:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5631:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5631:20:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5624:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5316:3:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5321:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5329:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5340:3:7",
														"type": ""
													}
												],
												"src": "5161:496:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5865:286:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5875:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5893:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5898:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5889:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5889:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5902:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5885:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5885:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5879:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5920:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5935:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5943:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5931:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5931:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5913:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5913:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5913:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5967:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5978:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5963:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5963:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5987:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5995:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5983:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5983:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5956:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5956:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6019:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6030:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6015:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6015:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6035:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6008:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6008:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6008:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6062:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6073:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6058:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6058:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6078:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6051:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6051:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6051:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6091:54:7",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6117:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6129:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6140:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6125:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6125:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6099:46:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6091:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5810:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5821:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5829:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5837:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5845:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5856:4:7",
														"type": ""
													}
												],
												"src": "5662:489:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6236:169:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6282:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6291:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6294:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6284:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6284:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6284:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6257:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6266:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6253:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6278:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6249:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:32:7"
															},
															"nodeType": "YulIf",
															"src": "6246:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6307:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6326:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6320:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6320:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6311:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6369:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "6345:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6345:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6345:30:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6384:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6394:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6384:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6202:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6213:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6225:6:7",
														"type": ""
													}
												],
												"src": "6156:249:7"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb46514610224578063b88d4fde14610244578063c87b56dd14610257578063e985e9c51461027757600080fd5b80636352211e146101cf57806370a08231146101ef57806395d89b411461020f57600080fd5b8063095ea7b3116100bb578063095ea7b31461017157806318160ddd1461018657806323b872dd146101a957806342842e0e146101bc57600080fd5b806301ffc9a7146100e257806306fdde0314610117578063081812fc14610139575b600080fd5b3480156100ee57600080fd5b506101026100fd3660046109c6565b6102c0565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b5061012c610312565b60405161010e9190610a33565b34801561014557600080fd5b50610159610154366004610a46565b6103a4565b6040516001600160a01b03909116815260200161010e565b61018461017f366004610a7b565b6103e8565b005b34801561019257600080fd5b50600154600054035b60405190815260200161010e565b6101846101b7366004610aa5565b610488565b6101846101ca366004610aa5565b610620565b3480156101db57600080fd5b506101596101ea366004610a46565b610640565b3480156101fb57600080fd5b5061019b61020a366004610ae1565b61064b565b34801561021b57600080fd5b5061012c61069a565b34801561023057600080fd5b5061018461023f366004610afc565b6106a9565b610184610252366004610b4e565b610715565b34801561026357600080fd5b5061012c610272366004610a46565b61075f565b34801561028357600080fd5b50610102610292366004610c2a565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b0319831614806102f157506380ac58cd60e01b6001600160e01b03198316145b8061030c5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461032190610c5d565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90610c5d565b801561039a5780601f1061036f5761010080835404028352916020019161039a565b820191906000526020600020905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b60006103af826107f0565b6103cc576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006103f382610640565b9050336001600160a01b0382161461042c5761040f8133610292565b61042c576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061049382610817565b9050836001600160a01b0316816001600160a01b0316146104c65760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b03881690911417610513576104f68633610292565b61051357604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661053a57604051633a954ecd60e21b815260040160405180910390fd5b801561054557600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b841690036105d7576001840160008181526004602052604081205490036105d55760005481146105d55760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b61063b83838360405180602001604052806000815250610715565b505050565b600061030c82610817565b60006001600160a01b038216610674576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b60606003805461032190610c5d565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610720848484610488565b6001600160a01b0383163b156107595761073c8484848461087e565b610759576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061076a826107f0565b61078757604051630a14c4b560e41b815260040160405180910390fd5b600061079e60408051602081019091526000815290565b905080516000036107be57604051806020016040528060008152506107e9565b806107c884610969565b6040516020016107d9929190610c97565b6040516020818303038152906040525b9392505050565b600080548210801561030c575050600090815260046020526040902054600160e01b161590565b6000816000548110156108655760008181526004602052604081205490600160e01b82169003610863575b806000036107e9575060001901600081815260046020526040902054610842565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906108b3903390899088908890600401610cc6565b6020604051808303816000875af19250505080156108ee575060408051601f3d908101601f191682019092526108eb91810190610d03565b60015b61094c573d80801561091c576040519150601f19603f3d011682016040523d82523d6000602084013e610921565b606091505b508051600003610944576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806109835750819003601f19909101908152919050565b6001600160e01b0319811681146109c357600080fd5b50565b6000602082840312156109d857600080fd5b81356107e9816109ad565b60005b838110156109fe5781810151838201526020016109e6565b50506000910152565b60008151808452610a1f8160208601602086016109e3565b601f01601f19169290920160200192915050565b6020815260006107e96020830184610a07565b600060208284031215610a5857600080fd5b5035919050565b80356001600160a01b0381168114610a7657600080fd5b919050565b60008060408385031215610a8e57600080fd5b610a9783610a5f565b946020939093013593505050565b600080600060608486031215610aba57600080fd5b610ac384610a5f565b9250610ad160208501610a5f565b9150604084013590509250925092565b600060208284031215610af357600080fd5b6107e982610a5f565b60008060408385031215610b0f57600080fd5b610b1883610a5f565b915060208301358015158114610b2d57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610b6457600080fd5b610b6d85610a5f565b9350610b7b60208601610a5f565b925060408501359150606085013567ffffffffffffffff80821115610b9f57600080fd5b818701915087601f830112610bb357600080fd5b813581811115610bc557610bc5610b38565b604051601f8201601f19908116603f01168101908382118183101715610bed57610bed610b38565b816040528281528a6020848701011115610c0657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610c3d57600080fd5b610c4683610a5f565b9150610c5460208401610a5f565b90509250929050565b600181811c90821680610c7157607f821691505b602082108103610c9157634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610ca98184602088016109e3565b835190830190610cbd8183602088016109e3565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610cf990830184610a07565b9695505050505050565b600060208284031215610d1557600080fd5b81516107e9816109ad56fea264697066735822122034e6ff40276c3c53ad57530091ce6a881c5a48055451d5bc3ec0894be82c005464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x9C6 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xA33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0xAA5 JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x69A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x2F1 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x30C JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0xC5D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0xC5D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x39A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x39A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AF DUP3 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x3CC JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 DUP3 PUSH2 0x640 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x42C JUMPI PUSH2 0x40F DUP2 CALLER PUSH2 0x292 JUMP JUMPDEST PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x493 DUP3 PUSH2 0x817 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x513 JUMPI PUSH2 0x4F6 DUP7 CALLER PUSH2 0x292 JUMP JUMPDEST PUSH2 0x513 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x545 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP5 AND SWAP1 SUB PUSH2 0x5D7 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x5D5 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x63B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x715 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C DUP3 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0xC5D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x720 DUP5 DUP5 DUP5 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x759 JUMPI PUSH2 0x73C DUP5 DUP5 DUP5 DUP5 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x759 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x76A DUP3 PUSH2 0x7F0 JUMP JUMPDEST PUSH2 0x787 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x79E PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7E9 JUMP JUMPDEST DUP1 PUSH2 0x7C8 DUP5 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7D9 SWAP3 SWAP2 SWAP1 PUSH2 0xC97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x30C JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x865 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH1 0x1 PUSH1 0xE0 SHL DUP3 AND SWAP1 SUB PUSH2 0x863 JUMPI JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x7E9 JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x842 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x8B3 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8EE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x8EB SWAP2 DUP2 ADD SWAP1 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x94C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x921 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x983 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x9C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7E9 DUP2 PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9FE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9E6 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xA1F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7E9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA97 DUP4 PUSH2 0xA5F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC3 DUP5 PUSH2 0xA5F JUMP JUMPDEST SWAP3 POP PUSH2 0xAD1 PUSH1 0x20 DUP6 ADD PUSH2 0xA5F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E9 DUP3 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB18 DUP4 PUSH2 0xA5F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6D DUP6 PUSH2 0xA5F JUMP JUMPDEST SWAP4 POP PUSH2 0xB7B PUSH1 0x20 DUP7 ADD PUSH2 0xA5F JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xBC5 JUMPI PUSH2 0xBC5 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xBED JUMPI PUSH2 0xBED PUSH2 0xB38 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC46 DUP4 PUSH2 0xA5F JUMP JUMPDEST SWAP2 POP PUSH2 0xC54 PUSH1 0x20 DUP5 ADD PUSH2 0xA5F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC71 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xC91 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xCA9 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x9E3 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xCBD DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x9E3 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xCF9 SWAP1 DUP4 ADD DUP5 PUSH2 0xA07 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x7E9 DUP2 PUSH2 0x9AD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xE6 SELFDESTRUCT BLOCKHASH 0x27 PUSH13 0x3C53AD57530091CE6A881C5A48 SDIV SLOAD MLOAD 0xD5 0xBC RETURNDATACOPY 0xC0 DUP10 0x4B 0xE8 0x2C STOP SLOAD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "895:40452:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9155:630;;;;;;;;;;-1:-1:-1;9155:630:5;;;;;:::i;:::-;;:::i;:::-;;;565:14:7;;558:22;540:41;;528:2;513:18;9155:630:5;;;;;;;;10039:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16360:214::-;;;;;;;;;;-1:-1:-1;16360:214:5;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:7;;;1679:51;;1667:2;1652:18;16360:214:5;1533:203:7;15812:398:5;;;;;;:::i;:::-;;:::i;:::-;;5894:317;;;;;;;;;;-1:-1:-1;6164:12:5;;5955:7;6148:13;:28;5894:317;;;2324:25:7;;;2312:2;2297:18;5894:317:5;2178:177:7;19903:2764:5;;;;;;:::i;:::-;;:::i;22758:187::-;;;;;;:::i;:::-;;:::i;11391:150::-;;;;;;;;;;-1:-1:-1;11391:150:5;;;;;:::i;:::-;;:::i;7045:230::-;;;;;;;;;;-1:-1:-1;7045:230:5;;;;;:::i;:::-;;:::i;10208:102::-;;;;;;;;;;;;;:::i;16901:231::-;;;;;;;;;;-1:-1:-1;16901:231:5;;;;;:::i;:::-;;:::i;23526:396::-;;;;;;:::i;:::-;;:::i;10411:313::-;;;;;;;;;;-1:-1:-1;10411:313:5;;;;;:::i;:::-;;:::i;17282:162::-;;;;;;;;;;-1:-1:-1;17282:162:5;;;;;:::i;:::-;-1:-1:-1;;;;;17402:25:5;;;17379:4;17402:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17282:162;9155:630;9240:4;-1:-1:-1;;;;;;;;;9558:25:5;;;;:101;;-1:-1:-1;;;;;;;;;;9634:25:5;;;9558:101;:177;;;-1:-1:-1;;;;;;;;;;9710:25:5;;;9558:177;9539:196;9155:630;-1:-1:-1;;9155:630:5:o;10039:98::-;10093:13;10125:5;10118:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10039:98;:::o;16360:214::-;16436:7;16460:16;16468:7;16460;:16::i;:::-;16455:64;;16485:34;;-1:-1:-1;;;16485:34:5;;;;;;;;;;;16455:64;-1:-1:-1;16537:24:5;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;16537:30:5;;16360:214::o;15812:398::-;15900:13;15916:16;15924:7;15916;:16::i;:::-;15900:32;-1:-1:-1;39523:10:5;-1:-1:-1;;;;;15947:28:5;;;15943:172;;15994:44;16011:5;39523:10;17282:162;:::i;15994:44::-;15989:126;;16065:35;;-1:-1:-1;;;16065:35:5;;;;;;;;;;;15989:126;16125:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;16125:35:5;-1:-1:-1;;;;;16125:35:5;;;;;;;;;16175:28;;16125:24;;16175:28;;;;;;;15890:320;15812:398;;:::o;19903:2764::-;20040:27;20070;20089:7;20070:18;:27::i;:::-;20040:57;;20153:4;-1:-1:-1;;;;;20112:45:5;20128:19;-1:-1:-1;;;;;20112:45:5;;20108:86;;20166:28;;-1:-1:-1;;;20166:28:5;;;;;;;;;;;20108:86;20206:27;19036:24;;;:15;:24;;;;;19260:26;;39523:10;18673:30;;;-1:-1:-1;;;;;18370:28:5;;18651:20;;;18648:56;20389:179;;20481:43;20498:4;39523:10;17282:162;:::i;20481:43::-;20476:92;;20533:35;;-1:-1:-1;;;20533:35:5;;;;;;;;;;;20476:92;-1:-1:-1;;;;;20583:16:5;;20579:52;;20608:23;;-1:-1:-1;;;20608:23:5;;;;;;;;;;;20579:52;20774:15;20771:157;;;20912:1;20891:19;20884:30;20771:157;-1:-1:-1;;;;;21300:24:5;;;;;;;:18;:24;;;;;;21298:26;;-1:-1:-1;;21298:26:5;;;21368:22;;;;;;;;;21366:24;;-1:-1:-1;21366:24:5;;;14703:11;14678:23;14674:41;14661:63;-1:-1:-1;;;14661:63:5;21654:26;;;;:17;:26;;;;;:172;;;;-1:-1:-1;;;21943:47:5;;:52;;21939:617;;22047:1;22037:11;;22015:19;22168:30;;;:17;:30;;;;;;:35;;22164:378;;22304:13;;22289:11;:28;22285:239;;22449:30;;;;:17;:30;;;;;:52;;;22285:239;21997:559;21939:617;22600:7;22596:2;-1:-1:-1;;;;;22581:27:5;22590:4;-1:-1:-1;;;;;22581:27:5;;;;;;;;;;;20030:2637;;;19903:2764;;;:::o;22758:187::-;22899:39;22916:4;22922:2;22926:7;22899:39;;;;;;;;;;;;:16;:39::i;:::-;22758:187;;;:::o;11391:150::-;11463:7;11505:27;11524:7;11505:18;:27::i;7045:230::-;7117:7;-1:-1:-1;;;;;7140:19:5;;7136:60;;7168:28;;-1:-1:-1;;;7168:28:5;;;;;;;;;;;7136:60;-1:-1:-1;;;;;;7213:25:5;;;;;:18;:25;;;;;;1360:13;7213:55;;7045:230::o;10208:102::-;10264:13;10296:7;10289:14;;;;;:::i;16901:231::-;39523:10;16995:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;16995:49:5;;;;;;;;;;;;:60;;-1:-1:-1;;16995:60:5;;;;;;;;;;17070:55;;540:41:7;;;16995:49:5;;39523:10;17070:55;;513:18:7;17070:55:5;;;;;;;16901:231;;:::o;23526:396::-;23695:31;23708:4;23714:2;23718:7;23695:12;:31::i;:::-;-1:-1:-1;;;;;23740:14:5;;;:19;23736:180;;23778:56;23809:4;23815:2;23819:7;23828:5;23778:30;:56::i;:::-;23773:143;;23861:40;;-1:-1:-1;;;23861:40:5;;;;;;;;;;;23773:143;23526:396;;;;:::o;10411:313::-;10484:13;10514:16;10522:7;10514;:16::i;:::-;10509:59;;10539:29;;-1:-1:-1;;;10539:29:5;;;;;;;;;;;10509:59;10579:21;10603:10;11045:9;;;;;;;;;-1:-1:-1;11045:9:5;;;10969:92;10603:10;10579:34;;10636:7;10630:21;10655:1;10630:26;:87;;;;;;;;;;;;;;;;;10683:7;10692:18;10702:7;10692:9;:18::i;:::-;10666:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10630:87;10623:94;10411:313;-1:-1:-1;;;10411:313:5:o;17693:277::-;17758:4;17845:13;;17835:7;:23;17793:151;;;;-1:-1:-1;;17895:26:5;;;;:17;:26;;;;;;-1:-1:-1;;;17895:44:5;:49;;17693:277::o;12515:1249::-;12582:7;12616;12714:13;;12707:4;:20;12703:997;;;12751:14;12768:23;;;:17;:23;;;;;;;-1:-1:-1;;;12855:24:5;;:29;;12851:831;;13510:111;13517:6;13527:1;13517:11;13510:111;;-1:-1:-1;;;13587:6:5;13569:25;;;;:17;:25;;;;;;13510:111;;12851:831;12729:971;12703:997;13726:31;;-1:-1:-1;;;13726:31:5;;;;;;;;;;;25948:697;26126:88;;-1:-1:-1;;;26126:88:5;;26106:4;;-1:-1:-1;;;;;26126:45:5;;;;;:88;;39523:10;;26193:4;;26199:7;;26208:5;;26126:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26126:88:5;;;;;;;;-1:-1:-1;;26126:88:5;;;;;;;;;;;;:::i;:::-;;;26122:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26404:6;:13;26421:1;26404:18;26400:229;;26449:40;;-1:-1:-1;;;26449:40:5;;;;;;;;;;;26400:229;26589:6;26583:13;26574:6;26570:2;26566:15;26559:38;26122:517;-1:-1:-1;;;;;;26282:64:5;-1:-1:-1;;;26282:64:5;;-1:-1:-1;25948:697:5;;;;;;:::o;39637:1708::-;39702:17;40130:4;40123;40117:11;40113:22;40220:1;40214:4;40207:15;40293:4;40290:1;40286:12;40279:19;;;40373:1;40368:3;40361:14;40474:3;40708:5;40690:419;40755:1;40750:3;40746:11;40739:18;;40923:2;40917:4;40913:13;40909:2;40905:22;40900:3;40892:36;41015:2;41005:13;;41070:25;40690:419;41070:25;-1:-1:-1;41137:13:5;;;-1:-1:-1;;41250:14:5;;;41310:19;;;41250:14;39637:1708;-1:-1:-1;39637:1708:5:o;14:131:7:-;-1:-1:-1;;;;;;88:32:7;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:7;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:7;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:7:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:7;;1348:180;-1:-1:-1;1348:180:7:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:7;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:7:o;2360:328::-;2437:6;2445;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2545:29;2564:9;2545:29;:::i;:::-;2535:39;;2593:38;2627:2;2616:9;2612:18;2593:38;:::i;:::-;2583:48;;2678:2;2667:9;2663:18;2650:32;2640:42;;2360:328;;;;;:::o;2693:186::-;2752:6;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:7;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5161:496::-;5340:3;5378:6;5372:13;5394:66;5453:6;5448:3;5441:4;5433:6;5429:17;5394:66;:::i;:::-;5523:13;;5482:16;;;;5545:70;5523:13;5482:16;5592:4;5580:17;;5545:70;:::i;:::-;5631:20;;5161:496;-1:-1:-1;;;;5161:496:7:o;5662:489::-;-1:-1:-1;;;;;5931:15:7;;;5913:34;;5983:15;;5978:2;5963:18;;5956:43;6030:2;6015:18;;6008:34;;;6078:3;6073:2;6058:18;;6051:31;;;5856:4;;6099:46;;6125:19;;6117:6;6099:46;:::i;:::-;6091:54;5662:489;-1:-1:-1;;;;;;5662:489:7:o;6156:249::-;6225:6;6278:2;6266:9;6257:7;6253:23;6249:32;6246:52;;;6294:1;6291;6284:12;6246:52;6326:9;6320:16;6345:30;6369:5;6345:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "682800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2640",
								"getApproved(uint256)": "6925",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26607",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4432",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4337",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedSlotAndAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 4946,
									"end": 5100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 4946,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5012,
									"end": 5017,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 5020,
									"end": 5025,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5012,
									"end": 5017,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 5012,
									"end": 5025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5035,
									"end": 5042,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5045,
									"end": 5052,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5035,
									"end": 5042,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 5035,
									"end": 5052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5035,
									"end": 5052,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5482,
									"end": 5489,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5062,
									"end": 5093,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 41347,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122034e6ff40276c3c53ad57530091ce6a881c5a48055451d5bc3ec0894be82c005464736f6c63430008110033",
									".code": [
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "B88D4FDE"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "C87B56DD"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "E985E9C5"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "42842E0E"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A7"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "81812FC"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 895,
											"end": 41347,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 9155,
											"end": 9785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 9155,
											"end": 9785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 10039,
											"end": 10137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 10039,
											"end": 10137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 16360,
											"end": 16574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 16360,
											"end": 16574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15812,
											"end": 16210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 15812,
											"end": 16210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6164,
											"end": 6176,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 5962,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6161,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6148,
											"end": 6176,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5894,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2178,
											"end": 2355,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 19903,
											"end": 22667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 19903,
											"end": 22667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 22758,
											"end": 22945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 22758,
											"end": 22945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 11391,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 11391,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 7045,
											"end": 7275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 7045,
											"end": 7275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 10208,
											"end": 10310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 16901,
											"end": 17132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 16901,
											"end": 17132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 23526,
											"end": 23922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 23526,
											"end": 23922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 10411,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 10411,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 17282,
											"end": 17444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17379,
											"end": 17383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17420,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17427,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17402,
											"end": 17437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9240,
											"end": 9244,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9659,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 9558,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9710,
											"end": 9735,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 9558,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9735,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9155,
											"end": 9785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9155,
											"end": 9785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10093,
											"end": 10106,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10125,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 10118,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 10118,
											"end": 10130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10118,
											"end": 10130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 16360,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16436,
											"end": 16443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 16468,
											"end": 16475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16460,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 16460,
											"end": 16476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 16460,
											"end": 16476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16485,
											"end": 16519,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 16455,
											"end": 16519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16552,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16561,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16537,
											"end": 16567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15900,
											"end": 15913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 15924,
											"end": 15931,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15916,
											"end": 15923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 15916,
											"end": 15932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 15916,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15900,
											"end": 15932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15947,
											"end": 15975,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 15943,
											"end": 16115,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 16011,
											"end": 16016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 17282,
											"end": 17444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 15994,
											"end": 16038,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16100,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 15989,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16140,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16160,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16125,
											"end": 16149,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16175,
											"end": 16203,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15890,
											"end": 16210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15812,
											"end": 16210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20040,
											"end": 20067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 20089,
											"end": 20096,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 20070,
											"end": 20088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 20070,
											"end": 20097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 20070,
											"end": 20097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20040,
											"end": 20097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20040,
											"end": 20097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20153,
											"end": 20157,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20128,
											"end": 20147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20112,
											"end": 20157,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20166,
											"end": 20194,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 20108,
											"end": 20194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20206,
											"end": 20233,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19051,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19036,
											"end": 19060,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 19260,
											"end": 19286,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19260,
											"end": 19286,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 18673,
											"end": 18703,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18673,
											"end": 18703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18673,
											"end": 18703,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18370,
											"end": 18398,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 18370,
											"end": 18398,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 18651,
											"end": 18671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18651,
											"end": 18671,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18651,
											"end": 18671,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 18648,
											"end": 18704,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 20389,
											"end": 20568,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 20498,
											"end": 20502,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 17282,
											"end": 17444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 20481,
											"end": 20524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20533,
											"end": 20568,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 20476,
											"end": 20568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 20583,
											"end": 20599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20608,
											"end": 20631,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 20579,
											"end": 20631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20774,
											"end": 20789,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20912,
											"end": 20913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 20891,
											"end": 20910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 20884,
											"end": 20914,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 20771,
											"end": 20928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21318,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21300,
											"end": 21324,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21298,
											"end": 21324,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21368,
											"end": 21390,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21366,
											"end": 21390,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14703,
											"end": 14714,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 14678,
											"end": 14701,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 14674,
											"end": 14715,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 14661,
											"end": 14724,
											"name": "OR",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14661,
											"end": 14724,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21671,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21680,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21654,
											"end": 21826,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21943,
											"end": 21990,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 21943,
											"end": 21990,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21943,
											"end": 21995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21943,
											"end": 21995,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22047,
											"end": 22048,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 22037,
											"end": 22048,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 22037,
											"end": 22048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 22015,
											"end": 22034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22185,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22198,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22168,
											"end": 22203,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 22164,
											"end": 22542,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22304,
											"end": 22317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22304,
											"end": 22317,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22289,
											"end": 22300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22289,
											"end": 22317,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22466,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22479,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22449,
											"end": 22501,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 22285,
											"end": 22524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21997,
											"end": 22556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 21939,
											"end": 22556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22600,
											"end": 22607,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 22596,
											"end": 22598,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 22590,
											"end": 22594,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22581,
											"end": 22608,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 20030,
											"end": 22667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20030,
											"end": 22667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20030,
											"end": 22667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19903,
											"end": 22667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 22916,
											"end": 22920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 22922,
											"end": 22924,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 22926,
											"end": 22933,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 22899,
											"end": 22938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 22899,
											"end": 22938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22758,
											"end": 22945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 11391,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11463,
											"end": 11470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11505,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 11524,
											"end": 11531,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11505,
											"end": 11523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 11505,
											"end": 11532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 7045,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7117,
											"end": 7124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7168,
											"end": 7196,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 7136,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7238,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1373,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 7268,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7268,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 10208,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10264,
											"end": 10277,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10296,
											"end": 10303,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10289,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 10289,
											"end": 10303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17013,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17034,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17055,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16995,
											"end": 17044,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17070,
											"end": 17125,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16901,
											"end": 17132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 23708,
											"end": 23712,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23714,
											"end": 23716,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23718,
											"end": 23725,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23695,
											"end": 23707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 23695,
											"end": 23726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 23695,
											"end": 23726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 23740,
											"end": 23754,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 23740,
											"end": 23759,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 23736,
											"end": 23916,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 23809,
											"end": 23813,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23815,
											"end": 23817,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23819,
											"end": 23826,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23828,
											"end": 23833,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23778,
											"end": 23808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 23778,
											"end": 23834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 23778,
											"end": 23834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23861,
											"end": 23901,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 23773,
											"end": 23916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23526,
											"end": 23922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10484,
											"end": 10497,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 10522,
											"end": 10529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 10514,
											"end": 10530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 10514,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10568,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 10509,
											"end": 10568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10579,
											"end": 10600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10969,
											"end": 11061,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 10603,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10579,
											"end": 10613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10579,
											"end": 10613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 10643,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10655,
											"end": 10656,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10656,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10690,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 10702,
											"end": 10709,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10692,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 10692,
											"end": 10710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 10692,
											"end": 10710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 10666,
											"end": 10711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 10630,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10623,
											"end": 10717,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10411,
											"end": 10724,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10411,
											"end": 10724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 17693,
											"end": 17970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17758,
											"end": 17762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17845,
											"end": 17858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17845,
											"end": 17858,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 17835,
											"end": 17842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17835,
											"end": 17858,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 17793,
											"end": 17944,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17912,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17921,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17895,
											"end": 17939,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17944,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17895,
											"end": 17944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17693,
											"end": 17970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 12515,
											"end": 13764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12582,
											"end": 12589,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12616,
											"end": 12623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12714,
											"end": 12727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12714,
											"end": 12727,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12707,
											"end": 12711,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12707,
											"end": 12727,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12751,
											"end": 12765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12785,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 12768,
											"end": 12791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12855,
											"end": 12879,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 12879,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 12884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 12884,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13517,
											"end": 13523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13527,
											"end": 13528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13517,
											"end": 13528,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13587,
											"end": 13593,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13586,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13569,
											"end": 13594,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 13510,
											"end": 13621,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 12851,
											"end": 13682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12729,
											"end": 13700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 12703,
											"end": 13700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13726,
											"end": 13757,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26106,
											"end": 26110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26106,
											"end": 26110,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 26126,
											"end": 26171,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 39523,
											"end": 39533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26193,
											"end": 26197,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 26193,
											"end": 26197,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26199,
											"end": 26206,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 26199,
											"end": 26206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26208,
											"end": 26213,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 26208,
											"end": 26213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 26126,
											"end": 26214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 26126,
											"end": 26214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 26126,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26404,
											"end": 26410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26404,
											"end": 26417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26421,
											"end": 26422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26404,
											"end": 26422,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26449,
											"end": 26489,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 26400,
											"end": 26629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26589,
											"end": 26595,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26583,
											"end": 26596,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26574,
											"end": 26580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26570,
											"end": 26572,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26566,
											"end": 26581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26559,
											"end": 26597,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 26122,
											"end": 26639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 26282,
											"end": 26346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 25948,
											"end": 26645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 39702,
											"end": 39719,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 40130,
											"end": 40134,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 40123,
											"end": 40127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 40117,
											"end": 40128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 40113,
											"end": 40135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 40220,
											"end": 40221,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 40214,
											"end": 40218,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 40207,
											"end": 40222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 40293,
											"end": 40297,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 40290,
											"end": 40291,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 40286,
											"end": 40298,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 40279,
											"end": 40298,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 40279,
											"end": 40298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 40279,
											"end": 40298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 40373,
											"end": 40374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 40368,
											"end": 40371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 40361,
											"end": 40375,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 40474,
											"end": 40477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 40708,
											"end": 40713,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 40755,
											"end": 40756,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 40750,
											"end": 40753,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 40746,
											"end": 40757,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 40739,
											"end": 40757,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 40739,
											"end": 40757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 40923,
											"end": 40925,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 40917,
											"end": 40921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 40913,
											"end": 40926,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 40909,
											"end": 40911,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 40905,
											"end": 40927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 40900,
											"end": 40903,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 40892,
											"end": 40928,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 41015,
											"end": 41017,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 41005,
											"end": 41018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 41005,
											"end": 41018,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 41070,
											"end": 41095,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 40690,
											"end": 41109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 41070,
											"end": 41095,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41137,
											"end": 41150,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 41137,
											"end": 41150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 41137,
											"end": 41150,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 41250,
											"end": 41264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 41250,
											"end": 41264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 41250,
											"end": 41264,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 41310,
											"end": 41329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 41310,
											"end": 41329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 41310,
											"end": 41329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 41250,
											"end": 41264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 39637,
											"end": 41345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39637,
											"end": 41345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2451,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2520,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2524,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2564,
											"end": 2573,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2545,
											"end": 2574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2545,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2593,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2593,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2682,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2688,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2879,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 2693,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2807,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2791,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2823,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2844,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3538,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3544,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3628,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3821,
											"end": 3835,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3916,
											"end": 3929,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3939,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3943,
											"end": 3955,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4017,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 4138,
											"end": 4169,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4134,
											"end": 4174,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4187,
											"end": 4233,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4236,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4274,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4333,
											"end": 4344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4359,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4415,
											"end": 4426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4431,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4466,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4440,
											"end": 4475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4638,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4643,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4658,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4679,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4727,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4992,
											"end": 5030,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5063,
											"end": 5083,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5084,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5161,
											"end": 5657,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 5161,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5340,
											"end": 5343,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5385,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 5453,
											"end": 5459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5451,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5445,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5433,
											"end": 5439,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5429,
											"end": 5446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5394,
											"end": 5460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 5394,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5536,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5523,
											"end": 5536,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5498,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5545,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 5523,
											"end": 5536,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5498,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5545,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5545,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5545,
											"end": 5615,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 5545,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5631,
											"end": 5651,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5631,
											"end": 5651,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5161,
											"end": 5657,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5161,
											"end": 5657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 6151,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5662,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5931,
											"end": 5946,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5931,
											"end": 5946,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5931,
											"end": 5946,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5947,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 5947,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5983,
											"end": 5998,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5983,
											"end": 5998,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5978,
											"end": 5980,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5956,
											"end": 5999,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6078,
											"end": 6081,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6073,
											"end": 6075,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6076,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5856,
											"end": 5860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 6099,
											"end": 6145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6125,
											"end": 6144,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6125,
											"end": 6144,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6123,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 6099,
											"end": 6145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6145,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 6099,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6145,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 6151,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 6151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6156,
											"end": 6405,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 6156,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6231,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6278,
											"end": 6280,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6257,
											"end": 6264,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6253,
											"end": 6276,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6281,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6246,
											"end": 6298,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6246,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 6246,
											"end": 6298,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6294,
											"end": 6295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6292,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6284,
											"end": 6296,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6246,
											"end": 6298,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 6246,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6326,
											"end": 6335,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6336,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6369,
											"end": 6374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 6345,
											"end": 6375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"contracts/WOM_LAND.sol",
								"erc721a/contracts/ERC721A.sol",
								"erc721a/contracts/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1153,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1155,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1157,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1159,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1163,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1167,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1172,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)1085_storage)"
							},
							{
								"astId": 1178,
								"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)1085_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)1085_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)1085_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 1084,
										"contract": "erc721a/contracts/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc721a/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							360
						]
					},
					"id": 361,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:2",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 360,
							"linearizedBaseContracts": [
								360
							],
							"name": "Strings",
							"nameLocation": "169:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 140,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 360,
									"src": "183:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 138,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 139,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 143,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 360,
									"src": "247:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 141,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 142,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "463:632:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 151,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "665:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 157,
												"nodeType": "IfStatement",
												"src": "661:51:2",
												"trueBody": {
													"id": 156,
													"nodeType": "Block",
													"src": "677:35:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 150,
															"id": 155,
															"nodeType": "Return",
															"src": "691:10:2"
														}
													]
												}
											},
											{
												"assignments": [
													159
												],
												"declarations": [
													{
														"constant": false,
														"id": 159,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "721:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 158,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 161,
												"initialValue": {
													"id": 160,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 146,
													"src": "736:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:2"
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "751:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 164,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:2"
											},
											{
												"body": {
													"id": 175,
													"nodeType": "Block",
													"src": "793:57:2",
													"statements": [
														{
															"expression": {
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:2",
																"subExpression": {
																	"id": 168,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "807:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 170,
															"nodeType": "ExpressionStatement",
															"src": "807:8:2"
														},
														{
															"expression": {
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 171,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "829:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 174,
															"nodeType": "ExpressionStatement",
															"src": "829:10:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 165,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "782:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 176,
												"nodeType": "WhileStatement",
												"src": "775:75:2"
											},
											{
												"assignments": [
													178
												],
												"declarations": [
													{
														"constant": false,
														"id": 178,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "859:19:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 177,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [
														{
															"id": 181,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "891:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 179,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:2"
											},
											{
												"body": {
													"id": 214,
													"nodeType": "Block",
													"src": "927:131:2",
													"statements": [
														{
															"expression": {
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 187,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "941:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 190,
															"nodeType": "ExpressionStatement",
															"src": "941:11:2"
														},
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 191,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 178,
																		"src": "966:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 193,
																	"indexExpression": {
																		"id": 192,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 163,
																		"src": "973:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 205,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 198,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 203,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 201,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 146,
																									"src": "1009:5:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 202,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 200,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 199,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 204,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 196,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 194,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "966:56:2"
														},
														{
															"expression": {
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 210,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "1036:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 213,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 184,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "915:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 215,
												"nodeType": "WhileStatement",
												"src": "908:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "1081:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 216,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 150,
												"id": 220,
												"nodeType": "Return",
												"src": "1067:21:2"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "410:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "448:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:2"
									},
									"scope": 360,
									"src": "392:703:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "1274:255:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "1288:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 236,
												"nodeType": "IfStatement",
												"src": "1284:54:2",
												"trueBody": {
													"id": 235,
													"nodeType": "Block",
													"src": "1300:38:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 229,
															"id": 234,
															"nodeType": "Return",
															"src": "1314:13:2"
														}
													]
												}
											},
											{
												"assignments": [
													238
												],
												"declarations": [
													{
														"constant": false,
														"id": 238,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "1347:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 237,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"id": 239,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 225,
													"src": "1362:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:2"
											},
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "1377:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 241,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"hexValue": "30",
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:2"
											},
											{
												"body": {
													"id": 255,
													"nodeType": "Block",
													"src": "1423:57:2",
													"statements": [
														{
															"expression": {
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:2",
																"subExpression": {
																	"id": 248,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "1437:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 250,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:2"
														},
														{
															"expression": {
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 251,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "1459:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 254,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 245,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "1412:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 256,
												"nodeType": "WhileStatement",
												"src": "1405:75:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "1508:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 259,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "1515:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 257,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															263,
															339,
															359
														],
														"referencedDeclaration": 339,
														"src": "1496:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 229,
												"id": 261,
												"nodeType": "Return",
												"src": "1489:33:2"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1221:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:2"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1259:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 227,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:2"
									},
									"scope": 360,
									"src": "1200:329:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "1742:351:2",
										"statements": [
											{
												"assignments": [
													274
												],
												"declarations": [
													{
														"constant": false,
														"id": 274,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 338,
														"src": "1752:19:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 273,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 278,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "1788:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 275,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:2"
											},
											{
												"expression": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 284,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "1809:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 286,
														"indexExpression": {
															"hexValue": "30",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:2"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 290,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "1834:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 292,
														"indexExpression": {
															"hexValue": "31",
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:2"
											},
											{
												"body": {
													"id": 324,
													"nodeType": "Block",
													"src": "1904:87:2",
													"statements": [
														{
															"expression": {
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 310,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "1918:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 312,
																	"indexExpression": {
																		"id": 311,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 297,
																		"src": "1925:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 313,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 140,
																		"src": "1930:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 317,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 314,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 266,
																			"src": "1943:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 319,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:2"
														},
														{
															"expression": {
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 320,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "1969:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 323,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 304,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "1892:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 325,
												"initializationExpression": {
													"assignments": [
														297
													],
													"declarations": [
														{
															"constant": false,
															"id": 297,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 325,
															"src": "1864:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 296,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 303,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 299,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "1880:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:2"
												},
												"loopExpression": {
													"expression": {
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:2",
														"subExpression": {
															"id": 307,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "1901:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 309,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:2"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 327,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "2008:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "2079:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 333,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 272,
												"id": 337,
												"nodeType": "Return",
												"src": "2065:21:2"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "1673:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "1688:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:2"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "1727:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:2"
									},
									"scope": 360,
									"src": "1652:441:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2318:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 352,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "2363:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 350,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 348,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 355,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "2371:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 347,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															263,
															339,
															359
														],
														"referencedDeclaration": 339,
														"src": "2335:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 346,
												"id": 357,
												"nodeType": "Return",
												"src": "2328:59:2"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:2",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2266:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:2"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2303:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:2"
									},
									"scope": 360,
									"src": "2245:149:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 361,
							"src": "161:2235:2",
							"usedErrors": []
						}
					],
					"src": "101:2296:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							721
						],
						"Strings": [
							360
						]
					},
					"id": 722,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 362,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 363,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 722,
							"sourceUnit": 361,
							"src": "137:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 364,
								"nodeType": "StructuredDocumentation",
								"src": "163:205:3",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 721,
							"linearizedBaseContracts": [
								721
							],
							"name": "ECDSA",
							"nameLocation": "377:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 370,
									"members": [
										{
											"id": 365,
											"name": "NoError",
											"nameLocation": "417:7:3",
											"nodeType": "EnumValue",
											"src": "417:7:3"
										},
										{
											"id": 366,
											"name": "InvalidSignature",
											"nameLocation": "434:16:3",
											"nodeType": "EnumValue",
											"src": "434:16:3"
										},
										{
											"id": 367,
											"name": "InvalidSignatureLength",
											"nameLocation": "460:22:3",
											"nodeType": "EnumValue",
											"src": "460:22:3"
										},
										{
											"id": 368,
											"name": "InvalidSignatureS",
											"nameLocation": "492:17:3",
											"nodeType": "EnumValue",
											"src": "492:17:3"
										},
										{
											"id": 369,
											"name": "InvalidSignatureV",
											"nameLocation": "519:17:3",
											"nodeType": "EnumValue",
											"src": "519:17:3"
										}
									],
									"name": "RecoverError",
									"nameLocation": "394:12:3",
									"nodeType": "EnumDefinition",
									"src": "389:175:3"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "624:457:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$370",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 376,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "638:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$370",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 377,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "647:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$370_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "660:7:3",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 365,
														"src": "647:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$370",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "638:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$370",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 382,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "734:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$370",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 383,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "743:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$370_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "756:16:3",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 366,
															"src": "743:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$370",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "734:38:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$370",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "843:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$370",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 392,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "852:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$370_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "865:22:3",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 367,
																"src": "852:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$370",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "843:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$370",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 400,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "965:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$370",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 401,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "974:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$370_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "987:17:3",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 368,
																	"src": "974:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$370",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "965:39:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 409,
															"nodeType": "IfStatement",
															"src": "961:114:3",
															"trueBody": {
																"id": 408,
																"nodeType": "Block",
																"src": "1006:69:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
																					"id": 405,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1027:36:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					},
																					"value": "ECDSA: invalid signature 's' value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					}
																				],
																				"id": 404,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "1020:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1020:44:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 407,
																		"nodeType": "ExpressionStatement",
																		"src": "1020:44:3"
																	}
																]
															}
														},
														"id": 410,
														"nodeType": "IfStatement",
														"src": "839:236:3",
														"trueBody": {
															"id": 399,
															"nodeType": "Block",
															"src": "889:66:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																				"id": 396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "910:33:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				},
																				"value": "ECDSA: invalid signature length"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				}
																			],
																			"id": 395,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "903:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "903:41:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 398,
																	"nodeType": "ExpressionStatement",
																	"src": "903:41:3"
																}
															]
														}
													},
													"id": 411,
													"nodeType": "IfStatement",
													"src": "730:345:3",
													"trueBody": {
														"id": 390,
														"nodeType": "Block",
														"src": "774:59:3",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																			"id": 387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "795:26:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			},
																			"value": "ECDSA: invalid signature"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			}
																		],
																		"id": 386,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "788:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "788:34:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 389,
																"nodeType": "ExpressionStatement",
																"src": "788:34:3"
															}
														]
													}
												},
												"id": 412,
												"nodeType": "IfStatement",
												"src": "634:441:3",
												"trueBody": {
													"id": 381,
													"nodeType": "Block",
													"src": "669:55:3",
													"statements": [
														{
															"functionReturnParameters": 375,
															"id": 380,
															"nodeType": "Return",
															"src": "683:7:3"
														}
													]
												}
											}
										]
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "579:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "604:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "591:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$370",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 371,
														"name": "RecoverError",
														"nameLocations": [
															"591:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 370,
														"src": "591:12:3"
													},
													"referencedDeclaration": 370,
													"src": "591:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$370",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:20:3"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:3"
									},
									"scope": 721,
									"src": "570:511:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "2249:626:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 427,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "2263:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2273:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2283:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2263:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 457,
													"nodeType": "Block",
													"src": "2788:81:3",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2818:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2810:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 449,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2810:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2810:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 453,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "2822:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$370_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2835:22:3",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 367,
																		"src": "2822:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$370",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 455,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2809:49:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$370_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 426,
															"id": 456,
															"nodeType": "Return",
															"src": "2802:56:3"
														}
													]
												},
												"id": 458,
												"nodeType": "IfStatement",
												"src": "2259:610:3",
												"trueBody": {
													"id": 448,
													"nodeType": "Block",
													"src": "2287:495:3",
													"statements": [
														{
															"assignments": [
																432
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 432,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2309:1:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 448,
																	"src": "2301:9:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 431,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2301:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 433,
															"nodeType": "VariableDeclarationStatement",
															"src": "2301:9:3"
														},
														{
															"assignments": [
																435
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 435,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2332:1:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 448,
																	"src": "2324:9:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 434,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2324:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 436,
															"nodeType": "VariableDeclarationStatement",
															"src": "2324:9:3"
														},
														{
															"assignments": [
																438
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 438,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2353:1:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 448,
																	"src": "2347:7:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 437,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2347:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 439,
															"nodeType": "VariableDeclarationStatement",
															"src": "2347:7:3"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2555:171:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2573:32:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2588:9:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2599:4:3",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2584:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2584:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2578:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2578:27:3"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "2573:1:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2622:32:3",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2637:9:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2648:4:3",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2633:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2627:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2627:27:3"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "2622:1:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2671:41:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2681:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "2694:9:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2705:4:3",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2690:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2690:20:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2684:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2684:27:3"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "2676:4:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2676:36:3"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "2671:1:3"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 432,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2573:1:3",
																	"valueSize": 1
																},
																{
																	"declaration": 435,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2622:1:3",
																	"valueSize": 1
																},
																{
																	"declaration": 419,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2588:9:3",
																	"valueSize": 1
																},
																{
																	"declaration": 419,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2637:9:3",
																	"valueSize": 1
																},
																{
																	"declaration": 419,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2694:9:3",
																	"valueSize": 1
																},
																{
																	"declaration": 438,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2671:1:3",
																	"valueSize": 1
																}
															],
															"id": 440,
															"nodeType": "InlineAssembly",
															"src": "2546:180:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 442,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2757:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 443,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "2763:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 444,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "2766:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 445,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "2769:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 441,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		460,
																		534,
																		628
																	],
																	"referencedDeclaration": 628,
																	"src": "2746:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$370_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
																	}
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:25:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$370_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 426,
															"id": 447,
															"nodeType": "Return",
															"src": "2739:32:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1087:1053:3",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2154:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2173:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "2165:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 416,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2192:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "2179:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 418,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2179:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:38:3"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "2226:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "2235:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$370",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 424,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 423,
														"name": "RecoverError",
														"nameLocations": [
															"2235:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 370,
														"src": "2235:12:3"
													},
													"referencedDeclaration": 370,
													"src": "2235:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$370",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2225:23:3"
									},
									"scope": 721,
									"src": "2145:730:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "3748:140:3",
										"statements": [
											{
												"assignments": [
													471,
													474
												],
												"declarations": [
													{
														"constant": false,
														"id": 471,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3767:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "3759:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 470,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3759:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 474,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3791:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "3778:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$370",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 473,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 472,
																"name": "RecoverError",
																"nameLocations": [
																	"3778:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 370,
																"src": "3778:12:3"
															},
															"referencedDeclaration": 370,
															"src": "3778:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$370",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"arguments": [
														{
															"id": 476,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "3811:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 477,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "3817:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 475,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															460,
															534,
															628
														],
														"referencedDeclaration": 460,
														"src": "3800:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$370_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3800:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$370_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3758:69:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 481,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "3849:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$370",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$370",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 480,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3837:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$370_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3837:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "3837:18:3"
											},
											{
												"expression": {
													"id": 484,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 471,
													"src": "3872:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 469,
												"id": 485,
												"nodeType": "Return",
												"src": "3865:16:3"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "2881:775:3",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3670:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3686:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3678:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 462,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3678:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3705:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3692:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3692:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:38:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3739:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:9:3"
									},
									"scope": 721,
									"src": "3661:227:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "4275:203:3",
										"statements": [
											{
												"assignments": [
													503
												],
												"declarations": [
													{
														"constant": false,
														"id": 503,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "4293:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "4285:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 502,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4285:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 510,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 504,
														"name": "vs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "4297:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4310:66:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																},
																"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																}
															],
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4302:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 505,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4302:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4302:75:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4297:80:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4285:92:3"
											},
											{
												"assignments": [
													512
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "4393:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "4387:7:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 511,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4387:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 517,
																					"name": "vs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "4412:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4404:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 515,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4404:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4404:11:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "323535",
																			"id": 519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4419:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "255"
																		},
																		"src": "4404:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 521,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4403:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3237",
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4426:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "4403:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4397:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 513,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4397:5:3",
															"typeDescriptions": {}
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4397:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4387:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 527,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4457:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 528,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "4463:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 529,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4466:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 530,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "4469:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 526,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															460,
															534,
															628
														],
														"referencedDeclaration": 628,
														"src": "4446:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$370_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4446:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$370_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 501,
												"id": 532,
												"nodeType": "Return",
												"src": "4439:32:3"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "3894:243:3",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4151:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4179:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "4171:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 489,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4201:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "4193:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 491,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4220:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "4212:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 493,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4161:67:3"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "4252:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4252:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "4261:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$370",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 499,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 498,
														"name": "RecoverError",
														"nameLocations": [
															"4261:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 370,
														"src": "4261:12:3"
													},
													"referencedDeclaration": 370,
													"src": "4261:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$370",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:23:3"
									},
									"scope": 721,
									"src": "4142:336:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "4759:136:3",
										"statements": [
											{
												"assignments": [
													547,
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4778:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "4770:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 546,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4770:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4802:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "4789:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$370",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 549,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 548,
																"name": "RecoverError",
																"nameLocations": [
																	"4789:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 370,
																"src": "4789:12:3"
															},
															"referencedDeclaration": 370,
															"src": "4789:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$370",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [
														{
															"id": 552,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4822:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 553,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4828:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 554,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4831:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 551,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															460,
															534,
															628
														],
														"referencedDeclaration": 534,
														"src": "4811:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$370_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4811:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$370_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4769:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 558,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "4856:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$370",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$370",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 557,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "4844:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$370_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4844:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "4844:18:3"
											},
											{
												"expression": {
													"id": 561,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 547,
													"src": "4879:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 545,
												"id": 562,
												"nodeType": "Return",
												"src": "4872:16:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "4484:154:3",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4652:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4677:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4669:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4669:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4699:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4691:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 538,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4691:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4718:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4710:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 540,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4710:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4659:67:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4750:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4750:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4749:9:3"
									},
									"scope": 721,
									"src": "4643:252:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5218:1345:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 583,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6114:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6106:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 581,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6106:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6106:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6119:66:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6106:79:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 596,
												"nodeType": "IfStatement",
												"src": "6102:161:3",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "6187:76:3",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6217:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6209:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 587,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6209:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6209:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 591,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "6221:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$370_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6234:17:3",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 368,
																		"src": "6221:30:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$370",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 593,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6208:44:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$370_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 580,
															"id": 594,
															"nodeType": "Return",
															"src": "6201:51:3"
														}
													]
												}
											},
											{
												"assignments": [
													598
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6365:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "6357:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 597,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6357:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"arguments": [
														{
															"id": 600,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "6384:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 601,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "6390:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 602,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "6393:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 603,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "6396:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 599,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6374:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6374:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:41:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 606,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "6412:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6430:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6422:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 607,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6422:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6422:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6412:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 621,
												"nodeType": "IfStatement",
												"src": "6408:101:3",
												"trueBody": {
													"id": 620,
													"nodeType": "Block",
													"src": "6434:75:3",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6464:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6456:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 612,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6456:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6456:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 616,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "6468:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$370_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6481:16:3",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 366,
																		"src": "6468:29:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$370",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	}
																],
																"id": 618,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6455:43:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$370_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError)"
																}
															},
															"functionReturnParameters": 580,
															"id": 619,
															"nodeType": "Return",
															"src": "6448:50:3"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 622,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "6527:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 623,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "6535:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$370_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6548:7:3",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 365,
															"src": "6535:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$370",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"id": 625,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6526:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$370_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"functionReturnParameters": 580,
												"id": 626,
												"nodeType": "Return",
												"src": "6519:37:3"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "4901:163:3",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5078:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5106:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5098:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 566,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5098:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5126:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 568,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5120:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5145:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 570,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5164:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5156:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 572,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5156:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5088:83:3"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5195:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5204:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$370",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 578,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 577,
														"name": "RecoverError",
														"nameLocations": [
															"5204:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 370,
														"src": "5204:12:3"
													},
													"referencedDeclaration": 370,
													"src": "5204:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$370",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5194:23:3"
									},
									"scope": 721,
									"src": "5069:1494:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "6828:138:3",
										"statements": [
											{
												"assignments": [
													643,
													646
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6847:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "6839:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 642,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6839:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 646,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6871:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "6858:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$370",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 645,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 644,
																"name": "RecoverError",
																"nameLocations": [
																	"6858:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 370,
																"src": "6858:12:3"
															},
															"referencedDeclaration": 370,
															"src": "6858:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$370",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"arguments": [
														{
															"id": 648,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "6891:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 649,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "6897:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 650,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "6900:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 651,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "6903:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 647,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															460,
															534,
															628
														],
														"referencedDeclaration": 628,
														"src": "6880:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$370_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6880:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$370_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6838:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "6927:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$370",
																"typeString": "enum ECDSA.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$370",
																"typeString": "enum ECDSA.RecoverError"
															}
														],
														"id": 654,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "6915:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$370_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError) pure"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6915:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "6915:18:3"
											},
											{
												"expression": {
													"id": 658,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 643,
													"src": "6950:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 641,
												"id": 659,
												"nodeType": "Return",
												"src": "6943:16:3"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "6569:122:3",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6705:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6730:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6722:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 630,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6722:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6750:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6744:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 632,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6744:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6769:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6761:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 634,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6761:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6788:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6780:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 636,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6780:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:83:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "6819:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6818:9:3"
									},
									"scope": 721,
									"src": "6696:270:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "7334:187:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7472:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 673,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "7508:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 670,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7455:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7459:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "7455:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7455:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7445:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7445:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 668,
												"id": 676,
												"nodeType": "Return",
												"src": "7438:76:3"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "6972:279:3",
										"text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7265:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "7296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 663,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7288:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7287:14:3"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7325:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7325:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7324:9:3"
									},
									"scope": 721,
									"src": "7256:265:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "7886:116:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7930:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 692,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 681,
																				"src": "7981:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7983:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "7981:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 690,
																			"name": "Strings",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 360,
																			"src": "7964:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Strings_$360_$",
																				"typeString": "type(library Strings)"
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7972:8:3",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 222,
																		"src": "7964:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7964:26:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 695,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "7992:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 687,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7913:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7917:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "7913:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7913:81:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 686,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7903:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7903:92:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 685,
												"id": 698,
												"nodeType": "Return",
												"src": "7896:99:3"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "7527:274:3",
										"text": " @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7815:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "7851:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7838:14:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 680,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7838:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7837:16:3"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "7877:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 683,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7877:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7876:9:3"
									},
									"scope": 721,
									"src": "7806:196:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "8443:92:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8487:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 714,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "8499:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 715,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "8516:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 711,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8470:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8474:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8470:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8470:57:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 710,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8460:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8460:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 709,
												"id": 718,
												"nodeType": "Return",
												"src": "8453:75:3"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "8008:328:3",
										"text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "8350:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "8374:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "8366:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 702,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "8399:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "8391:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 704,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8391:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8365:45:3"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "8434:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 707,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8434:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8433:9:3"
									},
									"scope": 721,
									"src": "8341:194:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 722,
							"src": "369:8168:3",
							"usedErrors": []
						}
					],
					"src": "112:8426:3"
				},
				"id": 3
			},
			"contracts/WOM_LAND.sol": {
				"ast": {
					"absolutePath": "contracts/WOM_LAND.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"ECDSA": [
							721
						],
						"ERC721A": [
							2684
						],
						"ERC721A__IERC721Receiver": [
							1079
						],
						"IERC721A": [
							2890
						],
						"Ownable": [
							112
						],
						"Strings": [
							360
						],
						"WomLand": [
							1061
						]
					},
					"id": 1062,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 723,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:4"
						},
						{
							"absolutePath": "erc721a/contracts/ERC721A.sol",
							"file": "erc721a/contracts/ERC721A.sol",
							"id": 724,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1062,
							"sourceUnit": 2685,
							"src": "70:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 725,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1062,
							"sourceUnit": 113,
							"src": "110:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1062,
							"sourceUnit": 722,
							"src": "163:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 727,
										"name": "ERC721A",
										"nameLocations": [
											"247:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2684,
										"src": "247:7:4"
									},
									"id": 728,
									"nodeType": "InheritanceSpecifier",
									"src": "247:7:4"
								},
								{
									"baseName": {
										"id": 729,
										"name": "Ownable",
										"nameLocations": [
											"256:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "256:7:4"
									},
									"id": 730,
									"nodeType": "InheritanceSpecifier",
									"src": "256:7:4"
								}
							],
							"canonicalName": "WomLand",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1061,
							"linearizedBaseContracts": [
								1061,
								112,
								134,
								2684,
								2890
							],
							"name": "WomLand",
							"nameLocation": "236:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "6c0360eb",
									"id": 732,
									"mutability": "mutable",
									"name": "baseURI",
									"nameLocation": "284:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1061,
									"src": "270:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 731,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "270:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 735,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "312:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1061,
									"src": "297:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 733,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "297:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 734,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "324:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0bab3262",
									"id": 738,
									"mutability": "mutable",
									"name": "publicMaxNFTPerAddress",
									"nameLocation": "349:22:4",
									"nodeType": "VariableDeclaration",
									"scope": 1061,
									"src": "334:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 736,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "334:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 737,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "374:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ceda0dbd",
									"id": 741,
									"mutability": "mutable",
									"name": "publicPriceMint",
									"nameLocation": "396:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1061,
									"src": "381:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 739,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "381:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3034",
										"id": 740,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "414:10:4",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_40000000000000000_by_1",
											"typeString": "int_const 40000000000000000"
										},
										"value": "0.04"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 744,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "442:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1061,
									"src": "430:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 742,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "430:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 743,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "451:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "26092b83",
									"id": 747,
									"mutability": "mutable",
									"name": "publicMint",
									"nameLocation": "474:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 1061,
									"src": "462:30:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 745,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "462:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 746,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "487:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5b7633d0",
									"id": 750,
									"mutability": "mutable",
									"name": "signerAddress",
									"nameLocation": "513:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1061,
									"src": "498:73:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 748,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "498:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834453939303331663443333963643141453137334263333265333937644537376163364436333935",
										"id": 749,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "529:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4E99031f4C39cd1AE173Bc32e397dE77ac6D6395"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0a398b88",
									"id": 754,
									"mutability": "mutable",
									"name": "alreadyMinted",
									"nameLocation": "612:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1061,
									"src": "577:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 753,
										"keyType": {
											"id": 751,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "585:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "577:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 752,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "596:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"global": false,
									"id": 757,
									"libraryName": {
										"id": 755,
										"name": "ECDSA",
										"nameLocations": [
											"638:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 721,
										"src": "638:5:4"
									},
									"nodeType": "UsingForDirective",
									"src": "632:24:4",
									"typeName": {
										"id": 756,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "648:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "712:2:4",
										"statements": []
									},
									"id": 765,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4c616e6473206f66204d79746865736461",
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "684:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0c4c00e5d0dcbf0eba7cd5340304765353d8cc2c0059072c27b34ca750b9fefb",
														"typeString": "literal_string \"Lands of Mythesda\""
													},
													"value": "Lands of Mythesda"
												},
												{
													"hexValue": "4c4f4d",
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "705:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_fa607f4d51875f4020fe7b32710efdfe24a9c0af41dce2547e112dfd7ce36f09",
														"typeString": "literal_string \"LOM\""
													},
													"value": "LOM"
												}
											],
											"id": 762,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 759,
												"name": "ERC721A",
												"nameLocations": [
													"676:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2684,
												"src": "676:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "676:35:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "673:2:4"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:0:4"
									},
									"scope": 1061,
									"src": "662:52:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "865:1039:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "883:7:4",
															"subExpression": {
																"id": 777,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "884:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520636f6e747261637420697320706175736564",
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "892:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e954ccb096f28acc1183690281054aff136281f5a4d7c64c9abe0ea72fefbed",
																"typeString": "literal_string \"The contract is paused\""
															},
															"value": "The contract is paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e954ccb096f28acc1183690281054aff136281f5a4d7c64c9abe0ea72fefbed",
																"typeString": "literal_string \"The contract is paused\""
															}
														],
														"id": 776,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "875:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "875:42:4"
											},
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "935:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "927:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 782,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "927:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 786,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 784,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "944:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "944:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "927:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 788,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "975:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "986:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "975:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65656420746f206d696e74206174206c656173742031204e4654",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "989:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed37a9aea988433e335e7d86b1c10784ef2ba276d209110134b4b7752da4f226",
																"typeString": "literal_string \"Need to mint at least 1 NFT\""
															},
															"value": "Need to mint at least 1 NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed37a9aea988433e335e7d86b1c10784ef2ba276d209110134b4b7752da4f226",
																"typeString": "literal_string \"Need to mint at least 1 NFT\""
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "967:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "967:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "967:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 795,
																	"name": "supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "1037:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 796,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "1046:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1037:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 798,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "1058:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1037:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178204e4654206c696d6974206578636565646564",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1069:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80456315b946e85d431f073cb6d2c9124b8371a1de03b3caeac844615afb0539",
																"typeString": "literal_string \"Max NFT limit exceeded\""
															},
															"value": "Max NFT limit exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80456315b946e85d431f073cb6d2c9124b8371a1de03b3caeac844615afb0539",
																"typeString": "literal_string \"Max NFT limit exceeded\""
															}
														],
														"id": 794,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1029:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1029:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "1029:65:4"
											},
											{
												"assignments": [
													804
												],
												"declarations": [
													{
														"constant": false,
														"id": 804,
														"mutability": "mutable",
														"name": "ownerMintedCount",
														"nameLocation": "1113:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "1105:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 803,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"baseExpression": {
														"id": 805,
														"name": "alreadyMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "1132:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 808,
													"indexExpression": {
														"expression": {
															"id": 806,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1146:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1150:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1146:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1132:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1105:52:4"
											},
											{
												"condition": {
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1172:11:4",
													"subExpression": {
														"id": 810,
														"name": "publicMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1173:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "1489:296:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 841,
																				"name": "ownerMintedCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 804,
																				"src": "1528:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 842,
																				"name": "quantity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "1547:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1528:27:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 844,
																			"name": "publicMaxNFTPerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "1559:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1528:53:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d6178204e465420666f722061646472657373206578636565646564",
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1599:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6fc45765de5cc9e81b48c27eeef759f5aedbc74686e014287e66cedca4232eaa",
																			"typeString": "literal_string \"Max NFT for address exceeded\""
																		},
																		"value": "Max NFT for address exceeded"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6fc45765de5cc9e81b48c27eeef759f5aedbc74686e014287e66cedca4232eaa",
																			"typeString": "literal_string \"Max NFT for address exceeded\""
																		}
																	],
																	"id": 840,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1503:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1503:140:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 848,
															"nodeType": "ExpressionStatement",
															"src": "1503:140:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 850,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1682:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1686:5:4",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "1682:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 852,
																				"name": "publicPriceMint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 741,
																				"src": "1695:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 853,
																				"name": "quantity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "1713:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1695:26:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1682:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e7420666f756e6473",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1739:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_30564808b3c540a7d4251f4dfeb9dfdf20f528e5263d1014fab504a81ea812b4",
																			"typeString": "literal_string \"Insufficient founds\""
																		},
																		"value": "Insufficient founds"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_30564808b3c540a7d4251f4dfeb9dfdf20f528e5263d1014fab504a81ea812b4",
																			"typeString": "literal_string \"Insufficient founds\""
																		}
																	],
																	"id": 849,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1657:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1657:117:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 858,
															"nodeType": "ExpressionStatement",
															"src": "1657:117:4"
														}
													]
												},
												"id": 860,
												"nodeType": "IfStatement",
												"src": "1168:617:4",
												"trueBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "1185:298:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 813,
																		"name": "maxMint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 769,
																		"src": "1212:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 814,
																		"name": "unitPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 771,
																		"src": "1221:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 815,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1232:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1236:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1232:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 817,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "1244:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 812,
																	"name": "verifyCoupon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "1199:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (uint256,uint256,address,bytes memory) view"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1199:55:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 819,
															"nodeType": "ExpressionStatement",
															"src": "1199:55:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 821,
																				"name": "ownerMintedCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 804,
																				"src": "1293:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 822,
																				"name": "quantity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "1312:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1293:27:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 824,
																			"name": "maxMint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 769,
																			"src": "1324:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1293:38:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d6178204e465420666f722061646472657373206578636565646564",
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1349:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6fc45765de5cc9e81b48c27eeef759f5aedbc74686e014287e66cedca4232eaa",
																			"typeString": "literal_string \"Max NFT for address exceeded\""
																		},
																		"value": "Max NFT for address exceeded"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6fc45765de5cc9e81b48c27eeef759f5aedbc74686e014287e66cedca4232eaa",
																			"typeString": "literal_string \"Max NFT for address exceeded\""
																		}
																	],
																	"id": 820,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1268:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1268:125:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 828,
															"nodeType": "ExpressionStatement",
															"src": "1268:125:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 830,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1415:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1419:5:4",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "1415:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 832,
																				"name": "unitPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 771,
																				"src": "1428:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 833,
																				"name": "quantity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "1440:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1428:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1415:33:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e7420666f756e6473",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1450:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_30564808b3c540a7d4251f4dfeb9dfdf20f528e5263d1014fab504a81ea812b4",
																			"typeString": "literal_string \"Insufficient founds\""
																		},
																		"value": "Insufficient founds"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_30564808b3c540a7d4251f4dfeb9dfdf20f528e5263d1014fab504a81ea812b4",
																			"typeString": "literal_string \"Insufficient founds\""
																		}
																	],
																	"id": 829,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1407:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1407:65:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 838,
															"nodeType": "ExpressionStatement",
															"src": "1407:65:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 861,
															"name": "alreadyMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "1795:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 864,
														"indexExpression": {
															"expression": {
																"id": 862,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1809:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1813:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1809:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1795:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 865,
																"name": "alreadyMinted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "1823:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 868,
															"indexExpression": {
																"expression": {
																	"id": 866,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1837:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1841:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1837:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1823:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 869,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "1851:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1823:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1795:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "1795:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 874,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1876:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1880:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1876:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "1888:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2220,
														"src": "1870:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1870:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "1870:27:4"
											}
										]
									},
									"functionSelector": "4a9eee69",
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "729:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "751:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "743:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "maxMint",
												"nameLocation": "777:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "769:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "unitPrice",
												"nameLocation": "802:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "794:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "834:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "821:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 772,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "821:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:116:4"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:4"
									},
									"scope": 1061,
									"src": "720:1184:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1466
									],
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "1985:31:4",
										"statements": [
											{
												"expression": {
													"id": 886,
													"name": "baseURI",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 732,
													"src": "2002:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 885,
												"id": 887,
												"nodeType": "Return",
												"src": "1995:14:4"
											}
										]
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "1919:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 882,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1952:8:4"
									},
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1927:2:4"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "1970:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 883,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1970:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:15:4"
									},
									"scope": 1061,
									"src": "1910:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "2070:37:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 899,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "2092:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 896,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2080:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_WomLand_$1061_$",
																"typeString": "type(contract super WomLand)"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2086:5:4",
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2421,
														"src": "2080:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2080:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "2080:20:4"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 894,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 893,
												"name": "onlyOwner",
												"nameLocations": [
													"2060:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2060:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2060:9:4"
										}
									],
									"name": "burn",
									"nameLocation": "2031:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2044:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "2036:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2035:17:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2070:0:4"
									},
									"scope": 1061,
									"src": "2022:85:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2174:35:4",
										"statements": [
											{
												"expression": {
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 910,
														"name": "baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "2184:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 911,
														"name": "baseuri_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "2194:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2184:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "2184:18:4"
											}
										]
									},
									"functionSelector": "a0bcfc7f",
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 908,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 907,
												"name": "onlyOwner",
												"nameLocations": [
													"2164:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2164:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2164:9:4"
										}
									],
									"name": "setBaseUri",
									"nameLocation": "2122:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "baseuri_",
												"nameLocation": "2147:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2133:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 904,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2133:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:24:4"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2174:0:4"
									},
									"scope": 1061,
									"src": "2113:96:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "2281:36:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 925,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "2297:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "2301:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 924,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2220,
														"src": "2291:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "2291:19:4"
											}
										]
									},
									"functionSelector": "484b973c",
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 922,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 921,
												"name": "onlyOwner",
												"nameLocations": [
													"2271:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2271:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2271:9:4"
										}
									],
									"name": "ownerMint",
									"nameLocation": "2224:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2242:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2234:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2234:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "2254:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2246:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2233:30:4"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2281:0:4"
									},
									"scope": 1061,
									"src": "2215:102:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "2390:47:4",
										"statements": [
											{
												"expression": {
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 937,
														"name": "signerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "2400:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 938,
														"name": "signerAddress_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "2416:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2400:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "2400:30:4"
											}
										]
									},
									"functionSelector": "046dc166",
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 935,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 934,
												"name": "onlyOwner",
												"nameLocations": [
													"2380:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2380:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2380:9:4"
										}
									],
									"name": "setSignerAddress",
									"nameLocation": "2332:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "signerAddress_",
												"nameLocation": "2357:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2349:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:24:4"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2390:0:4"
									},
									"scope": 1061,
									"src": "2323:114:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "2488:32:4",
										"statements": [
											{
												"expression": {
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 949,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "2498:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 950,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2507:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2498:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "2498:15:4"
											}
										]
									},
									"functionSelector": "02329a29",
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 947,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 946,
												"name": "onlyOwner",
												"nameLocations": [
													"2478:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2478:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2478:9:4"
										}
									],
									"name": "pause",
									"nameLocation": "2452:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "2463:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2458:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2458:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2457:13:4"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2488:0:4"
									},
									"scope": 1061,
									"src": "2443:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "2579:36:4",
										"statements": [
											{
												"expression": {
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 961,
														"name": "publicMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "2589:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 962,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "2602:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2589:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "2589:19:4"
											}
										]
									},
									"functionSelector": "0e2d56cf",
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 959,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 958,
												"name": "onlyOwner",
												"nameLocations": [
													"2569:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2569:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2569:9:4"
										}
									],
									"name": "setPublicMint",
									"nameLocation": "2535:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "2554:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2549:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 955,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2549:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2548:13:4"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2579:0:4"
									},
									"scope": 1061,
									"src": "2526:89:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "2689:48:4",
										"statements": [
											{
												"expression": {
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 973,
														"name": "publicMaxNFTPerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "2699:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 974,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "2724:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2699:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "2699:31:4"
											}
										]
									},
									"functionSelector": "c48b1fa6",
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 971,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 970,
												"name": "onlyOwner",
												"nameLocations": [
													"2679:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2679:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2679:9:4"
										}
									],
									"name": "setPublicMaxNFTPerAddress",
									"nameLocation": "2630:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "2664:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2656:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:16:4"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2689:0:4"
									},
									"scope": 1061,
									"src": "2621:116:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "2800:41:4",
										"statements": [
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "publicPriceMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "2810:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "2828:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2810:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "2810:24:4"
											}
										]
									},
									"functionSelector": "c6275255",
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 983,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 982,
												"name": "onlyOwner",
												"nameLocations": [
													"2790:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2790:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2790:9:4"
										}
									],
									"name": "setPublicPrice",
									"nameLocation": "2752:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "2775:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "2767:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2767:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2766:16:4"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2800:0:4"
									},
									"scope": 1061,
									"src": "2743:98:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "3010:342:4",
										"statements": [
											{
												"assignments": [
													1002
												],
												"declarations": [
													{
														"constant": false,
														"id": 1002,
														"mutability": "mutable",
														"name": "inputHash",
														"nameLocation": "3028:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1032,
														"src": "3020:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1001,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3020:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1011,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1006,
																	"name": "maxMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "3080:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1007,
																	"name": "unitPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "3089:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1008,
																	"name": "minterAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "3100:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1004,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3063:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3067:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3063:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3063:51:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1003,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3040:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3040:84:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3020:104:4"
											},
											{
												"assignments": [
													1013
												],
												"declarations": [
													{
														"constant": false,
														"id": 1013,
														"mutability": "mutable",
														"name": "ethSignedMessageHash",
														"nameLocation": "3143:20:4",
														"nodeType": "VariableDeclaration",
														"scope": 1032,
														"src": "3135:28:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1012,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3135:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1017,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1014,
															"name": "inputHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "3166:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3176:22:4",
														"memberName": "toEthSignedMessageHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 678,
														"src": "3166:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (bytes32)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3166:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3135:65:4"
											},
											{
												"assignments": [
													1019
												],
												"declarations": [
													{
														"constant": false,
														"id": 1019,
														"mutability": "mutable",
														"name": "recoveredAddress",
														"nameLocation": "3218:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1032,
														"src": "3210:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1018,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3210:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1024,
												"initialValue": {
													"arguments": [
														{
															"id": 1022,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "3266:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1020,
															"name": "ethSignedMessageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "3237:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3258:7:4",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 487,
														"src": "3237:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3237:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3210:66:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1026,
																"name": "recoveredAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "3294:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1027,
																"name": "signerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "3314:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3294:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426164207369676e6174757265",
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3329:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f334e6d79edc864fed2073d4e5dca33defac3a81d116d8882004993528938044",
																"typeString": "literal_string \"Bad signature\""
															},
															"value": "Bad signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f334e6d79edc864fed2073d4e5dca33defac3a81d116d8882004993528938044",
																"typeString": "literal_string \"Bad signature\""
															}
														],
														"id": 1025,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3286:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3286:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "3286:59:4"
											}
										]
									},
									"functionSelector": "8f9db08c",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCoupon",
									"nameLocation": "2856:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "maxMint",
												"nameLocation": "2886:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "2878:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2878:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "unitPrice",
												"nameLocation": "2911:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "2903:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "minterAddress",
												"nameLocation": "2938:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "2930:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2974:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "2961:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 997,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2961:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2868:121:4"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3010:0:4"
									},
									"scope": 1061,
									"src": "2847:505:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "3403:431:4",
										"statements": [
											{
												"assignments": [
													1039,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1039,
														"mutability": "mutable",
														"name": "os",
														"nameLocation": "3655:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 1059,
														"src": "3650:7:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1038,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3650:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1054,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3715:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1042,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "3671:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3671:7:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3663:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1040,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3663:8:4",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3663:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3680:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3663:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1048,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3700:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_WomLand_$1061",
																				"typeString": "contract WomLand"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_WomLand_$1061",
																				"typeString": "contract WomLand"
																			}
																		],
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3692:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1046,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3692:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3692:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3706:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3692:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3663:51:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3663:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3649:69:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1056,
															"name": "os",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "3735:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1055,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "3728:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3728:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "3728:10:4"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1036,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1035,
												"name": "onlyOwner",
												"nameLocations": [
													"3393:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3393:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3393:9:4"
										}
									],
									"name": "withdraw",
									"nameLocation": "3367:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3375:2:4"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3403:0:4"
									},
									"scope": 1061,
									"src": "3358:476:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1062,
							"src": "227:3609:4",
							"usedErrors": [
								2690,
								2693,
								2696,
								2699,
								2702,
								2705,
								2708,
								2711,
								2714,
								2717,
								2720,
								2723,
								2726
							]
						}
					],
					"src": "37:3800:4"
				},
				"id": 4
			},
			"erc721a/contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							2684
						],
						"ERC721A__IERC721Receiver": [
							1079
						],
						"IERC721A": [
							2890
						]
					},
					"id": 2685,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1063,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:5"
						},
						{
							"absolutePath": "erc721a/contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 1064,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2685,
							"sourceUnit": 2891,
							"src": "109:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1065,
								"nodeType": "StructuredDocumentation",
								"src": "135:51:5",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 1079,
							"linearizedBaseContracts": [
								1079
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "197:24:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 1078,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "237:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "271:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "263:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "297:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "289:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "319:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "311:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "351:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "336:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1072,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "336:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:108:5"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "380:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1075,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:5"
									},
									"scope": 1079,
									"src": "228:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2685,
							"src": "187:203:5",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1081,
										"name": "IERC721A",
										"nameLocations": [
											"915:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2890,
										"src": "915:8:5"
									},
									"id": 1082,
									"nodeType": "InheritanceSpecifier",
									"src": "915:8:5"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1080,
								"nodeType": "StructuredDocumentation",
								"src": "392:502:5",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2684,
							"linearizedBaseContracts": [
								2684,
								2890
							],
							"name": "ERC721A",
							"nameLocation": "904:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 1085,
									"members": [
										{
											"constant": false,
											"id": 1084,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1057:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 1085,
											"src": "1049:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1083,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1022:16:5",
									"nodeType": "StructDefinition",
									"scope": 2684,
									"src": "1015:54:5",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1093,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1330:27:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "1305:68:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1086,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1305:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 1092,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1361:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1366:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1361:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 1090,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1360:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1091,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1372:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1360:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1096,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1471:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "1446:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1094,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1446:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 1095,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1495:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1099,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1595:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "1570:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1097,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1570:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 1098,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1619:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1102,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1711:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "1686:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1100,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1686:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 1101,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1725:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1110,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1841:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "1816:65:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1103,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1816:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 1109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1868:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1873:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1868:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 1107,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1867:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1108,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1880:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1867:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1113,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "1978:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "1953:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1111,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1953:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 1112,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2004:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1118,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2100:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "2075:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1114,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2075:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 1117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1115,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2118:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 1116,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2123:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2118:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1121,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2232:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "2207:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2207:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 1120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2259:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1126,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2364:25:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "2339:61:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2339:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 1125,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 1123,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2392:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 1124,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2397:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2392:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1129,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2492:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "2467:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2467:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 1128,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2513:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1137,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2634:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "2609:72:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1130,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2609:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 1136,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2668:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2673:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2668:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 1134,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2667:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1135,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2680:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2667:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1145,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2766:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "2741:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1138,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2741:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 1144,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2786:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2791:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2786:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 1142,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2785:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1143,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2798:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2785:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1148,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3107:32:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "3082:64:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1146,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3082:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 1147,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3142:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1151,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3293:25:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "3268:127:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1149,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3268:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 1150,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3329:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1153,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3638:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "3622:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1152,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3622:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1155,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3710:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "3694:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3694:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1157,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3762:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "3747:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1156,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3747:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1159,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3809:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "3794:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1158,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3794:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1163,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4236:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "4200:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1162,
										"keyType": {
											"id": 1160,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4208:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4200:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1161,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4219:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1167,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4495:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "4459:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1166,
										"keyType": {
											"id": 1164,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4467:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4459:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1165,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4478:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1172,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4615:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "4570:60:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$1085_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 1171,
										"keyType": {
											"id": 1168,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4578:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4570:36:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$1085_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueType": {
											"id": 1170,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1169,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"4589:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1085,
												"src": "4589:16:5"
											},
											"referencedDeclaration": 1085,
											"src": "4589:16:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$1085_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1178,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4738:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "4685:71:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1177,
										"keyType": {
											"id": 1173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4693:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4685:44:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 1176,
											"keyType": {
												"id": 1174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4712:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4704:24:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 1175,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4723:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "5002:98:5",
										"statements": [
											{
												"expression": {
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1185,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "5012:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1186,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "5020:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5012:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "5012:13:5"
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1189,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "5035:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "5045:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5035:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "5035:17:5"
											},
											{
												"expression": {
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1193,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "5062:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1194,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "5078:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5078:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5062:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "5062:31:5"
											}
										]
									},
									"id": 1199,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "4972:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "4958:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1179,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4958:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "4993:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "4979:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4979:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:44:5"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5002:0:5"
									},
									"scope": 2684,
									"src": "4946:154:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "5491:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5508:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1204,
												"id": 1206,
												"nodeType": "Return",
												"src": "5501:8:5"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "5296:125:5",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5435:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5448:2:5"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "5482:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5482:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5481:9:5"
									},
									"scope": 2684,
									"src": "5426:90:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "5654:37:5",
										"statements": [
											{
												"expression": {
													"id": 1214,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1153,
													"src": "5671:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1213,
												"id": 1215,
												"nodeType": "Return",
												"src": "5664:20:5"
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "5522:63:5",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "5599:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5611:2:5"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "5645:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:9:5"
									},
									"scope": 2684,
									"src": "5590:101:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2741
									],
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "5964:247:5",
										"statements": [
											{
												"id": 1231,
												"nodeType": "UncheckedBlock",
												"src": "6117:88:5",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1224,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "6148:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1225,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "6164:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6148:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1227,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "6179:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6148:46:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1223,
														"id": 1230,
														"nodeType": "Return",
														"src": "6141:53:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "5697:192:5",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5903:11:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1220,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5937:8:5"
									},
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5914:2:5"
									},
									"returnParameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "5955:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:5"
									},
									"scope": 2684,
									"src": "5894:317:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "6368:226:5",
										"statements": [
											{
												"id": 1244,
												"nodeType": "UncheckedBlock",
												"src": "6515:73:5",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1239,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "6546:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1240,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "6562:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6562:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6546:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1238,
														"id": 1243,
														"nodeType": "Return",
														"src": "6539:38:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "6217:82:5",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6313:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6325:2:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "6359:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:9:5"
									},
									"scope": 2684,
									"src": "6304:290:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "6735:36:5",
										"statements": [
											{
												"expression": {
													"id": 1252,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1155,
													"src": "6752:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1251,
												"id": 1253,
												"nodeType": "Return",
												"src": "6745:19:5"
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "6600:66:5",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "6680:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6692:2:5"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "6726:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6726:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6725:9:5"
									},
									"scope": 2684,
									"src": "6671:100:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2784
									],
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "7126:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1264,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "7140:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7157:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7149:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1265,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7149:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7140:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1273,
												"nodeType": "IfStatement",
												"src": "7136:60:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1270,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2696,
															"src": "7168:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7168:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1272,
													"nodeType": "RevertStatement",
													"src": "7161:35:5"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1274,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "7213:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1276,
														"indexExpression": {
															"id": 1275,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "7232:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7213:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1277,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "7241:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7213:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1279,
												"nodeType": "Return",
												"src": "7206:62:5"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "6966:74:5",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7054:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1260,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7099:8:5"
									},
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7072:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "7064:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7064:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7063:15:5"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "7117:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7117:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7116:9:5"
									},
									"scope": 2684,
									"src": "7045:230:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1298,
										"nodeType": "Block",
										"src": "7422:106:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1289,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "7440:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1291,
																	"indexExpression": {
																		"id": 1290,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "7459:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7440:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1292,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "7469:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7440:50:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1294,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7439:52:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1295,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "7494:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7439:82:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1288,
												"id": 1297,
												"nodeType": "Return",
												"src": "7432:89:5"
											}
										]
									},
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "7281:66:5",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 1299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7361:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7383:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "7375:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7375:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7374:15:5"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "7413:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7413:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7412:9:5"
									},
									"scope": 2684,
									"src": "7352:176:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "7691:106:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1307,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "7709:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1309,
																	"indexExpression": {
																		"id": 1308,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1302,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7709:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1310,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "7738:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7709:50:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1312,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7708:52:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1313,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "7763:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7708:82:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1306,
												"id": 1315,
												"nodeType": "Return",
												"src": "7701:89:5"
											}
										]
									},
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "7534:82:5",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7630:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "7644:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7644:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7643:15:5"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "7682:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7682:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7681:9:5"
									},
									"scope": 2684,
									"src": "7621:176:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "7973:72:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1327,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "7997:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1329,
																"indexExpression": {
																	"id": 1328,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "8016:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7997:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1330,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "8026:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7997:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7990:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 1325,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7990:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7990:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1324,
												"id": 1333,
												"nodeType": "Return",
												"src": "7983:55:5"
											}
										]
									},
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "7803:102:5",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "7919:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7935:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "7927:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7927:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7926:15:5"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "7965:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1322,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7965:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7964:8:5"
									},
									"scope": 2684,
									"src": "7910:135:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "8288:334:5",
										"statements": [
											{
												"assignments": [
													1344
												],
												"declarations": [
													{
														"constant": false,
														"id": 1344,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "8306:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "8298:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1343,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8298:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1348,
												"initialValue": {
													"baseExpression": {
														"id": 1345,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "8315:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1347,
													"indexExpression": {
														"id": 1346,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "8334:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8315:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8298:42:5"
											},
											{
												"assignments": [
													1350
												],
												"declarations": [
													{
														"constant": false,
														"id": 1350,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8358:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1371,
														"src": "8350:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8350:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1351,
												"nodeType": "VariableDeclarationStatement",
												"src": "8350:17:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8450:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8464:16:5",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "8477:3:5"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "8464:9:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1340,
														"isOffset": false,
														"isSlot": false,
														"src": "8477:3:5",
														"valueSize": 1
													},
													{
														"declaration": 1350,
														"isOffset": false,
														"isSlot": false,
														"src": "8464:9:5",
														"valueSize": 1
													}
												],
												"id": 1352,
												"nodeType": "InlineAssembly",
												"src": "8441:49:5"
											},
											{
												"expression": {
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1353,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "8499:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1354,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "8509:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1355,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "8518:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8509:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1357,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8508:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1358,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1350,
																		"src": "8546:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1359,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "8559:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8546:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1361,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8545:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8508:63:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8499:72:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1364,
												"nodeType": "ExpressionStatement",
												"src": "8499:72:5"
											},
											{
												"expression": {
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1365,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "8581:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1367,
														"indexExpression": {
															"id": 1366,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "8600:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8581:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1368,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "8609:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8581:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "8581:34:5"
											}
										]
									},
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "8051:171:5",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8236:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8252:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "8244:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8244:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8266:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "8259:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1339,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8259:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8243:27:5"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8288:0:5"
									},
									"scope": 2684,
									"src": "8227:395:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2749
									],
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "9246:539:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1381,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "9558:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9573:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "9558:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1384,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "9634:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9649:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "9634:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9558:101:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1388,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "9710:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9725:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "9710:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9558:177:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1380,
												"id": 1392,
												"nodeType": "Return",
												"src": "9539:196:5"
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "8809:341:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "9164:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1377,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9222:8:5"
									},
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "9189:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "9182:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1374,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9182:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9181:20:5"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "9240:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9240:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9239:6:5"
									},
									"scope": 2684,
									"src": "9155:630:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2864
									],
									"body": {
										"id": 1403,
										"nodeType": "Block",
										"src": "10108:29:5",
										"statements": [
											{
												"expression": {
													"id": 1401,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1157,
													"src": "10125:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1400,
												"id": 1402,
												"nodeType": "Return",
												"src": "10118:12:5"
											}
										]
									},
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "9976:58:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10048:4:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1397,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10075:8:5"
									},
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10052:2:5"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "10093:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1398,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10093:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10092:15:5"
									},
									"scope": 2684,
									"src": "10039:98:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2870
									],
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "10279:31:5",
										"statements": [
											{
												"expression": {
													"id": 1411,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1159,
													"src": "10296:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1410,
												"id": 1412,
												"nodeType": "Return",
												"src": "10289:14:5"
											}
										]
									},
									"documentation": {
										"id": 1405,
										"nodeType": "StructuredDocumentation",
										"src": "10143:60:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10217:6:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1407,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10246:8:5"
									},
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:2:5"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "10264:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1408,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10264:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10263:15:5"
									},
									"scope": 2684,
									"src": "10208:102:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2878
									],
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "10499:225:5",
										"statements": [
											{
												"condition": {
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10513:17:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1424,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "10522:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1423,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "10514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10514:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1430,
												"nodeType": "IfStatement",
												"src": "10509:59:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1427,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2720,
															"src": "10539:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10539:29:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1429,
													"nodeType": "RevertStatement",
													"src": "10532:36:5"
												}
											},
											{
												"assignments": [
													1432
												],
												"declarations": [
													{
														"constant": false,
														"id": 1432,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10593:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1456,
														"src": "10579:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1431,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10579:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1435,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1433,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "10603:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10603:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10579:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1438,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "10636:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10630:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1436,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10630:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10630:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10645:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10630:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10655:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10630:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10715:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10630:87:5",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1447,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "10683:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1449,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1417,
																				"src": "10702:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1448,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2683,
																			"src": "10692:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10692:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1445,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "10666:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "10670:12:5",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "10666:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10666:45:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10659:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1443,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "10659:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10659:53:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1422,
												"id": 1455,
												"nodeType": "Return",
												"src": "10623:94:5"
											}
										]
									},
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "10316:90:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10420:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1419,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10466:8:5"
									},
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10437:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "10429:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10429:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10428:17:5"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "10484:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1420,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10484:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10483:15:5"
									},
									"scope": 2684,
									"src": "10411:313:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "11035:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11052:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1462,
												"id": 1464,
												"nodeType": "Return",
												"src": "11045:9:5"
											}
										]
									},
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "10730:234:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "10978:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10986:2:5"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "11020:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11020:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11019:15:5"
									},
									"scope": 2684,
									"src": "10969:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2792
									],
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "11472:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1480,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1469,
																			"src": "11524:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1479,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "11505:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11505:27:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11497:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1477,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11497:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11497:36:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1475,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11489:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1474,
												"id": 1484,
												"nodeType": "Return",
												"src": "11482:52:5"
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "11255:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11400:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1471,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11445:8:5"
									},
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11416:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "11408:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11408:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11407:17:5"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "11463:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11463:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11462:9:5"
									},
									"scope": 2684,
									"src": "11391:150:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "11817:71:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1497,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1489,
																	"src": "11872:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1496,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "11853:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11853:27:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1495,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "11834:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2735_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11834:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2735_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 1494,
												"id": 1500,
												"nodeType": "Return",
												"src": "11827:54:5"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "11547:172:5",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "11733:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11754:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "11746:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11746:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11745:17:5"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "11794:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2735_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1491,
														"name": "TokenOwnership",
														"nameLocations": [
															"11794:14:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2735,
														"src": "11794:14:5"
													},
													"referencedDeclaration": 2735,
													"src": "11794:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2735_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11793:23:5"
									},
									"scope": 2684,
									"src": "11724:164:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "12070:68:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1512,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "12106:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1514,
															"indexExpression": {
																"id": 1513,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "12124:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12106:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1511,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "12087:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2735_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12087:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2735_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 1510,
												"id": 1516,
												"nodeType": "Return",
												"src": "12080:51:5"
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "11894:80:5",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "11988:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12009:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "12001:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12001:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12000:15:5"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "12047:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2735_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1507,
														"name": "TokenOwnership",
														"nameLocations": [
															"12047:14:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2735,
														"src": "12047:14:5"
													},
													"referencedDeclaration": 2735,
													"src": "12047:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2735_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12046:23:5"
									},
									"scope": 2684,
									"src": "11979:159:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "12310:128:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1524,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "12324:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1526,
														"indexExpression": {
															"id": 1525,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "12342:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12324:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12352:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12324:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1538,
												"nodeType": "IfStatement",
												"src": "12320:112:5",
												"trueBody": {
													"id": 1537,
													"nodeType": "Block",
													"src": "12355:77:5",
													"statements": [
														{
															"expression": {
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1529,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "12369:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1531,
																	"indexExpression": {
																		"id": 1530,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1521,
																		"src": "12387:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12369:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1533,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1521,
																			"src": "12415:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1532,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "12396:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12396:25:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12369:52:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1536,
															"nodeType": "ExpressionStatement",
															"src": "12369:52:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "12144:97:5",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "12255:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12286:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "12278:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12278:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12277:15:5"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12310:0:5"
									},
									"scope": 2684,
									"src": "12246:192:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "12591:1173:5",
										"statements": [
											{
												"assignments": [
													1549
												],
												"declarations": [
													{
														"constant": false,
														"id": 1549,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "12609:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1593,
														"src": "12601:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12601:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1551,
												"initialValue": {
													"id": 1550,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1543,
													"src": "12616:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12601:22:5"
											},
											{
												"id": 1589,
												"nodeType": "UncheckedBlock",
												"src": "12634:1076:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1552,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "12662:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12662:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1554,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1549,
																"src": "12681:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12662:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1588,
														"nodeType": "IfStatement",
														"src": "12658:1042:5",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1556,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1549,
																	"src": "12707:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1557,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "12714:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12707:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1587,
															"nodeType": "IfStatement",
															"src": "12703:997:5",
															"trueBody": {
																"id": 1586,
																"nodeType": "Block",
																"src": "12729:971:5",
																"statements": [
																	{
																		"assignments": [
																			1560
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1560,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "12759:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1586,
																				"src": "12751:14:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1559,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "12751:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1564,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1561,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1163,
																				"src": "12768:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1563,
																			"indexExpression": {
																				"id": 1562,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1549,
																				"src": "12786:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12768:23:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12751:40:5"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1565,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1560,
																					"src": "12855:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 1566,
																					"name": "_BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1118,
																					"src": "12864:15:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12855:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12883:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "12855:29:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1585,
																		"nodeType": "IfStatement",
																		"src": "12851:831:5",
																		"trueBody": {
																			"id": 1584,
																			"nodeType": "Block",
																			"src": "12886:796:5",
																			"statements": [
																				{
																					"body": {
																						"id": 1580,
																						"nodeType": "Block",
																						"src": "13530:91:5",
																						"statements": [
																							{
																								"expression": {
																									"id": 1578,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1573,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1560,
																										"src": "13560:6:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 1574,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1163,
																											"src": "13569:17:5",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 1577,
																										"indexExpression": {
																											"id": 1576,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "13587:6:5",
																											"subExpression": {
																												"id": 1575,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1549,
																												"src": "13589:4:5",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "13569:25:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "13560:34:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1579,
																								"nodeType": "ExpressionStatement",
																								"src": "13560:34:5"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1572,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1570,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1560,
																							"src": "13517:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1571,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13527:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13517:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1581,
																					"nodeType": "WhileStatement",
																					"src": "13510:111:5"
																				},
																				{
																					"expression": {
																						"id": 1582,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1560,
																						"src": "13653:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 1547,
																					"id": 1583,
																					"nodeType": "Return",
																					"src": "13646:13:5"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1590,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2705,
														"src": "13726:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13726:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "RevertStatement",
												"src": "13719:38:5"
											}
										]
									},
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "12444:66:5",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "12524:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12551:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "12543:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12543:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12542:17:5"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "12582:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12582:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12581:9:5"
									},
									"scope": 2684,
									"src": "12515:1249:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "13957:262:5",
										"statements": [
											{
												"expression": {
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1603,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "13967:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2735_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1605,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13977:4:5",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2728,
														"src": "13967:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1610,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "14000:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13992:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1608,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "13992:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13992:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13984:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1606,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13984:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13984:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13967:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "13967:41:5"
											},
											{
												"expression": {
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1615,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "14018:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2735_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14028:14:5",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2730,
														"src": "14018:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1620,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "14052:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1621,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "14062:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14052:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14045:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1618,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "14045:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14045:41:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "14018:68:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "14018:68:5"
											},
											{
												"expression": {
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1626,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "14096:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2735_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14106:6:5",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2732,
														"src": "14096:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1629,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "14115:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1630,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "14124:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14115:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14143:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14115:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14096:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "14096:48:5"
											},
											{
												"expression": {
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1636,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "14154:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2735_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14164:9:5",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2734,
														"src": "14154:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1641,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "14183:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1642,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "14193:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14183:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14176:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 1639,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "14176:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14176:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "14154:58:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "14154:58:5"
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "13770:83:5",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "13867:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "13894:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "13886:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13885:16:5"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "13946:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "13924:31:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2735_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1600,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1599,
														"name": "TokenOwnership",
														"nameLocations": [
															"13924:14:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2735,
														"src": "13924:14:5"
													},
													"referencedDeclaration": 2735,
													"src": "13924:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2735_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13923:33:5"
									},
									"scope": 2684,
									"src": "13858:361:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "14393:347:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14412:322:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14522:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "14535:5:5"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "14542:16:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14531:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14531:28:5"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "14522:5:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14651:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "14664:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "14678:23:5"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "14703:9:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14703:11:5"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "14674:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14674:41:5"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "14717:5:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "14671:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14671:52:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14661:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14661:63:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14651:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1145,
														"isOffset": false,
														"isSlot": false,
														"src": "14542:16:5",
														"valueSize": 1
													},
													{
														"declaration": 1113,
														"isOffset": false,
														"isSlot": false,
														"src": "14678:23:5",
														"valueSize": 1
													},
													{
														"declaration": 1653,
														"isOffset": false,
														"isSlot": false,
														"src": "14717:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1651,
														"isOffset": false,
														"isSlot": false,
														"src": "14522:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1651,
														"isOffset": false,
														"isSlot": false,
														"src": "14535:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1651,
														"isOffset": false,
														"isSlot": false,
														"src": "14664:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1656,
														"isOffset": false,
														"isSlot": false,
														"src": "14651:6:5",
														"valueSize": 1
													}
												],
												"id": 1658,
												"nodeType": "InlineAssembly",
												"src": "14403:331:5"
											}
										]
									},
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "14225:67:5",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "14306:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14333:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "14325:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "14348:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "14340:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14340:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14324:30:5"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14385:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "14377:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14377:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14376:16:5"
									},
									"scope": 2684,
									"src": "14297:443:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "14923:232:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15007:142:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15083:56:5",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "15097:24:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "15126:8:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15136:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15123:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15123:15:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "15093:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15093:46:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15083:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1121,
														"isOffset": false,
														"isSlot": false,
														"src": "15097:24:5",
														"valueSize": 1
													},
													{
														"declaration": 1663,
														"isOffset": false,
														"isSlot": false,
														"src": "15126:8:5",
														"valueSize": 1
													},
													{
														"declaration": 1666,
														"isOffset": false,
														"isSlot": false,
														"src": "15083:6:5",
														"valueSize": 1
													}
												],
												"id": 1668,
												"nodeType": "InlineAssembly",
												"src": "14998:151:5"
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "14746:86:5",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "14846:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "14875:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "14867:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14866:18:5"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14915:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "14907:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14907:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14906:16:5"
									},
									"scope": 2684,
									"src": "14837:318:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2832
									],
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "15890:320:5",
										"statements": [
											{
												"assignments": [
													1680
												],
												"declarations": [
													{
														"constant": false,
														"id": 1680,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15908:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1714,
														"src": "15900:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1679,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15900:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1684,
												"initialValue": {
													"arguments": [
														{
															"id": 1682,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "15924:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1681,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "15916:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15916:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15900:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1685,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "15947:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15947:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1687,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "15970:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15947:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1700,
												"nodeType": "IfStatement",
												"src": "15943:172:5",
												"trueBody": {
													"condition": {
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15993:45:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1690,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "16011:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1691,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2673,
																		"src": "16018:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16018:19:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1689,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "15994:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15994:44:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1699,
													"nodeType": "IfStatement",
													"src": "15989:126:5",
													"trueBody": {
														"id": 1698,
														"nodeType": "Block",
														"src": "16040:75:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1695,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2690,
																		"src": "16065:33:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16065:35:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1697,
																"nodeType": "RevertStatement",
																"src": "16058:42:5"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1701,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "16125:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$1085_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 1703,
															"indexExpression": {
																"id": 1702,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "16141:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16125:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$1085_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 1704,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16150:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1084,
														"src": "16125:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1705,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1673,
														"src": "16158:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16125:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "16125:35:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1709,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1680,
															"src": "16184:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1710,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "16191:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1711,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "16195:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1708,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2767,
														"src": "16175:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16175:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1713,
												"nodeType": "EmitStatement",
												"src": "16170:33:5"
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "15348:459:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15821:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1677,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15881:8:5"
									},
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15837:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "15829:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15829:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15849:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "15841:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15841:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15828:29:5"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15890:0:5"
									},
									"scope": 2684,
									"src": "15812:398:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2848
									],
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "16445:129:5",
										"statements": [
											{
												"condition": {
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16459:17:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1725,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "16468:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1724,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "16460:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16460:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1731,
												"nodeType": "IfStatement",
												"src": "16455:64:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1728,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2693,
															"src": "16485:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16485:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1730,
													"nodeType": "RevertStatement",
													"src": "16478:41:5"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1732,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "16537:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$1085_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 1734,
														"indexExpression": {
															"id": 1733,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "16553:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16537:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$1085_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16562:5:5",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1084,
													"src": "16537:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1723,
												"id": 1736,
												"nodeType": "Return",
												"src": "16530:37:5"
											}
										]
									},
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "16216:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16369:11:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1720,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16418:8:5"
									},
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16389:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "16381:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16381:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16380:17:5"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "16436:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16435:9:5"
									},
									"scope": 2684,
									"src": "16360:214:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2840
									],
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "16985:147:5",
										"statements": [
											{
												"expression": {
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1747,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "16995:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1751,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1748,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2673,
																	"src": "17014:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17014:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16995:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1752,
														"indexExpression": {
															"id": 1750,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "17035:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16995:49:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1753,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "17047:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16995:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "16995:60:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1757,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2673,
																"src": "17085:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17085:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1759,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "17106:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1760,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "17116:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1756,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2776,
														"src": "17070:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17070:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1762,
												"nodeType": "EmitStatement",
												"src": "17065:60:5"
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "16580:316:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "16910:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1745,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16976:8:5"
									},
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16936:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "16928:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16928:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "16951:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "16946:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16946:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16927:33:5"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16985:0:5"
									},
									"scope": 2684,
									"src": "16901:231:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2858
									],
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "17385:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1775,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "17402:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1777,
														"indexExpression": {
															"id": 1776,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "17421:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17402:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1779,
													"indexExpression": {
														"id": 1778,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "17428:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17402:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1774,
												"id": 1780,
												"nodeType": "Return",
												"src": "17395:42:5"
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "17138:139:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17291:16:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1771,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17361:8:5"
									},
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17316:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "17308:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17308:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17331:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "17323:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17323:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17307:33:5"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "17379:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1772,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17379:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17378:6:5"
									},
									"scope": 2684,
									"src": "17282:162:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "17764:206:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1790,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "17793:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17793:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1792,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "17812:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17793:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1794,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "17835:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1795,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "17845:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17835:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "17793:65:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1798,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "17895:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1800,
																"indexExpression": {
																	"id": 1799,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1785,
																	"src": "17913:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17895:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1801,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "17924:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17895:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17943:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17895:49:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17793:151:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1789,
												"id": 1806,
												"nodeType": "Return",
												"src": "17774:170:5"
											}
										]
									},
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "17450:238:5",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "17702:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17718:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "17710:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17710:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17709:17:5"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "17758:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17758:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17757:6:5"
									},
									"scope": 2684,
									"src": "17693:277:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1821,
										"nodeType": "Block",
										"src": "18232:488:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18251:463:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18361:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "18374:5:5"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18381:16:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18370:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18370:28:5"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "18361:5:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18511:45:5",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "18528:9:5"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18539:16:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18524:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18524:32:5"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "18511:9:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18638:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "18654:9:5"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "18665:5:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18651:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18651:20:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "18676:9:5"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "18687:15:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18673:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18673:30:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18648:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18648:56:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18638:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1145,
														"isOffset": false,
														"isSlot": false,
														"src": "18381:16:5",
														"valueSize": 1
													},
													{
														"declaration": 1145,
														"isOffset": false,
														"isSlot": false,
														"src": "18539:16:5",
														"valueSize": 1
													},
													{
														"declaration": 1811,
														"isOffset": false,
														"isSlot": false,
														"src": "18687:15:5",
														"valueSize": 1
													},
													{
														"declaration": 1815,
														"isOffset": false,
														"isSlot": false,
														"src": "18511:9:5",
														"valueSize": 1
													},
													{
														"declaration": 1815,
														"isOffset": false,
														"isSlot": false,
														"src": "18528:9:5",
														"valueSize": 1
													},
													{
														"declaration": 1815,
														"isOffset": false,
														"isSlot": false,
														"src": "18654:9:5",
														"valueSize": 1
													},
													{
														"declaration": 1815,
														"isOffset": false,
														"isSlot": false,
														"src": "18676:9:5",
														"valueSize": 1
													},
													{
														"declaration": 1813,
														"isOffset": false,
														"isSlot": false,
														"src": "18361:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1813,
														"isOffset": false,
														"isSlot": false,
														"src": "18374:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1813,
														"isOffset": false,
														"isSlot": false,
														"src": "18665:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1818,
														"isOffset": false,
														"isSlot": false,
														"src": "18638:6:5",
														"valueSize": 1
													}
												],
												"id": 1820,
												"nodeType": "InlineAssembly",
												"src": "18242:472:5"
											}
										]
									},
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "17976:93:5",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 1822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "18083:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18125:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "18117:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18117:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18158:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "18150:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18150:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "18181:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "18173:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18173:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18107:89:5"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18224:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "18219:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18219:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18218:13:5"
									},
									"scope": 2684,
									"src": "18074:646:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "18985:317:5",
										"statements": [
											{
												"assignments": [
													1834
												],
												"declarations": [
													{
														"constant": false,
														"id": 1834,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "19020:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1840,
														"src": "18995:38:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$1085_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 1833,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1832,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"18995:16:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1085,
																"src": "18995:16:5"
															},
															"referencedDeclaration": 1085,
															"src": "18995:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$1085_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1838,
												"initialValue": {
													"baseExpression": {
														"id": 1835,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "19036:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$1085_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 1837,
													"indexExpression": {
														"id": 1836,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "19052:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19036:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$1085_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18995:65:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19173:123:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19187:41:5",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "19210:18:5"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "19187:19:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19241:45:5",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19266:19:5"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19260:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19260:26:5"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "19241:15:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1830,
														"isOffset": false,
														"isSlot": false,
														"src": "19241:15:5",
														"valueSize": 1
													},
													{
														"declaration": 1828,
														"isOffset": false,
														"isSlot": false,
														"src": "19187:19:5",
														"valueSize": 1
													},
													{
														"declaration": 1828,
														"isOffset": false,
														"isSlot": false,
														"src": "19266:19:5",
														"valueSize": 1
													},
													{
														"declaration": 1834,
														"isOffset": false,
														"isSlot": true,
														"src": "19210:18:5",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1839,
												"nodeType": "InlineAssembly",
												"src": "19164:132:5"
											}
										]
									},
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "18726:97:5",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "18837:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18872:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "18864:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18864:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18863:17:5"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "18935:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "18927:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18927:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18964:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "18956:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18956:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18926:54:5"
									},
									"scope": 2684,
									"src": "18828:474:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2824
									],
									"body": {
										"id": 1985,
										"nodeType": "Block",
										"src": "20030:2637:5",
										"statements": [
											{
												"assignments": [
													1853
												],
												"declarations": [
													{
														"constant": false,
														"id": 1853,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "20048:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 1985,
														"src": "20040:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1852,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20040:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1857,
												"initialValue": {
													"arguments": [
														{
															"id": 1855,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "20089:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1854,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "20070:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20070:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20040:57:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1862,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1853,
																		"src": "20128:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20120:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1860,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20120:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20120:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20112:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1858,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20112:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20112:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1865,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "20153:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20112:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1870,
												"nodeType": "IfStatement",
												"src": "20108:86:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1867,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2711,
															"src": "20166:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20166:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1869,
													"nodeType": "RevertStatement",
													"src": "20159:35:5"
												}
											},
											{
												"assignments": [
													1872,
													1874
												],
												"declarations": [
													{
														"constant": false,
														"id": 1872,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "20214:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 1985,
														"src": "20206:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1871,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20206:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1874,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "20243:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1985,
														"src": "20235:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1873,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20235:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1878,
												"initialValue": {
													"arguments": [
														{
															"id": 1876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "20289:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1875,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "20262:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20262:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20205:92:5"
											},
											{
												"condition": {
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "20393:69:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1880,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1874,
																"src": "20419:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1881,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1844,
																"src": "20436:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1882,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2673,
																	"src": "20442:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20442:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1879,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "20394:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20394:68:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1896,
												"nodeType": "IfStatement",
												"src": "20389:179:5",
												"trueBody": {
													"condition": {
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "20480:44:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1887,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1844,
																	"src": "20498:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1888,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2673,
																		"src": "20504:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20504:19:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1886,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "20481:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20481:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1895,
													"nodeType": "IfStatement",
													"src": "20476:92:5",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1892,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2708,
																"src": "20533:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20533:35:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1894,
														"nodeType": "RevertStatement",
														"src": "20526:42:5"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1897,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "20583:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20597:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20589:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1898,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20589:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20589:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20583:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1906,
												"nodeType": "IfStatement",
												"src": "20579:52:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1903,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2717,
															"src": "20608:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20608:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1905,
													"nodeType": "RevertStatement",
													"src": "20601:30:5"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1908,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "20664:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "20670:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1910,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "20674:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20683:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1907,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2056,
														"src": "20642:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20642:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1913,
												"nodeType": "ExpressionStatement",
												"src": "20642:43:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20757:181:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20790:138:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "20891:19:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20912:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "20884:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20884:30:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20884:30:5"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "20774:15:5"
															},
															"nodeType": "YulIf",
															"src": "20771:157:5"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1874,
														"isOffset": false,
														"isSlot": false,
														"src": "20774:15:5",
														"valueSize": 1
													},
													{
														"declaration": 1872,
														"isOffset": false,
														"isSlot": false,
														"src": "20891:19:5",
														"valueSize": 1
													}
												],
												"id": 1914,
												"nodeType": "InlineAssembly",
												"src": "20748:190:5"
											},
											{
												"id": 1971,
												"nodeType": "UncheckedBlock",
												"src": "21205:1361:5",
												"statements": [
													{
														"expression": {
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "21298:26:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1915,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "21300:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1917,
																"indexExpression": {
																	"id": 1916,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1844,
																	"src": "21319:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21300:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1919,
														"nodeType": "ExpressionStatement",
														"src": "21298:26:5"
													},
													{
														"expression": {
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "21366:24:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1920,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "21368:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1922,
																"indexExpression": {
																	"id": 1921,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "21387:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21368:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1924,
														"nodeType": "ExpressionStatement",
														"src": "21366:24:5"
													},
													{
														"expression": {
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1925,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "21654:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1927,
																"indexExpression": {
																	"id": 1926,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1848,
																	"src": "21672:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21654:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1929,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1846,
																		"src": "21719:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1930,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1126,
																			"src": "21739:25:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1932,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1844,
																					"src": "21782:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1933,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1846,
																					"src": "21788:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1934,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1853,
																					"src": "21792:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1931,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2663,
																				"src": "21767:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21767:45:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21739:73:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1928,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "21683:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21683:143:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21654:172:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1939,
														"nodeType": "ExpressionStatement",
														"src": "21654:172:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1940,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "21943:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1941,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "21965:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21943:47:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21994:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21943:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1970,
														"nodeType": "IfStatement",
														"src": "21939:617:5",
														"trueBody": {
															"id": 1969,
															"nodeType": "Block",
															"src": "21997:559:5",
															"statements": [
																{
																	"assignments": [
																		1946
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1946,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "22023:11:5",
																			"nodeType": "VariableDeclaration",
																			"scope": 1969,
																			"src": "22015:19:5",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1945,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22015:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1950,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1947,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1848,
																			"src": "22037:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22047:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22037:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22015:33:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1951,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1163,
																				"src": "22168:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1953,
																			"indexExpression": {
																				"id": 1952,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1946,
																				"src": "22186:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22168:30:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22202:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22168:35:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1968,
																	"nodeType": "IfStatement",
																	"src": "22164:378:5",
																	"trueBody": {
																		"id": 1967,
																		"nodeType": "Block",
																		"src": "22205:337:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1958,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1956,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1946,
																						"src": "22289:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1957,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1153,
																						"src": "22304:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22289:28:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1966,
																				"nodeType": "IfStatement",
																				"src": "22285:239:5",
																				"trueBody": {
																					"id": 1965,
																					"nodeType": "Block",
																					"src": "22319:205:5",
																					"statements": [
																						{
																							"expression": {
																								"id": 1963,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1959,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1163,
																										"src": "22449:17:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1961,
																									"indexExpression": {
																										"id": 1960,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1946,
																										"src": "22467:11:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "22449:30:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1962,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1853,
																									"src": "22482:19:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "22449:52:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1964,
																							"nodeType": "ExpressionStatement",
																							"src": "22449:52:5"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1973,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "22590:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1974,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "22596:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1975,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "22600:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1972,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2758,
														"src": "22581:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22581:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1977,
												"nodeType": "EmitStatement",
												"src": "22576:32:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1979,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "22639:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1980,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "22645:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1981,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "22649:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22658:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1978,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2069,
														"src": "22618:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22618:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1984,
												"nodeType": "ExpressionStatement",
												"src": "22618:42:5"
											}
										]
									},
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "19495:403:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "19912:12:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1850,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20021:8:5"
									},
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19942:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "19934:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19934:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19964:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "19956:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19956:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19984:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "19976:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19924:73:5"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20030:0:5"
									},
									"scope": 2684,
									"src": "19903:2764:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2814
									],
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "22889:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1998,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "22916:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1999,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1991,
															"src": "22922:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2000,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "22926:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22935:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1997,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2005,
															2043
														],
														"referencedDeclaration": 2043,
														"src": "22899:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22899:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2003,
												"nodeType": "ExpressionStatement",
												"src": "22899:39:5"
											}
										]
									},
									"documentation": {
										"id": 1987,
										"nodeType": "StructuredDocumentation",
										"src": "22673:80:5",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "22767:16:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1995,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22880:8:5"
									},
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22801:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "22793:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22793:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22823:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "22815:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22815:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22843:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "22835:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22835:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22783:73:5"
									},
									"returnParameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22889:0:5"
									},
									"scope": 2684,
									"src": "22758:187:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2804
									],
									"body": {
										"id": 2042,
										"nodeType": "Block",
										"src": "23685:237:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2019,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "23708:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2020,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "23714:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2021,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "23718:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2018,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1986,
														"src": "23695:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23695:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2023,
												"nodeType": "ExpressionStatement",
												"src": "23695:31:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2024,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "23740:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "23743:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "23740:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23748:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "23740:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23758:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23740:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2041,
												"nodeType": "IfStatement",
												"src": "23736:180:5",
												"trueBody": {
													"condition": {
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "23777:57:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 2030,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "23809:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2031,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2010,
																	"src": "23815:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2032,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "23819:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2033,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "23828:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2029,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2124,
																"src": "23778:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23778:56:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2040,
													"nodeType": "IfStatement",
													"src": "23773:143:5",
													"trueBody": {
														"id": 2039,
														"nodeType": "Block",
														"src": "23836:80:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2036,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2714,
																		"src": "23861:38:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23861:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2038,
																"nodeType": "RevertStatement",
																"src": "23854:47:5"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "22951:570:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23535:16:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2016,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23676:8:5"
									},
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23569:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "23561:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23561:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23591:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "23583:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23611:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "23603:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23603:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "23641:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "23628:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2013,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23628:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23551:101:5"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23685:0:5"
									},
									"scope": 2684,
									"src": "23526:396:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2055,
										"nodeType": "Block",
										"src": "24718:2:5",
										"statements": []
									},
									"documentation": {
										"id": 2044,
										"nodeType": "StructuredDocumentation",
										"src": "23928:633:5",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "24575:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24614:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "24606:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24606:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24636:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "24628:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24628:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "24656:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "24648:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24648:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "24686:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "24678:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24678:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24596:104:5"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24718:0:5"
									},
									"scope": 2684,
									"src": "24566:154:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2068,
										"nodeType": "Block",
										"src": "25518:2:5",
										"statements": []
									},
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "24726:636:5",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "25376:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25414:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "25406:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25436:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "25428:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25456:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "25448:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "25486:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "25478:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25396:104:5"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25518:0:5"
									},
									"scope": 2684,
									"src": "25367:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2123,
										"nodeType": "Block",
										"src": "26112:533:5",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 2104,
															"nodeType": "Block",
															"src": "26261:96:5",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2096,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2094,
																			"src": "26282:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 2098,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2074,
																							"src": "26317:2:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2097,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1079,
																						"src": "26292:24:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$1079_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 2099,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26292:28:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$1079",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 2100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "26321:16:5",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1078,
																				"src": "26292:45:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 2101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26338:8:5",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "26292:54:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "26282:64:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 2082,
																	"id": 2103,
																	"nodeType": "Return",
																	"src": "26275:71:5"
																}
															]
														},
														"errorName": "",
														"id": 2105,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2095,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2094,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "26244:6:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 2105,
																	"src": "26237:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 2093,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "26237:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "26223:37:5"
														},
														"src": "26215:142:5"
													},
													{
														"block": {
															"id": 2120,
															"nodeType": "Block",
															"src": "26386:253:5",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2109,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2107,
																				"src": "26404:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26411:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "26404:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26421:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "26404:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 2118,
																		"nodeType": "Block",
																		"src": "26510:119:5",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "26537:78:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "26570:2:5",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "26574:6:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "26566:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "26566:15:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "26589:6:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "26583:5:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "26583:13:5"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "26559:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "26559:38:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "26559:38:5"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 2107,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "26574:6:5",
																						"valueSize": 1
																					},
																					{
																						"declaration": 2107,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "26589:6:5",
																						"valueSize": 1
																					}
																				],
																				"id": 2117,
																				"nodeType": "InlineAssembly",
																				"src": "26528:87:5"
																			}
																		]
																	},
																	"id": 2119,
																	"nodeType": "IfStatement",
																	"src": "26400:229:5",
																	"trueBody": {
																		"id": 2116,
																		"nodeType": "Block",
																		"src": "26424:80:5",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2113,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2714,
																						"src": "26449:38:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 2114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26449:40:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2115,
																				"nodeType": "RevertStatement",
																				"src": "26442:47:5"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 2121,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2108,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2107,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "26378:6:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 2121,
																	"src": "26365:19:5",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2106,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "26365:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "26364:21:5"
														},
														"src": "26358:281:5"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2087,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2673,
																"src": "26172:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26172:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2089,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2072,
															"src": "26193:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2090,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "26199:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2091,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "26208:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2084,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "26151:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2083,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "26126:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$1079_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26126:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$1079",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 2086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26155:16:5",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1078,
														"src": "26126:45:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26126:88:5",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 2122,
												"nodeType": "TryStatement",
												"src": "26122:517:5"
											}
										]
									},
									"documentation": {
										"id": 2070,
										"nodeType": "StructuredDocumentation",
										"src": "25526:417:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 2124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "25957:30:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26005:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "25997:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25997:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26027:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "26019:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26019:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26047:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "26039:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "26064:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2077,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26064:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25987:101:5"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "26106:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26106:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26105:6:5"
									},
									"scope": 2684,
									"src": "25948:697:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2219,
										"nodeType": "Block",
										"src": "27153:2840:5",
										"statements": [
											{
												"assignments": [
													2133
												],
												"declarations": [
													{
														"constant": false,
														"id": 2133,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "27171:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 2219,
														"src": "27163:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27163:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2135,
												"initialValue": {
													"id": 2134,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1153,
													"src": "27186:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27163:36:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2136,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2129,
														"src": "27213:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27225:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27213:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2142,
												"nodeType": "IfStatement",
												"src": "27209:44:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2139,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2702,
															"src": "27235:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27235:18:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2141,
													"nodeType": "RevertStatement",
													"src": "27228:25:5"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27294:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27286:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2144,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27286:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27286:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2148,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2127,
															"src": "27298:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2149,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "27302:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2150,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "27316:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2143,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2056,
														"src": "27264:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27264:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2152,
												"nodeType": "ExpressionStatement",
												"src": "27264:61:5"
											},
											{
												"id": 2208,
												"nodeType": "UncheckedBlock",
												"src": "27508:2409:5",
												"statements": [
													{
														"expression": {
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2153,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "27728:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2155,
																"indexExpression": {
																	"id": 2154,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2127,
																	"src": "27747:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "27728:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2156,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2129,
																	"src": "27754:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2159,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2157,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27767:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 2158,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1096,
																							"src": "27772:21:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "27767:26:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2160,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27766:28:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27797:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27766:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2163,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "27765:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27754:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27728:71:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2166,
														"nodeType": "ExpressionStatement",
														"src": "27728:71:5"
													},
													{
														"expression": {
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2167,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "28035:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2169,
																"indexExpression": {
																	"id": 2168,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2133,
																	"src": "28053:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28035:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2171,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2127,
																		"src": "28105:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2173,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2129,
																					"src": "28146:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2172,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1670,
																				"src": "28125:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28125:30:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2178,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28181:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2177,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "28173:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2176,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "28173:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28173:10:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2180,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2127,
																					"src": "28185:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 2181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28189:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2175,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2663,
																				"src": "28158:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28158:33:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28125:66:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2170,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "28069:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28069:136:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28035:170:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2186,
														"nodeType": "ExpressionStatement",
														"src": "28035:170:5"
													},
													{
														"assignments": [
															2188
														],
														"declarations": [
															{
																"constant": false,
																"id": 2188,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "28228:8:5",
																"nodeType": "VariableDeclaration",
																"scope": 2208,
																"src": "28220:16:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2187,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28220:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2189,
														"nodeType": "VariableDeclarationStatement",
														"src": "28220:16:5"
													},
													{
														"assignments": [
															2191
														],
														"declarations": [
															{
																"constant": false,
																"id": 2191,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "28258:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 2208,
																"src": "28250:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2190,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28250:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2195,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2192,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "28264:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2193,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2129,
																"src": "28279:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28264:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28250:37:5"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "28657:1157:5",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "28772:37:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "28788:2:5"
																			},
																			{
																				"name": "_BITMASK_ADDRESS",
																				"nodeType": "YulIdentifier",
																				"src": "28792:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "28784:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28784:25:5"
																	},
																	"variableNames": [
																		{
																			"name": "toMasked",
																			"nodeType": "YulIdentifier",
																			"src": "28772:8:5"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28898:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28958:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "_TRANSFER_EVENT_SIGNATURE",
																				"nodeType": "YulIdentifier",
																				"src": "29016:25:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29077:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "toMasked",
																				"nodeType": "YulIdentifier",
																				"src": "29117:8:5"
																			},
																			{
																				"name": "startTokenId",
																				"nodeType": "YulIdentifier",
																				"src": "29156:12:5"
																			}
																		],
																		"functionName": {
																			"name": "log4",
																			"nodeType": "YulIdentifier",
																			"src": "28872:4:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28872:328:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "28872:328:5"
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "29633:167:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29728:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29731:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "29734:25:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29761:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "29764:8:5"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "29774:7:5"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "29723:4:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29723:59:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "29723:59:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "29551:7:5"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "29560:3:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "29548:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29548:16:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "29541:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29541:24:5"
																	},
																	"nodeType": "YulForLoop",
																	"post": {
																		"nodeType": "YulBlock",
																		"src": "29566:66:5",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "29588:26:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "29603:7:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29612:1:5",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "29599:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29599:15:5"
																				},
																				"variableNames": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "29588:7:5"
																					}
																				]
																			}
																		]
																	},
																	"pre": {
																		"nodeType": "YulBlock",
																		"src": "29465:75:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "29487:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "startTokenId",
																							"nodeType": "YulIdentifier",
																							"src": "29506:12:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29520:1:5",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "29502:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29502:20:5"
																				},
																				"variables": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulTypedName",
																						"src": "29491:7:5",
																						"type": ""
																					}
																				]
																			}
																		]
																	},
																	"src": "29461:339:5"
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1145,
																"isOffset": false,
																"isSlot": false,
																"src": "28792:16:5",
																"valueSize": 1
															},
															{
																"declaration": 1151,
																"isOffset": false,
																"isSlot": false,
																"src": "29016:25:5",
																"valueSize": 1
															},
															{
																"declaration": 1151,
																"isOffset": false,
																"isSlot": false,
																"src": "29734:25:5",
																"valueSize": 1
															},
															{
																"declaration": 2191,
																"isOffset": false,
																"isSlot": false,
																"src": "29560:3:5",
																"valueSize": 1
															},
															{
																"declaration": 2133,
																"isOffset": false,
																"isSlot": false,
																"src": "29156:12:5",
																"valueSize": 1
															},
															{
																"declaration": 2133,
																"isOffset": false,
																"isSlot": false,
																"src": "29506:12:5",
																"valueSize": 1
															},
															{
																"declaration": 2127,
																"isOffset": false,
																"isSlot": false,
																"src": "28788:2:5",
																"valueSize": 1
															},
															{
																"declaration": 2188,
																"isOffset": false,
																"isSlot": false,
																"src": "28772:8:5",
																"valueSize": 1
															},
															{
																"declaration": 2188,
																"isOffset": false,
																"isSlot": false,
																"src": "29117:8:5",
																"valueSize": 1
															},
															{
																"declaration": 2188,
																"isOffset": false,
																"isSlot": false,
																"src": "29764:8:5",
																"valueSize": 1
															}
														],
														"id": 2196,
														"nodeType": "InlineAssembly",
														"src": "28648:1166:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2197,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2188,
																"src": "29831:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29843:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29831:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2203,
														"nodeType": "IfStatement",
														"src": "29827:45:5",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2200,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "29853:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29853:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2202,
															"nodeType": "RevertStatement",
															"src": "29846:26:5"
														}
													},
													{
														"expression": {
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2204,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "29887:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 2205,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2191,
																"src": "29903:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29887:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2207,
														"nodeType": "ExpressionStatement",
														"src": "29887:19:5"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29955:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29947:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2210,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29947:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29947:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2214,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2127,
															"src": "29959:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2215,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "29963:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2216,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "29977:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2209,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2069,
														"src": "29926:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29926:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2218,
												"nodeType": "ExpressionStatement",
												"src": "29926:60:5"
											}
										]
									},
									"documentation": {
										"id": 2125,
										"nodeType": "StructuredDocumentation",
										"src": "26836:250:5",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 2220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "27100:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27114:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "27106:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27106:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27126:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "27118:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27118:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27105:30:5"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27153:0:5"
									},
									"scope": 2684,
									"src": "27091:2902:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2331,
										"nodeType": "Block",
										"src": "30902:1374:5",
										"statements": [
											{
												"assignments": [
													2229
												],
												"declarations": [
													{
														"constant": false,
														"id": 2229,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "30920:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 2331,
														"src": "30912:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30912:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2231,
												"initialValue": {
													"id": 2230,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1153,
													"src": "30935:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30912:36:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2232,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "30962:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30976:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30968:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2233,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "30968:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 2236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30968:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30962:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2241,
												"nodeType": "IfStatement",
												"src": "30958:48:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2238,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "30987:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30987:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2240,
													"nodeType": "RevertStatement",
													"src": "30980:26:5"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2242,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "31020:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31032:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31020:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2248,
												"nodeType": "IfStatement",
												"src": "31016:44:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2245,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2702,
															"src": "31042:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31042:18:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2247,
													"nodeType": "RevertStatement",
													"src": "31035:25:5"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2249,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "31074:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2250,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "31085:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31074:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2255,
												"nodeType": "IfStatement",
												"src": "31070:89:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2252,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "31126:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31126:33:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2254,
													"nodeType": "RevertStatement",
													"src": "31119:40:5"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31200:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31192:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2257,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31192:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31192:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2261,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2223,
															"src": "31204:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2262,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "31208:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2263,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "31222:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2256,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2056,
														"src": "31170:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31170:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2265,
												"nodeType": "ExpressionStatement",
												"src": "31170:61:5"
											},
											{
												"id": 2320,
												"nodeType": "UncheckedBlock",
												"src": "31340:860:5",
												"statements": [
													{
														"expression": {
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2266,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "31560:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2268,
																"indexExpression": {
																	"id": 2267,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2223,
																	"src": "31579:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31560:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2269,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2225,
																	"src": "31586:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2272,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2270,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "31599:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 2271,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1096,
																							"src": "31604:21:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "31599:26:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2273,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "31598:28:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31629:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "31598:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2276,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31597:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31586:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31560:71:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2279,
														"nodeType": "ExpressionStatement",
														"src": "31560:71:5"
													},
													{
														"expression": {
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2280,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "31867:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2282,
																"indexExpression": {
																	"id": 2281,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2229,
																	"src": "31885:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31867:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2284,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2223,
																		"src": "31937:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2286,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2225,
																					"src": "31978:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2285,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1670,
																				"src": "31957:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31957:30:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2291,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32013:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2290,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "32005:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2289,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "32005:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "32005:10:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2293,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2223,
																					"src": "32017:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 2294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32021:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2288,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2663,
																				"src": "31990:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31990:33:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "31957:66:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2283,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "31901:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31901:136:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31867:170:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2299,
														"nodeType": "ExpressionStatement",
														"src": "31867:170:5"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 2301,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2229,
																	"src": "32077:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2302,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2229,
																			"src": "32091:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 2303,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2225,
																			"src": "32106:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32091:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32117:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32091:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32128:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32120:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2307,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32120:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32120:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2311,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2223,
																	"src": "32132:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2300,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2889,
																"src": "32057:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32057:78:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2313,
														"nodeType": "EmitStatement",
														"src": "32052:83:5"
													},
													{
														"expression": {
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2314,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "32150:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2315,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2229,
																	"src": "32166:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2316,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2225,
																	"src": "32181:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32166:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32150:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2319,
														"nodeType": "ExpressionStatement",
														"src": "32150:39:5"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32238:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32230:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32230:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32230:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2326,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2223,
															"src": "32242:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2327,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "32246:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2328,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "32260:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2321,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2069,
														"src": "32209:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32209:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2330,
												"nodeType": "ExpressionStatement",
												"src": "32209:60:5"
											}
										]
									},
									"documentation": {
										"id": 2221,
										"nodeType": "StructuredDocumentation",
										"src": "29999:829:5",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 2332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "30842:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30863:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "30855:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30855:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "30875:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "30867:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30854:30:5"
									},
									"returnParameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30902:0:5"
									},
									"scope": 2684,
									"src": "30833:1443:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2393,
										"nodeType": "Block",
										"src": "32791:553:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2343,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2335,
															"src": "32807:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2344,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "32811:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2342,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2220,
														"src": "32801:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32801:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2346,
												"nodeType": "ExpressionStatement",
												"src": "32801:19:5"
											},
											{
												"id": 2392,
												"nodeType": "UncheckedBlock",
												"src": "32831:507:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 2347,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2335,
																		"src": "32859:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "32862:4:5",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "32859:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32867:6:5",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "32859:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32877:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32859:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2391,
														"nodeType": "IfStatement",
														"src": "32855:473:5",
														"trueBody": {
															"id": 2390,
															"nodeType": "Block",
															"src": "32880:448:5",
															"statements": [
																{
																	"assignments": [
																		2353
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2353,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "32906:3:5",
																			"nodeType": "VariableDeclaration",
																			"scope": 2390,
																			"src": "32898:11:5",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2352,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "32898:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2355,
																	"initialValue": {
																		"id": 2354,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "32912:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "32898:27:5"
																},
																{
																	"assignments": [
																		2357
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2357,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "32951:5:5",
																			"nodeType": "VariableDeclaration",
																			"scope": 2390,
																			"src": "32943:13:5",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2356,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "32943:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2361,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2358,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2353,
																			"src": "32959:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2359,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2337,
																			"src": "32965:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32959:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "32943:30:5"
																},
																{
																	"body": {
																		"id": 2378,
																		"nodeType": "Block",
																		"src": "32994:205:5",
																		"statements": [
																			{
																				"condition": {
																					"id": 2372,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "33020:63:5",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 2365,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "33060:1:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 2364,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "33052:7:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 2363,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "33052:7:5",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2366,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33052:10:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2367,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2335,
																								"src": "33064:2:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2369,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "33068:7:5",
																								"subExpression": {
																									"id": 2368,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2357,
																									"src": "33068:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2370,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2339,
																								"src": "33077:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 2362,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2124,
																							"src": "33021:30:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 2371,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "33021:62:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2377,
																				"nodeType": "IfStatement",
																				"src": "33016:165:5",
																				"trueBody": {
																					"id": 2376,
																					"nodeType": "Block",
																					"src": "33085:96:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 2373,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2714,
																									"src": "33118:38:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 2374,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33118:40:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2375,
																							"nodeType": "RevertStatement",
																							"src": "33111:47:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2379,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2357,
																			"src": "33207:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2380,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2353,
																			"src": "33215:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33207:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2382,
																	"nodeType": "DoWhileStatement",
																	"src": "32991:229:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2383,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1153,
																			"src": "33283:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2384,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2353,
																			"src": "33300:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33283:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2389,
																	"nodeType": "IfStatement",
																	"src": "33279:34:5",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2386,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "33305:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33305:8:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2388,
																		"nodeType": "ExpressionStatement",
																		"src": "33305:8:5"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "32282:388:5",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 2394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "32684:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32711:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "32703:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32703:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32731:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "32723:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32723:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "32762:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "32749:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32749:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32693:80:5"
									},
									"returnParameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32791:0:5"
									},
									"scope": 2684,
									"src": "32675:669:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2408,
										"nodeType": "Block",
										"src": "33489:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2403,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "33509:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2404,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "33513:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33523:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2402,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2394,
															2409
														],
														"referencedDeclaration": 2394,
														"src": "33499:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33499:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2407,
												"nodeType": "ExpressionStatement",
												"src": "33499:27:5"
											}
										]
									},
									"documentation": {
										"id": 2395,
										"nodeType": "StructuredDocumentation",
										"src": "33350:68:5",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 2409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33432:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33450:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2409,
												"src": "33442:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33442:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33462:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2409,
												"src": "33454:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33454:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33441:30:5"
									},
									"returnParameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33489:0:5"
									},
									"scope": 2684,
									"src": "33423:110:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2420,
										"nodeType": "Block",
										"src": "33840:38:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2416,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "33856:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33865:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2415,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2421,
															2573
														],
														"referencedDeclaration": 2573,
														"src": "33850:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33850:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2419,
												"nodeType": "ExpressionStatement",
												"src": "33850:21:5"
											}
										]
									},
									"documentation": {
										"id": 2410,
										"nodeType": "StructuredDocumentation",
										"src": "33724:62:5",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 2421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "33800:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33814:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "33806:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33806:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33805:17:5"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33840:0:5"
									},
									"scope": 2684,
									"src": "33791:87:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2572,
										"nodeType": "Block",
										"src": "34164:2946:5",
										"statements": [
											{
												"assignments": [
													2430
												],
												"declarations": [
													{
														"constant": false,
														"id": 2430,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "34182:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 2572,
														"src": "34174:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34174:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2434,
												"initialValue": {
													"arguments": [
														{
															"id": 2432,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "34223:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2431,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "34204:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34204:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34174:57:5"
											},
											{
												"assignments": [
													2436
												],
												"declarations": [
													{
														"constant": false,
														"id": 2436,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "34250:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 2572,
														"src": "34242:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2435,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34242:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2444,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2441,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2430,
																	"src": "34273:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34265:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2439,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "34265:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34265:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34257:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2437,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34257:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34257:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34242:52:5"
											},
											{
												"assignments": [
													2446,
													2448
												],
												"declarations": [
													{
														"constant": false,
														"id": 2446,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "34314:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 2572,
														"src": "34306:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34306:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2448,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "34343:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2572,
														"src": "34335:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2447,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34335:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2452,
												"initialValue": {
													"arguments": [
														{
															"id": 2450,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "34389:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2449,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "34362:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34362:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34305:92:5"
											},
											{
												"condition": {
													"id": 2453,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2426,
													"src": "34412:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2473,
												"nodeType": "IfStatement",
												"src": "34408:312:5",
												"trueBody": {
													"id": 2472,
													"nodeType": "Block",
													"src": "34427:293:5",
													"statements": [
														{
															"condition": {
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "34530:69:5",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 2455,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2448,
																			"src": "34556:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2456,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2436,
																			"src": "34573:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2457,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2673,
																				"src": "34579:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 2458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34579:19:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2454,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1822,
																		"src": "34531:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 2459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34531:68:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2471,
															"nodeType": "IfStatement",
															"src": "34526:183:5",
															"trueBody": {
																"condition": {
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "34621:44:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 2462,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2436,
																				"src": "34639:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2463,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2673,
																					"src": "34645:17:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "34645:19:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2461,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1782,
																			"src": "34622:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34622:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 2470,
																"nodeType": "IfStatement",
																"src": "34617:92:5",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2467,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2708,
																			"src": "34674:33:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34674:35:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2469,
																	"nodeType": "RevertStatement",
																	"src": "34667:42:5"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2475,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "34752:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34766:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34758:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2476,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34758:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34758:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2480,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "34770:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34779:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2474,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2056,
														"src": "34730:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34730:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2483,
												"nodeType": "ExpressionStatement",
												"src": "34730:51:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "34853:181:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34886:138:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "34987:19:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35008:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "34980:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34980:30:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34980:30:5"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "34870:15:5"
															},
															"nodeType": "YulIf",
															"src": "34867:157:5"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2448,
														"isOffset": false,
														"isSlot": false,
														"src": "34870:15:5",
														"valueSize": 1
													},
													{
														"declaration": 2446,
														"isOffset": false,
														"isSlot": false,
														"src": "34987:19:5",
														"valueSize": 1
													}
												],
												"id": 2484,
												"nodeType": "InlineAssembly",
												"src": "34844:190:5"
											},
											{
												"id": 2548,
												"nodeType": "UncheckedBlock",
												"src": "35301:1545:5",
												"statements": [
													{
														"expression": {
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2485,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "35613:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2487,
																"indexExpression": {
																	"id": 2486,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2436,
																	"src": "35632:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "35613:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 2488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35642:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 2489,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1099,
																				"src": "35647:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "35642:26:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2491,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "35641:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35672:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "35641:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35613:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2495,
														"nodeType": "ExpressionStatement",
														"src": "35613:60:5"
													},
													{
														"expression": {
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2496,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "35904:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2498,
																"indexExpression": {
																	"id": 2497,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2424,
																	"src": "35922:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "35904:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2500,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2436,
																		"src": "35969:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2503,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2501,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1118,
																						"src": "35992:15:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 2502,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1126,
																						"src": "36010:25:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "35992:43:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2504,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "35991:45:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2506,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2436,
																					"src": "36054:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2509,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "36068:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2508,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "36060:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2507,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "36060:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2510,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36060:10:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2511,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2430,
																					"src": "36072:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2505,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2663,
																				"src": "36039:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36039:53:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "35991:101:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2499,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "35933:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35933:173:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35904:202:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2516,
														"nodeType": "ExpressionStatement",
														"src": "35904:202:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2517,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2430,
																	"src": "36223:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2518,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "36245:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "36223:47:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36274:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "36223:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2547,
														"nodeType": "IfStatement",
														"src": "36219:617:5",
														"trueBody": {
															"id": 2546,
															"nodeType": "Block",
															"src": "36277:559:5",
															"statements": [
																{
																	"assignments": [
																		2523
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2523,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "36303:11:5",
																			"nodeType": "VariableDeclaration",
																			"scope": 2546,
																			"src": "36295:19:5",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2522,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "36295:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2527,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2524,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2424,
																			"src": "36317:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36327:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "36317:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "36295:33:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2528,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1163,
																				"src": "36448:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 2530,
																			"indexExpression": {
																				"id": 2529,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2523,
																				"src": "36466:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "36448:30:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36482:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "36448:35:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2545,
																	"nodeType": "IfStatement",
																	"src": "36444:378:5",
																	"trueBody": {
																		"id": 2544,
																		"nodeType": "Block",
																		"src": "36485:337:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2535,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2533,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2523,
																						"src": "36569:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 2534,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1153,
																						"src": "36584:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "36569:28:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2543,
																				"nodeType": "IfStatement",
																				"src": "36565:239:5",
																				"trueBody": {
																					"id": 2542,
																					"nodeType": "Block",
																					"src": "36599:205:5",
																					"statements": [
																						{
																							"expression": {
																								"id": 2540,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 2536,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1163,
																										"src": "36729:17:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 2538,
																									"indexExpression": {
																										"id": 2537,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2523,
																										"src": "36747:11:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "36729:30:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 2539,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2430,
																									"src": "36762:19:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "36729:52:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2541,
																							"nodeType": "ExpressionStatement",
																							"src": "36729:52:5"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2550,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "36870:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36884:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36876:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2551,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36876:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36876:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2555,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "36888:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2549,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2758,
														"src": "36861:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36861:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2557,
												"nodeType": "EmitStatement",
												"src": "36856:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2559,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "36927:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36941:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36933:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2560,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36933:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36933:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2564,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "36945:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36954:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2558,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2069,
														"src": "36906:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36906:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2567,
												"nodeType": "ExpressionStatement",
												"src": "36906:50:5"
											},
											{
												"id": 2571,
												"nodeType": "UncheckedBlock",
												"src": "37055:49:5",
												"statements": [
													{
														"expression": {
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "37079:14:5",
															"subExpression": {
																"id": 2568,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "37079:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2570,
														"nodeType": "ExpressionStatement",
														"src": "37079:14:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2422,
										"nodeType": "StructuredDocumentation",
										"src": "33884:206:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "34104:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34118:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "34110:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34110:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "34132:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "34127:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34127:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34109:37:5"
									},
									"returnParameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34164:0:5"
									},
									"scope": 2684,
									"src": "34095:3015:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2616,
										"nodeType": "Block",
										"src": "37468:447:5",
										"statements": [
											{
												"assignments": [
													2582
												],
												"declarations": [
													{
														"constant": false,
														"id": 2582,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "37486:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 2616,
														"src": "37478:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2586,
												"initialValue": {
													"baseExpression": {
														"id": 2583,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "37495:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2585,
													"indexExpression": {
														"id": 2584,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2576,
														"src": "37513:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "37495:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37478:41:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2587,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2582,
														"src": "37533:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "37543:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "37533:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2593,
												"nodeType": "IfStatement",
												"src": "37529:61:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2590,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2726,
															"src": "37553:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37553:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2592,
													"nodeType": "RevertStatement",
													"src": "37546:44:5"
												}
											},
											{
												"assignments": [
													2595
												],
												"declarations": [
													{
														"constant": false,
														"id": 2595,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "37608:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2616,
														"src": "37600:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2594,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37600:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2596,
												"nodeType": "VariableDeclarationStatement",
												"src": "37600:23:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "37712:52:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "37726:28:5",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "37745:9:5"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "37726:15:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2578,
														"isOffset": false,
														"isSlot": false,
														"src": "37745:9:5",
														"valueSize": 1
													},
													{
														"declaration": 2595,
														"isOffset": false,
														"isSlot": false,
														"src": "37726:15:5",
														"valueSize": 1
													}
												],
												"id": 2597,
												"nodeType": "InlineAssembly",
												"src": "37703:61:5"
											},
											{
												"expression": {
													"id": 2608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2598,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2582,
														"src": "37773:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2599,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2582,
																		"src": "37783:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 2600,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "37792:30:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "37783:39:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2602,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "37782:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2603,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2595,
																		"src": "37827:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 2604,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "37846:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "37827:37:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2606,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "37826:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "37782:83:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37773:92:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2609,
												"nodeType": "ExpressionStatement",
												"src": "37773:92:5"
											},
											{
												"expression": {
													"id": 2614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2610,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "37875:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2612,
														"indexExpression": {
															"id": 2611,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2576,
															"src": "37893:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37875:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2613,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2582,
														"src": "37902:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37875:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2615,
												"nodeType": "ExpressionStatement",
												"src": "37875:33:5"
											}
										]
									},
									"documentation": {
										"id": 2574,
										"nodeType": "StructuredDocumentation",
										"src": "37304:84:5",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 2617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "37402:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "37426:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "37418:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37418:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "37440:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "37433:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2577,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "37433:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37417:33:5"
									},
									"returnParameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37468:0:5"
									},
									"scope": 2684,
									"src": "37393:522:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2629,
										"nodeType": "Block",
										"src": "38616:2:5",
										"statements": []
									},
									"documentation": {
										"id": 2618,
										"nodeType": "StructuredDocumentation",
										"src": "37921:549:5",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "38484:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38512:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "38504:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38504:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38534:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "38526:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38526:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "38553:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "38546:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2623,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38546:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38494:82:5"
									},
									"returnParameters": {
										"id": 2628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "38608:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2626,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38608:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38607:8:5"
									},
									"scope": 2684,
									"src": "38475:143:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2662,
										"nodeType": "Block",
										"src": "38904:164:5",
										"statements": [
											{
												"assignments": [
													2643
												],
												"declarations": [
													{
														"constant": false,
														"id": 2643,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "38921:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 2662,
														"src": "38914:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 2642,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "38914:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2650,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2646,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2637,
																"src": "38940:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 2647,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "38963:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38940:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "38933:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 2644,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "38933:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38933:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38914:68:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2654,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2633,
																		"src": "39018:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2655,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2635,
																		"src": "39024:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2656,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2643,
																		"src": "39028:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 2653,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2630,
																	"src": "39007:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39007:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "38999:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2651,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "38999:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 2658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38999:40:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 2659,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "39043:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38999:62:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2641,
												"id": 2661,
												"nodeType": "Return",
												"src": "38992:69:5"
											}
										]
									},
									"documentation": {
										"id": 2631,
										"nodeType": "StructuredDocumentation",
										"src": "38624:135:5",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 2663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "38773:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38805:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "38797:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38797:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38827:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "38819:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "38847:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "38839:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38787:85:5"
									},
									"returnParameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "38895:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38895:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38894:9:5"
									},
									"scope": 2684,
									"src": "38764:304:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2672,
										"nodeType": "Block",
										"src": "39506:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2669,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "39523:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "39527:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "39523:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2668,
												"id": 2671,
												"nodeType": "Return",
												"src": "39516:17:5"
											}
										]
									},
									"documentation": {
										"id": 2664,
										"nodeType": "StructuredDocumentation",
										"src": "39259:173:5",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 2673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "39446:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39463:2:5"
									},
									"returnParameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2673,
												"src": "39497:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39497:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39496:9:5"
									},
									"scope": 2684,
									"src": "39437:103:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2682,
										"nodeType": "Block",
										"src": "39721:1624:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "39740:1599:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "40104:31:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "40123:4:5",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "40117:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "40117:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40130:4:5",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "40113:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "40113:22:5"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "40108:1:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40214:4:5",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "40220:1:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "40207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "40207:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "40207:15:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "40279:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "40290:1:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40293:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "40286:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "40286:12:5"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "40279:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "40368:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "40373:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "40361:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "40361:14:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "40361:14:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "40463:14:5",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "40474:3:5"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "40467:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "40721:388:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "40739:18:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "40750:3:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "40755:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "40746:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "40746:11:5"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "40739:3:5"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "40900:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "40909:2:5",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "40917:4:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "40923:2:5",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "40913:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "40913:13:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "40905:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "40905:22:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "40892:7:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "40892:36:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "40892:36:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "40997:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "41009:4:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "41015:2:5",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "41005:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41005:13:5"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "40997:4:5"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "41086:9:5",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "41088:5:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "41080:4:5"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "41073:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41073:12:5"
																		},
																		"nodeType": "YulIf",
																		"src": "41070:25:5"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "40716:1:5",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "40718:2:5",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "40694:21:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "40696:17:5",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "40708:5:5"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "40700:4:5",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "40690:419:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41123:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "41141:3:5"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41146:3:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41137:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "41137:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "41127:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "41243:21:5",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41254:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41259:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41250:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "41250:14:5"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "41243:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41317:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "41322:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "41310:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41310:19:5"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2679,
														"isOffset": false,
														"isSlot": false,
														"src": "40279:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2679,
														"isOffset": false,
														"isSlot": false,
														"src": "40368:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2679,
														"isOffset": false,
														"isSlot": false,
														"src": "40474:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2679,
														"isOffset": false,
														"isSlot": false,
														"src": "40739:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2679,
														"isOffset": false,
														"isSlot": false,
														"src": "40750:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2679,
														"isOffset": false,
														"isSlot": false,
														"src": "40900:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2679,
														"isOffset": false,
														"isSlot": false,
														"src": "41146:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2679,
														"isOffset": false,
														"isSlot": false,
														"src": "41243:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2679,
														"isOffset": false,
														"isSlot": false,
														"src": "41254:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2679,
														"isOffset": false,
														"isSlot": false,
														"src": "41317:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2676,
														"isOffset": false,
														"isSlot": false,
														"src": "40708:5:5",
														"valueSize": 1
													}
												],
												"id": 2681,
												"nodeType": "InlineAssembly",
												"src": "39731:1608:5"
											}
										]
									},
									"documentation": {
										"id": 2674,
										"nodeType": "StructuredDocumentation",
										"src": "39546:86:5",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 2683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "39646:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39664:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "39656:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39656:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39655:15:5"
									},
									"returnParameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "39716:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "39702:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39702:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39701:19:5"
									},
									"scope": 2684,
									"src": "39637:1708:5",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2685,
							"src": "895:40452:5",
							"usedErrors": [
								2690,
								2693,
								2696,
								2699,
								2702,
								2705,
								2708,
								2711,
								2714,
								2717,
								2720,
								2723,
								2726
							]
						}
					],
					"src": "84:41264:5"
				},
				"id": 5
			},
			"erc721a/contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "erc721a/contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							2890
						]
					},
					"id": 2891,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2686,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2687,
								"nodeType": "StructuredDocumentation",
								"src": "109:37:6",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 2890,
							"linearizedBaseContracts": [
								2890
							],
							"name": "IERC721A",
							"nameLocation": "157:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2688,
										"nodeType": "StructuredDocumentation",
										"src": "172:76:6",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 2690,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "259:33:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:6"
									},
									"src": "253:42:6"
								},
								{
									"documentation": {
										"id": 2691,
										"nodeType": "StructuredDocumentation",
										"src": "301:44:6",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 2693,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "356:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:6"
									},
									"src": "350:41:6"
								},
								{
									"documentation": {
										"id": 2694,
										"nodeType": "StructuredDocumentation",
										"src": "397:65:6",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 2696,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "473:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:6"
									},
									"src": "467:35:6"
								},
								{
									"documentation": {
										"id": 2697,
										"nodeType": "StructuredDocumentation",
										"src": "508:51:6",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 2699,
									"name": "MintToZeroAddress",
									"nameLocation": "570:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:6"
									},
									"src": "564:26:6"
								},
								{
									"documentation": {
										"id": 2700,
										"nodeType": "StructuredDocumentation",
										"src": "596:72:6",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 2702,
									"name": "MintZeroQuantity",
									"nameLocation": "679:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:6"
									},
									"src": "673:25:6"
								},
								{
									"documentation": {
										"id": 2703,
										"nodeType": "StructuredDocumentation",
										"src": "704:44:6",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 2705,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "759:29:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:6"
									},
									"src": "753:38:6"
								},
								{
									"documentation": {
										"id": 2706,
										"nodeType": "StructuredDocumentation",
										"src": "797:76:6",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 2708,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "884:33:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:6"
									},
									"src": "878:42:6"
								},
								{
									"documentation": {
										"id": 2709,
										"nodeType": "StructuredDocumentation",
										"src": "926:53:6",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 2711,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "990:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:6"
									},
									"src": "984:35:6"
								},
								{
									"documentation": {
										"id": 2712,
										"nodeType": "StructuredDocumentation",
										"src": "1025:116:6",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 2714,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1152:38:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:6"
									},
									"src": "1146:47:6"
								},
								{
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "1199:55:6",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 2717,
									"name": "TransferToZeroAddress",
									"nameLocation": "1265:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:6"
									},
									"src": "1259:30:6"
								},
								{
									"documentation": {
										"id": 2718,
										"nodeType": "StructuredDocumentation",
										"src": "1295:44:6",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 2720,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1350:27:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:6"
									},
									"src": "1344:36:6"
								},
								{
									"documentation": {
										"id": 2721,
										"nodeType": "StructuredDocumentation",
										"src": "1386:79:6",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 2723,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1476:31:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:6"
									},
									"src": "1470:40:6"
								},
								{
									"documentation": {
										"id": 2724,
										"nodeType": "StructuredDocumentation",
										"src": "1516:83:6",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 2726,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1610:35:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:6"
									},
									"src": "1604:44:6"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 2735,
									"members": [
										{
											"constant": false,
											"id": 2728,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1912:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 2735,
											"src": "1904:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2727,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1904:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2730,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2017:14:6",
											"nodeType": "VariableDeclaration",
											"scope": 2735,
											"src": "2010:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2729,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2010:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2732,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2092:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 2735,
											"src": "2087:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2731,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2087:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2734,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2203:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 2735,
											"src": "2196:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2733,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2196:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1842:14:6",
									"nodeType": "StructDefinition",
									"scope": 2890,
									"src": "1835:384:6",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2736,
										"nodeType": "StructuredDocumentation",
										"src": "2410:192:6",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 2741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2616:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2627:2:6"
									},
									"returnParameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2741,
												"src": "2653:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:9:6"
									},
									"scope": 2890,
									"src": "2607:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2742,
										"nodeType": "StructuredDocumentation",
										"src": "2849:341:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3204:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3229:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "3222:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2743,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3222:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:20:6"
									},
									"returnParameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "3265:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2746,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3265:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:6:6"
									},
									"scope": 2890,
									"src": "3195:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2750,
										"nodeType": "StructuredDocumentation",
										"src": "3458:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2758,
									"name": "Transfer",
									"nameLocation": "3557:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3582:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "3566:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2754,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "3588:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2756,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3624:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "3608:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3565:67:6"
									},
									"src": "3551:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2759,
										"nodeType": "StructuredDocumentation",
										"src": "3639:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2767,
									"name": "Approval",
									"nameLocation": "3744:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3769:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "3753:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2763,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3792:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "3776:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2765,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3818:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "3802:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:74:6"
									},
									"src": "3738:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2768,
										"nodeType": "StructuredDocumentation",
										"src": "3833:124:6",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 2776,
									"name": "ApprovalForAll",
									"nameLocation": "3968:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2770,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3999:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "3983:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2772,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4022:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "4006:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2774,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4037:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2776,
												"src": "4032:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4032:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:64:6"
									},
									"src": "3962:85:6"
								},
								{
									"documentation": {
										"id": 2777,
										"nodeType": "StructuredDocumentation",
										"src": "4053:74:6",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 2784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4141:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4159:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "4151:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4151:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4150:15:6"
									},
									"returnParameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4197:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "4189:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4189:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:17:6"
									},
									"scope": 2890,
									"src": "4132:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2785,
										"nodeType": "StructuredDocumentation",
										"src": "4212:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 2792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4357:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4373:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2792,
												"src": "4365:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4365:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4364:17:6"
									},
									"returnParameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2790,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4413:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2792,
												"src": "4405:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4404:15:6"
									},
									"scope": 2890,
									"src": "4348:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2793,
										"nodeType": "StructuredDocumentation",
										"src": "4426:711:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5151:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2795,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5185:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "5177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5177:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5207:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "5199:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5227:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "5219:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5259:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "5244:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2800,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5244:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5167:102:6"
									},
									"returnParameters": {
										"id": 2803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5286:0:6"
									},
									"scope": 2890,
									"src": "5142:145:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2805,
										"nodeType": "StructuredDocumentation",
										"src": "5293:80:6",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 2814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5387:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "5413:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5413:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "5435:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5435:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2811,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5463:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "5455:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5455:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5403:73:6"
									},
									"returnParameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5493:0:6"
									},
									"scope": 2890,
									"src": "5378:116:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2815,
										"nodeType": "StructuredDocumentation",
										"src": "5500:512:6",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6026:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6056:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "6048:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6048:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6078:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "6070:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6098:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "6090:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6090:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:73:6"
									},
									"returnParameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6128:0:6"
									},
									"scope": 2890,
									"src": "6017:112:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2825,
										"nodeType": "StructuredDocumentation",
										"src": "6135:459:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6608:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6624:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "6616:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6616:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6636:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "6628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6615:29:6"
									},
									"returnParameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6661:0:6"
									},
									"scope": 2890,
									"src": "6599:63:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2833,
										"nodeType": "StructuredDocumentation",
										"src": "6668:316:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 2840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "6998:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7024:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "7016:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7039:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "7034:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7034:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7015:34:6"
									},
									"returnParameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7058:0:6"
									},
									"scope": 2890,
									"src": "6989:70:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2841,
										"nodeType": "StructuredDocumentation",
										"src": "7065:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 2848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7218:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7238:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "7230:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7230:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7229:17:6"
									},
									"returnParameters": {
										"id": 2847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2846,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7278:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "7270:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7269:18:6"
									},
									"scope": 2890,
									"src": "7209:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2849,
										"nodeType": "StructuredDocumentation",
										"src": "7294:139:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7447:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7472:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2858,
												"src": "7464:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7464:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7487:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2858,
												"src": "7479:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7479:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:33:6"
									},
									"returnParameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2858,
												"src": "7520:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7520:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7519:6:6"
									},
									"scope": 2890,
									"src": "7438:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2859,
										"nodeType": "StructuredDocumentation",
										"src": "7717:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7789:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7793:2:6"
									},
									"returnParameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "7819:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2861,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7819:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7818:15:6"
									},
									"scope": 2890,
									"src": "7780:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2865,
										"nodeType": "StructuredDocumentation",
										"src": "7840:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7914:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7920:2:6"
									},
									"returnParameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "7946:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7946:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7945:15:6"
									},
									"scope": 2890,
									"src": "7905:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2871,
										"nodeType": "StructuredDocumentation",
										"src": "7967:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8071:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8088:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "8080:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8080:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8079:17:6"
									},
									"returnParameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2878,
												"src": "8120:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2875,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8120:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8119:15:6"
									},
									"scope": 2890,
									"src": "8062:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2879,
										"nodeType": "StructuredDocumentation",
										"src": "8322:267:6",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 2889,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8600:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8636:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2889,
												"src": "8620:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8620:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2883,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8657:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2889,
												"src": "8649:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8649:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2885,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8684:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2889,
												"src": "8668:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8668:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2887,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8706:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2889,
												"src": "8690:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8690:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8619:90:6"
									},
									"src": "8594:116:6"
								}
							],
							"scope": 2891,
							"src": "147:8565:6",
							"usedErrors": [
								2690,
								2693,
								2696,
								2699,
								2702,
								2705,
								2708,
								2711,
								2714,
								2717,
								2720,
								2723,
								2726
							]
						}
					],
					"src": "84:8629:6"
				},
				"id": 6
			}
		}
	}
}